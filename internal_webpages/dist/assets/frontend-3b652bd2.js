var k=Object.defineProperty;var p=(e,o,t)=>o in e?k(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t;var r=(e,o,t)=>(p(e,typeof o!="symbol"?o+"":o,t),t);import{r as I,s as E,a as y,P as R,L as w,D as b,c as L,E as C}from"./proxy-9225cf57.js";import{R as N,D as O,a as s,b as a,P as d,M as D,T as M,g as P,c as U,w as T}from"./livekit-client.esm-c197ff19.js";window.LIVEKIT_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2aWRlbyI6eyJyb29tTGlzdCI6dHJ1ZSwicm9vbUpvaW4iOmZhbHNlLCJjYW5QdWJsaXNoIjpmYWxzZSwiY2FuU3Vic2NyaWJlIjpmYWxzZSwiY2FuUHVibGlzaERhdGEiOmZhbHNlfSwiaWF0IjoxNjc4NzI4ODY1LCJuYmYiOjE2Nzg3Mjg4NjUsImV4cCI6MTExMzk1Mjg4NjUsImlzcyI6IkFQSWtvRTdtM1pxZDVkSiIsInN1YiI6Imx0IiwianRpIjoibHQifQ.6mVaD452mZMSgXKWG7QDkxR__2v76urjJnJ66TjJGjs";function v(e){I(e)}function _(){window.parent?(E(e=>{console.log("postMessage",e),window.parent.postMessage(e,"*")}),window.addEventListener("message",e=>{console.log("Got iframe parent message",e),I(e.data)})):console.warn("enableFrameProxy() called without this page being inside an iframe")}let h;async function u(e){return await fetch(e+"/twirp/livekit.RoomService/ListRooms",{method:"POST",cache:"no-cache",mode:"cors",body:JSON.stringify({}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+window.LIVEKIT_TOKEN}}).then(o=>o.json()).then(o=>{const t=o.rooms;if(!t||!Array.isArray(t))throw new Error(`Error getting livekit room list from ${e} - ${JSON.stringify(o)}`);return t.filter(c=>c.num_participants>0)}).catch(o=>(console.warn(`Error getting livekit room list from  - ${e}`,o),[]))}class S{constructor(o,t,c){r(this,"roomId");r(this,"hostUrl");r(this,"accessToken");r(this,"roomConn");r(this,"videoElem");r(this,"onMesssageRecived");r(this,"onConnStateChange");this.hostUrl=o,this.onMesssageRecived=n=>t(n,this.roomId,this.hostUrl),this.onConnStateChange=n=>c(n,this.roomId,this.hostUrl),this.roomConn=new N({reconnectPolicy:new O,adaptiveStream:!0})}async start(o,t){console.log(`Starting conn with ${o} via ${this.hostUrl} token = ${t}`);const c=Date.now();return this.roomId=o,this.roomConn.on(s.SignalConnected,async()=>{const n=Date.now()-c;a(`signal connection established in ${n}ms`)}).on(s.Connected,async()=>{a(`Connected to room: ${this.roomConn.name} via ${this.hostUrl}`)}).on(s.Disconnected,n=>{this.roomConn&&(a("disconnected from room",{reason:n},this.roomConn.localParticipant),this.roomConn.participants.forEach(i=>{}))}).on(s.Reconnecting,()=>{a("Reconnecting to room")}).on(s.Reconnected,async()=>{a("Successfully reconnected. server",await this.roomConn.engine.getConnectedServerAddress())}).on(s.ParticipantConnected,async n=>{a("participant",n.identity,"connected",n.metadata),n.on(d.TrackMuted,i=>{a("track was muted",i.trackSid,n.identity)}).on(d.TrackUnmuted,i=>{a("track was unmuted",i.trackSid,n.identity)}).on(d.IsSpeakingChanged,()=>{a("ParticipantEvent.IsSpeakingChanged",n.isSpeaking)}).on(d.ConnectionQualityChanged,()=>{a("ParticipantEvent.ConnectionQualityChanged",n.connectionQuality)})}).on(s.ParticipantDisconnected,n=>{a("participant",n.sid,"disconnected")}).on(s.MediaDevicesError,n=>{const i=D.getFailure(n);a("media device failure",i)}).on(s.ConnectionQualityChanged,(n,i)=>{a("connection quality changed",i==null?void 0:i.identity,n)}).on(s.TrackSubscribed,(n,i,l)=>{n.kind===M.Kind.Video&&(this.videoElem=n.attach(),this.videoElem.setAttribute("host",this.hostUrl),h=document.getElementById("video_container"),console.log(h),h.appendChild(this.videoElem)),console.log(n,this.hostUrl)}).on(s.TrackUnsubscribed,(n,i,l)=>{n.detach()}).on(s.DataReceived,async(n,i)=>{const l=i?i.identity:"SERVER";a(`Got dataReceived from ${l} via ${this.hostUrl}|${this.roomId}`,b(n)),this.onMesssageRecived(n,this.roomId,this.hostUrl)}).on(s.LocalTrackUnpublished,(n,i)=>{console.error("handleLocalTrackUnpublished: _THIS SHOULD NEVER BE HAPPENING_",n,i)}).on(s.RoomMetadataChanged,n=>{a("new metadata for room",n)}).on(s.MediaDevicesChanged,()=>{a("MediaDevicesChanged _THIS SHOULDN'T HAPPEN?_")}).on(s.AudioPlaybackStatusChanged,()=>{a("AudioPlaybackStatusChanged _THIS SHOULDN'T HAPPEN?_",this.roomConn.canPlaybackAudio)}),await this.roomConn.connect(P(this.hostUrl),t,L),console.info("connected to room",this.roomConn.name,this.roomConn),!0}sendMessage(o,t,c=!1){console.log("sendMessage() to rov ",this.roomConn.getParticipantByIdentity(this.roomId)),this.roomConn.localParticipant.publishData(o,U.RELIABLE)}close(){console.info("Closing Livekit Connection: ",this.roomId,this.hostUrl),this.roomConn&&this.roomConn.disconnect(!0)}}const g=new S(y,(e,o,t)=>{v(e)},(e,o,t)=>{console.log("Cloud Conn State Changed: "+e,o,t)}),f=new S(R+w,(e,o,t)=>{v(e)},(e,o,t)=>{console.log("Local Conn State Changed: "+e,o,t)});async function H(e,o){await g.start(e,o)}async function j(e,o){!window.parent||window.parent===window.top?E(t=>{console.log("send proxy message: "+t.byteLength),g.sendMessage(new Uint8Array(t))}):_(),await T(100),await f.start(e,o)}async function F(){f.sendMessage(C("HI FROM FRONTEND SHOULD BE LOCAL")),g.sendMessage(C("HI FROM FRONTEND SHOULD BE CLOUD"))}new URLSearchParams(location.search);const m=document.getElementById("rov_chooser");document.getElementById("video_container");async function J(){console.log("Starting...");const e=document.createElement("button");for(e.innerText="Send test msg",e.disabled=!0,e.onclick=()=>{F()},document.body.appendChild(e);;){const o=await u(y);await u(w);const t=o;t.length>0?(m.innerHTML="",t.forEach(c=>{if(!c.metadata)return;const n=document.createElement("button"),{accessToken:i}=JSON.parse(c.metadata);n.innerText="Connect to "+c.name,n.onclick=()=>{H(c.name,i).then(()=>{e.disabled=!1,n.innerText="Connect locally to "+c.name,n.onclick=()=>{j(c.name,i).then(()=>{})}})},m.appendChild(n)})):m.innerHTML="Searching...",await T(1e3);break}}J();
//# sourceMappingURL=frontend-3b652bd2.js.map
