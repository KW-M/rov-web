
# user pi;
worker_processes  1;

error_log  /var/log/nginx/error.log notice;
pid        /tmp/nginx.pid;

events {
    worker_connections  200;
}

http {
    # rootless nginx needs temp paths specified:
    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # setup logging:
    log_format  main  '[$time_local] $server_addr:$server_port -> $remote_addr:$remote_port'
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" ';
    access_log  /var/log/nginx/access.log  main;

    # common defaults:
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    absolute_redirect off;
    sendfile        on;
    tcp_nodelay    on;
    tcp_nopush     on; # https://webcache.googleusercontent.com/search?q=cache:XBxG-p5bQiEJ:https://t37.net/nginx-optimization-understanding-sendfile-tcp_nodelay-and-tcp_nopush.html&sca_esv=582640987&hl=en&gl=us&strip=1&vwsrc=0
    keepalive_timeout  65;

    # enable gzip compression:
    gzip  on;
    gzip_vary on;
	gzip_proxied any;

    # helper to make websocket proxying work - from: https://www.nginx.com/blog/websocket-nginx/
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # setup actual server part:
    server {
        listen       8080; # port for ipv4
        listen       [::]:8080; # port for ipv6
        # server_name  localhost;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root  /usr/share/nginx/html/frontend/;
            index  index.html index.htm;

            # # kill cache (reduces CPU & memory usage)
            # expires -1;
            # #TODO: add more cache control headers https://serverfault.com/questions/1067735/stop-nginx-from-locally-caching-a-directory
            # add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        location /internal {
            root /usr/share/nginx/html/;
            index index.html index.htm;

            # # kill cache (reduces CPU & memory usage)
            # expires -1;
            # #TODO: add more cache control headers https://serverfault.com/questions/1067735/stop-nginx-from-locally-caching-a-directory
            # add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        location /all {
            alias  /usr/share/nginx/html/;
            index _;

            default_type text/plain;
            sendfile on;
			sendfile_max_chunk 1m;
            # show a simple "index" webpage with filenames if the end user's browser requests a directory rather than a file: https://stackoverflow.com/questions/10663248/how-to-configure-nginx-to-enable-kinda-file-browser-mode
			autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
			# index index.html index.htm;
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			# try_files $uri $uri.html $uri/index.html $uri/ /all/ =404;
			types {
                text/html html;
        	}
        }

        ##
		# Serve System Log Folder /var/log as static files
        ##
		location /logs {
            alias  /var/log/;

            index _;
            default_type text/plain;
			sendfile on;
			sendfile_max_chunk 1m;
			# show a simple "index" webpage with filenames if the end user's browser requests a directory rather than a file: https://stackoverflow.com/questions/10663248/how-to-configure-nginx-to-enable-kinda-file-browser-mode
			autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
			# index index.html index.htm;
			types {
                text/html html;
        	}
        }

        location /docs {
            root   /usr/share/nginx/html/internal/;
            index  index.html index.htm;
        }


        location = /register_service {
            alias /usr/share/nginx/html/internal/register_service.json;
        }

        location = /docs.json {
            add_header Content-Type application/json;
            return 200 '{}';
        }

        location = /swagger.json {
            add_header Content-Type application/json;
            return 200 '{}';
        }

        location = /openapi.json {
            add_header Content-Type application/json;
            return 200 '{}';
        }

        # redirect server file not found errors to the static page /404.html
        error_page  404              /404.html;
        location = /404.html {
            root   /usr/share/nginx/html/internal;
        }

        # redirect server error pages to the static page /50x.html
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html/internal;
        }
    }


	# expose chromium dev tools port
	server {
        listen       9224; # port for ipv4
        listen       [::]:9224; # port for ipv6
        # server_name  localhost;

        large_client_header_buffers 4 32k;

        location / {
            proxy_pass         http://127.0.0.1:9224/;
            proxy_redirect     off;

            proxy_http_version 1.1;
            proxy_set_header   Upgrade          $http_upgrade;
            proxy_set_header   Connection       $connection_upgrade;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            # proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; # seems to cause problems, will recursively add IPs to the access log
            proxy_connect_timeout      90;
            proxy_send_timeout         90;
            proxy_read_timeout         90;
        }
    }

    # Uncomment to include configs from default config location too:
    # include /etc/nginx/conf.d/*.conf;
}
