# This file is part of docker-debian-systemd.
#
# Copyright (c)
#   2018-2019 Alexander Haase <ahaase@alexhaase.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This image bases on the regular Debian image. By default the 'latest' tag
# (pointing to the current stable release) of the parent image will be used.
# However, an alternate parent tag may be set by defining the 'TAG' build
# argument to a specific Debian release, e.g. 'stretch' or 'buster'.
ARG  TAG=bullseye-slim
FROM debian:${TAG}


# Configure the debconf frontend.
#
# This image doesn't include whiptail, dialog, nor the readline perl module.
# Therefore, the debconf frontend will be set to 'teletype' to avoid error
# messages about no dialog frontend could be found.
RUN echo 'debconf debconf/frontend select teletype' | debconf-set-selections


# Install the necessary packages.
#
# In addition to the regular Debian base image, a BASIC set of packages from the
# Debian minimal configuration will be installed. After all packages have been
# installed, the apt caches and some log files will be removed to minimize the
# image.
#
# NOTE: An upgrade will be performed to include updates and security fixes of
#       installed packages that received updates in the Debian repository after
#       the upstream image has been created.
#
# NOTE: No syslog daemon will be installed, as systemd's journald should fit
#       most needs. Please file an issue if you think this should be changed. --no-install-recommends \

RUN apt-get update
RUN apt-get dist-upgrade -y
RUN apt-get install -y sudo git wget unzip python3 python3-pip;
RUN wget -O /usr/bin/systemctl "https://github.com/gdraheim/docker-systemctl-replacement/raw/master/files/docker/systemctl3.py"; \
    chmod +x /usr/bin/systemctl;
RUN apt-get clean;



# ---------- ROV Stuff ----------
# https://discuss.bluerobotics.com/t/manual-control-not-working-in-depth-hold-mode/13948/7

# create user pi if it doesnt exist
# RUN useradd -m -s /bin/bash pi
# RUN echo "blu\nblu\n" | passwd pi
# RUN usermod -aG sudo pi
# USER pi
# RUN cd ~ && pwd && whoami

RUN cd ~ && \
    mkdir rov-web && \
    cd rov-web && \
    wget "https://github.com/KW-M/rov-web/releases/latest/download/project.zip" -O project.zip && \
    unzip project.zip && \
    rm project.zip && \
    git init -b blueos-docker-containerization && \
    git remote add origin 'https://github.com/KW-M/rov-web.git'  && \
    git fetch && \
    git reset --hard origin/blueos-docker-containerization  && \
    git branch --set-upstream-to=origin/blueos-docker-containerization blueos-docker-containerization && \
    echo "blu" | sudo -S echo "hi" && \
    echo "\nblurov\n1234\nhttps://rov-web.livekit.cloud\nAPIHd7Boa9RUUiT\nOEnyn7xw5d0vKNqLlKDSD6UXaSvoVQ8uLDiZycjb8pH\nlive_939208839_F9qSqKO7lwAUOFybBDyYok0biD8tZ8" | ./tooling/rasberry_pi_setup_scripts/START_HERE.sh
# ---------- End ROV stuff ----------

# As this image should run systemd, the default command will be changed to start
# the init system. CMD will be preferred in favor of ENTRYPOINT, so one may
# override it when creating the container to e.g. to run a bash console instead.
CMD [ "/usr/bin/systemctl" ]
