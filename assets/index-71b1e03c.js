var f=Object.defineProperty;var _=(s,e,t)=>e in s?f(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var o=(s,e,t)=>(_(s,typeof e!="symbol"?e+"":e,t),t);import{E as k,D as y,L as w,d as T,e as R,C as l,S as L}from"./consts-e660c2ba.js";import{r as c,a as b,c as d,b as C,S as A,d as E}from"./simplePeer-c52967cd.js";const h=(s,e=0)=>({header:{system_id:255,component_id:240,sequence:e},message:s}),N=s=>h({type:"COMMAND_LONG",command:{type:"MAV_CMD_COMPONENT_ARM_DISARM"},target_system:1,target_component:1,confirmation:0,param1:1,param2:0,param3:0,param4:0,param5:0,param6:0,param7:0}),P=s=>h({type:"COMMAND_LONG",command:{type:"MAV_CMD_COMPONENT_ARM_DISARM"},target_system:1,target_component:1,confirmation:1,param1:0,param2:0,param3:0,param4:0,param5:0,param6:0,param7:0}),I=()=>h({type:"HEARTBEAT",custom_mode:0,mavtype:{type:"MAV_TYPE_GCS"},autopilot:{type:"MAV_AUTOPILOT_INVALID"},base_mode:{bits:192},system_status:{type:"MAV_STATE_ACTIVE"},mavlink_version:1,confirmation:0}),O=(s,e,t,n)=>h({type:"MANUAL_CONTROL",x:Math.floor(s),y:Math.floor(e),z:Math.floor(t),r:Math.floor(n),buttons:0,target:1});class S{constructor(){o(this,"socket");o(this,"serverAddress");o(this,"msgReceivedFn");o(this,"isRunning");o(this,"isConnected");o(this,"connectionTimerId");this.isConnected=!1,this.isRunning=!1,this.connectionTimerId=0,this.serverAddress=""}start(e,t){this.serverAddress=e,this.msgReceivedFn=t,this.isRunning=!0,this.connect()}stop(){this.isRunning=!1,this.socket.close()}connect(){console.log("Attempting to connect to python websocket..."),this.socket=new WebSocket(this.serverAddress),this.socket.binaryType="blob",this.isConnected=!0,this.socket.addEventListener("close",e=>{console.log("WebSocket connection closed with code: ",e.code),this.isConnected=!1,this.isRunning&&this.queueConnect()}),this.socket.addEventListener("error",e=>{console.error("WebSocket error:",e),this.isConnected=!1,this.isRunning&&this.queueConnect()}),this.socket.addEventListener("message",e=>{typeof e.data=="string"?this.msgReceivedFn(k(e.data)):e.data.arrayBuffer().then(t=>{this.msgReceivedFn(new Uint8Array(t))})})}queueConnect(){clearTimeout(this.connectionTimerId),this.connectionTimerId=setTimeout(this.connect.bind(this),2e3)}getIsConnected(){return this.isConnected}sendMessage(e){this.socket.send(e)}}const M=new S;class D{constructor(){o(this,"mavlinkWebsocket");o(this,"onMessage");this.mavlinkWebsocket=new S}start(e,t){this.onMessage=t,this.mavlinkWebsocket.start(e,n=>{this.handleMessage(n)})}handleMessage(e){if(e.length===0)return;const t=y(e);try{const n=JSON.parse(t);this.onMessage(n)}catch(n){console.error("Failed to parse recived mavlink2rest json: "+t,n)}}sendMessage(e){console.info("Sending Mavlink Message: ",e),this.mavlinkWebsocket.sendMessage(JSON.stringify(e))}}const m=new D;function K(s,e){if(e.SimplepeerSignal)return g.ingestSimplePeerSignallingMsg(s,e.SimplepeerSignal.Message),!0;if(e.Move){let t=e.Move.VelocityX*500,n=e.Move.VelocityY*500,i=e.Move.VelocityZ*500+500,u=e.Move.AngularVelocityYaw*500;return m.sendMessage(O(t,n,i,u)),!0}else return e.Disarm?(m.sendMessage(P()),!0):e.TakeControl?(m.sendMessage(N()),!1):(e.Ping&&m.sendMessage(I()),!1)}function p(s,e){let t=new Uint8Array(e);if(!t||t.length===0)return;const n=c.RovAction.decode(t);if(console.debug("Rcvd Msg: ",n.toJSON()),K(s,n))return;n.BackendMetadata=n.BackendMetadata||new c.ActionBackendMetadata,n.BackendMetadata.FromUserId=s;const i=c.RovAction.encode(n).finish();M.isConnected&&M.sendMessage(i)}const V=globalThis.livekitServerSDK.EgressClient,W=globalThis.livekitServerSDK.StreamProtocol;class B{constructor(){o(this,"_twitchStreamKey",null);o(this,"_egressClient",null);o(this,"roomName",null);o(this,"streamEgressID",null)}init(e,t,n,i){this._twitchStreamKey=e,this.roomName=t,this._egressClient=new V("https://rov-web.livekit.cloud",n,i)}async startStream(){if(!this._twitchStreamKey)return console.warn("startStream() err: Twitch stream key not set!");const e={protocol:W.RTMP,urls:["rtmp://live.twitch.tv/app/"+this._twitchStreamKey]};var t=await this._egressClient.startRoomCompositeEgress(this.roomName,e);this.streamEgressID=t.egressId}async stopStream(){if(!this.streamEgressID)return console.warn("stopStream() err: Twitch Stream not started!");await this._egressClient.stopEgress(this.streamEgressID)}}const v=new B;class U{constructor(){o(this,"_cloudLivekitConnection",new b);o(this,"_simplePeerConnections",{});o(this,"_cameraMediaStream",null);this._cloudLivekitConnection.init({hostUrl:w,publishVideo:!0,reconnectAttempts:300,roomConnectionConfig:T,roomConfig:R}),d(this._cloudLivekitConnection.latestRecivedDataMessage,e=>{if(!e)return;const{senderId:t,msg:n}=e;p(t,n)}),d(this._cloudLivekitConnection.connectionState,e=>{console.log("Cloud Conn State Changed: "+e),e==l.connected&&v.startStream()}),d(this._cloudLivekitConnection.participantConnectionEvents,e=>{console.log("Cloud Conn Participant Event: ",e)})}async cameraReady(e){this._cameraMediaStream=e,this._cloudLivekitConnection&&this._cloudLivekitConnection.connectionState.get()==l.connected&&this._cameraMediaStream&&await this._cloudLivekitConnection._roomConn.localParticipant.setCameraEnabled(!0)}async start(e){e.EnableLivekitCloud&&await C(this._cloudLivekitConnection.startRoom,this._cloudLivekitConnection,10,1e3,1.3)(e.RovName,e.LivekitAPIKey,e.LivekitSecretKey).catch(t=>{console.error(t),window.location.reload()}),C(navigator.mediaDevices.getUserMedia,navigator.mediaDevices,10,1e3,1.3)({video:!0,audio:!1}).then(this.cameraReady.bind(this)).catch(t=>{console.error(t),window.location.reload()}),console.info("Connection Manager Started")}async startSimplePeerConnection(e,t){this._simplePeerConnections[e]&&(this._simplePeerConnections[e].stop(),delete this._simplePeerConnections[e]);const n=new A;d(n.latestRecivedDataMessage,i=>{p(e,i)}),d(n.outgoingSignalingMessages,i=>{this.sendMessage({SimplepeerSignal:{Message:i}},!0,[e])}),await n.start({initiator:!1,trickle:!1,streams:[this._cameraMediaStream]}),this._simplePeerConnections[e]=n,t&&n.ingestSignalingMsg(t)}async ingestSimplePeerSignallingMsg(e,t){const n=this._simplePeerConnections[e];n?[l.failed,l.disconnectedOk,l.init].includes(n.connectionState.get())?await this.startSimplePeerConnection(e,t):n.ingestSignalingMsg(t):await this.startSimplePeerConnection(e,t)}async _sendMessageViaLivekit(e,t,n){await this._cloudLivekitConnection.sendMessage(e,t,n)}async sendMessage(e,t,n){console.info("Sending Message to ["+n.join(", ")+"]",t?"reliably":"unreliably",":",e),e.BackendMetadata=new c.ResponseBackendMetadata({});const i=c.RovResponse.encode(e).finish(),u=n;await this._cloudLivekitConnection.sendMessage(i,t,u)}}const g=new U;window.getLongTermStarterAccessToken=E;const r=new URLSearchParams(location.search),a={RovName:r.get("RovName"),RovControlPassword:r.get("RovControlPassword"),LivekitAPIKey:r.get("LivekitApiKey"),LivekitSecretKey:r.get("LivekitSecretKey"),TwitchStreamKey:r.get("TwitchStreamKey")||"None",EnableLivekitLocal:(r.get("ForceLocal")||"false").toLowerCase()==="true",EnableLivekitCloud:(r.get("EnableCloud")||"true").toLowerCase()==="true",PythonWebsocketPort:parseInt(r.get("PythonWebsocketPort"))||0,AuthTokenTimeout:parseInt(r.get("AuthTokenTimeout"))||L};for(const s in a)if(a[s]==null)throw new Error("Missing required url query parameter: "+s);g.start(a);a.TwitchStreamKey!=="None"&&(v.init(a.TwitchStreamKey,a.RovName,a.LivekitAPIKey,a.LivekitSecretKey),window.addEventListener("beforeunload",()=>v.stopStream()));a.PythonWebsocketPort!=0&&M.start("ws://localhost:"+a.PythonWebsocketPort,s=>{if(s.length===0)return;const e=c.RovResponse.decode(s);if(!e.BackendMetadata)return console.error("No BackendMetadata in message from iROV",e.toJSON(),s);const t=e.BackendMetadata.TargetUserIds,i=e.BackendMetadata.TransportMethod==c.DataTransportMethod.LivekitReliable;g.sendMessage(e,i,t)});m.start("ws://blueos.attlocal.net:6040/ws/mavlink",s=>{if(!s.header||!s.message)return console.error("Mavlink message missing header or message body",s);const e=k(JSON.stringify(s)),t=c.RovResponse.create({Mavlink:{Message:e}});g.sendMessage(t,!0,[])});
//# sourceMappingURL=index-71b1e03c.js.map
