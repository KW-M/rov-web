{"version":3,"file":"rovActionsProto-7a7aa679.js","sources":["../../node_modules/.pnpm/@protobufjs+aspromise@1.1.2/node_modules/@protobufjs/aspromise/index.js","../../node_modules/.pnpm/@protobufjs+base64@1.1.2/node_modules/@protobufjs/base64/index.js","../../node_modules/.pnpm/@protobufjs+eventemitter@1.1.0/node_modules/@protobufjs/eventemitter/index.js","../../node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","../../node_modules/.pnpm/@protobufjs+inquire@1.1.0/node_modules/@protobufjs/inquire/index.js","../../node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","../../node_modules/.pnpm/@protobufjs+pool@1.1.0/node_modules/@protobufjs/pool/index.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/util/longbits.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/util/minimal.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/writer.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/writer_buffer.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/reader.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/reader_buffer.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/rpc/service.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/rpc.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/roots.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/src/index-minimal.js","../../node_modules/.pnpm/protobufjs@7.2.3/node_modules/protobufjs/minimal.js","../../shared/js/protobufs/rovActionsProto.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\nimport * as $protobuf from \"protobufjs/minimal\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const rov_actions_proto = $root.rov_actions_proto = (() => {\n\n    /**\n     * Namespace rov_actions_proto.\n     * @exports rov_actions_proto\n     * @namespace\n     */\n    const rov_actions_proto = {};\n\n    /**\n     * SensorMeasurmentTypes enum.\n     * @name rov_actions_proto.SensorMeasurmentTypes\n     * @enum {number}\n     * @property {number} depth_meters=0 depth_meters value\n     * @property {number} water_temp_celsius=1 water_temp_celsius value\n     * @property {number} pressure_mbar=2 pressure_mbar value\n     * @property {number} yaw_degrees=3 yaw_degrees value\n     * @property {number} pitch_degrees=4 pitch_degrees value\n     * @property {number} roll_degrees=5 roll_degrees value\n     * @property {number} x_acceleration_m_s2=6 x_acceleration_m_s2 value\n     * @property {number} y_acceleration_m_s2=7 y_acceleration_m_s2 value\n     * @property {number} z_acceleration_m_s2=8 z_acceleration_m_s2 value\n     * @property {number} battery_voltage=9 battery_voltage value\n     * @property {number} battery_current_amps=10 battery_current_amps value\n     * @property {number} internal_temp_celsius=11 internal_temp_celsius value\n     */\n    rov_actions_proto.SensorMeasurmentTypes = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"depth_meters\"] = 0;\n        values[valuesById[1] = \"water_temp_celsius\"] = 1;\n        values[valuesById[2] = \"pressure_mbar\"] = 2;\n        values[valuesById[3] = \"yaw_degrees\"] = 3;\n        values[valuesById[4] = \"pitch_degrees\"] = 4;\n        values[valuesById[5] = \"roll_degrees\"] = 5;\n        values[valuesById[6] = \"x_acceleration_m_s2\"] = 6;\n        values[valuesById[7] = \"y_acceleration_m_s2\"] = 7;\n        values[valuesById[8] = \"z_acceleration_m_s2\"] = 8;\n        values[valuesById[9] = \"battery_voltage\"] = 9;\n        values[valuesById[10] = \"battery_current_amps\"] = 10;\n        values[valuesById[11] = \"internal_temp_celsius\"] = 11;\n        return values;\n    })();\n\n    rov_actions_proto.Measurement = (function() {\n\n        /**\n         * Properties of a Measurement.\n         * @memberof rov_actions_proto\n         * @interface IMeasurement\n         * @property {rov_actions_proto.SensorMeasurmentTypes|null} [MeasurementType] Measurement MeasurementType\n         * @property {number|null} [Value] Measurement Value\n         */\n\n        /**\n         * Constructs a new Measurement.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a Measurement.\n         * @implements IMeasurement\n         * @constructor\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         */\n        function Measurement(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Measurement MeasurementType.\n         * @member {rov_actions_proto.SensorMeasurmentTypes} MeasurementType\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.MeasurementType = 0;\n\n        /**\n         * Measurement Value.\n         * @member {number} Value\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.Value = 0;\n\n        /**\n         * Creates a new Measurement instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         * @returns {rov_actions_proto.Measurement} Measurement instance\n         */\n        Measurement.create = function create(properties) {\n            return new Measurement(properties);\n        };\n\n        /**\n         * Encodes the specified Measurement message. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementType != null && Object.hasOwnProperty.call(message, \"MeasurementType\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.MeasurementType);\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.Value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Measurement message, length delimited. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.Measurement();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.MeasurementType = reader.int32();\n                        break;\n                    }\n                case 2: {\n                        message.Value = reader.float();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Measurement message.\n         * @function verify\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Measurement.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                switch (message.MeasurementType) {\n                default:\n                    return \"MeasurementType: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                    break;\n                }\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                if (typeof message.Value !== \"number\")\n                    return \"Value: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a Measurement message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.Measurement} Measurement\n         */\n        Measurement.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.Measurement)\n                return object;\n            let message = new $root.rov_actions_proto.Measurement();\n            switch (object.MeasurementType) {\n            default:\n                if (typeof object.MeasurementType === \"number\") {\n                    message.MeasurementType = object.MeasurementType;\n                    break;\n                }\n                break;\n            case \"depth_meters\":\n            case 0:\n                message.MeasurementType = 0;\n                break;\n            case \"water_temp_celsius\":\n            case 1:\n                message.MeasurementType = 1;\n                break;\n            case \"pressure_mbar\":\n            case 2:\n                message.MeasurementType = 2;\n                break;\n            case \"yaw_degrees\":\n            case 3:\n                message.MeasurementType = 3;\n                break;\n            case \"pitch_degrees\":\n            case 4:\n                message.MeasurementType = 4;\n                break;\n            case \"roll_degrees\":\n            case 5:\n                message.MeasurementType = 5;\n                break;\n            case \"x_acceleration_m_s2\":\n            case 6:\n                message.MeasurementType = 6;\n                break;\n            case \"y_acceleration_m_s2\":\n            case 7:\n                message.MeasurementType = 7;\n                break;\n            case \"z_acceleration_m_s2\":\n            case 8:\n                message.MeasurementType = 8;\n                break;\n            case \"battery_voltage\":\n            case 9:\n                message.MeasurementType = 9;\n                break;\n            case \"battery_current_amps\":\n            case 10:\n                message.MeasurementType = 10;\n                break;\n            case \"internal_temp_celsius\":\n            case 11:\n                message.MeasurementType = 11;\n                break;\n            }\n            if (object.Value != null)\n                message.Value = Number(object.Value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a Measurement message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.Measurement} message Measurement\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Measurement.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.MeasurementType = options.enums === String ? \"depth_meters\" : 0;\n                object.Value = 0;\n            }\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                object.MeasurementType = options.enums === String ? $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] === undefined ? message.MeasurementType : $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] : message.MeasurementType;\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                object.Value = options.json && !isFinite(message.Value) ? String(message.Value) : message.Value;\n            return object;\n        };\n\n        /**\n         * Converts this Measurement to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Measurement.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Measurement\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Measurement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.Measurement\";\n        };\n\n        return Measurement;\n    })();\n\n    /**\n     * DataTransportMethod enum.\n     * @name rov_actions_proto.DataTransportMethod\n     * @enum {number}\n     * @property {number} LivekitReliable=0 LivekitReliable value\n     * @property {number} LivekitUnreliable=1 LivekitUnreliable value\n     * @property {number} DirectUnreliable=3 DirectUnreliable value\n     */\n    rov_actions_proto.DataTransportMethod = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"LivekitReliable\"] = 0;\n        values[valuesById[1] = \"LivekitUnreliable\"] = 1;\n        values[valuesById[3] = \"DirectUnreliable\"] = 3;\n        return values;\n    })();\n\n    /**\n     * InternalWebpageEvent enum.\n     * @name rov_actions_proto.InternalWebpageEvent\n     * @enum {number}\n     * @property {number} RovConnected=0 RovConnected value\n     * @property {number} RovDisconnected=1 RovDisconnected value\n     * @property {number} UserConnected=2 UserConnected value\n     * @property {number} UserDisconnected=3 UserDisconnected value\n     */\n    rov_actions_proto.InternalWebpageEvent = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"RovConnected\"] = 0;\n        values[valuesById[1] = \"RovDisconnected\"] = 1;\n        values[valuesById[2] = \"UserConnected\"] = 2;\n        values[valuesById[3] = \"UserDisconnected\"] = 3;\n        return values;\n    })();\n\n    rov_actions_proto.PingAction = (function() {\n\n        /**\n         * Properties of a PingAction.\n         * @memberof rov_actions_proto\n         * @interface IPingAction\n         * @property {number|Long|null} [Time] PingAction Time\n         */\n\n        /**\n         * Constructs a new PingAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PingAction.\n         * @implements IPingAction\n         * @constructor\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         */\n        function PingAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PingAction Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         */\n        PingAction.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PingAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PingAction} PingAction instance\n         */\n        PingAction.create = function create(properties) {\n            return new PingAction(properties);\n        };\n\n        /**\n         * Encodes the specified PingAction message. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PingAction message, length delimited. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PingAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PingAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PingAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PingAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PingAction} PingAction\n         */\n        PingAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PingAction)\n                return object;\n            let message = new $root.rov_actions_proto.PingAction();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PingAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.PingAction} message PingAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PingAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PingAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PingAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PingAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PingAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PingAction\";\n        };\n\n        return PingAction;\n    })();\n\n    rov_actions_proto.PasswordAttemptAction = (function() {\n\n        /**\n         * Properties of a PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAttemptAction\n         * @property {string|null} [Password] PasswordAttemptAction Password\n         */\n\n        /**\n         * Constructs a new PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAttemptAction.\n         * @implements IPasswordAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         */\n        function PasswordAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAttemptAction Password.\n         * @member {string} Password\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         */\n        PasswordAttemptAction.prototype.Password = \"\";\n\n        /**\n         * Creates a new PasswordAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction instance\n         */\n        PasswordAttemptAction.create = function create(properties) {\n            return new PasswordAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Password);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Password = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                if (!$util.isString(message.Password))\n                    return \"Password: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         */\n        PasswordAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAttemptAction();\n            if (object.Password != null)\n                message.Password = String(object.Password);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.PasswordAttemptAction} message PasswordAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Password = \"\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                object.Password = message.Password;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAttemptAction\";\n        };\n\n        return PasswordAttemptAction;\n    })();\n\n    rov_actions_proto.AuthTokenAttemptAction = (function() {\n\n        /**\n         * Properties of an AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IAuthTokenAttemptAction\n         * @property {string|null} [Token] AuthTokenAttemptAction Token\n         */\n\n        /**\n         * Constructs a new AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an AuthTokenAttemptAction.\n         * @implements IAuthTokenAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         */\n        function AuthTokenAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AuthTokenAttemptAction Token.\n         * @member {string} Token\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         */\n        AuthTokenAttemptAction.prototype.Token = \"\";\n\n        /**\n         * Creates a new AuthTokenAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction instance\n         */\n        AuthTokenAttemptAction.create = function create(properties) {\n            return new AuthTokenAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Token != null && Object.hasOwnProperty.call(message, \"Token\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Token);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Token = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AuthTokenAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AuthTokenAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                if (!$util.isString(message.Token))\n                    return \"Token: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an AuthTokenAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         */\n        AuthTokenAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.AuthTokenAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            if (object.Token != null)\n                message.Token = String(object.Token);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AuthTokenAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.AuthTokenAttemptAction} message AuthTokenAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AuthTokenAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Token = \"\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                object.Token = message.Token;\n            return object;\n        };\n\n        /**\n         * Converts this AuthTokenAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AuthTokenAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for AuthTokenAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        AuthTokenAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.AuthTokenAttemptAction\";\n        };\n\n        return AuthTokenAttemptAction;\n    })();\n\n    rov_actions_proto.TakeControlAction = (function() {\n\n        /**\n         * Properties of a TakeControlAction.\n         * @memberof rov_actions_proto\n         * @interface ITakeControlAction\n         */\n\n        /**\n         * Constructs a new TakeControlAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakeControlAction.\n         * @implements ITakeControlAction\n         * @constructor\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         */\n        function TakeControlAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakeControlAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction instance\n         */\n        TakeControlAction.create = function create(properties) {\n            return new TakeControlAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakeControlAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakeControlAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakeControlAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakeControlAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         */\n        TakeControlAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakeControlAction)\n                return object;\n            return new $root.rov_actions_proto.TakeControlAction();\n        };\n\n        /**\n         * Creates a plain object from a TakeControlAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.TakeControlAction} message TakeControlAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakeControlAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakeControlAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakeControlAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakeControlAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakeControlAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakeControlAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakeControlAction\";\n        };\n\n        return TakeControlAction;\n    })();\n\n    rov_actions_proto.MoveAction = (function() {\n\n        /**\n         * Properties of a MoveAction.\n         * @memberof rov_actions_proto\n         * @interface IMoveAction\n         * @property {number|null} [VelocityX] MoveAction VelocityX\n         * @property {number|null} [VelocityY] MoveAction VelocityY\n         * @property {number|null} [VelocityZ] MoveAction VelocityZ\n         * @property {number|null} [AngularVelocityYaw] MoveAction AngularVelocityYaw\n         */\n\n        /**\n         * Constructs a new MoveAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MoveAction.\n         * @implements IMoveAction\n         * @constructor\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         */\n        function MoveAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MoveAction VelocityX.\n         * @member {number} VelocityX\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityX = 0;\n\n        /**\n         * MoveAction VelocityY.\n         * @member {number} VelocityY\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityY = 0;\n\n        /**\n         * MoveAction VelocityZ.\n         * @member {number} VelocityZ\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityZ = 0;\n\n        /**\n         * MoveAction AngularVelocityYaw.\n         * @member {number} AngularVelocityYaw\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.AngularVelocityYaw = 0;\n\n        /**\n         * Creates a new MoveAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MoveAction} MoveAction instance\n         */\n        MoveAction.create = function create(properties) {\n            return new MoveAction(properties);\n        };\n\n        /**\n         * Encodes the specified MoveAction message. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.VelocityX != null && Object.hasOwnProperty.call(message, \"VelocityX\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.VelocityX);\n            if (message.VelocityY != null && Object.hasOwnProperty.call(message, \"VelocityY\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.VelocityY);\n            if (message.VelocityZ != null && Object.hasOwnProperty.call(message, \"VelocityZ\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.VelocityZ);\n            if (message.AngularVelocityYaw != null && Object.hasOwnProperty.call(message, \"AngularVelocityYaw\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.AngularVelocityYaw);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MoveAction message, length delimited. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MoveAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.VelocityX = reader.float();\n                        break;\n                    }\n                case 2: {\n                        message.VelocityY = reader.float();\n                        break;\n                    }\n                case 3: {\n                        message.VelocityZ = reader.float();\n                        break;\n                    }\n                case 4: {\n                        message.AngularVelocityYaw = reader.float();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MoveAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MoveAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                if (typeof message.VelocityX !== \"number\")\n                    return \"VelocityX: number expected\";\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                if (typeof message.VelocityY !== \"number\")\n                    return \"VelocityY: number expected\";\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                if (typeof message.VelocityZ !== \"number\")\n                    return \"VelocityZ: number expected\";\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                if (typeof message.AngularVelocityYaw !== \"number\")\n                    return \"AngularVelocityYaw: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MoveAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         */\n        MoveAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MoveAction)\n                return object;\n            let message = new $root.rov_actions_proto.MoveAction();\n            if (object.VelocityX != null)\n                message.VelocityX = Number(object.VelocityX);\n            if (object.VelocityY != null)\n                message.VelocityY = Number(object.VelocityY);\n            if (object.VelocityZ != null)\n                message.VelocityZ = Number(object.VelocityZ);\n            if (object.AngularVelocityYaw != null)\n                message.AngularVelocityYaw = Number(object.AngularVelocityYaw);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MoveAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.MoveAction} message MoveAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MoveAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.VelocityX = 0;\n                object.VelocityY = 0;\n                object.VelocityZ = 0;\n                object.AngularVelocityYaw = 0;\n            }\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                object.VelocityX = options.json && !isFinite(message.VelocityX) ? String(message.VelocityX) : message.VelocityX;\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                object.VelocityY = options.json && !isFinite(message.VelocityY) ? String(message.VelocityY) : message.VelocityY;\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                object.VelocityZ = options.json && !isFinite(message.VelocityZ) ? String(message.VelocityZ) : message.VelocityZ;\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                object.AngularVelocityYaw = options.json && !isFinite(message.AngularVelocityYaw) ? String(message.AngularVelocityYaw) : message.AngularVelocityYaw;\n            return object;\n        };\n\n        /**\n         * Converts this MoveAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MoveAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MoveAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MoveAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MoveAction\";\n        };\n\n        return MoveAction;\n    })();\n\n    rov_actions_proto.BeginVideoStreamAction = (function() {\n\n        /**\n         * Properties of a BeginVideoStreamAction.\n         * @memberof rov_actions_proto\n         * @interface IBeginVideoStreamAction\n         */\n\n        /**\n         * Constructs a new BeginVideoStreamAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a BeginVideoStreamAction.\n         * @implements IBeginVideoStreamAction\n         * @constructor\n         * @param {rov_actions_proto.IBeginVideoStreamAction=} [properties] Properties to set\n         */\n        function BeginVideoStreamAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new BeginVideoStreamAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction instance\n         */\n        BeginVideoStreamAction.create = function create(properties) {\n            return new BeginVideoStreamAction(properties);\n        };\n\n        /**\n         * Encodes the specified BeginVideoStreamAction message. Does not implicitly {@link rov_actions_proto.BeginVideoStreamAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction} message BeginVideoStreamAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BeginVideoStreamAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified BeginVideoStreamAction message, length delimited. Does not implicitly {@link rov_actions_proto.BeginVideoStreamAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction} message BeginVideoStreamAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BeginVideoStreamAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a BeginVideoStreamAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BeginVideoStreamAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.BeginVideoStreamAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a BeginVideoStreamAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BeginVideoStreamAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a BeginVideoStreamAction message.\n         * @function verify\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        BeginVideoStreamAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a BeginVideoStreamAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         */\n        BeginVideoStreamAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.BeginVideoStreamAction)\n                return object;\n            return new $root.rov_actions_proto.BeginVideoStreamAction();\n        };\n\n        /**\n         * Creates a plain object from a BeginVideoStreamAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.BeginVideoStreamAction} message BeginVideoStreamAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BeginVideoStreamAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this BeginVideoStreamAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BeginVideoStreamAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for BeginVideoStreamAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        BeginVideoStreamAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.BeginVideoStreamAction\";\n        };\n\n        return BeginVideoStreamAction;\n    })();\n\n    rov_actions_proto.TakePhotoAction = (function() {\n\n        /**\n         * Properties of a TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @interface ITakePhotoAction\n         */\n\n        /**\n         * Constructs a new TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakePhotoAction.\n         * @implements ITakePhotoAction\n         * @constructor\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         */\n        function TakePhotoAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakePhotoAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction instance\n         */\n        TakePhotoAction.create = function create(properties) {\n            return new TakePhotoAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakePhotoAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakePhotoAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakePhotoAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakePhotoAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         */\n        TakePhotoAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakePhotoAction)\n                return object;\n            return new $root.rov_actions_proto.TakePhotoAction();\n        };\n\n        /**\n         * Creates a plain object from a TakePhotoAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.TakePhotoAction} message TakePhotoAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakePhotoAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakePhotoAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakePhotoAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakePhotoAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakePhotoAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakePhotoAction\";\n        };\n\n        return TakePhotoAction;\n    })();\n\n    rov_actions_proto.StartVideoRecAction = (function() {\n\n        /**\n         * Properties of a StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStartVideoRecAction\n         */\n\n        /**\n         * Constructs a new StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StartVideoRecAction.\n         * @implements IStartVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         */\n        function StartVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StartVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction instance\n         */\n        StartVideoRecAction.create = function create(properties) {\n            return new StartVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StartVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StartVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StartVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StartVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         */\n        StartVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StartVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StartVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StartVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StartVideoRecAction} message StartVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StartVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StartVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StartVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StartVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StartVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StartVideoRecAction\";\n        };\n\n        return StartVideoRecAction;\n    })();\n\n    rov_actions_proto.StopVideoRecAction = (function() {\n\n        /**\n         * Properties of a StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStopVideoRecAction\n         */\n\n        /**\n         * Constructs a new StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StopVideoRecAction.\n         * @implements IStopVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         */\n        function StopVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StopVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction instance\n         */\n        StopVideoRecAction.create = function create(properties) {\n            return new StopVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StopVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StopVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StopVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StopVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         */\n        StopVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StopVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StopVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StopVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StopVideoRecAction} message StopVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StopVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StopVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StopVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StopVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StopVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StopVideoRecAction\";\n        };\n\n        return StopVideoRecAction;\n    })();\n\n    rov_actions_proto.ToogleLightsAction = (function() {\n\n        /**\n         * Properties of a ToogleLightsAction.\n         * @memberof rov_actions_proto\n         * @interface IToogleLightsAction\n         */\n\n        /**\n         * Constructs a new ToogleLightsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ToogleLightsAction.\n         * @implements IToogleLightsAction\n         * @constructor\n         * @param {rov_actions_proto.IToogleLightsAction=} [properties] Properties to set\n         */\n        function ToogleLightsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ToogleLightsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction instance\n         */\n        ToogleLightsAction.create = function create(properties) {\n            return new ToogleLightsAction(properties);\n        };\n\n        /**\n         * Encodes the specified ToogleLightsAction message. Does not implicitly {@link rov_actions_proto.ToogleLightsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction} message ToogleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToogleLightsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ToogleLightsAction message, length delimited. Does not implicitly {@link rov_actions_proto.ToogleLightsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction} message ToogleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToogleLightsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ToogleLightsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToogleLightsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ToogleLightsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ToogleLightsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToogleLightsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ToogleLightsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ToogleLightsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ToogleLightsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         */\n        ToogleLightsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ToogleLightsAction)\n                return object;\n            return new $root.rov_actions_proto.ToogleLightsAction();\n        };\n\n        /**\n         * Creates a plain object from a ToogleLightsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.ToogleLightsAction} message ToogleLightsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ToogleLightsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ToogleLightsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ToogleLightsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ToogleLightsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ToogleLightsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ToogleLightsAction\";\n        };\n\n        return ToogleLightsAction;\n    })();\n\n    rov_actions_proto.ShutdownRovAction = (function() {\n\n        /**\n         * Properties of a ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @interface IShutdownRovAction\n         */\n\n        /**\n         * Constructs a new ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ShutdownRovAction.\n         * @implements IShutdownRovAction\n         * @constructor\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         */\n        function ShutdownRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ShutdownRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction instance\n         */\n        ShutdownRovAction.create = function create(properties) {\n            return new ShutdownRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ShutdownRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ShutdownRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ShutdownRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ShutdownRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         */\n        ShutdownRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ShutdownRovAction)\n                return object;\n            return new $root.rov_actions_proto.ShutdownRovAction();\n        };\n\n        /**\n         * Creates a plain object from a ShutdownRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.ShutdownRovAction} message ShutdownRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ShutdownRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ShutdownRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ShutdownRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ShutdownRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ShutdownRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ShutdownRovAction\";\n        };\n\n        return ShutdownRovAction;\n    })();\n\n    rov_actions_proto.RebootRovAction = (function() {\n\n        /**\n         * Properties of a RebootRovAction.\n         * @memberof rov_actions_proto\n         * @interface IRebootRovAction\n         */\n\n        /**\n         * Constructs a new RebootRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RebootRovAction.\n         * @implements IRebootRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         */\n        function RebootRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RebootRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction instance\n         */\n        RebootRovAction.create = function create(properties) {\n            return new RebootRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RebootRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RebootRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RebootRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RebootRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         */\n        RebootRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RebootRovAction)\n                return object;\n            return new $root.rov_actions_proto.RebootRovAction();\n        };\n\n        /**\n         * Creates a plain object from a RebootRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.RebootRovAction} message RebootRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RebootRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RebootRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RebootRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RebootRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RebootRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RebootRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RebootRovAction\";\n        };\n\n        return RebootRovAction;\n    })();\n\n    rov_actions_proto.EnableWifiAction = (function() {\n\n        /**\n         * Properties of an EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IEnableWifiAction\n         */\n\n        /**\n         * Constructs a new EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an EnableWifiAction.\n         * @implements IEnableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         */\n        function EnableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new EnableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction instance\n         */\n        EnableWifiAction.create = function create(properties) {\n            return new EnableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.EnableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an EnableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        EnableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates an EnableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         */\n        EnableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.EnableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.EnableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from an EnableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.EnableWifiAction} message EnableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        EnableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this EnableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        EnableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for EnableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        EnableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.EnableWifiAction\";\n        };\n\n        return EnableWifiAction;\n    })();\n\n    rov_actions_proto.DisableWifiAction = (function() {\n\n        /**\n         * Properties of a DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IDisableWifiAction\n         */\n\n        /**\n         * Constructs a new DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DisableWifiAction.\n         * @implements IDisableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         */\n        function DisableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new DisableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction instance\n         */\n        DisableWifiAction.create = function create(properties) {\n            return new DisableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DisableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DisableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DisableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DisableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         */\n        DisableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DisableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.DisableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from a DisableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.DisableWifiAction} message DisableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DisableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this DisableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DisableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DisableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DisableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DisableWifiAction\";\n        };\n\n        return DisableWifiAction;\n    })();\n\n    rov_actions_proto.RovStatusReportAction = (function() {\n\n        /**\n         * Properties of a RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @interface IRovStatusReportAction\n         */\n\n        /**\n         * Constructs a new RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovStatusReportAction.\n         * @implements IRovStatusReportAction\n         * @constructor\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         */\n        function RovStatusReportAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RovStatusReportAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction instance\n         */\n        RovStatusReportAction.create = function create(properties) {\n            return new RovStatusReportAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovStatusReportAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovStatusReportAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovStatusReportAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RovStatusReportAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         */\n        RovStatusReportAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovStatusReportAction)\n                return object;\n            return new $root.rov_actions_proto.RovStatusReportAction();\n        };\n\n        /**\n         * Creates a plain object from a RovStatusReportAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.RovStatusReportAction} message RovStatusReportAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovStatusReportAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RovStatusReportAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovStatusReportAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovStatusReportAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovStatusReportAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovStatusReportAction\";\n        };\n\n        return RovStatusReportAction;\n    })();\n\n    rov_actions_proto.RestartRovServicesAction = (function() {\n\n        /**\n         * Properties of a RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @interface IRestartRovServicesAction\n         */\n\n        /**\n         * Constructs a new RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RestartRovServicesAction.\n         * @implements IRestartRovServicesAction\n         * @constructor\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         */\n        function RestartRovServicesAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RestartRovServicesAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction instance\n         */\n        RestartRovServicesAction.create = function create(properties) {\n            return new RestartRovServicesAction(properties);\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message, length delimited. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RestartRovServicesAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RestartRovServicesAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RestartRovServicesAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RestartRovServicesAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         */\n        RestartRovServicesAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RestartRovServicesAction)\n                return object;\n            return new $root.rov_actions_proto.RestartRovServicesAction();\n        };\n\n        /**\n         * Creates a plain object from a RestartRovServicesAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.RestartRovServicesAction} message RestartRovServicesAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RestartRovServicesAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RestartRovServicesAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RestartRovServicesAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RestartRovServicesAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RestartRovServicesAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RestartRovServicesAction\";\n        };\n\n        return RestartRovServicesAction;\n    })();\n\n    rov_actions_proto.RovLogsAction = (function() {\n\n        /**\n         * Properties of a RovLogsAction.\n         * @memberof rov_actions_proto\n         * @interface IRovLogsAction\n         */\n\n        /**\n         * Constructs a new RovLogsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovLogsAction.\n         * @implements IRovLogsAction\n         * @constructor\n         * @param {rov_actions_proto.IRovLogsAction=} [properties] Properties to set\n         */\n        function RovLogsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RovLogsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction instance\n         */\n        RovLogsAction.create = function create(properties) {\n            return new RovLogsAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovLogsAction message. Does not implicitly {@link rov_actions_proto.RovLogsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction} message RovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovLogsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovLogsAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovLogsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction} message RovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovLogsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovLogsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovLogsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovLogsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovLogsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovLogsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovLogsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovLogsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RovLogsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         */\n        RovLogsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovLogsAction)\n                return object;\n            return new $root.rov_actions_proto.RovLogsAction();\n        };\n\n        /**\n         * Creates a plain object from a RovLogsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.RovLogsAction} message RovLogsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovLogsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RovLogsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovLogsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovLogsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovLogsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovLogsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovLogsAction\";\n        };\n\n        return RovLogsAction;\n    })();\n\n    rov_actions_proto.RefreshAllSensorsAction = (function() {\n\n        /**\n         * Properties of a RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @interface IRefreshAllSensorsAction\n         */\n\n        /**\n         * Constructs a new RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RefreshAllSensorsAction.\n         * @implements IRefreshAllSensorsAction\n         * @constructor\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         */\n        function RefreshAllSensorsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RefreshAllSensorsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction instance\n         */\n        RefreshAllSensorsAction.create = function create(properties) {\n            return new RefreshAllSensorsAction(properties);\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message, length delimited. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RefreshAllSensorsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RefreshAllSensorsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RefreshAllSensorsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RefreshAllSensorsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         */\n        RefreshAllSensorsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RefreshAllSensorsAction)\n                return object;\n            return new $root.rov_actions_proto.RefreshAllSensorsAction();\n        };\n\n        /**\n         * Creates a plain object from a RefreshAllSensorsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.RefreshAllSensorsAction} message RefreshAllSensorsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RefreshAllSensorsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RefreshAllSensorsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RefreshAllSensorsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RefreshAllSensorsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RefreshAllSensorsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RefreshAllSensorsAction\";\n        };\n\n        return RefreshAllSensorsAction;\n    })();\n\n    rov_actions_proto.MavlinkAction = (function() {\n\n        /**\n         * Properties of a MavlinkAction.\n         * @memberof rov_actions_proto\n         * @interface IMavlinkAction\n         * @property {Uint8Array|null} [Message] MavlinkAction Message\n         */\n\n        /**\n         * Constructs a new MavlinkAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MavlinkAction.\n         * @implements IMavlinkAction\n         * @constructor\n         * @param {rov_actions_proto.IMavlinkAction=} [properties] Properties to set\n         */\n        function MavlinkAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MavlinkAction Message.\n         * @member {Uint8Array} Message\n         * @memberof rov_actions_proto.MavlinkAction\n         * @instance\n         */\n        MavlinkAction.prototype.Message = $util.newBuffer([]);\n\n        /**\n         * Creates a new MavlinkAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction instance\n         */\n        MavlinkAction.create = function create(properties) {\n            return new MavlinkAction(properties);\n        };\n\n        /**\n         * Encodes the specified MavlinkAction message. Does not implicitly {@link rov_actions_proto.MavlinkAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction} message MavlinkAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MavlinkAction message, length delimited. Does not implicitly {@link rov_actions_proto.MavlinkAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction} message MavlinkAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MavlinkAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MavlinkAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.bytes();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MavlinkAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MavlinkAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MavlinkAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!(message.Message && typeof message.Message.length === \"number\" || $util.isString(message.Message)))\n                    return \"Message: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MavlinkAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         */\n        MavlinkAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MavlinkAction)\n                return object;\n            let message = new $root.rov_actions_proto.MavlinkAction();\n            if (object.Message != null)\n                if (typeof object.Message === \"string\")\n                    $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);\n                else if (object.Message.length >= 0)\n                    message.Message = object.Message;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MavlinkAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.MavlinkAction} message MavlinkAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MavlinkAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.Message = \"\";\n                else {\n                    object.Message = [];\n                    if (options.bytes !== Array)\n                        object.Message = $util.newBuffer(object.Message);\n                }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this MavlinkAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MavlinkAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MavlinkAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MavlinkAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MavlinkAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MavlinkAction\";\n        };\n\n        return MavlinkAction;\n    })();\n\n    rov_actions_proto.SimplepeerSignalAction = (function() {\n\n        /**\n         * Properties of a SimplepeerSignalAction.\n         * @memberof rov_actions_proto\n         * @interface ISimplepeerSignalAction\n         * @property {string|null} [Message] SimplepeerSignalAction Message\n         */\n\n        /**\n         * Constructs a new SimplepeerSignalAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplepeerSignalAction.\n         * @implements ISimplepeerSignalAction\n         * @constructor\n         * @param {rov_actions_proto.ISimplepeerSignalAction=} [properties] Properties to set\n         */\n        function SimplepeerSignalAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplepeerSignalAction Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @instance\n         */\n        SimplepeerSignalAction.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplepeerSignalAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction instance\n         */\n        SimplepeerSignalAction.create = function create(properties) {\n            return new SimplepeerSignalAction(properties);\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalAction message. Does not implicitly {@link rov_actions_proto.SimplepeerSignalAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction} message SimplepeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalAction message, length delimited. Does not implicitly {@link rov_actions_proto.SimplepeerSignalAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction} message SimplepeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplepeerSignalAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplepeerSignalAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplepeerSignalAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplepeerSignalAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplepeerSignalAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplepeerSignalAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         */\n        SimplepeerSignalAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplepeerSignalAction)\n                return object;\n            let message = new $root.rov_actions_proto.SimplepeerSignalAction();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplepeerSignalAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.SimplepeerSignalAction} message SimplepeerSignalAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplepeerSignalAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplepeerSignalAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplepeerSignalAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplepeerSignalAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplepeerSignalAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplepeerSignalAction\";\n        };\n\n        return SimplepeerSignalAction;\n    })();\n\n    rov_actions_proto.ActionBackendMetadata = (function() {\n\n        /**\n         * Properties of an ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IActionBackendMetadata\n         * @property {string|null} [FromUserID] ActionBackendMetadata FromUserID\n         * @property {rov_actions_proto.InternalWebpageEvent|null} [InternalWebpageEvt] ActionBackendMetadata InternalWebpageEvt\n         */\n\n        /**\n         * Constructs a new ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ActionBackendMetadata.\n         * @implements IActionBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         */\n        function ActionBackendMetadata(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ActionBackendMetadata FromUserID.\n         * @member {string} FromUserID\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.FromUserID = \"\";\n\n        /**\n         * ActionBackendMetadata InternalWebpageEvt.\n         * @member {rov_actions_proto.InternalWebpageEvent} InternalWebpageEvt\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.InternalWebpageEvt = 0;\n\n        /**\n         * Creates a new ActionBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata instance\n         */\n        ActionBackendMetadata.create = function create(properties) {\n            return new ActionBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.FromUserID != null && Object.hasOwnProperty.call(message, \"FromUserID\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.FromUserID);\n            if (message.InternalWebpageEvt != null && Object.hasOwnProperty.call(message, \"InternalWebpageEvt\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.InternalWebpageEvt);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ActionBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.FromUserID = reader.string();\n                        break;\n                    }\n                case 2: {\n                        message.InternalWebpageEvt = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ActionBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ActionBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.FromUserID != null && message.hasOwnProperty(\"FromUserID\"))\n                if (!$util.isString(message.FromUserID))\n                    return \"FromUserID: string expected\";\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                switch (message.InternalWebpageEvt) {\n                default:\n                    return \"InternalWebpageEvt: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates an ActionBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         */\n        ActionBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ActionBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ActionBackendMetadata();\n            if (object.FromUserID != null)\n                message.FromUserID = String(object.FromUserID);\n            switch (object.InternalWebpageEvt) {\n            default:\n                if (typeof object.InternalWebpageEvt === \"number\") {\n                    message.InternalWebpageEvt = object.InternalWebpageEvt;\n                    break;\n                }\n                break;\n            case \"RovConnected\":\n            case 0:\n                message.InternalWebpageEvt = 0;\n                break;\n            case \"RovDisconnected\":\n            case 1:\n                message.InternalWebpageEvt = 1;\n                break;\n            case \"UserConnected\":\n            case 2:\n                message.InternalWebpageEvt = 2;\n                break;\n            case \"UserDisconnected\":\n            case 3:\n                message.InternalWebpageEvt = 3;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ActionBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ActionBackendMetadata} message ActionBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ActionBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.FromUserID = \"\";\n                object.InternalWebpageEvt = options.enums === String ? \"RovConnected\" : 0;\n            }\n            if (message.FromUserID != null && message.hasOwnProperty(\"FromUserID\"))\n                object.FromUserID = message.FromUserID;\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                object.InternalWebpageEvt = options.enums === String ? $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] === undefined ? message.InternalWebpageEvt : $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] : message.InternalWebpageEvt;\n            return object;\n        };\n\n        /**\n         * Converts this ActionBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ActionBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ActionBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ActionBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ActionBackendMetadata\";\n        };\n\n        return ActionBackendMetadata;\n    })();\n\n    rov_actions_proto.RovAction = (function() {\n\n        /**\n         * Properties of a RovAction.\n         * @memberof rov_actions_proto\n         * @interface IRovAction\n         * @property {rov_actions_proto.IActionBackendMetadata|null} [BackendMetadata] RovAction BackendMetadata\n         * @property {number|null} [ExchangeId] RovAction ExchangeId\n         * @property {rov_actions_proto.IPingAction|null} [Ping] RovAction Ping\n         * @property {rov_actions_proto.IPasswordAttemptAction|null} [PasswordAttempt] RovAction PasswordAttempt\n         * @property {rov_actions_proto.IAuthTokenAttemptAction|null} [AuthTokenAttempt] RovAction AuthTokenAttempt\n         * @property {rov_actions_proto.ITakeControlAction|null} [TakeControl] RovAction TakeControl\n         * @property {rov_actions_proto.IMoveAction|null} [Move] RovAction Move\n         * @property {rov_actions_proto.IBeginVideoStreamAction|null} [BeginVideoStream] RovAction BeginVideoStream\n         * @property {rov_actions_proto.ITakePhotoAction|null} [TakePhoto] RovAction TakePhoto\n         * @property {rov_actions_proto.IStartVideoRecAction|null} [StartVideoRec] RovAction StartVideoRec\n         * @property {rov_actions_proto.IStopVideoRecAction|null} [StopVideoRec] RovAction StopVideoRec\n         * @property {rov_actions_proto.IToogleLightsAction|null} [ToogleLights] RovAction ToogleLights\n         * @property {rov_actions_proto.IShutdownRovAction|null} [ShutdownRov] RovAction ShutdownRov\n         * @property {rov_actions_proto.IRebootRovAction|null} [RebootRov] RovAction RebootRov\n         * @property {rov_actions_proto.IEnableWifiAction|null} [EnableWifi] RovAction EnableWifi\n         * @property {rov_actions_proto.IDisableWifiAction|null} [DisableWifi] RovAction DisableWifi\n         * @property {rov_actions_proto.IRovStatusReportAction|null} [RovStatusReport] RovAction RovStatusReport\n         * @property {rov_actions_proto.IRestartRovServicesAction|null} [RestartRovServices] RovAction RestartRovServices\n         * @property {rov_actions_proto.IRovLogsAction|null} [RovLogs] RovAction RovLogs\n         * @property {rov_actions_proto.IRefreshAllSensorsAction|null} [RefreshAllSensors] RovAction RefreshAllSensors\n         * @property {rov_actions_proto.IMavlinkAction|null} [Mavlink] RovAction Mavlink\n         * @property {rov_actions_proto.ISimplepeerSignalAction|null} [SimplepeerSignal] RovAction SimplepeerSignal\n         */\n\n        /**\n         * Constructs a new RovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovAction.\n         * @implements IRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         */\n        function RovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovAction BackendMetadata.\n         * @member {rov_actions_proto.IActionBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.BackendMetadata = null;\n\n        /**\n         * RovAction ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ExchangeId = 0;\n\n        /**\n         * RovAction Ping.\n         * @member {rov_actions_proto.IPingAction|null|undefined} Ping\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Ping = null;\n\n        /**\n         * RovAction PasswordAttempt.\n         * @member {rov_actions_proto.IPasswordAttemptAction|null|undefined} PasswordAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.PasswordAttempt = null;\n\n        /**\n         * RovAction AuthTokenAttempt.\n         * @member {rov_actions_proto.IAuthTokenAttemptAction|null|undefined} AuthTokenAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.AuthTokenAttempt = null;\n\n        /**\n         * RovAction TakeControl.\n         * @member {rov_actions_proto.ITakeControlAction|null|undefined} TakeControl\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakeControl = null;\n\n        /**\n         * RovAction Move.\n         * @member {rov_actions_proto.IMoveAction|null|undefined} Move\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Move = null;\n\n        /**\n         * RovAction BeginVideoStream.\n         * @member {rov_actions_proto.IBeginVideoStreamAction|null|undefined} BeginVideoStream\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.BeginVideoStream = null;\n\n        /**\n         * RovAction TakePhoto.\n         * @member {rov_actions_proto.ITakePhotoAction|null|undefined} TakePhoto\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakePhoto = null;\n\n        /**\n         * RovAction StartVideoRec.\n         * @member {rov_actions_proto.IStartVideoRecAction|null|undefined} StartVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StartVideoRec = null;\n\n        /**\n         * RovAction StopVideoRec.\n         * @member {rov_actions_proto.IStopVideoRecAction|null|undefined} StopVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StopVideoRec = null;\n\n        /**\n         * RovAction ToogleLights.\n         * @member {rov_actions_proto.IToogleLightsAction|null|undefined} ToogleLights\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ToogleLights = null;\n\n        /**\n         * RovAction ShutdownRov.\n         * @member {rov_actions_proto.IShutdownRovAction|null|undefined} ShutdownRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ShutdownRov = null;\n\n        /**\n         * RovAction RebootRov.\n         * @member {rov_actions_proto.IRebootRovAction|null|undefined} RebootRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RebootRov = null;\n\n        /**\n         * RovAction EnableWifi.\n         * @member {rov_actions_proto.IEnableWifiAction|null|undefined} EnableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.EnableWifi = null;\n\n        /**\n         * RovAction DisableWifi.\n         * @member {rov_actions_proto.IDisableWifiAction|null|undefined} DisableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.DisableWifi = null;\n\n        /**\n         * RovAction RovStatusReport.\n         * @member {rov_actions_proto.IRovStatusReportAction|null|undefined} RovStatusReport\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RovStatusReport = null;\n\n        /**\n         * RovAction RestartRovServices.\n         * @member {rov_actions_proto.IRestartRovServicesAction|null|undefined} RestartRovServices\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RestartRovServices = null;\n\n        /**\n         * RovAction RovLogs.\n         * @member {rov_actions_proto.IRovLogsAction|null|undefined} RovLogs\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RovLogs = null;\n\n        /**\n         * RovAction RefreshAllSensors.\n         * @member {rov_actions_proto.IRefreshAllSensorsAction|null|undefined} RefreshAllSensors\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RefreshAllSensors = null;\n\n        /**\n         * RovAction Mavlink.\n         * @member {rov_actions_proto.IMavlinkAction|null|undefined} Mavlink\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Mavlink = null;\n\n        /**\n         * RovAction SimplepeerSignal.\n         * @member {rov_actions_proto.ISimplepeerSignalAction|null|undefined} SimplepeerSignal\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SimplepeerSignal = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovAction Body.\n         * @member {\"Ping\"|\"PasswordAttempt\"|\"AuthTokenAttempt\"|\"TakeControl\"|\"Move\"|\"BeginVideoStream\"|\"TakePhoto\"|\"StartVideoRec\"|\"StopVideoRec\"|\"ToogleLights\"|\"ShutdownRov\"|\"RebootRov\"|\"EnableWifi\"|\"DisableWifi\"|\"RovStatusReport\"|\"RestartRovServices\"|\"RovLogs\"|\"RefreshAllSensors\"|\"Mavlink\"|\"SimplepeerSignal\"|undefined} Body\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        Object.defineProperty(RovAction.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Ping\", \"PasswordAttempt\", \"AuthTokenAttempt\", \"TakeControl\", \"Move\", \"BeginVideoStream\", \"TakePhoto\", \"StartVideoRec\", \"StopVideoRec\", \"ToogleLights\", \"ShutdownRov\", \"RebootRov\", \"EnableWifi\", \"DisableWifi\", \"RovStatusReport\", \"RestartRovServices\", \"RovLogs\", \"RefreshAllSensors\", \"Mavlink\", \"SimplepeerSignal\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovAction} RovAction instance\n         */\n        RovAction.create = function create(properties) {\n            return new RovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovAction message. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ActionBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Ping != null && Object.hasOwnProperty.call(message, \"Ping\"))\n                $root.rov_actions_proto.PingAction.encode(message.Ping, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.PasswordAttempt != null && Object.hasOwnProperty.call(message, \"PasswordAttempt\"))\n                $root.rov_actions_proto.PasswordAttemptAction.encode(message.PasswordAttempt, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.AuthTokenAttempt != null && Object.hasOwnProperty.call(message, \"AuthTokenAttempt\"))\n                $root.rov_actions_proto.AuthTokenAttemptAction.encode(message.AuthTokenAttempt, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.TakeControl != null && Object.hasOwnProperty.call(message, \"TakeControl\"))\n                $root.rov_actions_proto.TakeControlAction.encode(message.TakeControl, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.Move != null && Object.hasOwnProperty.call(message, \"Move\"))\n                $root.rov_actions_proto.MoveAction.encode(message.Move, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.BeginVideoStream != null && Object.hasOwnProperty.call(message, \"BeginVideoStream\"))\n                $root.rov_actions_proto.BeginVideoStreamAction.encode(message.BeginVideoStream, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.TakePhoto != null && Object.hasOwnProperty.call(message, \"TakePhoto\"))\n                $root.rov_actions_proto.TakePhotoAction.encode(message.TakePhoto, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.StartVideoRec != null && Object.hasOwnProperty.call(message, \"StartVideoRec\"))\n                $root.rov_actions_proto.StartVideoRecAction.encode(message.StartVideoRec, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.StopVideoRec != null && Object.hasOwnProperty.call(message, \"StopVideoRec\"))\n                $root.rov_actions_proto.StopVideoRecAction.encode(message.StopVideoRec, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.ToogleLights != null && Object.hasOwnProperty.call(message, \"ToogleLights\"))\n                $root.rov_actions_proto.ToogleLightsAction.encode(message.ToogleLights, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.ShutdownRov != null && Object.hasOwnProperty.call(message, \"ShutdownRov\"))\n                $root.rov_actions_proto.ShutdownRovAction.encode(message.ShutdownRov, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.RebootRov != null && Object.hasOwnProperty.call(message, \"RebootRov\"))\n                $root.rov_actions_proto.RebootRovAction.encode(message.RebootRov, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.EnableWifi != null && Object.hasOwnProperty.call(message, \"EnableWifi\"))\n                $root.rov_actions_proto.EnableWifiAction.encode(message.EnableWifi, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.DisableWifi != null && Object.hasOwnProperty.call(message, \"DisableWifi\"))\n                $root.rov_actions_proto.DisableWifiAction.encode(message.DisableWifi, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.RovStatusReport != null && Object.hasOwnProperty.call(message, \"RovStatusReport\"))\n                $root.rov_actions_proto.RovStatusReportAction.encode(message.RovStatusReport, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.RestartRovServices != null && Object.hasOwnProperty.call(message, \"RestartRovServices\"))\n                $root.rov_actions_proto.RestartRovServicesAction.encode(message.RestartRovServices, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            if (message.RovLogs != null && Object.hasOwnProperty.call(message, \"RovLogs\"))\n                $root.rov_actions_proto.RovLogsAction.encode(message.RovLogs, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n            if (message.RefreshAllSensors != null && Object.hasOwnProperty.call(message, \"RefreshAllSensors\"))\n                $root.rov_actions_proto.RefreshAllSensorsAction.encode(message.RefreshAllSensors, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n            if (message.Mavlink != null && Object.hasOwnProperty.call(message, \"Mavlink\"))\n                $root.rov_actions_proto.MavlinkAction.encode(message.Mavlink, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n            if (message.SimplepeerSignal != null && Object.hasOwnProperty.call(message, \"SimplepeerSignal\"))\n                $root.rov_actions_proto.SimplepeerSignalAction.encode(message.SimplepeerSignal, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Ping = $root.rov_actions_proto.PingAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.TakeControl = $root.rov_actions_proto.TakeControlAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.Move = $root.rov_actions_proto.MoveAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 11: {\n                        message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 12: {\n                        message.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.RebootRov = $root.rov_actions_proto.RebootRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 19: {\n                        message.RovLogs = $root.rov_actions_proto.RovLogsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 20: {\n                        message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 21: {\n                        message.Mavlink = $root.rov_actions_proto.MavlinkAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 22: {\n                        message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ActionBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PingAction.verify(message.Ping);\n                    if (error)\n                        return \"Ping.\" + error;\n                }\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAttemptAction.verify(message.PasswordAttempt);\n                    if (error)\n                        return \"PasswordAttempt.\" + error;\n                }\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.AuthTokenAttemptAction.verify(message.AuthTokenAttempt);\n                    if (error)\n                        return \"AuthTokenAttempt.\" + error;\n                }\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakeControlAction.verify(message.TakeControl);\n                    if (error)\n                        return \"TakeControl.\" + error;\n                }\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MoveAction.verify(message.Move);\n                    if (error)\n                        return \"Move.\" + error;\n                }\n            }\n            if (message.BeginVideoStream != null && message.hasOwnProperty(\"BeginVideoStream\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.BeginVideoStreamAction.verify(message.BeginVideoStream);\n                    if (error)\n                        return \"BeginVideoStream.\" + error;\n                }\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakePhotoAction.verify(message.TakePhoto);\n                    if (error)\n                        return \"TakePhoto.\" + error;\n                }\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StartVideoRecAction.verify(message.StartVideoRec);\n                    if (error)\n                        return \"StartVideoRec.\" + error;\n                }\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StopVideoRecAction.verify(message.StopVideoRec);\n                    if (error)\n                        return \"StopVideoRec.\" + error;\n                }\n            }\n            if (message.ToogleLights != null && message.hasOwnProperty(\"ToogleLights\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ToogleLightsAction.verify(message.ToogleLights);\n                    if (error)\n                        return \"ToogleLights.\" + error;\n                }\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ShutdownRovAction.verify(message.ShutdownRov);\n                    if (error)\n                        return \"ShutdownRov.\" + error;\n                }\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RebootRovAction.verify(message.RebootRov);\n                    if (error)\n                        return \"RebootRov.\" + error;\n                }\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.EnableWifiAction.verify(message.EnableWifi);\n                    if (error)\n                        return \"EnableWifi.\" + error;\n                }\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DisableWifiAction.verify(message.DisableWifi);\n                    if (error)\n                        return \"DisableWifi.\" + error;\n                }\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RovStatusReportAction.verify(message.RovStatusReport);\n                    if (error)\n                        return \"RovStatusReport.\" + error;\n                }\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RestartRovServicesAction.verify(message.RestartRovServices);\n                    if (error)\n                        return \"RestartRovServices.\" + error;\n                }\n            }\n            if (message.RovLogs != null && message.hasOwnProperty(\"RovLogs\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RovLogsAction.verify(message.RovLogs);\n                    if (error)\n                        return \"RovLogs.\" + error;\n                }\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RefreshAllSensorsAction.verify(message.RefreshAllSensors);\n                    if (error)\n                        return \"RefreshAllSensors.\" + error;\n                }\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MavlinkAction.verify(message.Mavlink);\n                    if (error)\n                        return \"Mavlink.\" + error;\n                }\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplepeerSignalAction.verify(message.SimplepeerSignal);\n                    if (error)\n                        return \"SimplepeerSignal.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovAction} RovAction\n         */\n        RovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovAction)\n                return object;\n            let message = new $root.rov_actions_proto.RovAction();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Ping != null) {\n                if (typeof object.Ping !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Ping: object expected\");\n                message.Ping = $root.rov_actions_proto.PingAction.fromObject(object.Ping);\n            }\n            if (object.PasswordAttempt != null) {\n                if (typeof object.PasswordAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.PasswordAttempt: object expected\");\n                message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.fromObject(object.PasswordAttempt);\n            }\n            if (object.AuthTokenAttempt != null) {\n                if (typeof object.AuthTokenAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.AuthTokenAttempt: object expected\");\n                message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.fromObject(object.AuthTokenAttempt);\n            }\n            if (object.TakeControl != null) {\n                if (typeof object.TakeControl !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakeControl: object expected\");\n                message.TakeControl = $root.rov_actions_proto.TakeControlAction.fromObject(object.TakeControl);\n            }\n            if (object.Move != null) {\n                if (typeof object.Move !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Move: object expected\");\n                message.Move = $root.rov_actions_proto.MoveAction.fromObject(object.Move);\n            }\n            if (object.BeginVideoStream != null) {\n                if (typeof object.BeginVideoStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.BeginVideoStream: object expected\");\n                message.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.fromObject(object.BeginVideoStream);\n            }\n            if (object.TakePhoto != null) {\n                if (typeof object.TakePhoto !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakePhoto: object expected\");\n                message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.fromObject(object.TakePhoto);\n            }\n            if (object.StartVideoRec != null) {\n                if (typeof object.StartVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StartVideoRec: object expected\");\n                message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.fromObject(object.StartVideoRec);\n            }\n            if (object.StopVideoRec != null) {\n                if (typeof object.StopVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StopVideoRec: object expected\");\n                message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.fromObject(object.StopVideoRec);\n            }\n            if (object.ToogleLights != null) {\n                if (typeof object.ToogleLights !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ToogleLights: object expected\");\n                message.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.fromObject(object.ToogleLights);\n            }\n            if (object.ShutdownRov != null) {\n                if (typeof object.ShutdownRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ShutdownRov: object expected\");\n                message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.fromObject(object.ShutdownRov);\n            }\n            if (object.RebootRov != null) {\n                if (typeof object.RebootRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RebootRov: object expected\");\n                message.RebootRov = $root.rov_actions_proto.RebootRovAction.fromObject(object.RebootRov);\n            }\n            if (object.EnableWifi != null) {\n                if (typeof object.EnableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.EnableWifi: object expected\");\n                message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.fromObject(object.EnableWifi);\n            }\n            if (object.DisableWifi != null) {\n                if (typeof object.DisableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.DisableWifi: object expected\");\n                message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.fromObject(object.DisableWifi);\n            }\n            if (object.RovStatusReport != null) {\n                if (typeof object.RovStatusReport !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RovStatusReport: object expected\");\n                message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.fromObject(object.RovStatusReport);\n            }\n            if (object.RestartRovServices != null) {\n                if (typeof object.RestartRovServices !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RestartRovServices: object expected\");\n                message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.fromObject(object.RestartRovServices);\n            }\n            if (object.RovLogs != null) {\n                if (typeof object.RovLogs !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RovLogs: object expected\");\n                message.RovLogs = $root.rov_actions_proto.RovLogsAction.fromObject(object.RovLogs);\n            }\n            if (object.RefreshAllSensors != null) {\n                if (typeof object.RefreshAllSensors !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RefreshAllSensors: object expected\");\n                message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.fromObject(object.RefreshAllSensors);\n            }\n            if (object.Mavlink != null) {\n                if (typeof object.Mavlink !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Mavlink: object expected\");\n                message.Mavlink = $root.rov_actions_proto.MavlinkAction.fromObject(object.Mavlink);\n            }\n            if (object.SimplepeerSignal != null) {\n                if (typeof object.SimplepeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SimplepeerSignal: object expected\");\n                message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.fromObject(object.SimplepeerSignal);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.RovAction} message RovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                object.Ping = $root.rov_actions_proto.PingAction.toObject(message.Ping, options);\n                if (options.oneofs)\n                    object.Body = \"Ping\";\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                object.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.toObject(message.PasswordAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAttempt\";\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                object.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.toObject(message.AuthTokenAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"AuthTokenAttempt\";\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                object.TakeControl = $root.rov_actions_proto.TakeControlAction.toObject(message.TakeControl, options);\n                if (options.oneofs)\n                    object.Body = \"TakeControl\";\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                object.Move = $root.rov_actions_proto.MoveAction.toObject(message.Move, options);\n                if (options.oneofs)\n                    object.Body = \"Move\";\n            }\n            if (message.BeginVideoStream != null && message.hasOwnProperty(\"BeginVideoStream\")) {\n                object.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.toObject(message.BeginVideoStream, options);\n                if (options.oneofs)\n                    object.Body = \"BeginVideoStream\";\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                object.TakePhoto = $root.rov_actions_proto.TakePhotoAction.toObject(message.TakePhoto, options);\n                if (options.oneofs)\n                    object.Body = \"TakePhoto\";\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                object.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.toObject(message.StartVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StartVideoRec\";\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                object.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.toObject(message.StopVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StopVideoRec\";\n            }\n            if (message.ToogleLights != null && message.hasOwnProperty(\"ToogleLights\")) {\n                object.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.toObject(message.ToogleLights, options);\n                if (options.oneofs)\n                    object.Body = \"ToogleLights\";\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                object.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.toObject(message.ShutdownRov, options);\n                if (options.oneofs)\n                    object.Body = \"ShutdownRov\";\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                object.RebootRov = $root.rov_actions_proto.RebootRovAction.toObject(message.RebootRov, options);\n                if (options.oneofs)\n                    object.Body = \"RebootRov\";\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                object.EnableWifi = $root.rov_actions_proto.EnableWifiAction.toObject(message.EnableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"EnableWifi\";\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                object.DisableWifi = $root.rov_actions_proto.DisableWifiAction.toObject(message.DisableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"DisableWifi\";\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                object.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.toObject(message.RovStatusReport, options);\n                if (options.oneofs)\n                    object.Body = \"RovStatusReport\";\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                object.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.toObject(message.RestartRovServices, options);\n                if (options.oneofs)\n                    object.Body = \"RestartRovServices\";\n            }\n            if (message.RovLogs != null && message.hasOwnProperty(\"RovLogs\")) {\n                object.RovLogs = $root.rov_actions_proto.RovLogsAction.toObject(message.RovLogs, options);\n                if (options.oneofs)\n                    object.Body = \"RovLogs\";\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                object.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.toObject(message.RefreshAllSensors, options);\n                if (options.oneofs)\n                    object.Body = \"RefreshAllSensors\";\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                object.Mavlink = $root.rov_actions_proto.MavlinkAction.toObject(message.Mavlink, options);\n                if (options.oneofs)\n                    object.Body = \"Mavlink\";\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                object.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.toObject(message.SimplepeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplepeerSignal\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovAction\";\n        };\n\n        return RovAction;\n    })();\n\n    rov_actions_proto.DoneResponse = (function() {\n\n        /**\n         * Properties of a DoneResponse.\n         * @memberof rov_actions_proto\n         * @interface IDoneResponse\n         * @property {string|null} [Message] DoneResponse Message\n         */\n\n        /**\n         * Constructs a new DoneResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DoneResponse.\n         * @implements IDoneResponse\n         * @constructor\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         */\n        function DoneResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DoneResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         */\n        DoneResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new DoneResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse instance\n         */\n        DoneResponse.create = function create(properties) {\n            return new DoneResponse(properties);\n        };\n\n        /**\n         * Encodes the specified DoneResponse message. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DoneResponse message, length delimited. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DoneResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DoneResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DoneResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DoneResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         */\n        DoneResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DoneResponse)\n                return object;\n            let message = new $root.rov_actions_proto.DoneResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a DoneResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.DoneResponse} message DoneResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DoneResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this DoneResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DoneResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DoneResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DoneResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DoneResponse\";\n        };\n\n        return DoneResponse;\n    })();\n\n    rov_actions_proto.ErrorResponse = (function() {\n\n        /**\n         * Properties of an ErrorResponse.\n         * @memberof rov_actions_proto\n         * @interface IErrorResponse\n         * @property {string|null} [Message] ErrorResponse Message\n         */\n\n        /**\n         * Constructs a new ErrorResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ErrorResponse.\n         * @implements IErrorResponse\n         * @constructor\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         */\n        function ErrorResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ErrorResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         */\n        ErrorResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ErrorResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse instance\n         */\n        ErrorResponse.create = function create(properties) {\n            return new ErrorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ErrorResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ErrorResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ErrorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an ErrorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         */\n        ErrorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ErrorResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ErrorResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ErrorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.ErrorResponse} message ErrorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ErrorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ErrorResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ErrorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ErrorResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ErrorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ErrorResponse\";\n        };\n\n        return ErrorResponse;\n    })();\n\n    rov_actions_proto.PongResponse = (function() {\n\n        /**\n         * Properties of a PongResponse.\n         * @memberof rov_actions_proto\n         * @interface IPongResponse\n         * @property {number|Long|null} [Time] PongResponse Time\n         */\n\n        /**\n         * Constructs a new PongResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PongResponse.\n         * @implements IPongResponse\n         * @constructor\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         */\n        function PongResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PongResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         */\n        PongResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PongResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PongResponse} PongResponse instance\n         */\n        PongResponse.create = function create(properties) {\n            return new PongResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PongResponse message. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PongResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PongResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PongResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PongResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PongResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         */\n        PongResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PongResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PongResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PongResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.PongResponse} message PongResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PongResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PongResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PongResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PongResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PongResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PongResponse\";\n        };\n\n        return PongResponse;\n    })();\n\n    rov_actions_proto.SensorUpdatesResponse = (function() {\n\n        /**\n         * Properties of a SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @interface ISensorUpdatesResponse\n         * @property {Array.<rov_actions_proto.IMeasurement>|null} [MeasurementUpdates] SensorUpdatesResponse MeasurementUpdates\n         */\n\n        /**\n         * Constructs a new SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SensorUpdatesResponse.\n         * @implements ISensorUpdatesResponse\n         * @constructor\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         */\n        function SensorUpdatesResponse(properties) {\n            this.MeasurementUpdates = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SensorUpdatesResponse MeasurementUpdates.\n         * @member {Array.<rov_actions_proto.IMeasurement>} MeasurementUpdates\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         */\n        SensorUpdatesResponse.prototype.MeasurementUpdates = $util.emptyArray;\n\n        /**\n         * Creates a new SensorUpdatesResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse instance\n         */\n        SensorUpdatesResponse.create = function create(properties) {\n            return new SensorUpdatesResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementUpdates != null && message.MeasurementUpdates.length)\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i)\n                    $root.rov_actions_proto.Measurement.encode(message.MeasurementUpdates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.MeasurementUpdates && message.MeasurementUpdates.length))\n                            message.MeasurementUpdates = [];\n                        message.MeasurementUpdates.push($root.rov_actions_proto.Measurement.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SensorUpdatesResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SensorUpdatesResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementUpdates != null && message.hasOwnProperty(\"MeasurementUpdates\")) {\n                if (!Array.isArray(message.MeasurementUpdates))\n                    return \"MeasurementUpdates: array expected\";\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i) {\n                    let error = $root.rov_actions_proto.Measurement.verify(message.MeasurementUpdates[i]);\n                    if (error)\n                        return \"MeasurementUpdates.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SensorUpdatesResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         */\n        SensorUpdatesResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SensorUpdatesResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            if (object.MeasurementUpdates) {\n                if (!Array.isArray(object.MeasurementUpdates))\n                    throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: array expected\");\n                message.MeasurementUpdates = [];\n                for (let i = 0; i < object.MeasurementUpdates.length; ++i) {\n                    if (typeof object.MeasurementUpdates[i] !== \"object\")\n                        throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: object expected\");\n                    message.MeasurementUpdates[i] = $root.rov_actions_proto.Measurement.fromObject(object.MeasurementUpdates[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SensorUpdatesResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.SensorUpdatesResponse} message SensorUpdatesResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SensorUpdatesResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.MeasurementUpdates = [];\n            if (message.MeasurementUpdates && message.MeasurementUpdates.length) {\n                object.MeasurementUpdates = [];\n                for (let j = 0; j < message.MeasurementUpdates.length; ++j)\n                    object.MeasurementUpdates[j] = $root.rov_actions_proto.Measurement.toObject(message.MeasurementUpdates[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SensorUpdatesResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SensorUpdatesResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SensorUpdatesResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SensorUpdatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SensorUpdatesResponse\";\n        };\n\n        return SensorUpdatesResponse;\n    })();\n\n    rov_actions_proto.PasswordRequiredResponse = (function() {\n\n        /**\n         * Properties of a PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordRequiredResponse\n         * @property {string|null} [RovId] PasswordRequiredResponse RovId\n         */\n\n        /**\n         * Constructs a new PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordRequiredResponse.\n         * @implements IPasswordRequiredResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         */\n        function PasswordRequiredResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordRequiredResponse RovId.\n         * @member {string} RovId\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         */\n        PasswordRequiredResponse.prototype.RovId = \"\";\n\n        /**\n         * Creates a new PasswordRequiredResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse instance\n         */\n        PasswordRequiredResponse.create = function create(properties) {\n            return new PasswordRequiredResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RovId != null && Object.hasOwnProperty.call(message, \"RovId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.RovId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.RovId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordRequiredResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordRequiredResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                if (!$util.isString(message.RovId))\n                    return \"RovId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordRequiredResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         */\n        PasswordRequiredResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordRequiredResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            if (object.RovId != null)\n                message.RovId = String(object.RovId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordRequiredResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.PasswordRequiredResponse} message PasswordRequiredResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordRequiredResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.RovId = \"\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                object.RovId = message.RovId;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordRequiredResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordRequiredResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordRequiredResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordRequiredResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordRequiredResponse\";\n        };\n\n        return PasswordRequiredResponse;\n    })();\n\n    rov_actions_proto.PasswordAcceptedResponse = (function() {\n\n        /**\n         * Properties of a PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAcceptedResponse\n         * @property {string|null} [AuthToken] PasswordAcceptedResponse AuthToken\n         */\n\n        /**\n         * Constructs a new PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAcceptedResponse.\n         * @implements IPasswordAcceptedResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         */\n        function PasswordAcceptedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAcceptedResponse AuthToken.\n         * @member {string} AuthToken\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         */\n        PasswordAcceptedResponse.prototype.AuthToken = \"\";\n\n        /**\n         * Creates a new PasswordAcceptedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse instance\n         */\n        PasswordAcceptedResponse.create = function create(properties) {\n            return new PasswordAcceptedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.AuthToken != null && Object.hasOwnProperty.call(message, \"AuthToken\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.AuthToken);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.AuthToken = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAcceptedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAcceptedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                if (!$util.isString(message.AuthToken))\n                    return \"AuthToken: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAcceptedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         */\n        PasswordAcceptedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAcceptedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            if (object.AuthToken != null)\n                message.AuthToken = String(object.AuthToken);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAcceptedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.PasswordAcceptedResponse} message PasswordAcceptedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAcceptedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.AuthToken = \"\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                object.AuthToken = message.AuthToken;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAcceptedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAcceptedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAcceptedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAcceptedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAcceptedResponse\";\n        };\n\n        return PasswordAcceptedResponse;\n    })();\n\n    rov_actions_proto.PasswordInvalidResponse = (function() {\n\n        /**\n         * Properties of a PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordInvalidResponse\n         */\n\n        /**\n         * Constructs a new PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordInvalidResponse.\n         * @implements IPasswordInvalidResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         */\n        function PasswordInvalidResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new PasswordInvalidResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse instance\n         */\n        PasswordInvalidResponse.create = function create(properties) {\n            return new PasswordInvalidResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordInvalidResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordInvalidResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordInvalidResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordInvalidResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         */\n        PasswordInvalidResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordInvalidResponse)\n                return object;\n            return new $root.rov_actions_proto.PasswordInvalidResponse();\n        };\n\n        /**\n         * Creates a plain object from a PasswordInvalidResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.PasswordInvalidResponse} message PasswordInvalidResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordInvalidResponse.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this PasswordInvalidResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordInvalidResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordInvalidResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordInvalidResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordInvalidResponse\";\n        };\n\n        return PasswordInvalidResponse;\n    })();\n\n    rov_actions_proto.DriverChangedResponse = (function() {\n\n        /**\n         * Properties of a DriverChangedResponse.\n         * @memberof rov_actions_proto\n         * @interface IDriverChangedResponse\n         * @property {string|null} [DriverPeerId] DriverChangedResponse DriverPeerId\n         */\n\n        /**\n         * Constructs a new DriverChangedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DriverChangedResponse.\n         * @implements IDriverChangedResponse\n         * @constructor\n         * @param {rov_actions_proto.IDriverChangedResponse=} [properties] Properties to set\n         */\n        function DriverChangedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DriverChangedResponse DriverPeerId.\n         * @member {string} DriverPeerId\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @instance\n         */\n        DriverChangedResponse.prototype.DriverPeerId = \"\";\n\n        /**\n         * Creates a new DriverChangedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse instance\n         */\n        DriverChangedResponse.create = function create(properties) {\n            return new DriverChangedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified DriverChangedResponse message. Does not implicitly {@link rov_actions_proto.DriverChangedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse} message DriverChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DriverChangedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.DriverPeerId != null && Object.hasOwnProperty.call(message, \"DriverPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.DriverPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DriverChangedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.DriverChangedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse} message DriverChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DriverChangedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DriverChangedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DriverChangedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DriverChangedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.DriverPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DriverChangedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DriverChangedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DriverChangedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DriverChangedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.DriverPeerId != null && message.hasOwnProperty(\"DriverPeerId\"))\n                if (!$util.isString(message.DriverPeerId))\n                    return \"DriverPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DriverChangedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         */\n        DriverChangedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DriverChangedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.DriverChangedResponse();\n            if (object.DriverPeerId != null)\n                message.DriverPeerId = String(object.DriverPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a DriverChangedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.DriverChangedResponse} message DriverChangedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DriverChangedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.DriverPeerId = \"\";\n            if (message.DriverPeerId != null && message.hasOwnProperty(\"DriverPeerId\"))\n                object.DriverPeerId = message.DriverPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this DriverChangedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DriverChangedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DriverChangedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DriverChangedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DriverChangedResponse\";\n        };\n\n        return DriverChangedResponse;\n    })();\n\n    rov_actions_proto.ClientConnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientConnectedResponse\n         * @property {string|null} [ClientPeerId] ClientConnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientConnectedResponse.\n         * @implements IClientConnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         */\n        function ClientConnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientConnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         */\n        ClientConnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientConnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse instance\n         */\n        ClientConnectedResponse.create = function create(properties) {\n            return new ClientConnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientConnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientConnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientConnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientConnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         */\n        ClientConnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientConnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientConnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientConnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientConnectedResponse} message ClientConnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientConnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientConnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientConnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientConnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientConnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientConnectedResponse\";\n        };\n\n        return ClientConnectedResponse;\n    })();\n\n    rov_actions_proto.ClientDisconnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientDisconnectedResponse\n         * @property {string|null} [ClientPeerId] ClientDisconnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientDisconnectedResponse.\n         * @implements IClientDisconnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         */\n        function ClientDisconnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientDisconnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         */\n        ClientDisconnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientDisconnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse instance\n         */\n        ClientDisconnectedResponse.create = function create(properties) {\n            return new ClientDisconnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientDisconnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientDisconnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientDisconnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         */\n        ClientDisconnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientDisconnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientDisconnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientDisconnectedResponse} message ClientDisconnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientDisconnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientDisconnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientDisconnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientDisconnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientDisconnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientDisconnectedResponse\";\n        };\n\n        return ClientDisconnectedResponse;\n    })();\n\n    rov_actions_proto.HeartbeatResponse = (function() {\n\n        /**\n         * Properties of a HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @interface IHeartbeatResponse\n         * @property {number|Long|null} [Time] HeartbeatResponse Time\n         */\n\n        /**\n         * Constructs a new HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a HeartbeatResponse.\n         * @implements IHeartbeatResponse\n         * @constructor\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         */\n        function HeartbeatResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * HeartbeatResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         */\n        HeartbeatResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new HeartbeatResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse instance\n         */\n        HeartbeatResponse.create = function create(properties) {\n            return new HeartbeatResponse(properties);\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message, length delimited. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.HeartbeatResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a HeartbeatResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        HeartbeatResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a HeartbeatResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         */\n        HeartbeatResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.HeartbeatResponse)\n                return object;\n            let message = new $root.rov_actions_proto.HeartbeatResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a HeartbeatResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.HeartbeatResponse} message HeartbeatResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        HeartbeatResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this HeartbeatResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        HeartbeatResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for HeartbeatResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        HeartbeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.HeartbeatResponse\";\n        };\n\n        return HeartbeatResponse;\n    })();\n\n    rov_actions_proto.ContinuedOutputResponse = (function() {\n\n        /**\n         * Properties of a ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @interface IContinuedOutputResponse\n         * @property {string|null} [Message] ContinuedOutputResponse Message\n         */\n\n        /**\n         * Constructs a new ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ContinuedOutputResponse.\n         * @implements IContinuedOutputResponse\n         * @constructor\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         */\n        function ContinuedOutputResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ContinuedOutputResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         */\n        ContinuedOutputResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ContinuedOutputResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse instance\n         */\n        ContinuedOutputResponse.create = function create(properties) {\n            return new ContinuedOutputResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ContinuedOutputResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ContinuedOutputResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ContinuedOutputResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         */\n        ContinuedOutputResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ContinuedOutputResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ContinuedOutputResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.ContinuedOutputResponse} message ContinuedOutputResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ContinuedOutputResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ContinuedOutputResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ContinuedOutputResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ContinuedOutputResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ContinuedOutputResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ContinuedOutputResponse\";\n        };\n\n        return ContinuedOutputResponse;\n    })();\n\n    rov_actions_proto.MavlinkResponse = (function() {\n\n        /**\n         * Properties of a MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @interface IMavlinkResponse\n         * @property {Uint8Array|null} [Message] MavlinkResponse Message\n         */\n\n        /**\n         * Constructs a new MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MavlinkResponse.\n         * @implements IMavlinkResponse\n         * @constructor\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         */\n        function MavlinkResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MavlinkResponse Message.\n         * @member {Uint8Array} Message\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         */\n        MavlinkResponse.prototype.Message = $util.newBuffer([]);\n\n        /**\n         * Creates a new MavlinkResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse instance\n         */\n        MavlinkResponse.create = function create(properties) {\n            return new MavlinkResponse(properties);\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message, length delimited. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MavlinkResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.bytes();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MavlinkResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MavlinkResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!(message.Message && typeof message.Message.length === \"number\" || $util.isString(message.Message)))\n                    return \"Message: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MavlinkResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         */\n        MavlinkResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MavlinkResponse)\n                return object;\n            let message = new $root.rov_actions_proto.MavlinkResponse();\n            if (object.Message != null)\n                if (typeof object.Message === \"string\")\n                    $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);\n                else if (object.Message.length >= 0)\n                    message.Message = object.Message;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MavlinkResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.MavlinkResponse} message MavlinkResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MavlinkResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.Message = \"\";\n                else {\n                    object.Message = [];\n                    if (options.bytes !== Array)\n                        object.Message = $util.newBuffer(object.Message);\n                }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this MavlinkResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MavlinkResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MavlinkResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MavlinkResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MavlinkResponse\";\n        };\n\n        return MavlinkResponse;\n    })();\n\n    rov_actions_proto.SimplepeerSignalResponse = (function() {\n\n        /**\n         * Properties of a SimplepeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @interface ISimplepeerSignalResponse\n         * @property {string|null} [Message] SimplepeerSignalResponse Message\n         */\n\n        /**\n         * Constructs a new SimplepeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplepeerSignalResponse.\n         * @implements ISimplepeerSignalResponse\n         * @constructor\n         * @param {rov_actions_proto.ISimplepeerSignalResponse=} [properties] Properties to set\n         */\n        function SimplepeerSignalResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplepeerSignalResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @instance\n         */\n        SimplepeerSignalResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplepeerSignalResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse instance\n         */\n        SimplepeerSignalResponse.create = function create(properties) {\n            return new SimplepeerSignalResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalResponse message. Does not implicitly {@link rov_actions_proto.SimplepeerSignalResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse} message SimplepeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SimplepeerSignalResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse} message SimplepeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplepeerSignalResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplepeerSignalResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplepeerSignalResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplepeerSignalResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplepeerSignalResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplepeerSignalResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         */\n        SimplepeerSignalResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplepeerSignalResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SimplepeerSignalResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplepeerSignalResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.SimplepeerSignalResponse} message SimplepeerSignalResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplepeerSignalResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplepeerSignalResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplepeerSignalResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplepeerSignalResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplepeerSignalResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplepeerSignalResponse\";\n        };\n\n        return SimplepeerSignalResponse;\n    })();\n\n    rov_actions_proto.ResponseBackendMetadata = (function() {\n\n        /**\n         * Properties of a ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IResponseBackendMetadata\n         * @property {Array.<string>|null} [TargetUserIDs] ResponseBackendMetadata TargetUserIDs\n         * @property {rov_actions_proto.DataTransportMethod|null} [TransportMethod] ResponseBackendMetadata TransportMethod\n         */\n\n        /**\n         * Constructs a new ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ResponseBackendMetadata.\n         * @implements IResponseBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         */\n        function ResponseBackendMetadata(properties) {\n            this.TargetUserIDs = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ResponseBackendMetadata TargetUserIDs.\n         * @member {Array.<string>} TargetUserIDs\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TargetUserIDs = $util.emptyArray;\n\n        /**\n         * ResponseBackendMetadata TransportMethod.\n         * @member {rov_actions_proto.DataTransportMethod} TransportMethod\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TransportMethod = 0;\n\n        /**\n         * Creates a new ResponseBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata instance\n         */\n        ResponseBackendMetadata.create = function create(properties) {\n            return new ResponseBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.TargetUserIDs != null && message.TargetUserIDs.length)\n                for (let i = 0; i < message.TargetUserIDs.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.TargetUserIDs[i]);\n            if (message.TransportMethod != null && Object.hasOwnProperty.call(message, \"TransportMethod\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.TransportMethod);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.TargetUserIDs && message.TargetUserIDs.length))\n                            message.TargetUserIDs = [];\n                        message.TargetUserIDs.push(reader.string());\n                        break;\n                    }\n                case 2: {\n                        message.TransportMethod = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ResponseBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ResponseBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.TargetUserIDs != null && message.hasOwnProperty(\"TargetUserIDs\")) {\n                if (!Array.isArray(message.TargetUserIDs))\n                    return \"TargetUserIDs: array expected\";\n                for (let i = 0; i < message.TargetUserIDs.length; ++i)\n                    if (!$util.isString(message.TargetUserIDs[i]))\n                        return \"TargetUserIDs: string[] expected\";\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                switch (message.TransportMethod) {\n                default:\n                    return \"TransportMethod: enum value expected\";\n                case 0:\n                case 1:\n                case 3:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a ResponseBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         */\n        ResponseBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ResponseBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            if (object.TargetUserIDs) {\n                if (!Array.isArray(object.TargetUserIDs))\n                    throw TypeError(\".rov_actions_proto.ResponseBackendMetadata.TargetUserIDs: array expected\");\n                message.TargetUserIDs = [];\n                for (let i = 0; i < object.TargetUserIDs.length; ++i)\n                    message.TargetUserIDs[i] = String(object.TargetUserIDs[i]);\n            }\n            switch (object.TransportMethod) {\n            default:\n                if (typeof object.TransportMethod === \"number\") {\n                    message.TransportMethod = object.TransportMethod;\n                    break;\n                }\n                break;\n            case \"LivekitReliable\":\n            case 0:\n                message.TransportMethod = 0;\n                break;\n            case \"LivekitUnreliable\":\n            case 1:\n                message.TransportMethod = 1;\n                break;\n            case \"DirectUnreliable\":\n            case 3:\n                message.TransportMethod = 3;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ResponseBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ResponseBackendMetadata} message ResponseBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ResponseBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.TargetUserIDs = [];\n            if (options.defaults)\n                object.TransportMethod = options.enums === String ? \"LivekitReliable\" : 0;\n            if (message.TargetUserIDs && message.TargetUserIDs.length) {\n                object.TargetUserIDs = [];\n                for (let j = 0; j < message.TargetUserIDs.length; ++j)\n                    object.TargetUserIDs[j] = message.TargetUserIDs[j];\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                object.TransportMethod = options.enums === String ? $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] === undefined ? message.TransportMethod : $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] : message.TransportMethod;\n            return object;\n        };\n\n        /**\n         * Converts this ResponseBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ResponseBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ResponseBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ResponseBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ResponseBackendMetadata\";\n        };\n\n        return ResponseBackendMetadata;\n    })();\n\n    rov_actions_proto.RovResponse = (function() {\n\n        /**\n         * Properties of a RovResponse.\n         * @memberof rov_actions_proto\n         * @interface IRovResponse\n         * @property {rov_actions_proto.IResponseBackendMetadata|null} [BackendMetadata] RovResponse BackendMetadata\n         * @property {number|null} [ExchangeId] RovResponse ExchangeId\n         * @property {rov_actions_proto.IDoneResponse|null} [Done] RovResponse Done\n         * @property {rov_actions_proto.IErrorResponse|null} [Error] RovResponse Error\n         * @property {rov_actions_proto.IPongResponse|null} [Pong] RovResponse Pong\n         * @property {rov_actions_proto.IContinuedOutputResponse|null} [ContinuedOutput] RovResponse ContinuedOutput\n         * @property {rov_actions_proto.ISensorUpdatesResponse|null} [SensorUpdates] RovResponse SensorUpdates\n         * @property {rov_actions_proto.IPasswordRequiredResponse|null} [PasswordRequired] RovResponse PasswordRequired\n         * @property {rov_actions_proto.IPasswordAcceptedResponse|null} [PasswordAccepted] RovResponse PasswordAccepted\n         * @property {rov_actions_proto.IPasswordInvalidResponse|null} [PasswordInvalid] RovResponse PasswordInvalid\n         * @property {rov_actions_proto.IDriverChangedResponse|null} [DriverChanged] RovResponse DriverChanged\n         * @property {rov_actions_proto.IClientConnectedResponse|null} [ClientConnected] RovResponse ClientConnected\n         * @property {rov_actions_proto.IClientDisconnectedResponse|null} [ClientDisconnected] RovResponse ClientDisconnected\n         * @property {rov_actions_proto.IHeartbeatResponse|null} [Heartbeat] RovResponse Heartbeat\n         * @property {rov_actions_proto.IMavlinkResponse|null} [Mavlink] RovResponse Mavlink\n         * @property {rov_actions_proto.ISimplepeerSignalResponse|null} [SimplepeerSignal] RovResponse SimplepeerSignal\n         */\n\n        /**\n         * Constructs a new RovResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovResponse.\n         * @implements IRovResponse\n         * @constructor\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         */\n        function RovResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovResponse BackendMetadata.\n         * @member {rov_actions_proto.IResponseBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.BackendMetadata = null;\n\n        /**\n         * RovResponse ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ExchangeId = 0;\n\n        /**\n         * RovResponse Done.\n         * @member {rov_actions_proto.IDoneResponse|null|undefined} Done\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Done = null;\n\n        /**\n         * RovResponse Error.\n         * @member {rov_actions_proto.IErrorResponse|null|undefined} Error\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Error = null;\n\n        /**\n         * RovResponse Pong.\n         * @member {rov_actions_proto.IPongResponse|null|undefined} Pong\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Pong = null;\n\n        /**\n         * RovResponse ContinuedOutput.\n         * @member {rov_actions_proto.IContinuedOutputResponse|null|undefined} ContinuedOutput\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ContinuedOutput = null;\n\n        /**\n         * RovResponse SensorUpdates.\n         * @member {rov_actions_proto.ISensorUpdatesResponse|null|undefined} SensorUpdates\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SensorUpdates = null;\n\n        /**\n         * RovResponse PasswordRequired.\n         * @member {rov_actions_proto.IPasswordRequiredResponse|null|undefined} PasswordRequired\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordRequired = null;\n\n        /**\n         * RovResponse PasswordAccepted.\n         * @member {rov_actions_proto.IPasswordAcceptedResponse|null|undefined} PasswordAccepted\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordAccepted = null;\n\n        /**\n         * RovResponse PasswordInvalid.\n         * @member {rov_actions_proto.IPasswordInvalidResponse|null|undefined} PasswordInvalid\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordInvalid = null;\n\n        /**\n         * RovResponse DriverChanged.\n         * @member {rov_actions_proto.IDriverChangedResponse|null|undefined} DriverChanged\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.DriverChanged = null;\n\n        /**\n         * RovResponse ClientConnected.\n         * @member {rov_actions_proto.IClientConnectedResponse|null|undefined} ClientConnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientConnected = null;\n\n        /**\n         * RovResponse ClientDisconnected.\n         * @member {rov_actions_proto.IClientDisconnectedResponse|null|undefined} ClientDisconnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientDisconnected = null;\n\n        /**\n         * RovResponse Heartbeat.\n         * @member {rov_actions_proto.IHeartbeatResponse|null|undefined} Heartbeat\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Heartbeat = null;\n\n        /**\n         * RovResponse Mavlink.\n         * @member {rov_actions_proto.IMavlinkResponse|null|undefined} Mavlink\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Mavlink = null;\n\n        /**\n         * RovResponse SimplepeerSignal.\n         * @member {rov_actions_proto.ISimplepeerSignalResponse|null|undefined} SimplepeerSignal\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SimplepeerSignal = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovResponse Body.\n         * @member {\"Done\"|\"Error\"|\"Pong\"|\"ContinuedOutput\"|\"SensorUpdates\"|\"PasswordRequired\"|\"PasswordAccepted\"|\"PasswordInvalid\"|\"DriverChanged\"|\"ClientConnected\"|\"ClientDisconnected\"|\"Heartbeat\"|\"Mavlink\"|\"SimplepeerSignal\"|undefined} Body\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        Object.defineProperty(RovResponse.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Done\", \"Error\", \"Pong\", \"ContinuedOutput\", \"SensorUpdates\", \"PasswordRequired\", \"PasswordAccepted\", \"PasswordInvalid\", \"DriverChanged\", \"ClientConnected\", \"ClientDisconnected\", \"Heartbeat\", \"Mavlink\", \"SimplepeerSignal\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovResponse} RovResponse instance\n         */\n        RovResponse.create = function create(properties) {\n            return new RovResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RovResponse message. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ResponseBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Done != null && Object.hasOwnProperty.call(message, \"Done\"))\n                $root.rov_actions_proto.DoneResponse.encode(message.Done, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\n                $root.rov_actions_proto.ErrorResponse.encode(message.Error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.Pong != null && Object.hasOwnProperty.call(message, \"Pong\"))\n                $root.rov_actions_proto.PongResponse.encode(message.Pong, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.ContinuedOutput != null && Object.hasOwnProperty.call(message, \"ContinuedOutput\"))\n                $root.rov_actions_proto.ContinuedOutputResponse.encode(message.ContinuedOutput, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.SensorUpdates != null && Object.hasOwnProperty.call(message, \"SensorUpdates\"))\n                $root.rov_actions_proto.SensorUpdatesResponse.encode(message.SensorUpdates, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.PasswordRequired != null && Object.hasOwnProperty.call(message, \"PasswordRequired\"))\n                $root.rov_actions_proto.PasswordRequiredResponse.encode(message.PasswordRequired, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.PasswordAccepted != null && Object.hasOwnProperty.call(message, \"PasswordAccepted\"))\n                $root.rov_actions_proto.PasswordAcceptedResponse.encode(message.PasswordAccepted, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.PasswordInvalid != null && Object.hasOwnProperty.call(message, \"PasswordInvalid\"))\n                $root.rov_actions_proto.PasswordInvalidResponse.encode(message.PasswordInvalid, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.DriverChanged != null && Object.hasOwnProperty.call(message, \"DriverChanged\"))\n                $root.rov_actions_proto.DriverChangedResponse.encode(message.DriverChanged, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.ClientConnected != null && Object.hasOwnProperty.call(message, \"ClientConnected\"))\n                $root.rov_actions_proto.ClientConnectedResponse.encode(message.ClientConnected, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.ClientDisconnected != null && Object.hasOwnProperty.call(message, \"ClientDisconnected\"))\n                $root.rov_actions_proto.ClientDisconnectedResponse.encode(message.ClientDisconnected, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.Heartbeat != null && Object.hasOwnProperty.call(message, \"Heartbeat\"))\n                $root.rov_actions_proto.HeartbeatResponse.encode(message.Heartbeat, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.Mavlink != null && Object.hasOwnProperty.call(message, \"Mavlink\"))\n                $root.rov_actions_proto.MavlinkResponse.encode(message.Mavlink, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.SimplepeerSignal != null && Object.hasOwnProperty.call(message, \"SimplepeerSignal\"))\n                $root.rov_actions_proto.SimplepeerSignalResponse.encode(message.SimplepeerSignal, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovResponse message, length delimited. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Done = $root.rov_actions_proto.DoneResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.Error = $root.rov_actions_proto.ErrorResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.Pong = $root.rov_actions_proto.PongResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.Mavlink = $root.rov_actions_proto.MavlinkResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ResponseBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DoneResponse.verify(message.Done);\n                    if (error)\n                        return \"Done.\" + error;\n                }\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ErrorResponse.verify(message.Error);\n                    if (error)\n                        return \"Error.\" + error;\n                }\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PongResponse.verify(message.Pong);\n                    if (error)\n                        return \"Pong.\" + error;\n                }\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ContinuedOutputResponse.verify(message.ContinuedOutput);\n                    if (error)\n                        return \"ContinuedOutput.\" + error;\n                }\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SensorUpdatesResponse.verify(message.SensorUpdates);\n                    if (error)\n                        return \"SensorUpdates.\" + error;\n                }\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordRequiredResponse.verify(message.PasswordRequired);\n                    if (error)\n                        return \"PasswordRequired.\" + error;\n                }\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAcceptedResponse.verify(message.PasswordAccepted);\n                    if (error)\n                        return \"PasswordAccepted.\" + error;\n                }\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordInvalidResponse.verify(message.PasswordInvalid);\n                    if (error)\n                        return \"PasswordInvalid.\" + error;\n                }\n            }\n            if (message.DriverChanged != null && message.hasOwnProperty(\"DriverChanged\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DriverChangedResponse.verify(message.DriverChanged);\n                    if (error)\n                        return \"DriverChanged.\" + error;\n                }\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientConnectedResponse.verify(message.ClientConnected);\n                    if (error)\n                        return \"ClientConnected.\" + error;\n                }\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientDisconnectedResponse.verify(message.ClientDisconnected);\n                    if (error)\n                        return \"ClientDisconnected.\" + error;\n                }\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.HeartbeatResponse.verify(message.Heartbeat);\n                    if (error)\n                        return \"Heartbeat.\" + error;\n                }\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MavlinkResponse.verify(message.Mavlink);\n                    if (error)\n                        return \"Mavlink.\" + error;\n                }\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplepeerSignalResponse.verify(message.SimplepeerSignal);\n                    if (error)\n                        return \"SimplepeerSignal.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         */\n        RovResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovResponse)\n                return object;\n            let message = new $root.rov_actions_proto.RovResponse();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Done != null) {\n                if (typeof object.Done !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Done: object expected\");\n                message.Done = $root.rov_actions_proto.DoneResponse.fromObject(object.Done);\n            }\n            if (object.Error != null) {\n                if (typeof object.Error !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Error: object expected\");\n                message.Error = $root.rov_actions_proto.ErrorResponse.fromObject(object.Error);\n            }\n            if (object.Pong != null) {\n                if (typeof object.Pong !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Pong: object expected\");\n                message.Pong = $root.rov_actions_proto.PongResponse.fromObject(object.Pong);\n            }\n            if (object.ContinuedOutput != null) {\n                if (typeof object.ContinuedOutput !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ContinuedOutput: object expected\");\n                message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.fromObject(object.ContinuedOutput);\n            }\n            if (object.SensorUpdates != null) {\n                if (typeof object.SensorUpdates !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SensorUpdates: object expected\");\n                message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.fromObject(object.SensorUpdates);\n            }\n            if (object.PasswordRequired != null) {\n                if (typeof object.PasswordRequired !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordRequired: object expected\");\n                message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.fromObject(object.PasswordRequired);\n            }\n            if (object.PasswordAccepted != null) {\n                if (typeof object.PasswordAccepted !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordAccepted: object expected\");\n                message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.fromObject(object.PasswordAccepted);\n            }\n            if (object.PasswordInvalid != null) {\n                if (typeof object.PasswordInvalid !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordInvalid: object expected\");\n                message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.fromObject(object.PasswordInvalid);\n            }\n            if (object.DriverChanged != null) {\n                if (typeof object.DriverChanged !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.DriverChanged: object expected\");\n                message.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.fromObject(object.DriverChanged);\n            }\n            if (object.ClientConnected != null) {\n                if (typeof object.ClientConnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientConnected: object expected\");\n                message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.fromObject(object.ClientConnected);\n            }\n            if (object.ClientDisconnected != null) {\n                if (typeof object.ClientDisconnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientDisconnected: object expected\");\n                message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.fromObject(object.ClientDisconnected);\n            }\n            if (object.Heartbeat != null) {\n                if (typeof object.Heartbeat !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Heartbeat: object expected\");\n                message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.fromObject(object.Heartbeat);\n            }\n            if (object.Mavlink != null) {\n                if (typeof object.Mavlink !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Mavlink: object expected\");\n                message.Mavlink = $root.rov_actions_proto.MavlinkResponse.fromObject(object.Mavlink);\n            }\n            if (object.SimplepeerSignal != null) {\n                if (typeof object.SimplepeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SimplepeerSignal: object expected\");\n                message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.fromObject(object.SimplepeerSignal);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.RovResponse} message RovResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                object.Done = $root.rov_actions_proto.DoneResponse.toObject(message.Done, options);\n                if (options.oneofs)\n                    object.Body = \"Done\";\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                object.Error = $root.rov_actions_proto.ErrorResponse.toObject(message.Error, options);\n                if (options.oneofs)\n                    object.Body = \"Error\";\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                object.Pong = $root.rov_actions_proto.PongResponse.toObject(message.Pong, options);\n                if (options.oneofs)\n                    object.Body = \"Pong\";\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                object.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.toObject(message.ContinuedOutput, options);\n                if (options.oneofs)\n                    object.Body = \"ContinuedOutput\";\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                object.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.toObject(message.SensorUpdates, options);\n                if (options.oneofs)\n                    object.Body = \"SensorUpdates\";\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                object.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.toObject(message.PasswordRequired, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordRequired\";\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                object.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.toObject(message.PasswordAccepted, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAccepted\";\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                object.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.toObject(message.PasswordInvalid, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordInvalid\";\n            }\n            if (message.DriverChanged != null && message.hasOwnProperty(\"DriverChanged\")) {\n                object.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.toObject(message.DriverChanged, options);\n                if (options.oneofs)\n                    object.Body = \"DriverChanged\";\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                object.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.toObject(message.ClientConnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientConnected\";\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                object.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.toObject(message.ClientDisconnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientDisconnected\";\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                object.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.toObject(message.Heartbeat, options);\n                if (options.oneofs)\n                    object.Body = \"Heartbeat\";\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                object.Mavlink = $root.rov_actions_proto.MavlinkResponse.toObject(message.Mavlink, options);\n                if (options.oneofs)\n                    object.Body = \"Mavlink\";\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                object.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.toObject(message.SimplepeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplepeerSignal\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovResponse\";\n        };\n\n        return RovResponse;\n    })();\n\n    return rov_actions_proto;\n})();\n\nexport { $root as default };\n"],"names":["fn","ctx","params","offset","index","pending","resolve","reject","err","base64","exports","string","p","n","b64","s64","i","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","c","evt","listeners","args","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","readFloat_ieee754","readUint","uint","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","e","utf8","len","c1","c2","alloc","slice","size","SIZE","MAX","slab","LongBits","util","require$$0","zero","zeroHash","value","unsigned","charCodeAt","hash","mask","part0","part1","part2","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","obj","prop","Buffer","sizeOrArray","bits","merge","dst","src","ifNotSet","keys","str","newError","name","CustomError","message","properties","fieldNames","fieldMap","encoding","Writer","BufferWriter","writer","create","push","write_uint32","write_int32","write_sint32","write_uint64","write_sint64","write_bool","write_fixed32","write_fixed64","write_float","write_double","writeBytes_set","writeBytes_for","write_bytes","write_string","fork","reset","ldelim","head","tail","finish","BufferWriter_","write_bytes_buffer","write_string_buffer","Reader","BufferReader","reader","writeLength","create_typed_array","create_array","read_uint32_setup","read_int32","read_sint32","read_bool","read_fixed32","read_sfixed32","read_float","read_double","read_bytes","length","read_string","bytes","skip","wireType","BufferReader_","read_string_buffer","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","response","endedByRPC","rpc","protobuf","configure","$protobuf.Reader","$protobuf.Writer","$protobuf.util","$protobuf.roots","rov_actions_proto","valuesById","values","Measurement","tag","object","options","typeUrlPrefix","PingAction","long","PasswordAttemptAction","AuthTokenAttemptAction","TakeControlAction","MoveAction","BeginVideoStreamAction","TakePhotoAction","StartVideoRecAction","StopVideoRecAction","ToogleLightsAction","ShutdownRovAction","RebootRovAction","EnableWifiAction","DisableWifiAction","RovStatusReportAction","RestartRovServicesAction","RovLogsAction","RefreshAllSensorsAction","MavlinkAction","SimplepeerSignalAction","ActionBackendMetadata","RovAction","$oneOfFields","error","DoneResponse","ErrorResponse","PongResponse","SensorUpdatesResponse","PasswordRequiredResponse","PasswordAcceptedResponse","PasswordInvalidResponse","DriverChangedResponse","ClientConnectedResponse","ClientDisconnectedResponse","HeartbeatResponse","ContinuedOutputResponse","MavlinkResponse","SimplepeerSignalResponse","ResponseBackendMetadata","RovResponse"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}