{"version":3,"file":"popup.51566690.js","sources":["../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/utilities/Popup/popup.js","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/actions/FocusTrap/focusTrap.js","../../../../../../src/js/shared/libraries/nStore.ts","../../../../../../src/js/globalContext.ts","../../../../../../../node_modules/.pnpm/@protobufjs+aspromise@1.1.2/node_modules/@protobufjs/aspromise/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+base64@1.1.2/node_modules/@protobufjs/base64/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+eventemitter@1.1.0/node_modules/@protobufjs/eventemitter/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+inquire@1.1.0/node_modules/@protobufjs/inquire/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+pool@1.1.0/node_modules/@protobufjs/pool/index.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/longbits.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/minimal.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer_buffer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader_buffer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc/service.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/roots.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index-minimal.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/minimal.js","../../../../../../src/js/shared/protobufs/rovActionsProto.js","../../../../../../src/js/shared/logging.ts","../../../../../../../node_modules/.pnpm/livekit-client@2.5.0/node_modules/livekit-client/dist/livekit-client.esm.mjs","../../../../../../src/js/shared/mavlink2rest-ts/messages/mavlink2rest-enum.ts","../../../../../../src/js/shared/consts.ts","../../../../../../src/js/shared/urlParameters.ts","../../../../../../src/js/frontendConsts.ts","../../../../../../src/js/util.ts","../../../../../../src/components/Modals/modals.ts","../../../../../../src/components/Popup/popup.ts"],"sourcesContent":["import { get, writable } from 'svelte/store';\n// Use a store to pass the Floating UI import references\nexport const storePopup = writable(undefined);\nexport function popup(triggerNode, args) {\n    // Floating UI Modules\n    const { computePosition, autoUpdate, offset, shift, flip, arrow, size, autoPlacement, hide, inline } = get(storePopup);\n    // Local State\n    const popupState = {\n        open: false,\n        autoUpdateCleanup: () => { }\n    };\n    const focusableAllowedList = ':is(a[href], button, input, textarea, select, details, [tabindex]):not([tabindex=\"-1\"])';\n    let focusablePopupElements;\n    const documentationLink = 'https://www.skeleton.dev/utilities/popups';\n    // Elements\n    let elemPopup;\n    let elemArrow;\n    function setDomElements() {\n        elemPopup = document.querySelector(`[data-popup=\"${args.target}\"]`) ?? document.createElement('div');\n        elemArrow = elemPopup.querySelector(`.arrow`) ?? document.createElement('div');\n    }\n    setDomElements(); // init\n    // Render Floating UI Popup\n    function render() {\n        // Error handling for required Floating UI modules\n        if (!elemPopup)\n            throw new Error(`The data-popup=\"${args.target}\" element was not found. ${documentationLink}`);\n        if (!computePosition)\n            throw new Error(`Floating UI 'computePosition' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!offset)\n            throw new Error(`Floating UI 'offset' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!shift)\n            throw new Error(`Floating UI 'shift' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!flip)\n            throw new Error(`Floating UI 'flip' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!arrow)\n            throw new Error(`Floating UI 'arrow' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        // Bundle optional middleware\n        const optionalMiddleware = [];\n        // https://floating-ui.com/docs/size\n        if (size)\n            optionalMiddleware.push(size(args.middleware?.size));\n        // https://floating-ui.com/docs/autoPlacement\n        if (autoPlacement)\n            optionalMiddleware.push(autoPlacement(args.middleware?.autoPlacement));\n        // https://floating-ui.com/docs/hide\n        if (hide)\n            optionalMiddleware.push(hide(args.middleware?.hide));\n        // https://floating-ui.com/docs/inline\n        if (inline)\n            optionalMiddleware.push(inline(args.middleware?.inline));\n        // Floating UI Compute Position\n        // https://floating-ui.com/docs/computePosition\n        computePosition(triggerNode, elemPopup, {\n            placement: args.placement ?? 'bottom',\n            // Middleware - NOTE: the order matters:\n            // https://floating-ui.com/docs/middleware#ordering\n            middleware: [\n                // https://floating-ui.com/docs/offset\n                offset(args.middleware?.offset ?? 8),\n                // https://floating-ui.com/docs/shift\n                shift(args.middleware?.shift ?? { padding: 8 }),\n                // https://floating-ui.com/docs/flip\n                flip(args.middleware?.flip),\n                // https://floating-ui.com/docs/arrow\n                arrow(args.middleware?.arrow ?? { element: elemArrow || null }),\n                // Implement optional middleware\n                ...optionalMiddleware\n            ]\n        }).then(({ x, y, placement, middlewareData }) => {\n            Object.assign(elemPopup.style, {\n                left: `${x}px`,\n                top: `${y}px`\n            });\n            // Handle Arrow Placement:\n            // https://floating-ui.com/docs/arrow\n            if (elemArrow) {\n                const { x: arrowX, y: arrowY } = middlewareData.arrow;\n                // @ts-expect-error implicit any\n                const staticSide = {\n                    top: 'bottom',\n                    right: 'left',\n                    bottom: 'top',\n                    left: 'right'\n                }[placement.split('-')[0]];\n                Object.assign(elemArrow.style, {\n                    left: arrowX != null ? `${arrowX}px` : '',\n                    top: arrowY != null ? `${arrowY}px` : '',\n                    right: '',\n                    bottom: '',\n                    [staticSide]: '-4px'\n                });\n            }\n        });\n    }\n    // State Handlers\n    function open() {\n        if (!elemPopup)\n            return;\n        // Set open state to on\n        popupState.open = true;\n        // Return the current state\n        if (args.state)\n            args.state({ state: popupState.open });\n        // Update render settings\n        render();\n        // Update the DOM\n        elemPopup.style.display = 'block';\n        elemPopup.style.opacity = '1';\n        elemPopup.style.pointerEvents = 'auto';\n        // enable popup interactions\n        elemPopup.removeAttribute('inert');\n        // Trigger Floating UI autoUpdate (open only)\n        // https://floating-ui.com/docs/autoUpdate\n        popupState.autoUpdateCleanup = autoUpdate(triggerNode, elemPopup, render);\n        // Focus the first focusable element within the popup\n        focusablePopupElements = Array.from(elemPopup?.querySelectorAll(focusableAllowedList));\n    }\n    function close(callback) {\n        if (!elemPopup)\n            return;\n        // Set transition duration\n        const cssTransitionDuration = parseFloat(window.getComputedStyle(elemPopup).transitionDuration.replace('s', '')) * 1000;\n        setTimeout(() => {\n            // Set open state to off\n            popupState.open = false;\n            // Return the current state\n            if (args.state)\n                args.state({ state: popupState.open });\n            // Update the DOM\n            elemPopup.style.opacity = '0';\n            // disable popup interactions\n            elemPopup.setAttribute('inert', '');\n            // Cleanup Floating UI autoUpdate (close only)\n            if (popupState.autoUpdateCleanup)\n                popupState.autoUpdateCleanup();\n            // Trigger callback\n            if (callback)\n                callback();\n        }, cssTransitionDuration);\n    }\n    // Event Handlers\n    function toggle() {\n        popupState.open === false ? open() : close();\n    }\n    function onWindowClick(event) {\n        // Return if the popup is not yet open\n        if (popupState.open === false)\n            return;\n        // Return if click is the trigger element\n        if (triggerNode.contains(event.target))\n            return;\n        // If click it outside the popup\n        if (elemPopup && elemPopup.contains(event.target) === false) {\n            close();\n            return;\n        }\n        // Handle Close Query State\n        const closeQueryString = args.closeQuery === undefined ? 'a[href], button' : args.closeQuery;\n        // Return if no closeQuery is provided\n        if (closeQueryString === '')\n            return;\n        const closableMenuElements = elemPopup?.querySelectorAll(closeQueryString);\n        closableMenuElements?.forEach((elem) => {\n            if (elem.contains(event.target))\n                close();\n        });\n    }\n    // Keyboard Interactions for A11y\n    const onWindowKeyDown = (event) => {\n        if (popupState.open === false)\n            return;\n        // Handle keys\n        const key = event.key;\n        // On Esc key\n        if (key === 'Escape') {\n            event.preventDefault();\n            triggerNode.focus();\n            close();\n            return;\n        }\n        // Update focusable elements (important for Autocomplete)\n        focusablePopupElements = Array.from(elemPopup?.querySelectorAll(focusableAllowedList));\n        // On Tab or ArrowDown key\n        const triggerMenuFocused = popupState.open && document.activeElement === triggerNode;\n        if (triggerMenuFocused &&\n            (key === 'ArrowDown' || key === 'Tab') &&\n            focusableAllowedList.length > 0 &&\n            focusablePopupElements.length > 0) {\n            event.preventDefault();\n            focusablePopupElements[0].focus();\n        }\n    };\n    // Event Listeners\n    switch (args.event) {\n        case 'click':\n            triggerNode.addEventListener('click', toggle, true);\n            window.addEventListener('click', onWindowClick, true);\n            break;\n        case 'hover':\n            triggerNode.addEventListener('mouseover', open, true);\n            triggerNode.addEventListener('mouseleave', () => close(), true);\n            break;\n        case 'focus-blur':\n            triggerNode.addEventListener('focus', toggle, true);\n            triggerNode.addEventListener('blur', () => close(), true);\n            break;\n        case 'focus-click':\n            triggerNode.addEventListener('focus', open, true);\n            window.addEventListener('click', onWindowClick, true);\n            break;\n        default:\n            throw new Error(`Event value of '${args.event}' is not supported. ${documentationLink}`);\n    }\n    window.addEventListener('keydown', onWindowKeyDown, true);\n    // Render popup on initialization\n    render();\n    // Lifecycle\n    return {\n        update(newArgs) {\n            close(() => {\n                args = newArgs;\n                render();\n                setDomElements();\n            });\n        },\n        destroy() {\n            // Trigger Events\n            triggerNode.removeEventListener('click', toggle, true);\n            triggerNode.removeEventListener('mouseover', open, true);\n            triggerNode.removeEventListener('mouseleave', () => close(), true);\n            triggerNode.removeEventListener('focus', toggle, true);\n            triggerNode.removeEventListener('focus', open, true);\n            triggerNode.removeEventListener('blur', () => close(), true);\n            // Window Events\n            window.removeEventListener('click', onWindowClick, true);\n            window.removeEventListener('keydown', onWindowKeyDown, true);\n        }\n    };\n}\n","// Action: Focus Trap\nexport function focusTrap(node, enabled) {\n    const elemWhitelist = 'a[href]:not([tabindex=\"-1\"]), button:not([tabindex=\"-1\"]), input:not([tabindex=\"-1\"]), textarea:not([tabindex=\"-1\"]), select:not([tabindex=\"-1\"]), details:not([tabindex=\"-1\"]), [tabindex]:not([tabindex=\"-1\"])';\n    let elemFirst;\n    let elemLast;\n    // When the first element is selected, shift+tab pressed, jump to the last selectable item.\n    function onFirstElemKeydown(e) {\n        if (e.shiftKey && e.code === 'Tab') {\n            e.preventDefault();\n            elemLast.focus();\n        }\n    }\n    // When the last item selected, tab pressed, jump to the first selectable item.\n    function onLastElemKeydown(e) {\n        if (!e.shiftKey && e.code === 'Tab') {\n            e.preventDefault();\n            elemFirst.focus();\n        }\n    }\n    // Sort focusable elements by tabindex, positive first, then 0\n    const sortByTabIndex = (focusableElems) => {\n        return focusableElems\n            .filter((elem) => elem.tabIndex >= 0)\n            .sort((a, b) => {\n            if (a.tabIndex === 0 && b.tabIndex > 0)\n                return 1; // Move 0 to end of array\n            else if (a.tabIndex > 0 && b.tabIndex === 0)\n                return -1; // Move 0 to end of array\n            else\n                return a.tabIndex - b.tabIndex; // Sort non-zero values in ascending order\n        });\n    };\n    // Get element with smallest focusindex value, or first focusable element\n    const getFocusTrapTarget = (elemFirst) => {\n        // Get elements with data-focusindex attribute\n        const focusindexElements = [...node.querySelectorAll('[data-focusindex]')];\n        if (!focusindexElements || focusindexElements.length === 0)\n            return elemFirst;\n        // return smallest focusindex element or elemFirst\n        return (focusindexElements.sort((a, b) => {\n            return +a.dataset.focusindex - +b.dataset.focusindex;\n        })[0] || elemFirst);\n    };\n    const onScanElements = (fromObserver) => {\n        if (enabled === false)\n            return;\n        // Gather all focusable elements, sorted according to tabindex\n        const focusableElems = sortByTabIndex(Array.from(node.querySelectorAll(elemWhitelist)));\n        if (focusableElems.length) {\n            // Set first/last focusable elements\n            elemFirst = focusableElems[0];\n            elemLast = focusableElems[focusableElems.length - 1];\n            // Auto-focus focusTrapTarget or first focusable element only when not called from observer\n            if (!fromObserver)\n                getFocusTrapTarget(elemFirst).focus();\n            // Listen for keydown on first & last element\n            elemFirst.addEventListener('keydown', onFirstElemKeydown);\n            elemLast.addEventListener('keydown', onLastElemKeydown);\n        }\n    };\n    onScanElements(false);\n    function onCleanUp() {\n        if (elemFirst)\n            elemFirst.removeEventListener('keydown', onFirstElemKeydown);\n        if (elemLast)\n            elemLast.removeEventListener('keydown', onLastElemKeydown);\n    }\n    // When children of node are changed (added or removed)\n    const onObservationChange = (mutationRecords, observer) => {\n        if (mutationRecords.length) {\n            onCleanUp();\n            onScanElements(true);\n        }\n        return observer;\n    };\n    const observer = new MutationObserver(onObservationChange);\n    observer.observe(node, { childList: true, subtree: true });\n    // Lifecycle\n    return {\n        update(newArgs) {\n            enabled = newArgs;\n            newArgs ? onScanElements(false) : onCleanUp();\n        },\n        destroy() {\n            onCleanUp();\n            observer.disconnect();\n        }\n    };\n}\n","//Based on source: https://github.com/jbreckmckye/trkl\n\ntype updateFnT<T> = (value: T) => void\nexport type nStoreT<T> = {\n  subscribe: (subscription: updateFnT<T>) => (() => void),\n  set: updateFnT<T>,\n  update: (updateFn: (value: T) => T) => void,\n  get: () => T,\n  refresh: () => void,\n}\n\n// Tracking for dependencies & to detect circularity\nlet computedTracker: any[] = [];\n\n/**\n * nStore: Svelte store contract compatible object with advanced features.\n * \n * Usage: \n * - nStore(initVal) - create a new store with an initial value\n * - nStore(()=>{..}) - create a computed value. Inside the function, use the `.get` method of the other nStore variables in order to signal dependency\n * \n * Methods provided.\n * - subscribe(fn) : standard [Svelte Store subscribe](https://svelte.dev/docs#Store_contract)\n * - set(value) : updates the value, and calls subscribers if value is different from previous\n * - update(fn) : runs the given function with the current value as its parameter and sets the value to the result of the function\n * - get() : returns the current value of the store\n */\nfunction nStore<T>(value:T):nStoreT<T> {\n  let subscribers: ((val:any,oldVal?:any)=>void)[] = [];\n\n  let subscribe = (subscriber: (val: any) => void, immediate=true) => {\n    if (!subscribers.includes(subscriber)) subscribers.push(subscriber);\n    if (immediate) subscriber(value);\n\n    return ()=>{subscribers=subscribers.filter(xSub=>xSub!=subscriber)}\n  }\n\n  function set(newValue:any) {\n    if (newValue === value && (value === null || typeof value !== 'object')) {\n      return;\n    }\n    let oldValue = value;\n    value = newValue;\n\n    for (let sub of subscribers){ sub(value,oldValue) }\n  }\n\n  function get() {\n    let runningComputation = computedTracker[computedTracker.length - 1];\n    if (runningComputation) {\n      subscribe(runningComputation[0],false);\n    }\n    return value;\n  }\n\n  //if the initial value is a function then we treat it as a `computed`\n  if (typeof(value) == \"function\") return computed((value as unknown) as ()=>T);\n\n  /**\n   * does a push update, calls all subscribers with the current value\n   * Useful for when the stored variable is an Object, Array, Set, etc and the operations on those don't trigger an update, but can be triggered with this\n   */\n  function refresh() {\n    for (let sub of subscribers) { sub(value, value) }\n  }\n\n  return {\n    subscribe,\n    set,\n    get,\n    refresh,\n    update: (updFn: updateFnT<T>) => {\n      if (typeof (updFn) !== \"function\") return\n      set(updFn(value))\n    }\n  }\n}\n\nfunction computed<T>(fn: ()=>T ) {\n  let self = nStore(null);\n  let computationToken: (()=>void)[] = [runComputed]\n\n  runComputed();\n  return self;\n\n  function runComputed() {\n    //detect circularity\n    if (computedTracker.includes(computationToken)) throw Error('Circular computation');\n\n    computedTracker.push(computationToken);\n    let result;\n    try {\n      result = fn();\n    } catch (e) {\n      computedTracker.pop();\n      throw e\n    }\n    computedTracker.pop();\n    self.set(result);    \n  }\n}\n\nexport default nStore\n","import { default as nStore, type nStoreT } from \"./shared/libraries/nStore\";\n\nexport enum DIALOG_TYPE {\n    Alert = 0,\n    Password = 1,\n    ScrollingText = 2,\n}\n\nexport type dialogExtraDataType = {\n    title?: string,\n    message?: string,\n    messageLines?: string[],\n}\n\nexport type dialogInfoType = {\n    dialogType: DIALOG_TYPE;\n    callback: (e: any) => void;\n    extraData: dialogExtraDataType;\n};\n\n// export const : {\n//     msgHandler: MessageHandler,\n//     gpadCtrl: GamepadController,\n//     openDialog: (type: DIALOG_TYPE, extraData: dialogExtraDataType, callback: (d: dialogExtraDataType) => (dialogExtraDataType | void)) => (b: String | Boolean | null | ((dialogExtraDataType) => dialogExtraDataType)) => void,\n//     showLoadingUi: (msgId: LOADING_MESSAGE, customLoadingMessage?: string) => void,\n//     hideLoadingUi: (msgId: LOADING_MESSAGE) => void,\n//     addTooltip: (node: Element, config: { label: string, placement: Placement, timeout?: number }, addListeners?: boolean) => void\n// } = {\n//     msgHandler: null,\n//     gpadCtrl: null,\n//     openDialog: null, //(type, extraData, callback) => { return (b) => { } },\n//     showLoadingUi: null,\n//     hideLoadingUi: null,\n//     addTooltip: null,\n// };\n\nexport interface RovMovementVector {\n    VelocityX: number,\n    VelocityY: number,\n    VelocityZ: number,\n    AngularVelocityYaw: number,\n    ButtonBitmask: number,\n}\n\nexport enum VideoSource {\n    None = \"\",\n    Livekit = \"LK\",\n    Simplepeer = \"SP\",\n}\n\nexport const debugPageModeActive: nStoreT<boolean> = nStore(false);\nexport const fullscreenOpen: nStoreT<boolean> = nStore(false);\nexport const sidebarExpanded: nStoreT<boolean> = nStore(false);\nexport const tutorialModeActive: nStoreT<boolean> = nStore(false);\nexport const throttleGain: nStoreT<number> = nStore(50);\n\n\nexport const attemptingNewRovPeerId: nStoreT<boolean> = nStore(false);\nexport const isRovDriver: nStoreT<boolean> = nStore(false);\nexport const ourPeerId: nStoreT<string> = nStore(\"No Peer Id\");\nexport const currentVideoSource: nStoreT<VideoSource> = nStore(VideoSource.None);\n\nexport const rovDrivingVector: nStoreT<RovMovementVector> = nStore({\n    VelocityX: 0,\n    VelocityY: 0,\n    VelocityZ: 0,\n    AngularVelocityYaw: 0,\n    ButtonBitmask: 0,\n});\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\nimport * as $protobuf from \"protobufjs/minimal\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const rov_actions_proto = $root.rov_actions_proto = (() => {\n\n    /**\n     * Namespace rov_actions_proto.\n     * @exports rov_actions_proto\n     * @namespace\n     */\n    const rov_actions_proto = {};\n\n    /**\n     * LogLevel enum.\n     * @name rov_actions_proto.LogLevel\n     * @enum {number}\n     * @property {number} Debug=0 Debug value\n     * @property {number} Info=1 Info value\n     * @property {number} Warning=2 Warning value\n     * @property {number} Error=3 Error value\n     * @property {number} Critical=4 Critical value\n     */\n    rov_actions_proto.LogLevel = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Debug\"] = 0;\n        values[valuesById[1] = \"Info\"] = 1;\n        values[valuesById[2] = \"Warning\"] = 2;\n        values[valuesById[3] = \"Error\"] = 3;\n        values[valuesById[4] = \"Critical\"] = 4;\n        return values;\n    })();\n\n    /**\n     * SensorMeasurmentTypes enum.\n     * @name rov_actions_proto.SensorMeasurmentTypes\n     * @enum {number}\n     * @property {number} depth_meters=0 depth_meters value\n     * @property {number} water_temp_celsius=1 water_temp_celsius value\n     * @property {number} pressure_mbar=2 pressure_mbar value\n     * @property {number} yaw_degrees=3 yaw_degrees value\n     * @property {number} pitch_degrees=4 pitch_degrees value\n     * @property {number} roll_degrees=5 roll_degrees value\n     * @property {number} x_acceleration_m_s2=6 x_acceleration_m_s2 value\n     * @property {number} y_acceleration_m_s2=7 y_acceleration_m_s2 value\n     * @property {number} z_acceleration_m_s2=8 z_acceleration_m_s2 value\n     * @property {number} battery_voltage=9 battery_voltage value\n     * @property {number} battery_current_amps=10 battery_current_amps value\n     * @property {number} internal_temp_celsius=11 internal_temp_celsius value\n     */\n    rov_actions_proto.SensorMeasurmentTypes = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"depth_meters\"] = 0;\n        values[valuesById[1] = \"water_temp_celsius\"] = 1;\n        values[valuesById[2] = \"pressure_mbar\"] = 2;\n        values[valuesById[3] = \"yaw_degrees\"] = 3;\n        values[valuesById[4] = \"pitch_degrees\"] = 4;\n        values[valuesById[5] = \"roll_degrees\"] = 5;\n        values[valuesById[6] = \"x_acceleration_m_s2\"] = 6;\n        values[valuesById[7] = \"y_acceleration_m_s2\"] = 7;\n        values[valuesById[8] = \"z_acceleration_m_s2\"] = 8;\n        values[valuesById[9] = \"battery_voltage\"] = 9;\n        values[valuesById[10] = \"battery_current_amps\"] = 10;\n        values[valuesById[11] = \"internal_temp_celsius\"] = 11;\n        return values;\n    })();\n\n    rov_actions_proto.Measurement = (function() {\n\n        /**\n         * Properties of a Measurement.\n         * @memberof rov_actions_proto\n         * @interface IMeasurement\n         * @property {rov_actions_proto.SensorMeasurmentTypes|null} [MeasurementType] Measurement MeasurementType\n         * @property {number|null} [Value] Measurement Value\n         */\n\n        /**\n         * Constructs a new Measurement.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a Measurement.\n         * @implements IMeasurement\n         * @constructor\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         */\n        function Measurement(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Measurement MeasurementType.\n         * @member {rov_actions_proto.SensorMeasurmentTypes} MeasurementType\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.MeasurementType = 0;\n\n        /**\n         * Measurement Value.\n         * @member {number} Value\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.Value = 0;\n\n        /**\n         * Creates a new Measurement instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         * @returns {rov_actions_proto.Measurement} Measurement instance\n         */\n        Measurement.create = function create(properties) {\n            return new Measurement(properties);\n        };\n\n        /**\n         * Encodes the specified Measurement message. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementType != null && Object.hasOwnProperty.call(message, \"MeasurementType\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.MeasurementType);\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.Value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Measurement message, length delimited. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.Measurement();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.MeasurementType = reader.int32();\n                        break;\n                    }\n                case 2: {\n                        message.Value = reader.float();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Measurement message.\n         * @function verify\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Measurement.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                switch (message.MeasurementType) {\n                default:\n                    return \"MeasurementType: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                    break;\n                }\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                if (typeof message.Value !== \"number\")\n                    return \"Value: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a Measurement message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.Measurement} Measurement\n         */\n        Measurement.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.Measurement)\n                return object;\n            let message = new $root.rov_actions_proto.Measurement();\n            switch (object.MeasurementType) {\n            default:\n                if (typeof object.MeasurementType === \"number\") {\n                    message.MeasurementType = object.MeasurementType;\n                    break;\n                }\n                break;\n            case \"depth_meters\":\n            case 0:\n                message.MeasurementType = 0;\n                break;\n            case \"water_temp_celsius\":\n            case 1:\n                message.MeasurementType = 1;\n                break;\n            case \"pressure_mbar\":\n            case 2:\n                message.MeasurementType = 2;\n                break;\n            case \"yaw_degrees\":\n            case 3:\n                message.MeasurementType = 3;\n                break;\n            case \"pitch_degrees\":\n            case 4:\n                message.MeasurementType = 4;\n                break;\n            case \"roll_degrees\":\n            case 5:\n                message.MeasurementType = 5;\n                break;\n            case \"x_acceleration_m_s2\":\n            case 6:\n                message.MeasurementType = 6;\n                break;\n            case \"y_acceleration_m_s2\":\n            case 7:\n                message.MeasurementType = 7;\n                break;\n            case \"z_acceleration_m_s2\":\n            case 8:\n                message.MeasurementType = 8;\n                break;\n            case \"battery_voltage\":\n            case 9:\n                message.MeasurementType = 9;\n                break;\n            case \"battery_current_amps\":\n            case 10:\n                message.MeasurementType = 10;\n                break;\n            case \"internal_temp_celsius\":\n            case 11:\n                message.MeasurementType = 11;\n                break;\n            }\n            if (object.Value != null)\n                message.Value = Number(object.Value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a Measurement message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.Measurement} message Measurement\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Measurement.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.MeasurementType = options.enums === String ? \"depth_meters\" : 0;\n                object.Value = 0;\n            }\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                object.MeasurementType = options.enums === String ? $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] === undefined ? message.MeasurementType : $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] : message.MeasurementType;\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                object.Value = options.json && !isFinite(message.Value) ? String(message.Value) : message.Value;\n            return object;\n        };\n\n        /**\n         * Converts this Measurement to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Measurement.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Measurement\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Measurement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.Measurement\";\n        };\n\n        return Measurement;\n    })();\n\n    /**\n     * DataTransportMethod enum.\n     * @name rov_actions_proto.DataTransportMethod\n     * @enum {number}\n     * @property {number} LivekitReliable=0 LivekitReliable value\n     * @property {number} LivekitUnreliable=1 LivekitUnreliable value\n     * @property {number} DirectUnreliable=3 DirectUnreliable value\n     */\n    rov_actions_proto.DataTransportMethod = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"LivekitReliable\"] = 0;\n        values[valuesById[1] = \"LivekitUnreliable\"] = 1;\n        values[valuesById[3] = \"DirectUnreliable\"] = 3;\n        return values;\n    })();\n\n    /**\n     * InternalWebpageEvent enum.\n     * @name rov_actions_proto.InternalWebpageEvent\n     * @enum {number}\n     * @property {number} Nothing=0 Nothing value\n     * @property {number} RovConnected=1 RovConnected value\n     * @property {number} RovDisconnected=2 RovDisconnected value\n     * @property {number} UserConnected=3 UserConnected value\n     * @property {number} UserDisconnected=4 UserDisconnected value\n     */\n    rov_actions_proto.InternalWebpageEvent = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Nothing\"] = 0;\n        values[valuesById[1] = \"RovConnected\"] = 1;\n        values[valuesById[2] = \"RovDisconnected\"] = 2;\n        values[valuesById[3] = \"UserConnected\"] = 3;\n        values[valuesById[4] = \"UserDisconnected\"] = 4;\n        return values;\n    })();\n\n    rov_actions_proto.PingAction = (function() {\n\n        /**\n         * Properties of a PingAction.\n         * @memberof rov_actions_proto\n         * @interface IPingAction\n         * @property {number|Long|null} [Time] PingAction Time\n         */\n\n        /**\n         * Constructs a new PingAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PingAction.\n         * @implements IPingAction\n         * @constructor\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         */\n        function PingAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PingAction Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         */\n        PingAction.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PingAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PingAction} PingAction instance\n         */\n        PingAction.create = function create(properties) {\n            return new PingAction(properties);\n        };\n\n        /**\n         * Encodes the specified PingAction message. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PingAction message, length delimited. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PingAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PingAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PingAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PingAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PingAction} PingAction\n         */\n        PingAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PingAction)\n                return object;\n            let message = new $root.rov_actions_proto.PingAction();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PingAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.PingAction} message PingAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PingAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PingAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PingAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PingAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PingAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PingAction\";\n        };\n\n        return PingAction;\n    })();\n\n    rov_actions_proto.PasswordAttemptAction = (function() {\n\n        /**\n         * Properties of a PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAttemptAction\n         * @property {string|null} [Password] PasswordAttemptAction Password\n         */\n\n        /**\n         * Constructs a new PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAttemptAction.\n         * @implements IPasswordAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         */\n        function PasswordAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAttemptAction Password.\n         * @member {string} Password\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         */\n        PasswordAttemptAction.prototype.Password = \"\";\n\n        /**\n         * Creates a new PasswordAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction instance\n         */\n        PasswordAttemptAction.create = function create(properties) {\n            return new PasswordAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Password);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Password = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                if (!$util.isString(message.Password))\n                    return \"Password: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         */\n        PasswordAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAttemptAction();\n            if (object.Password != null)\n                message.Password = String(object.Password);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.PasswordAttemptAction} message PasswordAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Password = \"\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                object.Password = message.Password;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAttemptAction\";\n        };\n\n        return PasswordAttemptAction;\n    })();\n\n    rov_actions_proto.AuthTokenAttemptAction = (function() {\n\n        /**\n         * Properties of an AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IAuthTokenAttemptAction\n         * @property {string|null} [Token] AuthTokenAttemptAction Token\n         */\n\n        /**\n         * Constructs a new AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an AuthTokenAttemptAction.\n         * @implements IAuthTokenAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         */\n        function AuthTokenAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AuthTokenAttemptAction Token.\n         * @member {string} Token\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         */\n        AuthTokenAttemptAction.prototype.Token = \"\";\n\n        /**\n         * Creates a new AuthTokenAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction instance\n         */\n        AuthTokenAttemptAction.create = function create(properties) {\n            return new AuthTokenAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Token != null && Object.hasOwnProperty.call(message, \"Token\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Token);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Token = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AuthTokenAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AuthTokenAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                if (!$util.isString(message.Token))\n                    return \"Token: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an AuthTokenAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         */\n        AuthTokenAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.AuthTokenAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            if (object.Token != null)\n                message.Token = String(object.Token);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AuthTokenAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.AuthTokenAttemptAction} message AuthTokenAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AuthTokenAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Token = \"\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                object.Token = message.Token;\n            return object;\n        };\n\n        /**\n         * Converts this AuthTokenAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AuthTokenAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for AuthTokenAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        AuthTokenAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.AuthTokenAttemptAction\";\n        };\n\n        return AuthTokenAttemptAction;\n    })();\n\n    rov_actions_proto.TakeControlAction = (function() {\n\n        /**\n         * Properties of a TakeControlAction.\n         * @memberof rov_actions_proto\n         * @interface ITakeControlAction\n         */\n\n        /**\n         * Constructs a new TakeControlAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakeControlAction.\n         * @implements ITakeControlAction\n         * @constructor\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         */\n        function TakeControlAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakeControlAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction instance\n         */\n        TakeControlAction.create = function create(properties) {\n            return new TakeControlAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakeControlAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakeControlAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakeControlAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakeControlAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         */\n        TakeControlAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakeControlAction)\n                return object;\n            return new $root.rov_actions_proto.TakeControlAction();\n        };\n\n        /**\n         * Creates a plain object from a TakeControlAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.TakeControlAction} message TakeControlAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakeControlAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakeControlAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakeControlAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakeControlAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakeControlAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakeControlAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakeControlAction\";\n        };\n\n        return TakeControlAction;\n    })();\n\n    rov_actions_proto.MoveAction = (function() {\n\n        /**\n         * Properties of a MoveAction.\n         * @memberof rov_actions_proto\n         * @interface IMoveAction\n         * @property {number|null} [VelocityX] MoveAction VelocityX\n         * @property {number|null} [VelocityY] MoveAction VelocityY\n         * @property {number|null} [VelocityZ] MoveAction VelocityZ\n         * @property {number|null} [AngularVelocityYaw] MoveAction AngularVelocityYaw\n         * @property {number|null} [ButtonBitmask] MoveAction ButtonBitmask\n         */\n\n        /**\n         * Constructs a new MoveAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MoveAction.\n         * @implements IMoveAction\n         * @constructor\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         */\n        function MoveAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MoveAction VelocityX.\n         * @member {number} VelocityX\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityX = 0;\n\n        /**\n         * MoveAction VelocityY.\n         * @member {number} VelocityY\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityY = 0;\n\n        /**\n         * MoveAction VelocityZ.\n         * @member {number} VelocityZ\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityZ = 0;\n\n        /**\n         * MoveAction AngularVelocityYaw.\n         * @member {number} AngularVelocityYaw\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.AngularVelocityYaw = 0;\n\n        /**\n         * MoveAction ButtonBitmask.\n         * @member {number} ButtonBitmask\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.ButtonBitmask = 0;\n\n        /**\n         * Creates a new MoveAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MoveAction} MoveAction instance\n         */\n        MoveAction.create = function create(properties) {\n            return new MoveAction(properties);\n        };\n\n        /**\n         * Encodes the specified MoveAction message. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.VelocityX != null && Object.hasOwnProperty.call(message, \"VelocityX\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.VelocityX);\n            if (message.VelocityY != null && Object.hasOwnProperty.call(message, \"VelocityY\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.VelocityY);\n            if (message.VelocityZ != null && Object.hasOwnProperty.call(message, \"VelocityZ\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.VelocityZ);\n            if (message.AngularVelocityYaw != null && Object.hasOwnProperty.call(message, \"AngularVelocityYaw\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.AngularVelocityYaw);\n            if (message.ButtonBitmask != null && Object.hasOwnProperty.call(message, \"ButtonBitmask\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.ButtonBitmask);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MoveAction message, length delimited. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MoveAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.VelocityX = reader.float();\n                        break;\n                    }\n                case 2: {\n                        message.VelocityY = reader.float();\n                        break;\n                    }\n                case 3: {\n                        message.VelocityZ = reader.float();\n                        break;\n                    }\n                case 4: {\n                        message.AngularVelocityYaw = reader.float();\n                        break;\n                    }\n                case 5: {\n                        message.ButtonBitmask = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MoveAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MoveAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                if (typeof message.VelocityX !== \"number\")\n                    return \"VelocityX: number expected\";\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                if (typeof message.VelocityY !== \"number\")\n                    return \"VelocityY: number expected\";\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                if (typeof message.VelocityZ !== \"number\")\n                    return \"VelocityZ: number expected\";\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                if (typeof message.AngularVelocityYaw !== \"number\")\n                    return \"AngularVelocityYaw: number expected\";\n            if (message.ButtonBitmask != null && message.hasOwnProperty(\"ButtonBitmask\"))\n                if (!$util.isInteger(message.ButtonBitmask))\n                    return \"ButtonBitmask: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MoveAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         */\n        MoveAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MoveAction)\n                return object;\n            let message = new $root.rov_actions_proto.MoveAction();\n            if (object.VelocityX != null)\n                message.VelocityX = Number(object.VelocityX);\n            if (object.VelocityY != null)\n                message.VelocityY = Number(object.VelocityY);\n            if (object.VelocityZ != null)\n                message.VelocityZ = Number(object.VelocityZ);\n            if (object.AngularVelocityYaw != null)\n                message.AngularVelocityYaw = Number(object.AngularVelocityYaw);\n            if (object.ButtonBitmask != null)\n                message.ButtonBitmask = object.ButtonBitmask | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MoveAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.MoveAction} message MoveAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MoveAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.VelocityX = 0;\n                object.VelocityY = 0;\n                object.VelocityZ = 0;\n                object.AngularVelocityYaw = 0;\n                object.ButtonBitmask = 0;\n            }\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                object.VelocityX = options.json && !isFinite(message.VelocityX) ? String(message.VelocityX) : message.VelocityX;\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                object.VelocityY = options.json && !isFinite(message.VelocityY) ? String(message.VelocityY) : message.VelocityY;\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                object.VelocityZ = options.json && !isFinite(message.VelocityZ) ? String(message.VelocityZ) : message.VelocityZ;\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                object.AngularVelocityYaw = options.json && !isFinite(message.AngularVelocityYaw) ? String(message.AngularVelocityYaw) : message.AngularVelocityYaw;\n            if (message.ButtonBitmask != null && message.hasOwnProperty(\"ButtonBitmask\"))\n                object.ButtonBitmask = message.ButtonBitmask;\n            return object;\n        };\n\n        /**\n         * Converts this MoveAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MoveAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MoveAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MoveAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MoveAction\";\n        };\n\n        return MoveAction;\n    })();\n\n    rov_actions_proto.BeginVideoStreamAction = (function() {\n\n        /**\n         * Properties of a BeginVideoStreamAction.\n         * @memberof rov_actions_proto\n         * @interface IBeginVideoStreamAction\n         */\n\n        /**\n         * Constructs a new BeginVideoStreamAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a BeginVideoStreamAction.\n         * @implements IBeginVideoStreamAction\n         * @constructor\n         * @param {rov_actions_proto.IBeginVideoStreamAction=} [properties] Properties to set\n         */\n        function BeginVideoStreamAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new BeginVideoStreamAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction instance\n         */\n        BeginVideoStreamAction.create = function create(properties) {\n            return new BeginVideoStreamAction(properties);\n        };\n\n        /**\n         * Encodes the specified BeginVideoStreamAction message. Does not implicitly {@link rov_actions_proto.BeginVideoStreamAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction} message BeginVideoStreamAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BeginVideoStreamAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified BeginVideoStreamAction message, length delimited. Does not implicitly {@link rov_actions_proto.BeginVideoStreamAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.IBeginVideoStreamAction} message BeginVideoStreamAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BeginVideoStreamAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a BeginVideoStreamAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BeginVideoStreamAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.BeginVideoStreamAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a BeginVideoStreamAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BeginVideoStreamAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a BeginVideoStreamAction message.\n         * @function verify\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        BeginVideoStreamAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a BeginVideoStreamAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.BeginVideoStreamAction} BeginVideoStreamAction\n         */\n        BeginVideoStreamAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.BeginVideoStreamAction)\n                return object;\n            return new $root.rov_actions_proto.BeginVideoStreamAction();\n        };\n\n        /**\n         * Creates a plain object from a BeginVideoStreamAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {rov_actions_proto.BeginVideoStreamAction} message BeginVideoStreamAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BeginVideoStreamAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this BeginVideoStreamAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BeginVideoStreamAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for BeginVideoStreamAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.BeginVideoStreamAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        BeginVideoStreamAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.BeginVideoStreamAction\";\n        };\n\n        return BeginVideoStreamAction;\n    })();\n\n    rov_actions_proto.TakePhotoAction = (function() {\n\n        /**\n         * Properties of a TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @interface ITakePhotoAction\n         */\n\n        /**\n         * Constructs a new TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakePhotoAction.\n         * @implements ITakePhotoAction\n         * @constructor\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         */\n        function TakePhotoAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakePhotoAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction instance\n         */\n        TakePhotoAction.create = function create(properties) {\n            return new TakePhotoAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakePhotoAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakePhotoAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakePhotoAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakePhotoAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         */\n        TakePhotoAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakePhotoAction)\n                return object;\n            return new $root.rov_actions_proto.TakePhotoAction();\n        };\n\n        /**\n         * Creates a plain object from a TakePhotoAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.TakePhotoAction} message TakePhotoAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakePhotoAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakePhotoAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakePhotoAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakePhotoAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakePhotoAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakePhotoAction\";\n        };\n\n        return TakePhotoAction;\n    })();\n\n    rov_actions_proto.StartVideoRecAction = (function() {\n\n        /**\n         * Properties of a StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStartVideoRecAction\n         */\n\n        /**\n         * Constructs a new StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StartVideoRecAction.\n         * @implements IStartVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         */\n        function StartVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StartVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction instance\n         */\n        StartVideoRecAction.create = function create(properties) {\n            return new StartVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StartVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StartVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StartVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StartVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         */\n        StartVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StartVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StartVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StartVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StartVideoRecAction} message StartVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StartVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StartVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StartVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StartVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StartVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StartVideoRecAction\";\n        };\n\n        return StartVideoRecAction;\n    })();\n\n    rov_actions_proto.StopVideoRecAction = (function() {\n\n        /**\n         * Properties of a StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStopVideoRecAction\n         */\n\n        /**\n         * Constructs a new StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StopVideoRecAction.\n         * @implements IStopVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         */\n        function StopVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StopVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction instance\n         */\n        StopVideoRecAction.create = function create(properties) {\n            return new StopVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StopVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StopVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StopVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StopVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         */\n        StopVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StopVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StopVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StopVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StopVideoRecAction} message StopVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StopVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StopVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StopVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StopVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StopVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StopVideoRecAction\";\n        };\n\n        return StopVideoRecAction;\n    })();\n\n    rov_actions_proto.ToogleLightsAction = (function() {\n\n        /**\n         * Properties of a ToogleLightsAction.\n         * @memberof rov_actions_proto\n         * @interface IToogleLightsAction\n         */\n\n        /**\n         * Constructs a new ToogleLightsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ToogleLightsAction.\n         * @implements IToogleLightsAction\n         * @constructor\n         * @param {rov_actions_proto.IToogleLightsAction=} [properties] Properties to set\n         */\n        function ToogleLightsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ToogleLightsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction instance\n         */\n        ToogleLightsAction.create = function create(properties) {\n            return new ToogleLightsAction(properties);\n        };\n\n        /**\n         * Encodes the specified ToogleLightsAction message. Does not implicitly {@link rov_actions_proto.ToogleLightsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction} message ToogleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToogleLightsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ToogleLightsAction message, length delimited. Does not implicitly {@link rov_actions_proto.ToogleLightsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToogleLightsAction} message ToogleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToogleLightsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ToogleLightsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToogleLightsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ToogleLightsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ToogleLightsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToogleLightsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ToogleLightsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ToogleLightsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ToogleLightsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ToogleLightsAction} ToogleLightsAction\n         */\n        ToogleLightsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ToogleLightsAction)\n                return object;\n            return new $root.rov_actions_proto.ToogleLightsAction();\n        };\n\n        /**\n         * Creates a plain object from a ToogleLightsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {rov_actions_proto.ToogleLightsAction} message ToogleLightsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ToogleLightsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ToogleLightsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ToogleLightsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ToogleLightsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ToogleLightsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ToogleLightsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ToogleLightsAction\";\n        };\n\n        return ToogleLightsAction;\n    })();\n\n    rov_actions_proto.ShutdownRovAction = (function() {\n\n        /**\n         * Properties of a ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @interface IShutdownRovAction\n         */\n\n        /**\n         * Constructs a new ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ShutdownRovAction.\n         * @implements IShutdownRovAction\n         * @constructor\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         */\n        function ShutdownRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ShutdownRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction instance\n         */\n        ShutdownRovAction.create = function create(properties) {\n            return new ShutdownRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ShutdownRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ShutdownRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ShutdownRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ShutdownRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         */\n        ShutdownRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ShutdownRovAction)\n                return object;\n            return new $root.rov_actions_proto.ShutdownRovAction();\n        };\n\n        /**\n         * Creates a plain object from a ShutdownRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.ShutdownRovAction} message ShutdownRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ShutdownRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ShutdownRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ShutdownRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ShutdownRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ShutdownRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ShutdownRovAction\";\n        };\n\n        return ShutdownRovAction;\n    })();\n\n    rov_actions_proto.RebootRovAction = (function() {\n\n        /**\n         * Properties of a RebootRovAction.\n         * @memberof rov_actions_proto\n         * @interface IRebootRovAction\n         */\n\n        /**\n         * Constructs a new RebootRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RebootRovAction.\n         * @implements IRebootRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         */\n        function RebootRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RebootRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction instance\n         */\n        RebootRovAction.create = function create(properties) {\n            return new RebootRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RebootRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RebootRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RebootRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RebootRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         */\n        RebootRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RebootRovAction)\n                return object;\n            return new $root.rov_actions_proto.RebootRovAction();\n        };\n\n        /**\n         * Creates a plain object from a RebootRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.RebootRovAction} message RebootRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RebootRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RebootRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RebootRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RebootRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RebootRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RebootRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RebootRovAction\";\n        };\n\n        return RebootRovAction;\n    })();\n\n    rov_actions_proto.EnableWifiAction = (function() {\n\n        /**\n         * Properties of an EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IEnableWifiAction\n         */\n\n        /**\n         * Constructs a new EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an EnableWifiAction.\n         * @implements IEnableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         */\n        function EnableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new EnableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction instance\n         */\n        EnableWifiAction.create = function create(properties) {\n            return new EnableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.EnableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an EnableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        EnableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates an EnableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         */\n        EnableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.EnableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.EnableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from an EnableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.EnableWifiAction} message EnableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        EnableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this EnableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        EnableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for EnableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        EnableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.EnableWifiAction\";\n        };\n\n        return EnableWifiAction;\n    })();\n\n    rov_actions_proto.DisableWifiAction = (function() {\n\n        /**\n         * Properties of a DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IDisableWifiAction\n         */\n\n        /**\n         * Constructs a new DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DisableWifiAction.\n         * @implements IDisableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         */\n        function DisableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new DisableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction instance\n         */\n        DisableWifiAction.create = function create(properties) {\n            return new DisableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DisableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DisableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DisableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DisableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         */\n        DisableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DisableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.DisableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from a DisableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.DisableWifiAction} message DisableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DisableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this DisableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DisableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DisableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DisableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DisableWifiAction\";\n        };\n\n        return DisableWifiAction;\n    })();\n\n    rov_actions_proto.RovStatusReportAction = (function() {\n\n        /**\n         * Properties of a RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @interface IRovStatusReportAction\n         */\n\n        /**\n         * Constructs a new RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovStatusReportAction.\n         * @implements IRovStatusReportAction\n         * @constructor\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         */\n        function RovStatusReportAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RovStatusReportAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction instance\n         */\n        RovStatusReportAction.create = function create(properties) {\n            return new RovStatusReportAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovStatusReportAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovStatusReportAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovStatusReportAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RovStatusReportAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         */\n        RovStatusReportAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovStatusReportAction)\n                return object;\n            return new $root.rov_actions_proto.RovStatusReportAction();\n        };\n\n        /**\n         * Creates a plain object from a RovStatusReportAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.RovStatusReportAction} message RovStatusReportAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovStatusReportAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RovStatusReportAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovStatusReportAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovStatusReportAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovStatusReportAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovStatusReportAction\";\n        };\n\n        return RovStatusReportAction;\n    })();\n\n    rov_actions_proto.RestartRovServicesAction = (function() {\n\n        /**\n         * Properties of a RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @interface IRestartRovServicesAction\n         */\n\n        /**\n         * Constructs a new RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RestartRovServicesAction.\n         * @implements IRestartRovServicesAction\n         * @constructor\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         */\n        function RestartRovServicesAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RestartRovServicesAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction instance\n         */\n        RestartRovServicesAction.create = function create(properties) {\n            return new RestartRovServicesAction(properties);\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message, length delimited. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RestartRovServicesAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RestartRovServicesAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RestartRovServicesAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RestartRovServicesAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         */\n        RestartRovServicesAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RestartRovServicesAction)\n                return object;\n            return new $root.rov_actions_proto.RestartRovServicesAction();\n        };\n\n        /**\n         * Creates a plain object from a RestartRovServicesAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.RestartRovServicesAction} message RestartRovServicesAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RestartRovServicesAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RestartRovServicesAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RestartRovServicesAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RestartRovServicesAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RestartRovServicesAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RestartRovServicesAction\";\n        };\n\n        return RestartRovServicesAction;\n    })();\n\n    rov_actions_proto.RovLogsAction = (function() {\n\n        /**\n         * Properties of a RovLogsAction.\n         * @memberof rov_actions_proto\n         * @interface IRovLogsAction\n         */\n\n        /**\n         * Constructs a new RovLogsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovLogsAction.\n         * @implements IRovLogsAction\n         * @constructor\n         * @param {rov_actions_proto.IRovLogsAction=} [properties] Properties to set\n         */\n        function RovLogsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RovLogsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction instance\n         */\n        RovLogsAction.create = function create(properties) {\n            return new RovLogsAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovLogsAction message. Does not implicitly {@link rov_actions_proto.RovLogsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction} message RovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovLogsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovLogsAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovLogsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.IRovLogsAction} message RovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovLogsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovLogsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovLogsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovLogsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovLogsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovLogsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovLogsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovLogsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RovLogsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovLogsAction} RovLogsAction\n         */\n        RovLogsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovLogsAction)\n                return object;\n            return new $root.rov_actions_proto.RovLogsAction();\n        };\n\n        /**\n         * Creates a plain object from a RovLogsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {rov_actions_proto.RovLogsAction} message RovLogsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovLogsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RovLogsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovLogsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovLogsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovLogsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovLogsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovLogsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovLogsAction\";\n        };\n\n        return RovLogsAction;\n    })();\n\n    rov_actions_proto.RefreshAllSensorsAction = (function() {\n\n        /**\n         * Properties of a RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @interface IRefreshAllSensorsAction\n         */\n\n        /**\n         * Constructs a new RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RefreshAllSensorsAction.\n         * @implements IRefreshAllSensorsAction\n         * @constructor\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         */\n        function RefreshAllSensorsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RefreshAllSensorsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction instance\n         */\n        RefreshAllSensorsAction.create = function create(properties) {\n            return new RefreshAllSensorsAction(properties);\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message, length delimited. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RefreshAllSensorsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RefreshAllSensorsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RefreshAllSensorsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RefreshAllSensorsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         */\n        RefreshAllSensorsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RefreshAllSensorsAction)\n                return object;\n            return new $root.rov_actions_proto.RefreshAllSensorsAction();\n        };\n\n        /**\n         * Creates a plain object from a RefreshAllSensorsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.RefreshAllSensorsAction} message RefreshAllSensorsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RefreshAllSensorsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RefreshAllSensorsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RefreshAllSensorsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RefreshAllSensorsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RefreshAllSensorsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RefreshAllSensorsAction\";\n        };\n\n        return RefreshAllSensorsAction;\n    })();\n\n    rov_actions_proto.MavlinkAction = (function() {\n\n        /**\n         * Properties of a MavlinkAction.\n         * @memberof rov_actions_proto\n         * @interface IMavlinkAction\n         * @property {Uint8Array|null} [Message] MavlinkAction Message\n         */\n\n        /**\n         * Constructs a new MavlinkAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MavlinkAction.\n         * @implements IMavlinkAction\n         * @constructor\n         * @param {rov_actions_proto.IMavlinkAction=} [properties] Properties to set\n         */\n        function MavlinkAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MavlinkAction Message.\n         * @member {Uint8Array} Message\n         * @memberof rov_actions_proto.MavlinkAction\n         * @instance\n         */\n        MavlinkAction.prototype.Message = $util.newBuffer([]);\n\n        /**\n         * Creates a new MavlinkAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction instance\n         */\n        MavlinkAction.create = function create(properties) {\n            return new MavlinkAction(properties);\n        };\n\n        /**\n         * Encodes the specified MavlinkAction message. Does not implicitly {@link rov_actions_proto.MavlinkAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction} message MavlinkAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MavlinkAction message, length delimited. Does not implicitly {@link rov_actions_proto.MavlinkAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.IMavlinkAction} message MavlinkAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MavlinkAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MavlinkAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.bytes();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MavlinkAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MavlinkAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MavlinkAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!(message.Message && typeof message.Message.length === \"number\" || $util.isString(message.Message)))\n                    return \"Message: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MavlinkAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MavlinkAction} MavlinkAction\n         */\n        MavlinkAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MavlinkAction)\n                return object;\n            let message = new $root.rov_actions_proto.MavlinkAction();\n            if (object.Message != null)\n                if (typeof object.Message === \"string\")\n                    $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);\n                else if (object.Message.length >= 0)\n                    message.Message = object.Message;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MavlinkAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {rov_actions_proto.MavlinkAction} message MavlinkAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MavlinkAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.Message = \"\";\n                else {\n                    object.Message = [];\n                    if (options.bytes !== Array)\n                        object.Message = $util.newBuffer(object.Message);\n                }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this MavlinkAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MavlinkAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MavlinkAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MavlinkAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MavlinkAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MavlinkAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MavlinkAction\";\n        };\n\n        return MavlinkAction;\n    })();\n\n    rov_actions_proto.SimplepeerSignalAction = (function() {\n\n        /**\n         * Properties of a SimplepeerSignalAction.\n         * @memberof rov_actions_proto\n         * @interface ISimplepeerSignalAction\n         * @property {string|null} [Message] SimplepeerSignalAction Message\n         */\n\n        /**\n         * Constructs a new SimplepeerSignalAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplepeerSignalAction.\n         * @implements ISimplepeerSignalAction\n         * @constructor\n         * @param {rov_actions_proto.ISimplepeerSignalAction=} [properties] Properties to set\n         */\n        function SimplepeerSignalAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplepeerSignalAction Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @instance\n         */\n        SimplepeerSignalAction.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplepeerSignalAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction instance\n         */\n        SimplepeerSignalAction.create = function create(properties) {\n            return new SimplepeerSignalAction(properties);\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalAction message. Does not implicitly {@link rov_actions_proto.SimplepeerSignalAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction} message SimplepeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalAction message, length delimited. Does not implicitly {@link rov_actions_proto.SimplepeerSignalAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalAction} message SimplepeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplepeerSignalAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplepeerSignalAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplepeerSignalAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplepeerSignalAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplepeerSignalAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplepeerSignalAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplepeerSignalAction} SimplepeerSignalAction\n         */\n        SimplepeerSignalAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplepeerSignalAction)\n                return object;\n            let message = new $root.rov_actions_proto.SimplepeerSignalAction();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplepeerSignalAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {rov_actions_proto.SimplepeerSignalAction} message SimplepeerSignalAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplepeerSignalAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplepeerSignalAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplepeerSignalAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplepeerSignalAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplepeerSignalAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplepeerSignalAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplepeerSignalAction\";\n        };\n\n        return SimplepeerSignalAction;\n    })();\n\n    rov_actions_proto.DisarmAction = (function() {\n\n        /**\n         * Properties of a DisarmAction.\n         * @memberof rov_actions_proto\n         * @interface IDisarmAction\n         */\n\n        /**\n         * Constructs a new DisarmAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DisarmAction.\n         * @implements IDisarmAction\n         * @constructor\n         * @param {rov_actions_proto.IDisarmAction=} [properties] Properties to set\n         */\n        function DisarmAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new DisarmAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction instance\n         */\n        DisarmAction.create = function create(properties) {\n            return new DisarmAction(properties);\n        };\n\n        /**\n         * Encodes the specified DisarmAction message. Does not implicitly {@link rov_actions_proto.DisarmAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction} message DisarmAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisarmAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DisarmAction message, length delimited. Does not implicitly {@link rov_actions_proto.DisarmAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction} message DisarmAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisarmAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DisarmAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisarmAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DisarmAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DisarmAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisarmAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DisarmAction message.\n         * @function verify\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DisarmAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DisarmAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         */\n        DisarmAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DisarmAction)\n                return object;\n            return new $root.rov_actions_proto.DisarmAction();\n        };\n\n        /**\n         * Creates a plain object from a DisarmAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.DisarmAction} message DisarmAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DisarmAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this DisarmAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DisarmAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DisarmAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DisarmAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DisarmAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DisarmAction\";\n        };\n\n        return DisarmAction;\n    })();\n\n    rov_actions_proto.SetAutopilotModeAction = (function() {\n\n        /**\n         * Properties of a SetAutopilotModeAction.\n         * @memberof rov_actions_proto\n         * @interface ISetAutopilotModeAction\n         * @property {number|null} [mode] SetAutopilotModeAction mode\n         */\n\n        /**\n         * Constructs a new SetAutopilotModeAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SetAutopilotModeAction.\n         * @implements ISetAutopilotModeAction\n         * @constructor\n         * @param {rov_actions_proto.ISetAutopilotModeAction=} [properties] Properties to set\n         */\n        function SetAutopilotModeAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SetAutopilotModeAction mode.\n         * @member {number} mode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @instance\n         */\n        SetAutopilotModeAction.prototype.mode = 0;\n\n        /**\n         * Creates a new SetAutopilotModeAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction instance\n         */\n        SetAutopilotModeAction.create = function create(properties) {\n            return new SetAutopilotModeAction(properties);\n        };\n\n        /**\n         * Encodes the specified SetAutopilotModeAction message. Does not implicitly {@link rov_actions_proto.SetAutopilotModeAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction} message SetAutopilotModeAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetAutopilotModeAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.mode != null && Object.hasOwnProperty.call(message, \"mode\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SetAutopilotModeAction message, length delimited. Does not implicitly {@link rov_actions_proto.SetAutopilotModeAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction} message SetAutopilotModeAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetAutopilotModeAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SetAutopilotModeAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetAutopilotModeAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SetAutopilotModeAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.mode = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SetAutopilotModeAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetAutopilotModeAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SetAutopilotModeAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SetAutopilotModeAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                if (!$util.isInteger(message.mode))\n                    return \"mode: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SetAutopilotModeAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         */\n        SetAutopilotModeAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SetAutopilotModeAction)\n                return object;\n            let message = new $root.rov_actions_proto.SetAutopilotModeAction();\n            if (object.mode != null)\n                message.mode = object.mode | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SetAutopilotModeAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.SetAutopilotModeAction} message SetAutopilotModeAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SetAutopilotModeAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.mode = 0;\n            if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                object.mode = message.mode;\n            return object;\n        };\n\n        /**\n         * Converts this SetAutopilotModeAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SetAutopilotModeAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SetAutopilotModeAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SetAutopilotModeAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SetAutopilotModeAction\";\n        };\n\n        return SetAutopilotModeAction;\n    })();\n\n    rov_actions_proto.ActionBackendMetadata = (function() {\n\n        /**\n         * Properties of an ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IActionBackendMetadata\n         * @property {string|null} [FromUserId] ActionBackendMetadata FromUserId\n         * @property {rov_actions_proto.InternalWebpageEvent|null} [InternalWebpageEvt] ActionBackendMetadata InternalWebpageEvt\n         */\n\n        /**\n         * Constructs a new ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ActionBackendMetadata.\n         * @implements IActionBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         */\n        function ActionBackendMetadata(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ActionBackendMetadata FromUserId.\n         * @member {string} FromUserId\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.FromUserId = \"\";\n\n        /**\n         * ActionBackendMetadata InternalWebpageEvt.\n         * @member {rov_actions_proto.InternalWebpageEvent} InternalWebpageEvt\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.InternalWebpageEvt = 0;\n\n        /**\n         * Creates a new ActionBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata instance\n         */\n        ActionBackendMetadata.create = function create(properties) {\n            return new ActionBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.FromUserId != null && Object.hasOwnProperty.call(message, \"FromUserId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.FromUserId);\n            if (message.InternalWebpageEvt != null && Object.hasOwnProperty.call(message, \"InternalWebpageEvt\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.InternalWebpageEvt);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ActionBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.FromUserId = reader.string();\n                        break;\n                    }\n                case 2: {\n                        message.InternalWebpageEvt = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ActionBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ActionBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.FromUserId != null && message.hasOwnProperty(\"FromUserId\"))\n                if (!$util.isString(message.FromUserId))\n                    return \"FromUserId: string expected\";\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                switch (message.InternalWebpageEvt) {\n                default:\n                    return \"InternalWebpageEvt: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates an ActionBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         */\n        ActionBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ActionBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ActionBackendMetadata();\n            if (object.FromUserId != null)\n                message.FromUserId = String(object.FromUserId);\n            switch (object.InternalWebpageEvt) {\n            default:\n                if (typeof object.InternalWebpageEvt === \"number\") {\n                    message.InternalWebpageEvt = object.InternalWebpageEvt;\n                    break;\n                }\n                break;\n            case \"Nothing\":\n            case 0:\n                message.InternalWebpageEvt = 0;\n                break;\n            case \"RovConnected\":\n            case 1:\n                message.InternalWebpageEvt = 1;\n                break;\n            case \"RovDisconnected\":\n            case 2:\n                message.InternalWebpageEvt = 2;\n                break;\n            case \"UserConnected\":\n            case 3:\n                message.InternalWebpageEvt = 3;\n                break;\n            case \"UserDisconnected\":\n            case 4:\n                message.InternalWebpageEvt = 4;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ActionBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ActionBackendMetadata} message ActionBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ActionBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.FromUserId = \"\";\n                object.InternalWebpageEvt = options.enums === String ? \"Nothing\" : 0;\n            }\n            if (message.FromUserId != null && message.hasOwnProperty(\"FromUserId\"))\n                object.FromUserId = message.FromUserId;\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                object.InternalWebpageEvt = options.enums === String ? $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] === undefined ? message.InternalWebpageEvt : $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] : message.InternalWebpageEvt;\n            return object;\n        };\n\n        /**\n         * Converts this ActionBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ActionBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ActionBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ActionBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ActionBackendMetadata\";\n        };\n\n        return ActionBackendMetadata;\n    })();\n\n    rov_actions_proto.RovAction = (function() {\n\n        /**\n         * Properties of a RovAction.\n         * @memberof rov_actions_proto\n         * @interface IRovAction\n         * @property {rov_actions_proto.IActionBackendMetadata|null} [BackendMetadata] RovAction BackendMetadata\n         * @property {number|null} [ExchangeId] RovAction ExchangeId\n         * @property {rov_actions_proto.IPingAction|null} [Ping] RovAction Ping\n         * @property {rov_actions_proto.IPasswordAttemptAction|null} [PasswordAttempt] RovAction PasswordAttempt\n         * @property {rov_actions_proto.IAuthTokenAttemptAction|null} [AuthTokenAttempt] RovAction AuthTokenAttempt\n         * @property {rov_actions_proto.ITakeControlAction|null} [TakeControl] RovAction TakeControl\n         * @property {rov_actions_proto.IMoveAction|null} [Move] RovAction Move\n         * @property {rov_actions_proto.IBeginVideoStreamAction|null} [BeginVideoStream] RovAction BeginVideoStream\n         * @property {rov_actions_proto.ITakePhotoAction|null} [TakePhoto] RovAction TakePhoto\n         * @property {rov_actions_proto.IStartVideoRecAction|null} [StartVideoRec] RovAction StartVideoRec\n         * @property {rov_actions_proto.IStopVideoRecAction|null} [StopVideoRec] RovAction StopVideoRec\n         * @property {rov_actions_proto.IToogleLightsAction|null} [ToogleLights] RovAction ToogleLights\n         * @property {rov_actions_proto.IShutdownRovAction|null} [ShutdownRov] RovAction ShutdownRov\n         * @property {rov_actions_proto.IRebootRovAction|null} [RebootRov] RovAction RebootRov\n         * @property {rov_actions_proto.IEnableWifiAction|null} [EnableWifi] RovAction EnableWifi\n         * @property {rov_actions_proto.IDisableWifiAction|null} [DisableWifi] RovAction DisableWifi\n         * @property {rov_actions_proto.IRovStatusReportAction|null} [RovStatusReport] RovAction RovStatusReport\n         * @property {rov_actions_proto.IRestartRovServicesAction|null} [RestartRovServices] RovAction RestartRovServices\n         * @property {rov_actions_proto.IRovLogsAction|null} [RovLogs] RovAction RovLogs\n         * @property {rov_actions_proto.IRefreshAllSensorsAction|null} [RefreshAllSensors] RovAction RefreshAllSensors\n         * @property {rov_actions_proto.IMavlinkAction|null} [Mavlink] RovAction Mavlink\n         * @property {rov_actions_proto.ISimplepeerSignalAction|null} [SimplepeerSignal] RovAction SimplepeerSignal\n         * @property {rov_actions_proto.IDisarmAction|null} [Disarm] RovAction Disarm\n         * @property {rov_actions_proto.ISetAutopilotModeAction|null} [SetAutopilotMode] RovAction SetAutopilotMode\n         */\n\n        /**\n         * Constructs a new RovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovAction.\n         * @implements IRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         */\n        function RovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovAction BackendMetadata.\n         * @member {rov_actions_proto.IActionBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.BackendMetadata = null;\n\n        /**\n         * RovAction ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ExchangeId = 0;\n\n        /**\n         * RovAction Ping.\n         * @member {rov_actions_proto.IPingAction|null|undefined} Ping\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Ping = null;\n\n        /**\n         * RovAction PasswordAttempt.\n         * @member {rov_actions_proto.IPasswordAttemptAction|null|undefined} PasswordAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.PasswordAttempt = null;\n\n        /**\n         * RovAction AuthTokenAttempt.\n         * @member {rov_actions_proto.IAuthTokenAttemptAction|null|undefined} AuthTokenAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.AuthTokenAttempt = null;\n\n        /**\n         * RovAction TakeControl.\n         * @member {rov_actions_proto.ITakeControlAction|null|undefined} TakeControl\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakeControl = null;\n\n        /**\n         * RovAction Move.\n         * @member {rov_actions_proto.IMoveAction|null|undefined} Move\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Move = null;\n\n        /**\n         * RovAction BeginVideoStream.\n         * @member {rov_actions_proto.IBeginVideoStreamAction|null|undefined} BeginVideoStream\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.BeginVideoStream = null;\n\n        /**\n         * RovAction TakePhoto.\n         * @member {rov_actions_proto.ITakePhotoAction|null|undefined} TakePhoto\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakePhoto = null;\n\n        /**\n         * RovAction StartVideoRec.\n         * @member {rov_actions_proto.IStartVideoRecAction|null|undefined} StartVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StartVideoRec = null;\n\n        /**\n         * RovAction StopVideoRec.\n         * @member {rov_actions_proto.IStopVideoRecAction|null|undefined} StopVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StopVideoRec = null;\n\n        /**\n         * RovAction ToogleLights.\n         * @member {rov_actions_proto.IToogleLightsAction|null|undefined} ToogleLights\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ToogleLights = null;\n\n        /**\n         * RovAction ShutdownRov.\n         * @member {rov_actions_proto.IShutdownRovAction|null|undefined} ShutdownRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ShutdownRov = null;\n\n        /**\n         * RovAction RebootRov.\n         * @member {rov_actions_proto.IRebootRovAction|null|undefined} RebootRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RebootRov = null;\n\n        /**\n         * RovAction EnableWifi.\n         * @member {rov_actions_proto.IEnableWifiAction|null|undefined} EnableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.EnableWifi = null;\n\n        /**\n         * RovAction DisableWifi.\n         * @member {rov_actions_proto.IDisableWifiAction|null|undefined} DisableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.DisableWifi = null;\n\n        /**\n         * RovAction RovStatusReport.\n         * @member {rov_actions_proto.IRovStatusReportAction|null|undefined} RovStatusReport\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RovStatusReport = null;\n\n        /**\n         * RovAction RestartRovServices.\n         * @member {rov_actions_proto.IRestartRovServicesAction|null|undefined} RestartRovServices\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RestartRovServices = null;\n\n        /**\n         * RovAction RovLogs.\n         * @member {rov_actions_proto.IRovLogsAction|null|undefined} RovLogs\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RovLogs = null;\n\n        /**\n         * RovAction RefreshAllSensors.\n         * @member {rov_actions_proto.IRefreshAllSensorsAction|null|undefined} RefreshAllSensors\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RefreshAllSensors = null;\n\n        /**\n         * RovAction Mavlink.\n         * @member {rov_actions_proto.IMavlinkAction|null|undefined} Mavlink\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Mavlink = null;\n\n        /**\n         * RovAction SimplepeerSignal.\n         * @member {rov_actions_proto.ISimplepeerSignalAction|null|undefined} SimplepeerSignal\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SimplepeerSignal = null;\n\n        /**\n         * RovAction Disarm.\n         * @member {rov_actions_proto.IDisarmAction|null|undefined} Disarm\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Disarm = null;\n\n        /**\n         * RovAction SetAutopilotMode.\n         * @member {rov_actions_proto.ISetAutopilotModeAction|null|undefined} SetAutopilotMode\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SetAutopilotMode = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovAction Body.\n         * @member {\"Ping\"|\"PasswordAttempt\"|\"AuthTokenAttempt\"|\"TakeControl\"|\"Move\"|\"BeginVideoStream\"|\"TakePhoto\"|\"StartVideoRec\"|\"StopVideoRec\"|\"ToogleLights\"|\"ShutdownRov\"|\"RebootRov\"|\"EnableWifi\"|\"DisableWifi\"|\"RovStatusReport\"|\"RestartRovServices\"|\"RovLogs\"|\"RefreshAllSensors\"|\"Mavlink\"|\"SimplepeerSignal\"|\"Disarm\"|\"SetAutopilotMode\"|undefined} Body\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        Object.defineProperty(RovAction.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Ping\", \"PasswordAttempt\", \"AuthTokenAttempt\", \"TakeControl\", \"Move\", \"BeginVideoStream\", \"TakePhoto\", \"StartVideoRec\", \"StopVideoRec\", \"ToogleLights\", \"ShutdownRov\", \"RebootRov\", \"EnableWifi\", \"DisableWifi\", \"RovStatusReport\", \"RestartRovServices\", \"RovLogs\", \"RefreshAllSensors\", \"Mavlink\", \"SimplepeerSignal\", \"Disarm\", \"SetAutopilotMode\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovAction} RovAction instance\n         */\n        RovAction.create = function create(properties) {\n            return new RovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovAction message. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ActionBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Ping != null && Object.hasOwnProperty.call(message, \"Ping\"))\n                $root.rov_actions_proto.PingAction.encode(message.Ping, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.PasswordAttempt != null && Object.hasOwnProperty.call(message, \"PasswordAttempt\"))\n                $root.rov_actions_proto.PasswordAttemptAction.encode(message.PasswordAttempt, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.AuthTokenAttempt != null && Object.hasOwnProperty.call(message, \"AuthTokenAttempt\"))\n                $root.rov_actions_proto.AuthTokenAttemptAction.encode(message.AuthTokenAttempt, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.TakeControl != null && Object.hasOwnProperty.call(message, \"TakeControl\"))\n                $root.rov_actions_proto.TakeControlAction.encode(message.TakeControl, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.Move != null && Object.hasOwnProperty.call(message, \"Move\"))\n                $root.rov_actions_proto.MoveAction.encode(message.Move, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.BeginVideoStream != null && Object.hasOwnProperty.call(message, \"BeginVideoStream\"))\n                $root.rov_actions_proto.BeginVideoStreamAction.encode(message.BeginVideoStream, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.TakePhoto != null && Object.hasOwnProperty.call(message, \"TakePhoto\"))\n                $root.rov_actions_proto.TakePhotoAction.encode(message.TakePhoto, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.StartVideoRec != null && Object.hasOwnProperty.call(message, \"StartVideoRec\"))\n                $root.rov_actions_proto.StartVideoRecAction.encode(message.StartVideoRec, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.StopVideoRec != null && Object.hasOwnProperty.call(message, \"StopVideoRec\"))\n                $root.rov_actions_proto.StopVideoRecAction.encode(message.StopVideoRec, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.ToogleLights != null && Object.hasOwnProperty.call(message, \"ToogleLights\"))\n                $root.rov_actions_proto.ToogleLightsAction.encode(message.ToogleLights, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.ShutdownRov != null && Object.hasOwnProperty.call(message, \"ShutdownRov\"))\n                $root.rov_actions_proto.ShutdownRovAction.encode(message.ShutdownRov, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.RebootRov != null && Object.hasOwnProperty.call(message, \"RebootRov\"))\n                $root.rov_actions_proto.RebootRovAction.encode(message.RebootRov, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.EnableWifi != null && Object.hasOwnProperty.call(message, \"EnableWifi\"))\n                $root.rov_actions_proto.EnableWifiAction.encode(message.EnableWifi, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.DisableWifi != null && Object.hasOwnProperty.call(message, \"DisableWifi\"))\n                $root.rov_actions_proto.DisableWifiAction.encode(message.DisableWifi, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.RovStatusReport != null && Object.hasOwnProperty.call(message, \"RovStatusReport\"))\n                $root.rov_actions_proto.RovStatusReportAction.encode(message.RovStatusReport, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.RestartRovServices != null && Object.hasOwnProperty.call(message, \"RestartRovServices\"))\n                $root.rov_actions_proto.RestartRovServicesAction.encode(message.RestartRovServices, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            if (message.RovLogs != null && Object.hasOwnProperty.call(message, \"RovLogs\"))\n                $root.rov_actions_proto.RovLogsAction.encode(message.RovLogs, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n            if (message.RefreshAllSensors != null && Object.hasOwnProperty.call(message, \"RefreshAllSensors\"))\n                $root.rov_actions_proto.RefreshAllSensorsAction.encode(message.RefreshAllSensors, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n            if (message.Mavlink != null && Object.hasOwnProperty.call(message, \"Mavlink\"))\n                $root.rov_actions_proto.MavlinkAction.encode(message.Mavlink, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n            if (message.SimplepeerSignal != null && Object.hasOwnProperty.call(message, \"SimplepeerSignal\"))\n                $root.rov_actions_proto.SimplepeerSignalAction.encode(message.SimplepeerSignal, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n            if (message.Disarm != null && Object.hasOwnProperty.call(message, \"Disarm\"))\n                $root.rov_actions_proto.DisarmAction.encode(message.Disarm, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n            if (message.SetAutopilotMode != null && Object.hasOwnProperty.call(message, \"SetAutopilotMode\"))\n                $root.rov_actions_proto.SetAutopilotModeAction.encode(message.SetAutopilotMode, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Ping = $root.rov_actions_proto.PingAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.TakeControl = $root.rov_actions_proto.TakeControlAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.Move = $root.rov_actions_proto.MoveAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 11: {\n                        message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 12: {\n                        message.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.RebootRov = $root.rov_actions_proto.RebootRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 19: {\n                        message.RovLogs = $root.rov_actions_proto.RovLogsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 20: {\n                        message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 21: {\n                        message.Mavlink = $root.rov_actions_proto.MavlinkAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 22: {\n                        message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 23: {\n                        message.Disarm = $root.rov_actions_proto.DisarmAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 24: {\n                        message.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ActionBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PingAction.verify(message.Ping);\n                    if (error)\n                        return \"Ping.\" + error;\n                }\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAttemptAction.verify(message.PasswordAttempt);\n                    if (error)\n                        return \"PasswordAttempt.\" + error;\n                }\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.AuthTokenAttemptAction.verify(message.AuthTokenAttempt);\n                    if (error)\n                        return \"AuthTokenAttempt.\" + error;\n                }\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakeControlAction.verify(message.TakeControl);\n                    if (error)\n                        return \"TakeControl.\" + error;\n                }\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MoveAction.verify(message.Move);\n                    if (error)\n                        return \"Move.\" + error;\n                }\n            }\n            if (message.BeginVideoStream != null && message.hasOwnProperty(\"BeginVideoStream\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.BeginVideoStreamAction.verify(message.BeginVideoStream);\n                    if (error)\n                        return \"BeginVideoStream.\" + error;\n                }\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakePhotoAction.verify(message.TakePhoto);\n                    if (error)\n                        return \"TakePhoto.\" + error;\n                }\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StartVideoRecAction.verify(message.StartVideoRec);\n                    if (error)\n                        return \"StartVideoRec.\" + error;\n                }\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StopVideoRecAction.verify(message.StopVideoRec);\n                    if (error)\n                        return \"StopVideoRec.\" + error;\n                }\n            }\n            if (message.ToogleLights != null && message.hasOwnProperty(\"ToogleLights\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ToogleLightsAction.verify(message.ToogleLights);\n                    if (error)\n                        return \"ToogleLights.\" + error;\n                }\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ShutdownRovAction.verify(message.ShutdownRov);\n                    if (error)\n                        return \"ShutdownRov.\" + error;\n                }\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RebootRovAction.verify(message.RebootRov);\n                    if (error)\n                        return \"RebootRov.\" + error;\n                }\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.EnableWifiAction.verify(message.EnableWifi);\n                    if (error)\n                        return \"EnableWifi.\" + error;\n                }\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DisableWifiAction.verify(message.DisableWifi);\n                    if (error)\n                        return \"DisableWifi.\" + error;\n                }\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RovStatusReportAction.verify(message.RovStatusReport);\n                    if (error)\n                        return \"RovStatusReport.\" + error;\n                }\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RestartRovServicesAction.verify(message.RestartRovServices);\n                    if (error)\n                        return \"RestartRovServices.\" + error;\n                }\n            }\n            if (message.RovLogs != null && message.hasOwnProperty(\"RovLogs\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RovLogsAction.verify(message.RovLogs);\n                    if (error)\n                        return \"RovLogs.\" + error;\n                }\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RefreshAllSensorsAction.verify(message.RefreshAllSensors);\n                    if (error)\n                        return \"RefreshAllSensors.\" + error;\n                }\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MavlinkAction.verify(message.Mavlink);\n                    if (error)\n                        return \"Mavlink.\" + error;\n                }\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplepeerSignalAction.verify(message.SimplepeerSignal);\n                    if (error)\n                        return \"SimplepeerSignal.\" + error;\n                }\n            }\n            if (message.Disarm != null && message.hasOwnProperty(\"Disarm\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DisarmAction.verify(message.Disarm);\n                    if (error)\n                        return \"Disarm.\" + error;\n                }\n            }\n            if (message.SetAutopilotMode != null && message.hasOwnProperty(\"SetAutopilotMode\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SetAutopilotModeAction.verify(message.SetAutopilotMode);\n                    if (error)\n                        return \"SetAutopilotMode.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovAction} RovAction\n         */\n        RovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovAction)\n                return object;\n            let message = new $root.rov_actions_proto.RovAction();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Ping != null) {\n                if (typeof object.Ping !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Ping: object expected\");\n                message.Ping = $root.rov_actions_proto.PingAction.fromObject(object.Ping);\n            }\n            if (object.PasswordAttempt != null) {\n                if (typeof object.PasswordAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.PasswordAttempt: object expected\");\n                message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.fromObject(object.PasswordAttempt);\n            }\n            if (object.AuthTokenAttempt != null) {\n                if (typeof object.AuthTokenAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.AuthTokenAttempt: object expected\");\n                message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.fromObject(object.AuthTokenAttempt);\n            }\n            if (object.TakeControl != null) {\n                if (typeof object.TakeControl !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakeControl: object expected\");\n                message.TakeControl = $root.rov_actions_proto.TakeControlAction.fromObject(object.TakeControl);\n            }\n            if (object.Move != null) {\n                if (typeof object.Move !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Move: object expected\");\n                message.Move = $root.rov_actions_proto.MoveAction.fromObject(object.Move);\n            }\n            if (object.BeginVideoStream != null) {\n                if (typeof object.BeginVideoStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.BeginVideoStream: object expected\");\n                message.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.fromObject(object.BeginVideoStream);\n            }\n            if (object.TakePhoto != null) {\n                if (typeof object.TakePhoto !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakePhoto: object expected\");\n                message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.fromObject(object.TakePhoto);\n            }\n            if (object.StartVideoRec != null) {\n                if (typeof object.StartVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StartVideoRec: object expected\");\n                message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.fromObject(object.StartVideoRec);\n            }\n            if (object.StopVideoRec != null) {\n                if (typeof object.StopVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StopVideoRec: object expected\");\n                message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.fromObject(object.StopVideoRec);\n            }\n            if (object.ToogleLights != null) {\n                if (typeof object.ToogleLights !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ToogleLights: object expected\");\n                message.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.fromObject(object.ToogleLights);\n            }\n            if (object.ShutdownRov != null) {\n                if (typeof object.ShutdownRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ShutdownRov: object expected\");\n                message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.fromObject(object.ShutdownRov);\n            }\n            if (object.RebootRov != null) {\n                if (typeof object.RebootRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RebootRov: object expected\");\n                message.RebootRov = $root.rov_actions_proto.RebootRovAction.fromObject(object.RebootRov);\n            }\n            if (object.EnableWifi != null) {\n                if (typeof object.EnableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.EnableWifi: object expected\");\n                message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.fromObject(object.EnableWifi);\n            }\n            if (object.DisableWifi != null) {\n                if (typeof object.DisableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.DisableWifi: object expected\");\n                message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.fromObject(object.DisableWifi);\n            }\n            if (object.RovStatusReport != null) {\n                if (typeof object.RovStatusReport !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RovStatusReport: object expected\");\n                message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.fromObject(object.RovStatusReport);\n            }\n            if (object.RestartRovServices != null) {\n                if (typeof object.RestartRovServices !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RestartRovServices: object expected\");\n                message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.fromObject(object.RestartRovServices);\n            }\n            if (object.RovLogs != null) {\n                if (typeof object.RovLogs !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RovLogs: object expected\");\n                message.RovLogs = $root.rov_actions_proto.RovLogsAction.fromObject(object.RovLogs);\n            }\n            if (object.RefreshAllSensors != null) {\n                if (typeof object.RefreshAllSensors !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RefreshAllSensors: object expected\");\n                message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.fromObject(object.RefreshAllSensors);\n            }\n            if (object.Mavlink != null) {\n                if (typeof object.Mavlink !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Mavlink: object expected\");\n                message.Mavlink = $root.rov_actions_proto.MavlinkAction.fromObject(object.Mavlink);\n            }\n            if (object.SimplepeerSignal != null) {\n                if (typeof object.SimplepeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SimplepeerSignal: object expected\");\n                message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.fromObject(object.SimplepeerSignal);\n            }\n            if (object.Disarm != null) {\n                if (typeof object.Disarm !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Disarm: object expected\");\n                message.Disarm = $root.rov_actions_proto.DisarmAction.fromObject(object.Disarm);\n            }\n            if (object.SetAutopilotMode != null) {\n                if (typeof object.SetAutopilotMode !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SetAutopilotMode: object expected\");\n                message.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.fromObject(object.SetAutopilotMode);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.RovAction} message RovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                object.Ping = $root.rov_actions_proto.PingAction.toObject(message.Ping, options);\n                if (options.oneofs)\n                    object.Body = \"Ping\";\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                object.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.toObject(message.PasswordAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAttempt\";\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                object.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.toObject(message.AuthTokenAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"AuthTokenAttempt\";\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                object.TakeControl = $root.rov_actions_proto.TakeControlAction.toObject(message.TakeControl, options);\n                if (options.oneofs)\n                    object.Body = \"TakeControl\";\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                object.Move = $root.rov_actions_proto.MoveAction.toObject(message.Move, options);\n                if (options.oneofs)\n                    object.Body = \"Move\";\n            }\n            if (message.BeginVideoStream != null && message.hasOwnProperty(\"BeginVideoStream\")) {\n                object.BeginVideoStream = $root.rov_actions_proto.BeginVideoStreamAction.toObject(message.BeginVideoStream, options);\n                if (options.oneofs)\n                    object.Body = \"BeginVideoStream\";\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                object.TakePhoto = $root.rov_actions_proto.TakePhotoAction.toObject(message.TakePhoto, options);\n                if (options.oneofs)\n                    object.Body = \"TakePhoto\";\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                object.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.toObject(message.StartVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StartVideoRec\";\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                object.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.toObject(message.StopVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StopVideoRec\";\n            }\n            if (message.ToogleLights != null && message.hasOwnProperty(\"ToogleLights\")) {\n                object.ToogleLights = $root.rov_actions_proto.ToogleLightsAction.toObject(message.ToogleLights, options);\n                if (options.oneofs)\n                    object.Body = \"ToogleLights\";\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                object.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.toObject(message.ShutdownRov, options);\n                if (options.oneofs)\n                    object.Body = \"ShutdownRov\";\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                object.RebootRov = $root.rov_actions_proto.RebootRovAction.toObject(message.RebootRov, options);\n                if (options.oneofs)\n                    object.Body = \"RebootRov\";\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                object.EnableWifi = $root.rov_actions_proto.EnableWifiAction.toObject(message.EnableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"EnableWifi\";\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                object.DisableWifi = $root.rov_actions_proto.DisableWifiAction.toObject(message.DisableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"DisableWifi\";\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                object.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.toObject(message.RovStatusReport, options);\n                if (options.oneofs)\n                    object.Body = \"RovStatusReport\";\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                object.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.toObject(message.RestartRovServices, options);\n                if (options.oneofs)\n                    object.Body = \"RestartRovServices\";\n            }\n            if (message.RovLogs != null && message.hasOwnProperty(\"RovLogs\")) {\n                object.RovLogs = $root.rov_actions_proto.RovLogsAction.toObject(message.RovLogs, options);\n                if (options.oneofs)\n                    object.Body = \"RovLogs\";\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                object.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.toObject(message.RefreshAllSensors, options);\n                if (options.oneofs)\n                    object.Body = \"RefreshAllSensors\";\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                object.Mavlink = $root.rov_actions_proto.MavlinkAction.toObject(message.Mavlink, options);\n                if (options.oneofs)\n                    object.Body = \"Mavlink\";\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                object.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalAction.toObject(message.SimplepeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplepeerSignal\";\n            }\n            if (message.Disarm != null && message.hasOwnProperty(\"Disarm\")) {\n                object.Disarm = $root.rov_actions_proto.DisarmAction.toObject(message.Disarm, options);\n                if (options.oneofs)\n                    object.Body = \"Disarm\";\n            }\n            if (message.SetAutopilotMode != null && message.hasOwnProperty(\"SetAutopilotMode\")) {\n                object.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.toObject(message.SetAutopilotMode, options);\n                if (options.oneofs)\n                    object.Body = \"SetAutopilotMode\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovAction\";\n        };\n\n        return RovAction;\n    })();\n\n    rov_actions_proto.DoneResponse = (function() {\n\n        /**\n         * Properties of a DoneResponse.\n         * @memberof rov_actions_proto\n         * @interface IDoneResponse\n         * @property {string|null} [Message] DoneResponse Message\n         */\n\n        /**\n         * Constructs a new DoneResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DoneResponse.\n         * @implements IDoneResponse\n         * @constructor\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         */\n        function DoneResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DoneResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         */\n        DoneResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new DoneResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse instance\n         */\n        DoneResponse.create = function create(properties) {\n            return new DoneResponse(properties);\n        };\n\n        /**\n         * Encodes the specified DoneResponse message. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DoneResponse message, length delimited. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DoneResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DoneResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DoneResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DoneResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         */\n        DoneResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DoneResponse)\n                return object;\n            let message = new $root.rov_actions_proto.DoneResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a DoneResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.DoneResponse} message DoneResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DoneResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this DoneResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DoneResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DoneResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DoneResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DoneResponse\";\n        };\n\n        return DoneResponse;\n    })();\n\n    rov_actions_proto.ErrorResponse = (function() {\n\n        /**\n         * Properties of an ErrorResponse.\n         * @memberof rov_actions_proto\n         * @interface IErrorResponse\n         * @property {string|null} [Message] ErrorResponse Message\n         */\n\n        /**\n         * Constructs a new ErrorResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ErrorResponse.\n         * @implements IErrorResponse\n         * @constructor\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         */\n        function ErrorResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ErrorResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         */\n        ErrorResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ErrorResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse instance\n         */\n        ErrorResponse.create = function create(properties) {\n            return new ErrorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ErrorResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ErrorResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ErrorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an ErrorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         */\n        ErrorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ErrorResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ErrorResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ErrorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.ErrorResponse} message ErrorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ErrorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ErrorResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ErrorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ErrorResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ErrorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ErrorResponse\";\n        };\n\n        return ErrorResponse;\n    })();\n\n    rov_actions_proto.PongResponse = (function() {\n\n        /**\n         * Properties of a PongResponse.\n         * @memberof rov_actions_proto\n         * @interface IPongResponse\n         * @property {number|Long|null} [Time] PongResponse Time\n         */\n\n        /**\n         * Constructs a new PongResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PongResponse.\n         * @implements IPongResponse\n         * @constructor\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         */\n        function PongResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PongResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         */\n        PongResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PongResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PongResponse} PongResponse instance\n         */\n        PongResponse.create = function create(properties) {\n            return new PongResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PongResponse message. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PongResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PongResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PongResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PongResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PongResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         */\n        PongResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PongResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PongResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PongResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.PongResponse} message PongResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PongResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PongResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PongResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PongResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PongResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PongResponse\";\n        };\n\n        return PongResponse;\n    })();\n\n    rov_actions_proto.SensorUpdatesResponse = (function() {\n\n        /**\n         * Properties of a SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @interface ISensorUpdatesResponse\n         * @property {Array.<rov_actions_proto.IMeasurement>|null} [MeasurementUpdates] SensorUpdatesResponse MeasurementUpdates\n         */\n\n        /**\n         * Constructs a new SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SensorUpdatesResponse.\n         * @implements ISensorUpdatesResponse\n         * @constructor\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         */\n        function SensorUpdatesResponse(properties) {\n            this.MeasurementUpdates = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SensorUpdatesResponse MeasurementUpdates.\n         * @member {Array.<rov_actions_proto.IMeasurement>} MeasurementUpdates\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         */\n        SensorUpdatesResponse.prototype.MeasurementUpdates = $util.emptyArray;\n\n        /**\n         * Creates a new SensorUpdatesResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse instance\n         */\n        SensorUpdatesResponse.create = function create(properties) {\n            return new SensorUpdatesResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementUpdates != null && message.MeasurementUpdates.length)\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i)\n                    $root.rov_actions_proto.Measurement.encode(message.MeasurementUpdates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.MeasurementUpdates && message.MeasurementUpdates.length))\n                            message.MeasurementUpdates = [];\n                        message.MeasurementUpdates.push($root.rov_actions_proto.Measurement.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SensorUpdatesResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SensorUpdatesResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementUpdates != null && message.hasOwnProperty(\"MeasurementUpdates\")) {\n                if (!Array.isArray(message.MeasurementUpdates))\n                    return \"MeasurementUpdates: array expected\";\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i) {\n                    let error = $root.rov_actions_proto.Measurement.verify(message.MeasurementUpdates[i]);\n                    if (error)\n                        return \"MeasurementUpdates.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SensorUpdatesResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         */\n        SensorUpdatesResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SensorUpdatesResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            if (object.MeasurementUpdates) {\n                if (!Array.isArray(object.MeasurementUpdates))\n                    throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: array expected\");\n                message.MeasurementUpdates = [];\n                for (let i = 0; i < object.MeasurementUpdates.length; ++i) {\n                    if (typeof object.MeasurementUpdates[i] !== \"object\")\n                        throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: object expected\");\n                    message.MeasurementUpdates[i] = $root.rov_actions_proto.Measurement.fromObject(object.MeasurementUpdates[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SensorUpdatesResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.SensorUpdatesResponse} message SensorUpdatesResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SensorUpdatesResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.MeasurementUpdates = [];\n            if (message.MeasurementUpdates && message.MeasurementUpdates.length) {\n                object.MeasurementUpdates = [];\n                for (let j = 0; j < message.MeasurementUpdates.length; ++j)\n                    object.MeasurementUpdates[j] = $root.rov_actions_proto.Measurement.toObject(message.MeasurementUpdates[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SensorUpdatesResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SensorUpdatesResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SensorUpdatesResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SensorUpdatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SensorUpdatesResponse\";\n        };\n\n        return SensorUpdatesResponse;\n    })();\n\n    rov_actions_proto.PasswordRequiredResponse = (function() {\n\n        /**\n         * Properties of a PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordRequiredResponse\n         * @property {string|null} [RovId] PasswordRequiredResponse RovId\n         */\n\n        /**\n         * Constructs a new PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordRequiredResponse.\n         * @implements IPasswordRequiredResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         */\n        function PasswordRequiredResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordRequiredResponse RovId.\n         * @member {string} RovId\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         */\n        PasswordRequiredResponse.prototype.RovId = \"\";\n\n        /**\n         * Creates a new PasswordRequiredResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse instance\n         */\n        PasswordRequiredResponse.create = function create(properties) {\n            return new PasswordRequiredResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RovId != null && Object.hasOwnProperty.call(message, \"RovId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.RovId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.RovId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordRequiredResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordRequiredResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                if (!$util.isString(message.RovId))\n                    return \"RovId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordRequiredResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         */\n        PasswordRequiredResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordRequiredResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            if (object.RovId != null)\n                message.RovId = String(object.RovId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordRequiredResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.PasswordRequiredResponse} message PasswordRequiredResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordRequiredResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.RovId = \"\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                object.RovId = message.RovId;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordRequiredResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordRequiredResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordRequiredResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordRequiredResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordRequiredResponse\";\n        };\n\n        return PasswordRequiredResponse;\n    })();\n\n    rov_actions_proto.PasswordAcceptedResponse = (function() {\n\n        /**\n         * Properties of a PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAcceptedResponse\n         * @property {string|null} [AuthToken] PasswordAcceptedResponse AuthToken\n         */\n\n        /**\n         * Constructs a new PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAcceptedResponse.\n         * @implements IPasswordAcceptedResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         */\n        function PasswordAcceptedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAcceptedResponse AuthToken.\n         * @member {string} AuthToken\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         */\n        PasswordAcceptedResponse.prototype.AuthToken = \"\";\n\n        /**\n         * Creates a new PasswordAcceptedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse instance\n         */\n        PasswordAcceptedResponse.create = function create(properties) {\n            return new PasswordAcceptedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.AuthToken != null && Object.hasOwnProperty.call(message, \"AuthToken\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.AuthToken);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.AuthToken = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAcceptedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAcceptedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                if (!$util.isString(message.AuthToken))\n                    return \"AuthToken: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAcceptedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         */\n        PasswordAcceptedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAcceptedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            if (object.AuthToken != null)\n                message.AuthToken = String(object.AuthToken);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAcceptedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.PasswordAcceptedResponse} message PasswordAcceptedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAcceptedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.AuthToken = \"\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                object.AuthToken = message.AuthToken;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAcceptedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAcceptedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAcceptedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAcceptedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAcceptedResponse\";\n        };\n\n        return PasswordAcceptedResponse;\n    })();\n\n    rov_actions_proto.PasswordInvalidResponse = (function() {\n\n        /**\n         * Properties of a PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordInvalidResponse\n         */\n\n        /**\n         * Constructs a new PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordInvalidResponse.\n         * @implements IPasswordInvalidResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         */\n        function PasswordInvalidResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new PasswordInvalidResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse instance\n         */\n        PasswordInvalidResponse.create = function create(properties) {\n            return new PasswordInvalidResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordInvalidResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordInvalidResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordInvalidResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordInvalidResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         */\n        PasswordInvalidResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordInvalidResponse)\n                return object;\n            return new $root.rov_actions_proto.PasswordInvalidResponse();\n        };\n\n        /**\n         * Creates a plain object from a PasswordInvalidResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.PasswordInvalidResponse} message PasswordInvalidResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordInvalidResponse.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this PasswordInvalidResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordInvalidResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordInvalidResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordInvalidResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordInvalidResponse\";\n        };\n\n        return PasswordInvalidResponse;\n    })();\n\n    rov_actions_proto.DriverChangedResponse = (function() {\n\n        /**\n         * Properties of a DriverChangedResponse.\n         * @memberof rov_actions_proto\n         * @interface IDriverChangedResponse\n         * @property {string|null} [DriverPeerId] DriverChangedResponse DriverPeerId\n         */\n\n        /**\n         * Constructs a new DriverChangedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DriverChangedResponse.\n         * @implements IDriverChangedResponse\n         * @constructor\n         * @param {rov_actions_proto.IDriverChangedResponse=} [properties] Properties to set\n         */\n        function DriverChangedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DriverChangedResponse DriverPeerId.\n         * @member {string} DriverPeerId\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @instance\n         */\n        DriverChangedResponse.prototype.DriverPeerId = \"\";\n\n        /**\n         * Creates a new DriverChangedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse instance\n         */\n        DriverChangedResponse.create = function create(properties) {\n            return new DriverChangedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified DriverChangedResponse message. Does not implicitly {@link rov_actions_proto.DriverChangedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse} message DriverChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DriverChangedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.DriverPeerId != null && Object.hasOwnProperty.call(message, \"DriverPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.DriverPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DriverChangedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.DriverChangedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.IDriverChangedResponse} message DriverChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DriverChangedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DriverChangedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DriverChangedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DriverChangedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.DriverPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DriverChangedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DriverChangedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DriverChangedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DriverChangedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.DriverPeerId != null && message.hasOwnProperty(\"DriverPeerId\"))\n                if (!$util.isString(message.DriverPeerId))\n                    return \"DriverPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DriverChangedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DriverChangedResponse} DriverChangedResponse\n         */\n        DriverChangedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DriverChangedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.DriverChangedResponse();\n            if (object.DriverPeerId != null)\n                message.DriverPeerId = String(object.DriverPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a DriverChangedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {rov_actions_proto.DriverChangedResponse} message DriverChangedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DriverChangedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.DriverPeerId = \"\";\n            if (message.DriverPeerId != null && message.hasOwnProperty(\"DriverPeerId\"))\n                object.DriverPeerId = message.DriverPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this DriverChangedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DriverChangedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DriverChangedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DriverChangedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DriverChangedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DriverChangedResponse\";\n        };\n\n        return DriverChangedResponse;\n    })();\n\n    rov_actions_proto.ClientConnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientConnectedResponse\n         * @property {string|null} [ClientPeerId] ClientConnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientConnectedResponse.\n         * @implements IClientConnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         */\n        function ClientConnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientConnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         */\n        ClientConnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientConnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse instance\n         */\n        ClientConnectedResponse.create = function create(properties) {\n            return new ClientConnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientConnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientConnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientConnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientConnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         */\n        ClientConnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientConnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientConnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientConnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientConnectedResponse} message ClientConnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientConnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientConnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientConnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientConnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientConnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientConnectedResponse\";\n        };\n\n        return ClientConnectedResponse;\n    })();\n\n    rov_actions_proto.ClientDisconnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientDisconnectedResponse\n         * @property {string|null} [ClientPeerId] ClientDisconnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientDisconnectedResponse.\n         * @implements IClientDisconnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         */\n        function ClientDisconnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientDisconnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         */\n        ClientDisconnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientDisconnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse instance\n         */\n        ClientDisconnectedResponse.create = function create(properties) {\n            return new ClientDisconnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientDisconnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientDisconnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientDisconnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         */\n        ClientDisconnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientDisconnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientDisconnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientDisconnectedResponse} message ClientDisconnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientDisconnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientDisconnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientDisconnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientDisconnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientDisconnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientDisconnectedResponse\";\n        };\n\n        return ClientDisconnectedResponse;\n    })();\n\n    rov_actions_proto.HeartbeatResponse = (function() {\n\n        /**\n         * Properties of a HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @interface IHeartbeatResponse\n         * @property {number|Long|null} [Time] HeartbeatResponse Time\n         */\n\n        /**\n         * Constructs a new HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a HeartbeatResponse.\n         * @implements IHeartbeatResponse\n         * @constructor\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         */\n        function HeartbeatResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * HeartbeatResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         */\n        HeartbeatResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new HeartbeatResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse instance\n         */\n        HeartbeatResponse.create = function create(properties) {\n            return new HeartbeatResponse(properties);\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message, length delimited. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.HeartbeatResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a HeartbeatResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        HeartbeatResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a HeartbeatResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         */\n        HeartbeatResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.HeartbeatResponse)\n                return object;\n            let message = new $root.rov_actions_proto.HeartbeatResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a HeartbeatResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.HeartbeatResponse} message HeartbeatResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        HeartbeatResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this HeartbeatResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        HeartbeatResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for HeartbeatResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        HeartbeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.HeartbeatResponse\";\n        };\n\n        return HeartbeatResponse;\n    })();\n\n    rov_actions_proto.ContinuedOutputResponse = (function() {\n\n        /**\n         * Properties of a ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @interface IContinuedOutputResponse\n         * @property {string|null} [Message] ContinuedOutputResponse Message\n         */\n\n        /**\n         * Constructs a new ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ContinuedOutputResponse.\n         * @implements IContinuedOutputResponse\n         * @constructor\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         */\n        function ContinuedOutputResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ContinuedOutputResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         */\n        ContinuedOutputResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ContinuedOutputResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse instance\n         */\n        ContinuedOutputResponse.create = function create(properties) {\n            return new ContinuedOutputResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ContinuedOutputResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ContinuedOutputResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ContinuedOutputResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         */\n        ContinuedOutputResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ContinuedOutputResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ContinuedOutputResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.ContinuedOutputResponse} message ContinuedOutputResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ContinuedOutputResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ContinuedOutputResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ContinuedOutputResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ContinuedOutputResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ContinuedOutputResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ContinuedOutputResponse\";\n        };\n\n        return ContinuedOutputResponse;\n    })();\n\n    rov_actions_proto.MavlinkResponse = (function() {\n\n        /**\n         * Properties of a MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @interface IMavlinkResponse\n         * @property {Uint8Array|null} [Message] MavlinkResponse Message\n         */\n\n        /**\n         * Constructs a new MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MavlinkResponse.\n         * @implements IMavlinkResponse\n         * @constructor\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         */\n        function MavlinkResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MavlinkResponse Message.\n         * @member {Uint8Array} Message\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         */\n        MavlinkResponse.prototype.Message = $util.newBuffer([]);\n\n        /**\n         * Creates a new MavlinkResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse instance\n         */\n        MavlinkResponse.create = function create(properties) {\n            return new MavlinkResponse(properties);\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message, length delimited. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MavlinkResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.bytes();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MavlinkResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MavlinkResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!(message.Message && typeof message.Message.length === \"number\" || $util.isString(message.Message)))\n                    return \"Message: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MavlinkResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         */\n        MavlinkResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MavlinkResponse)\n                return object;\n            let message = new $root.rov_actions_proto.MavlinkResponse();\n            if (object.Message != null)\n                if (typeof object.Message === \"string\")\n                    $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);\n                else if (object.Message.length >= 0)\n                    message.Message = object.Message;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MavlinkResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.MavlinkResponse} message MavlinkResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MavlinkResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.Message = \"\";\n                else {\n                    object.Message = [];\n                    if (options.bytes !== Array)\n                        object.Message = $util.newBuffer(object.Message);\n                }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this MavlinkResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MavlinkResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MavlinkResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MavlinkResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MavlinkResponse\";\n        };\n\n        return MavlinkResponse;\n    })();\n\n    rov_actions_proto.SimplepeerSignalResponse = (function() {\n\n        /**\n         * Properties of a SimplepeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @interface ISimplepeerSignalResponse\n         * @property {string|null} [Message] SimplepeerSignalResponse Message\n         */\n\n        /**\n         * Constructs a new SimplepeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplepeerSignalResponse.\n         * @implements ISimplepeerSignalResponse\n         * @constructor\n         * @param {rov_actions_proto.ISimplepeerSignalResponse=} [properties] Properties to set\n         */\n        function SimplepeerSignalResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplepeerSignalResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @instance\n         */\n        SimplepeerSignalResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplepeerSignalResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse instance\n         */\n        SimplepeerSignalResponse.create = function create(properties) {\n            return new SimplepeerSignalResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalResponse message. Does not implicitly {@link rov_actions_proto.SimplepeerSignalResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse} message SimplepeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplepeerSignalResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SimplepeerSignalResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplepeerSignalResponse} message SimplepeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplepeerSignalResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplepeerSignalResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplepeerSignalResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplepeerSignalResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplepeerSignalResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplepeerSignalResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplepeerSignalResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplepeerSignalResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplepeerSignalResponse} SimplepeerSignalResponse\n         */\n        SimplepeerSignalResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplepeerSignalResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SimplepeerSignalResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplepeerSignalResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.SimplepeerSignalResponse} message SimplepeerSignalResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplepeerSignalResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplepeerSignalResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplepeerSignalResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplepeerSignalResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplepeerSignalResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplepeerSignalResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplepeerSignalResponse\";\n        };\n\n        return SimplepeerSignalResponse;\n    })();\n\n    rov_actions_proto.SystemMonitorResponse = (function() {\n\n        /**\n         * Properties of a SystemMonitorResponse.\n         * @memberof rov_actions_proto\n         * @interface ISystemMonitorResponse\n         * @property {number|null} [CpuTemp] SystemMonitorResponse CpuTemp\n         * @property {number|null} [CpuUsage] SystemMonitorResponse CpuUsage\n         * @property {number|null} [MemoryUsage] SystemMonitorResponse MemoryUsage\n         * @property {number|null} [DiskUsage] SystemMonitorResponse DiskUsage\n         * @property {Array.<string>|null} [Warnings] SystemMonitorResponse Warnings\n         */\n\n        /**\n         * Constructs a new SystemMonitorResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SystemMonitorResponse.\n         * @implements ISystemMonitorResponse\n         * @constructor\n         * @param {rov_actions_proto.ISystemMonitorResponse=} [properties] Properties to set\n         */\n        function SystemMonitorResponse(properties) {\n            this.Warnings = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SystemMonitorResponse CpuTemp.\n         * @member {number} CpuTemp\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.CpuTemp = 0;\n\n        /**\n         * SystemMonitorResponse CpuUsage.\n         * @member {number} CpuUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.CpuUsage = 0;\n\n        /**\n         * SystemMonitorResponse MemoryUsage.\n         * @member {number} MemoryUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.MemoryUsage = 0;\n\n        /**\n         * SystemMonitorResponse DiskUsage.\n         * @member {number} DiskUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.DiskUsage = 0;\n\n        /**\n         * SystemMonitorResponse Warnings.\n         * @member {Array.<string>} Warnings\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.Warnings = $util.emptyArray;\n\n        /**\n         * Creates a new SystemMonitorResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse instance\n         */\n        SystemMonitorResponse.create = function create(properties) {\n            return new SystemMonitorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SystemMonitorResponse message. Does not implicitly {@link rov_actions_proto.SystemMonitorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse} message SystemMonitorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SystemMonitorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.CpuTemp != null && Object.hasOwnProperty.call(message, \"CpuTemp\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.CpuTemp);\n            if (message.CpuUsage != null && Object.hasOwnProperty.call(message, \"CpuUsage\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.CpuUsage);\n            if (message.MemoryUsage != null && Object.hasOwnProperty.call(message, \"MemoryUsage\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.MemoryUsage);\n            if (message.DiskUsage != null && Object.hasOwnProperty.call(message, \"DiskUsage\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.DiskUsage);\n            if (message.Warnings != null && message.Warnings.length)\n                for (let i = 0; i < message.Warnings.length; ++i)\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.Warnings[i]);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SystemMonitorResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SystemMonitorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse} message SystemMonitorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SystemMonitorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SystemMonitorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SystemMonitorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SystemMonitorResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.CpuTemp = reader.float();\n                        break;\n                    }\n                case 2: {\n                        message.CpuUsage = reader.float();\n                        break;\n                    }\n                case 3: {\n                        message.MemoryUsage = reader.float();\n                        break;\n                    }\n                case 4: {\n                        message.DiskUsage = reader.float();\n                        break;\n                    }\n                case 5: {\n                        if (!(message.Warnings && message.Warnings.length))\n                            message.Warnings = [];\n                        message.Warnings.push(reader.string());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SystemMonitorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SystemMonitorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SystemMonitorResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SystemMonitorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.CpuTemp != null && message.hasOwnProperty(\"CpuTemp\"))\n                if (typeof message.CpuTemp !== \"number\")\n                    return \"CpuTemp: number expected\";\n            if (message.CpuUsage != null && message.hasOwnProperty(\"CpuUsage\"))\n                if (typeof message.CpuUsage !== \"number\")\n                    return \"CpuUsage: number expected\";\n            if (message.MemoryUsage != null && message.hasOwnProperty(\"MemoryUsage\"))\n                if (typeof message.MemoryUsage !== \"number\")\n                    return \"MemoryUsage: number expected\";\n            if (message.DiskUsage != null && message.hasOwnProperty(\"DiskUsage\"))\n                if (typeof message.DiskUsage !== \"number\")\n                    return \"DiskUsage: number expected\";\n            if (message.Warnings != null && message.hasOwnProperty(\"Warnings\")) {\n                if (!Array.isArray(message.Warnings))\n                    return \"Warnings: array expected\";\n                for (let i = 0; i < message.Warnings.length; ++i)\n                    if (!$util.isString(message.Warnings[i]))\n                        return \"Warnings: string[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SystemMonitorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         */\n        SystemMonitorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SystemMonitorResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SystemMonitorResponse();\n            if (object.CpuTemp != null)\n                message.CpuTemp = Number(object.CpuTemp);\n            if (object.CpuUsage != null)\n                message.CpuUsage = Number(object.CpuUsage);\n            if (object.MemoryUsage != null)\n                message.MemoryUsage = Number(object.MemoryUsage);\n            if (object.DiskUsage != null)\n                message.DiskUsage = Number(object.DiskUsage);\n            if (object.Warnings) {\n                if (!Array.isArray(object.Warnings))\n                    throw TypeError(\".rov_actions_proto.SystemMonitorResponse.Warnings: array expected\");\n                message.Warnings = [];\n                for (let i = 0; i < object.Warnings.length; ++i)\n                    message.Warnings[i] = String(object.Warnings[i]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SystemMonitorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.SystemMonitorResponse} message SystemMonitorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SystemMonitorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.Warnings = [];\n            if (options.defaults) {\n                object.CpuTemp = 0;\n                object.CpuUsage = 0;\n                object.MemoryUsage = 0;\n                object.DiskUsage = 0;\n            }\n            if (message.CpuTemp != null && message.hasOwnProperty(\"CpuTemp\"))\n                object.CpuTemp = options.json && !isFinite(message.CpuTemp) ? String(message.CpuTemp) : message.CpuTemp;\n            if (message.CpuUsage != null && message.hasOwnProperty(\"CpuUsage\"))\n                object.CpuUsage = options.json && !isFinite(message.CpuUsage) ? String(message.CpuUsage) : message.CpuUsage;\n            if (message.MemoryUsage != null && message.hasOwnProperty(\"MemoryUsage\"))\n                object.MemoryUsage = options.json && !isFinite(message.MemoryUsage) ? String(message.MemoryUsage) : message.MemoryUsage;\n            if (message.DiskUsage != null && message.hasOwnProperty(\"DiskUsage\"))\n                object.DiskUsage = options.json && !isFinite(message.DiskUsage) ? String(message.DiskUsage) : message.DiskUsage;\n            if (message.Warnings && message.Warnings.length) {\n                object.Warnings = [];\n                for (let j = 0; j < message.Warnings.length; ++j)\n                    object.Warnings[j] = message.Warnings[j];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SystemMonitorResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SystemMonitorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SystemMonitorResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SystemMonitorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SystemMonitorResponse\";\n        };\n\n        return SystemMonitorResponse;\n    })();\n\n    rov_actions_proto.LogMessageResponse = (function() {\n\n        /**\n         * Properties of a LogMessageResponse.\n         * @memberof rov_actions_proto\n         * @interface ILogMessageResponse\n         * @property {string|null} [Message] LogMessageResponse Message\n         * @property {rov_actions_proto.LogLevel|null} [Level] LogMessageResponse Level\n         */\n\n        /**\n         * Constructs a new LogMessageResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a LogMessageResponse.\n         * @implements ILogMessageResponse\n         * @constructor\n         * @param {rov_actions_proto.ILogMessageResponse=} [properties] Properties to set\n         */\n        function LogMessageResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * LogMessageResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         */\n        LogMessageResponse.prototype.Message = \"\";\n\n        /**\n         * LogMessageResponse Level.\n         * @member {rov_actions_proto.LogLevel} Level\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         */\n        LogMessageResponse.prototype.Level = 0;\n\n        /**\n         * Creates a new LogMessageResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse instance\n         */\n        LogMessageResponse.create = function create(properties) {\n            return new LogMessageResponse(properties);\n        };\n\n        /**\n         * Encodes the specified LogMessageResponse message. Does not implicitly {@link rov_actions_proto.LogMessageResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse} message LogMessageResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LogMessageResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            if (message.Level != null && Object.hasOwnProperty.call(message, \"Level\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Level);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified LogMessageResponse message, length delimited. Does not implicitly {@link rov_actions_proto.LogMessageResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse} message LogMessageResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LogMessageResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a LogMessageResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LogMessageResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.LogMessageResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                case 2: {\n                        message.Level = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a LogMessageResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LogMessageResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a LogMessageResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        LogMessageResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.Level != null && message.hasOwnProperty(\"Level\"))\n                switch (message.Level) {\n                default:\n                    return \"Level: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a LogMessageResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         */\n        LogMessageResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.LogMessageResponse)\n                return object;\n            let message = new $root.rov_actions_proto.LogMessageResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            switch (object.Level) {\n            default:\n                if (typeof object.Level === \"number\") {\n                    message.Level = object.Level;\n                    break;\n                }\n                break;\n            case \"Debug\":\n            case 0:\n                message.Level = 0;\n                break;\n            case \"Info\":\n            case 1:\n                message.Level = 1;\n                break;\n            case \"Warning\":\n            case 2:\n                message.Level = 2;\n                break;\n            case \"Error\":\n            case 3:\n                message.Level = 3;\n                break;\n            case \"Critical\":\n            case 4:\n                message.Level = 4;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a LogMessageResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.LogMessageResponse} message LogMessageResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        LogMessageResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.Message = \"\";\n                object.Level = options.enums === String ? \"Debug\" : 0;\n            }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            if (message.Level != null && message.hasOwnProperty(\"Level\"))\n                object.Level = options.enums === String ? $root.rov_actions_proto.LogLevel[message.Level] === undefined ? message.Level : $root.rov_actions_proto.LogLevel[message.Level] : message.Level;\n            return object;\n        };\n\n        /**\n         * Converts this LogMessageResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        LogMessageResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for LogMessageResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        LogMessageResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.LogMessageResponse\";\n        };\n\n        return LogMessageResponse;\n    })();\n\n    rov_actions_proto.ResponseBackendMetadata = (function() {\n\n        /**\n         * Properties of a ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IResponseBackendMetadata\n         * @property {Array.<string>|null} [TargetUserIds] ResponseBackendMetadata TargetUserIds\n         * @property {rov_actions_proto.DataTransportMethod|null} [TransportMethod] ResponseBackendMetadata TransportMethod\n         */\n\n        /**\n         * Constructs a new ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ResponseBackendMetadata.\n         * @implements IResponseBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         */\n        function ResponseBackendMetadata(properties) {\n            this.TargetUserIds = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ResponseBackendMetadata TargetUserIds.\n         * @member {Array.<string>} TargetUserIds\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TargetUserIds = $util.emptyArray;\n\n        /**\n         * ResponseBackendMetadata TransportMethod.\n         * @member {rov_actions_proto.DataTransportMethod} TransportMethod\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TransportMethod = 0;\n\n        /**\n         * Creates a new ResponseBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata instance\n         */\n        ResponseBackendMetadata.create = function create(properties) {\n            return new ResponseBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.TargetUserIds != null && message.TargetUserIds.length)\n                for (let i = 0; i < message.TargetUserIds.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.TargetUserIds[i]);\n            if (message.TransportMethod != null && Object.hasOwnProperty.call(message, \"TransportMethod\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.TransportMethod);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.TargetUserIds && message.TargetUserIds.length))\n                            message.TargetUserIds = [];\n                        message.TargetUserIds.push(reader.string());\n                        break;\n                    }\n                case 2: {\n                        message.TransportMethod = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ResponseBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ResponseBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.TargetUserIds != null && message.hasOwnProperty(\"TargetUserIds\")) {\n                if (!Array.isArray(message.TargetUserIds))\n                    return \"TargetUserIds: array expected\";\n                for (let i = 0; i < message.TargetUserIds.length; ++i)\n                    if (!$util.isString(message.TargetUserIds[i]))\n                        return \"TargetUserIds: string[] expected\";\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                switch (message.TransportMethod) {\n                default:\n                    return \"TransportMethod: enum value expected\";\n                case 0:\n                case 1:\n                case 3:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a ResponseBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         */\n        ResponseBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ResponseBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            if (object.TargetUserIds) {\n                if (!Array.isArray(object.TargetUserIds))\n                    throw TypeError(\".rov_actions_proto.ResponseBackendMetadata.TargetUserIds: array expected\");\n                message.TargetUserIds = [];\n                for (let i = 0; i < object.TargetUserIds.length; ++i)\n                    message.TargetUserIds[i] = String(object.TargetUserIds[i]);\n            }\n            switch (object.TransportMethod) {\n            default:\n                if (typeof object.TransportMethod === \"number\") {\n                    message.TransportMethod = object.TransportMethod;\n                    break;\n                }\n                break;\n            case \"LivekitReliable\":\n            case 0:\n                message.TransportMethod = 0;\n                break;\n            case \"LivekitUnreliable\":\n            case 1:\n                message.TransportMethod = 1;\n                break;\n            case \"DirectUnreliable\":\n            case 3:\n                message.TransportMethod = 3;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ResponseBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ResponseBackendMetadata} message ResponseBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ResponseBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.TargetUserIds = [];\n            if (options.defaults)\n                object.TransportMethod = options.enums === String ? \"LivekitReliable\" : 0;\n            if (message.TargetUserIds && message.TargetUserIds.length) {\n                object.TargetUserIds = [];\n                for (let j = 0; j < message.TargetUserIds.length; ++j)\n                    object.TargetUserIds[j] = message.TargetUserIds[j];\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                object.TransportMethod = options.enums === String ? $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] === undefined ? message.TransportMethod : $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] : message.TransportMethod;\n            return object;\n        };\n\n        /**\n         * Converts this ResponseBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ResponseBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ResponseBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ResponseBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ResponseBackendMetadata\";\n        };\n\n        return ResponseBackendMetadata;\n    })();\n\n    rov_actions_proto.RovResponse = (function() {\n\n        /**\n         * Properties of a RovResponse.\n         * @memberof rov_actions_proto\n         * @interface IRovResponse\n         * @property {rov_actions_proto.IResponseBackendMetadata|null} [BackendMetadata] RovResponse BackendMetadata\n         * @property {number|null} [ExchangeId] RovResponse ExchangeId\n         * @property {rov_actions_proto.IDoneResponse|null} [Done] RovResponse Done\n         * @property {rov_actions_proto.IErrorResponse|null} [Error] RovResponse Error\n         * @property {rov_actions_proto.IPongResponse|null} [Pong] RovResponse Pong\n         * @property {rov_actions_proto.IContinuedOutputResponse|null} [ContinuedOutput] RovResponse ContinuedOutput\n         * @property {rov_actions_proto.ISensorUpdatesResponse|null} [SensorUpdates] RovResponse SensorUpdates\n         * @property {rov_actions_proto.IPasswordRequiredResponse|null} [PasswordRequired] RovResponse PasswordRequired\n         * @property {rov_actions_proto.IPasswordAcceptedResponse|null} [PasswordAccepted] RovResponse PasswordAccepted\n         * @property {rov_actions_proto.IPasswordInvalidResponse|null} [PasswordInvalid] RovResponse PasswordInvalid\n         * @property {rov_actions_proto.IDriverChangedResponse|null} [DriverChanged] RovResponse DriverChanged\n         * @property {rov_actions_proto.IClientConnectedResponse|null} [ClientConnected] RovResponse ClientConnected\n         * @property {rov_actions_proto.IClientDisconnectedResponse|null} [ClientDisconnected] RovResponse ClientDisconnected\n         * @property {rov_actions_proto.IHeartbeatResponse|null} [Heartbeat] RovResponse Heartbeat\n         * @property {rov_actions_proto.IMavlinkResponse|null} [Mavlink] RovResponse Mavlink\n         * @property {rov_actions_proto.ISimplepeerSignalResponse|null} [SimplepeerSignal] RovResponse SimplepeerSignal\n         * @property {rov_actions_proto.ISystemMonitorResponse|null} [SystemMonitor] RovResponse SystemMonitor\n         * @property {rov_actions_proto.ILogMessageResponse|null} [LogMessage] RovResponse LogMessage\n         */\n\n        /**\n         * Constructs a new RovResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovResponse.\n         * @implements IRovResponse\n         * @constructor\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         */\n        function RovResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovResponse BackendMetadata.\n         * @member {rov_actions_proto.IResponseBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.BackendMetadata = null;\n\n        /**\n         * RovResponse ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ExchangeId = 0;\n\n        /**\n         * RovResponse Done.\n         * @member {rov_actions_proto.IDoneResponse|null|undefined} Done\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Done = null;\n\n        /**\n         * RovResponse Error.\n         * @member {rov_actions_proto.IErrorResponse|null|undefined} Error\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Error = null;\n\n        /**\n         * RovResponse Pong.\n         * @member {rov_actions_proto.IPongResponse|null|undefined} Pong\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Pong = null;\n\n        /**\n         * RovResponse ContinuedOutput.\n         * @member {rov_actions_proto.IContinuedOutputResponse|null|undefined} ContinuedOutput\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ContinuedOutput = null;\n\n        /**\n         * RovResponse SensorUpdates.\n         * @member {rov_actions_proto.ISensorUpdatesResponse|null|undefined} SensorUpdates\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SensorUpdates = null;\n\n        /**\n         * RovResponse PasswordRequired.\n         * @member {rov_actions_proto.IPasswordRequiredResponse|null|undefined} PasswordRequired\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordRequired = null;\n\n        /**\n         * RovResponse PasswordAccepted.\n         * @member {rov_actions_proto.IPasswordAcceptedResponse|null|undefined} PasswordAccepted\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordAccepted = null;\n\n        /**\n         * RovResponse PasswordInvalid.\n         * @member {rov_actions_proto.IPasswordInvalidResponse|null|undefined} PasswordInvalid\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordInvalid = null;\n\n        /**\n         * RovResponse DriverChanged.\n         * @member {rov_actions_proto.IDriverChangedResponse|null|undefined} DriverChanged\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.DriverChanged = null;\n\n        /**\n         * RovResponse ClientConnected.\n         * @member {rov_actions_proto.IClientConnectedResponse|null|undefined} ClientConnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientConnected = null;\n\n        /**\n         * RovResponse ClientDisconnected.\n         * @member {rov_actions_proto.IClientDisconnectedResponse|null|undefined} ClientDisconnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientDisconnected = null;\n\n        /**\n         * RovResponse Heartbeat.\n         * @member {rov_actions_proto.IHeartbeatResponse|null|undefined} Heartbeat\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Heartbeat = null;\n\n        /**\n         * RovResponse Mavlink.\n         * @member {rov_actions_proto.IMavlinkResponse|null|undefined} Mavlink\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Mavlink = null;\n\n        /**\n         * RovResponse SimplepeerSignal.\n         * @member {rov_actions_proto.ISimplepeerSignalResponse|null|undefined} SimplepeerSignal\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SimplepeerSignal = null;\n\n        /**\n         * RovResponse SystemMonitor.\n         * @member {rov_actions_proto.ISystemMonitorResponse|null|undefined} SystemMonitor\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SystemMonitor = null;\n\n        /**\n         * RovResponse LogMessage.\n         * @member {rov_actions_proto.ILogMessageResponse|null|undefined} LogMessage\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.LogMessage = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovResponse Body.\n         * @member {\"Done\"|\"Error\"|\"Pong\"|\"ContinuedOutput\"|\"SensorUpdates\"|\"PasswordRequired\"|\"PasswordAccepted\"|\"PasswordInvalid\"|\"DriverChanged\"|\"ClientConnected\"|\"ClientDisconnected\"|\"Heartbeat\"|\"Mavlink\"|\"SimplepeerSignal\"|\"SystemMonitor\"|\"LogMessage\"|undefined} Body\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        Object.defineProperty(RovResponse.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Done\", \"Error\", \"Pong\", \"ContinuedOutput\", \"SensorUpdates\", \"PasswordRequired\", \"PasswordAccepted\", \"PasswordInvalid\", \"DriverChanged\", \"ClientConnected\", \"ClientDisconnected\", \"Heartbeat\", \"Mavlink\", \"SimplepeerSignal\", \"SystemMonitor\", \"LogMessage\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovResponse} RovResponse instance\n         */\n        RovResponse.create = function create(properties) {\n            return new RovResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RovResponse message. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ResponseBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Done != null && Object.hasOwnProperty.call(message, \"Done\"))\n                $root.rov_actions_proto.DoneResponse.encode(message.Done, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\n                $root.rov_actions_proto.ErrorResponse.encode(message.Error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.Pong != null && Object.hasOwnProperty.call(message, \"Pong\"))\n                $root.rov_actions_proto.PongResponse.encode(message.Pong, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.ContinuedOutput != null && Object.hasOwnProperty.call(message, \"ContinuedOutput\"))\n                $root.rov_actions_proto.ContinuedOutputResponse.encode(message.ContinuedOutput, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.SensorUpdates != null && Object.hasOwnProperty.call(message, \"SensorUpdates\"))\n                $root.rov_actions_proto.SensorUpdatesResponse.encode(message.SensorUpdates, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.PasswordRequired != null && Object.hasOwnProperty.call(message, \"PasswordRequired\"))\n                $root.rov_actions_proto.PasswordRequiredResponse.encode(message.PasswordRequired, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.PasswordAccepted != null && Object.hasOwnProperty.call(message, \"PasswordAccepted\"))\n                $root.rov_actions_proto.PasswordAcceptedResponse.encode(message.PasswordAccepted, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.PasswordInvalid != null && Object.hasOwnProperty.call(message, \"PasswordInvalid\"))\n                $root.rov_actions_proto.PasswordInvalidResponse.encode(message.PasswordInvalid, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.DriverChanged != null && Object.hasOwnProperty.call(message, \"DriverChanged\"))\n                $root.rov_actions_proto.DriverChangedResponse.encode(message.DriverChanged, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.ClientConnected != null && Object.hasOwnProperty.call(message, \"ClientConnected\"))\n                $root.rov_actions_proto.ClientConnectedResponse.encode(message.ClientConnected, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.ClientDisconnected != null && Object.hasOwnProperty.call(message, \"ClientDisconnected\"))\n                $root.rov_actions_proto.ClientDisconnectedResponse.encode(message.ClientDisconnected, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.Heartbeat != null && Object.hasOwnProperty.call(message, \"Heartbeat\"))\n                $root.rov_actions_proto.HeartbeatResponse.encode(message.Heartbeat, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.Mavlink != null && Object.hasOwnProperty.call(message, \"Mavlink\"))\n                $root.rov_actions_proto.MavlinkResponse.encode(message.Mavlink, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.SimplepeerSignal != null && Object.hasOwnProperty.call(message, \"SimplepeerSignal\"))\n                $root.rov_actions_proto.SimplepeerSignalResponse.encode(message.SimplepeerSignal, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            if (message.SystemMonitor != null && Object.hasOwnProperty.call(message, \"SystemMonitor\"))\n                $root.rov_actions_proto.SystemMonitorResponse.encode(message.SystemMonitor, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n            if (message.LogMessage != null && Object.hasOwnProperty.call(message, \"LogMessage\"))\n                $root.rov_actions_proto.LogMessageResponse.encode(message.LogMessage, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovResponse message, length delimited. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Done = $root.rov_actions_proto.DoneResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.Error = $root.rov_actions_proto.ErrorResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.Pong = $root.rov_actions_proto.PongResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.Mavlink = $root.rov_actions_proto.MavlinkResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 19: {\n                        message.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 20: {\n                        message.LogMessage = $root.rov_actions_proto.LogMessageResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ResponseBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DoneResponse.verify(message.Done);\n                    if (error)\n                        return \"Done.\" + error;\n                }\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ErrorResponse.verify(message.Error);\n                    if (error)\n                        return \"Error.\" + error;\n                }\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PongResponse.verify(message.Pong);\n                    if (error)\n                        return \"Pong.\" + error;\n                }\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ContinuedOutputResponse.verify(message.ContinuedOutput);\n                    if (error)\n                        return \"ContinuedOutput.\" + error;\n                }\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SensorUpdatesResponse.verify(message.SensorUpdates);\n                    if (error)\n                        return \"SensorUpdates.\" + error;\n                }\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordRequiredResponse.verify(message.PasswordRequired);\n                    if (error)\n                        return \"PasswordRequired.\" + error;\n                }\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAcceptedResponse.verify(message.PasswordAccepted);\n                    if (error)\n                        return \"PasswordAccepted.\" + error;\n                }\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordInvalidResponse.verify(message.PasswordInvalid);\n                    if (error)\n                        return \"PasswordInvalid.\" + error;\n                }\n            }\n            if (message.DriverChanged != null && message.hasOwnProperty(\"DriverChanged\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DriverChangedResponse.verify(message.DriverChanged);\n                    if (error)\n                        return \"DriverChanged.\" + error;\n                }\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientConnectedResponse.verify(message.ClientConnected);\n                    if (error)\n                        return \"ClientConnected.\" + error;\n                }\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientDisconnectedResponse.verify(message.ClientDisconnected);\n                    if (error)\n                        return \"ClientDisconnected.\" + error;\n                }\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.HeartbeatResponse.verify(message.Heartbeat);\n                    if (error)\n                        return \"Heartbeat.\" + error;\n                }\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MavlinkResponse.verify(message.Mavlink);\n                    if (error)\n                        return \"Mavlink.\" + error;\n                }\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplepeerSignalResponse.verify(message.SimplepeerSignal);\n                    if (error)\n                        return \"SimplepeerSignal.\" + error;\n                }\n            }\n            if (message.SystemMonitor != null && message.hasOwnProperty(\"SystemMonitor\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SystemMonitorResponse.verify(message.SystemMonitor);\n                    if (error)\n                        return \"SystemMonitor.\" + error;\n                }\n            }\n            if (message.LogMessage != null && message.hasOwnProperty(\"LogMessage\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.LogMessageResponse.verify(message.LogMessage);\n                    if (error)\n                        return \"LogMessage.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         */\n        RovResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovResponse)\n                return object;\n            let message = new $root.rov_actions_proto.RovResponse();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Done != null) {\n                if (typeof object.Done !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Done: object expected\");\n                message.Done = $root.rov_actions_proto.DoneResponse.fromObject(object.Done);\n            }\n            if (object.Error != null) {\n                if (typeof object.Error !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Error: object expected\");\n                message.Error = $root.rov_actions_proto.ErrorResponse.fromObject(object.Error);\n            }\n            if (object.Pong != null) {\n                if (typeof object.Pong !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Pong: object expected\");\n                message.Pong = $root.rov_actions_proto.PongResponse.fromObject(object.Pong);\n            }\n            if (object.ContinuedOutput != null) {\n                if (typeof object.ContinuedOutput !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ContinuedOutput: object expected\");\n                message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.fromObject(object.ContinuedOutput);\n            }\n            if (object.SensorUpdates != null) {\n                if (typeof object.SensorUpdates !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SensorUpdates: object expected\");\n                message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.fromObject(object.SensorUpdates);\n            }\n            if (object.PasswordRequired != null) {\n                if (typeof object.PasswordRequired !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordRequired: object expected\");\n                message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.fromObject(object.PasswordRequired);\n            }\n            if (object.PasswordAccepted != null) {\n                if (typeof object.PasswordAccepted !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordAccepted: object expected\");\n                message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.fromObject(object.PasswordAccepted);\n            }\n            if (object.PasswordInvalid != null) {\n                if (typeof object.PasswordInvalid !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordInvalid: object expected\");\n                message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.fromObject(object.PasswordInvalid);\n            }\n            if (object.DriverChanged != null) {\n                if (typeof object.DriverChanged !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.DriverChanged: object expected\");\n                message.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.fromObject(object.DriverChanged);\n            }\n            if (object.ClientConnected != null) {\n                if (typeof object.ClientConnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientConnected: object expected\");\n                message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.fromObject(object.ClientConnected);\n            }\n            if (object.ClientDisconnected != null) {\n                if (typeof object.ClientDisconnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientDisconnected: object expected\");\n                message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.fromObject(object.ClientDisconnected);\n            }\n            if (object.Heartbeat != null) {\n                if (typeof object.Heartbeat !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Heartbeat: object expected\");\n                message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.fromObject(object.Heartbeat);\n            }\n            if (object.Mavlink != null) {\n                if (typeof object.Mavlink !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Mavlink: object expected\");\n                message.Mavlink = $root.rov_actions_proto.MavlinkResponse.fromObject(object.Mavlink);\n            }\n            if (object.SimplepeerSignal != null) {\n                if (typeof object.SimplepeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SimplepeerSignal: object expected\");\n                message.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.fromObject(object.SimplepeerSignal);\n            }\n            if (object.SystemMonitor != null) {\n                if (typeof object.SystemMonitor !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SystemMonitor: object expected\");\n                message.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.fromObject(object.SystemMonitor);\n            }\n            if (object.LogMessage != null) {\n                if (typeof object.LogMessage !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.LogMessage: object expected\");\n                message.LogMessage = $root.rov_actions_proto.LogMessageResponse.fromObject(object.LogMessage);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.RovResponse} message RovResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                object.Done = $root.rov_actions_proto.DoneResponse.toObject(message.Done, options);\n                if (options.oneofs)\n                    object.Body = \"Done\";\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                object.Error = $root.rov_actions_proto.ErrorResponse.toObject(message.Error, options);\n                if (options.oneofs)\n                    object.Body = \"Error\";\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                object.Pong = $root.rov_actions_proto.PongResponse.toObject(message.Pong, options);\n                if (options.oneofs)\n                    object.Body = \"Pong\";\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                object.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.toObject(message.ContinuedOutput, options);\n                if (options.oneofs)\n                    object.Body = \"ContinuedOutput\";\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                object.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.toObject(message.SensorUpdates, options);\n                if (options.oneofs)\n                    object.Body = \"SensorUpdates\";\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                object.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.toObject(message.PasswordRequired, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordRequired\";\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                object.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.toObject(message.PasswordAccepted, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAccepted\";\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                object.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.toObject(message.PasswordInvalid, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordInvalid\";\n            }\n            if (message.DriverChanged != null && message.hasOwnProperty(\"DriverChanged\")) {\n                object.DriverChanged = $root.rov_actions_proto.DriverChangedResponse.toObject(message.DriverChanged, options);\n                if (options.oneofs)\n                    object.Body = \"DriverChanged\";\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                object.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.toObject(message.ClientConnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientConnected\";\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                object.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.toObject(message.ClientDisconnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientDisconnected\";\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                object.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.toObject(message.Heartbeat, options);\n                if (options.oneofs)\n                    object.Body = \"Heartbeat\";\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                object.Mavlink = $root.rov_actions_proto.MavlinkResponse.toObject(message.Mavlink, options);\n                if (options.oneofs)\n                    object.Body = \"Mavlink\";\n            }\n            if (message.SimplepeerSignal != null && message.hasOwnProperty(\"SimplepeerSignal\")) {\n                object.SimplepeerSignal = $root.rov_actions_proto.SimplepeerSignalResponse.toObject(message.SimplepeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplepeerSignal\";\n            }\n            if (message.SystemMonitor != null && message.hasOwnProperty(\"SystemMonitor\")) {\n                object.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.toObject(message.SystemMonitor, options);\n                if (options.oneofs)\n                    object.Body = \"SystemMonitor\";\n            }\n            if (message.LogMessage != null && message.hasOwnProperty(\"LogMessage\")) {\n                object.LogMessage = $root.rov_actions_proto.LogMessageResponse.toObject(message.LogMessage, options);\n                if (options.oneofs)\n                    object.Body = \"LogMessage\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovResponse\";\n        };\n\n        return RovResponse;\n    })();\n\n    return rov_actions_proto;\n})();\n\nexport { $root as default };\n","import { rov_actions_proto } from \"./protobufs/rovActionsProto\";\n\nconst VITEBUILD_EXTRANIOUS_PATH = \"/@fs/Users/ky/Documents/Github/rov-web\";\n\nexport enum LogLevelConsole {\n    Info = rov_actions_proto.LogLevel.Info,\n    Warn = rov_actions_proto.LogLevel.Warning,\n    Error = rov_actions_proto.LogLevel.Error,\n    Debug = rov_actions_proto.LogLevel.Debug,\n    Console = 4,\n}\n\nexport enum LogKind {\n    CONSOLE,\n    SP_WebRTC,\n    LK_WebRTC,\n    MAVLINK,\n    BLUEOS,\n}\n\nexport enum LogOrigin {\n    ROV,\n    PILOT,\n}\n\nexport type LogLevel = rov_actions_proto.LogLevel | LogLevelConsole;\n\nexport interface LogEntry {\n    timestamp: number, // performance.now()\n    level: LogLevelConsole, // warning, error, info, debug, console\n    args: any[],\n    trace: string[],\n    origin: LogOrigin,\n    kind: LogKind,\n    sentToRemote: boolean\n}\n\ninterface partialConsole {\n    info: Console[\"info\"];\n    log: Console[\"log\"];\n    warn: Console[\"warn\"];\n    error: Console[\"error\"];\n    debug: Console[\"debug\"];\n    _modified?: boolean;\n}\n\nexport class Logger {\n\n    logsStore: LogEntry[] = [];\n    sendLogsCallback: (logLevel: LogLevel, args: any[]) => Promise<boolean>;\n    rootURL: string;\n    sendLogsInterval: number;\n    rawConsole: partialConsole;\n    defaultLogOrigin: LogOrigin;\n    svelteSubscribers: (() => void)[] = [];\n\n    constructor(origin: LogOrigin = LogOrigin.PILOT) {\n        const { log, debug, warn, error, info } = console;\n        this.rawConsole = { log, debug, warn, error, info };\n        this.rootURL = window.location.protocol + \"//\" + window.location.host;\n        this.defaultLogOrigin = origin;\n        console.log(\"Logger initialized\", this.rootURL)\n    }\n\n    subscribe(subscriber: () => void) {\n        this.svelteSubscribers.push(subscriber);\n        subscriber();\n    }\n\n    enableSendLogs(sendLogsCallback: (logLevel: LogLevel, args: any[]) => Promise<boolean>) {\n        this.sendLogsCallback = sendLogsCallback;\n\n        // Only Chrome & Opera have an error attribute on the event.\n        window.addEventListener(\"error\", (e) => {\n            const args = [e.error ? e.error : \"\", e.message, e.filename + \":\" + e.lineno + \":\" + e.colno];\n            if (e.error) {\n                sendLogsCallback(LogLevelConsole.Error, args).then((successful) => {\n                    if (!successful) this.addLog(LogLevelConsole.Error, args);\n                });\n            }\n        });\n\n        this.sendLogsInterval = setInterval(() => {\n            this.sendQueuedLogs(sendLogsCallback);\n        }, 1000) as any as number;\n    }\n\n    sendQueuedLogs(sendLogsCallback: (logLevel: LogLevelConsole, args: any[], trace: string[]) => Promise<boolean>) {\n        const logsToSendCopy = this.logsStore.filter((log) => !log.sentToRemote);\n        logsToSendCopy.forEach((log) => { log.sentToRemote = true });\n        Promise.allSettled(logsToSendCopy.map((log) => {\n            return sendLogsCallback(log.level, log.args, log.trace)\n        })).then((results) => {\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (result && result.status == \"fulfilled\" && result.value == true) {\n                    this.logsStore[i].sentToRemote = true;\n                } else {\n                    this.logsStore[i].sentToRemote = false;\n                    console.log(\"Failed to send log result\", result);\n                }\n            }\n        })\n    }\n\n    addLog(\n        logLevel: LogLevelConsole,\n        args: any[],\n        trace: string[] = [],\n        kind: LogKind = LogKind.CONSOLE,\n        origin: LogOrigin = this.defaultLogOrigin,\n        timestamp: number = performance.now(),\n        sentToRemote: boolean = false\n    ) {\n        if (!trace) {\n            const stack = new Error().stack\n            trace = stack ? stack.split(\"\\n\").slice(3).map((s) => s.replace(this.rootURL, \"\").replace(VITEBUILD_EXTRANIOUS_PATH, \"\").trim().slice(3)) : [];\n        }\n        let i = this.logsStore.length;\n        while (i > 0 && this.logsStore[i - 1].timestamp > timestamp) i--;\n        const log: LogEntry = { timestamp, level: logLevel, args, trace, sentToRemote, kind, origin };\n        this.logsStore.splice(i, 0, log);\n        this.svelteSubscribers.forEach((subscriber) => subscriber());\n        // this.logsStore.sort((a, b) => a.timestamp - b.timestamp);\n    }\n\n    logAddLevelFlair(log: LogEntry) {\n        const args = log.args;\n        if (typeof (args[0]) !== typeof (\"\")) args.unshift(\"****\")\n        else args[0] = \"**** \" + args[0];\n        // if (log.trace && log.trace.length > 0) args.push(log.trace.join(\"\\n\"));\n        return {\n            ...log,\n            args\n        }\n    }\n\n    printLog(log: LogEntry) {\n        if (log.trace && log.trace.length > 0) {\n            const msg = log.args[0];\n            const args = log.args.slice(1);\n            args.push(log.trace.join(\"\\n\"));\n            console.groupCollapsed(\"%c\" + msg, this._getLevelColor(log.level));\n            this._consoleLogAtLevel(log.level, args);\n            console.groupEnd();\n        } else {\n            if (typeof (log.args[0]) !== typeof (\"\")) log.args.unshift(\"****\")\n            log.args[0] = \"%c \" + log.args[0];\n            log.args.splice(1, 0, this._getLevelColor(log.level));\n            this._consoleLogAtLevel(log.level, log.args);\n        }\n    }\n\n    printRecentLogs(n: number = 100) {\n        console.clear();\n        console.groupCollapsed(\"Recent Logs\");\n        const min = Math.max(this.logsStore.length - n, 0);\n        for (let i = this.logsStore.length - 1; i > min; i--) {\n            const log = this.logsStore[i];\n            this.printLog(log);\n        }\n        console.groupEnd();\n    }\n\n\n    // _logWithTrace() {\n    //     const args = Array.prototype.slice.call(arguments);\n    //     const trace = new Error().stack || \"\";\n    //     const splitTrace = trace.split(\"\\n\").slice(0).map((s) => s.trim().slice(3));\n    //     log.apply(console, args);\n    // };\n\n    _consoleLogAtLevel(level: LogLevel, args: any[], trace: string[] = []) {\n        if (level === LogLevelConsole.Debug) {\n            this.rawConsole.debug.apply(console, args);\n        } else if (level === LogLevelConsole.Warn) {\n            this.rawConsole.warn.apply(console, args);\n        }\n        else if (level === LogLevelConsole.Error) {\n            this.rawConsole.error.apply(console, args);\n        }\n        else if (level === LogLevelConsole.Info) {\n            this.rawConsole.info.apply(console, args);\n        }\n    }\n\n    _getLevelColor(level: LogLevelConsole) {\n        if (level === LogLevelConsole.Debug) {\n            return \"color: #008888\";\n        } else if (level === LogLevelConsole.Warn) {\n            return \"color: #888800\";\n        } else if (level === LogLevelConsole.Error) {\n            return \"color: #880000\";\n        } else if (level === LogLevelConsole.Info) {\n            return \"color: #000088\";\n        } else if (level === LogLevelConsole.Console) {\n            return \"color: #000000\";\n        }\n    }\n\n    _getLevelIcon(level: LogLevelConsole) {\n        if (level === LogLevelConsole.Debug) {\n            return \"🐛\";\n        } else if (level === LogLevelConsole.Warn) {\n            return \"🟨\";\n        } else if (level === LogLevelConsole.Error) {\n            return \"🛑\";\n        } else if (level === LogLevelConsole.Info) {\n            return \"ℹ️\";\n        } else if (level === LogLevelConsole.Console) {\n            return \"ℹ️\";\n        }\n\n    }\n\n    getLogs() {\n        return this.logsStore;\n    }\n\n    log(...args: any[]) {\n        this.rawConsole.log.apply(console, args);\n        this.addLog(LogLevelConsole.Console, args);\n    }\n\n    logDebug(...args: any[]) {\n        this.rawConsole.debug.apply(console, args);\n        this.addLog(LogLevelConsole.Debug, args);\n    }\n\n    logWarn(...args: any[]) {\n        this.rawConsole.warn.apply(console, args);\n        this.addLog(LogLevelConsole.Warn, args);\n    }\n\n    logError(...args: any[]) {\n        this.rawConsole.error.apply(console, args);\n        this.addLog(LogLevelConsole.Error, args);\n    }\n\n    logInfo(...args: any[]) {\n        this.rawConsole.info.apply(console, args);\n        this.addLog(LogLevelConsole.Info, args);\n    }\n}\nexport const mainLogr = new Logger();\nexport const logDebug = mainLogr.logDebug.bind(mainLogr);\nexport const logWarn = mainLogr.logWarn.bind(mainLogr);\nexport const logError = mainLogr.logError.bind(mainLogr);\nexport const logInfo = mainLogr.logInfo.bind(mainLogr);\nexport const log = mainLogr.log.bind(mainLogr);\n","function _mergeNamespaces(n, m) {\n    m.forEach(function (e) {\n        e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n            if (k !== 'default' && !(k in n)) {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    });\n    return Object.freeze(n);\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38,\n  FLOAT32_MIN = -3.4028234663852886e38,\n  UINT32_MAX = 0xffffffff,\n  INT32_MAX = 0x7fffffff,\n  INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nfunction assertInt32(arg) {\n  if (typeof arg !== \"number\") throw new Error(\"invalid int 32: \" + typeof arg);\n  if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN) throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nfunction assertUInt32(arg) {\n  if (typeof arg !== \"number\") throw new Error(\"invalid uint 32: \" + typeof arg);\n  if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0) throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nfunction assertFloat32(arg) {\n  if (typeof arg !== \"number\") throw new Error(\"invalid float 32: \" + typeof arg);\n  if (!Number.isFinite(arg)) return;\n  if (arg > FLOAT32_MAX || arg < FLOAT32_MIN) throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nfunction getEnumType(enumObject) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n  const t = enumObject[enumTypeSymbol];\n  assert(t, \"missing enum type on enum object\");\n  return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nfunction setEnumType(enumObject, typeName, values, opt) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n  enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map(v => ({\n    no: v.no,\n    name: v.name,\n    localName: enumObject[v.no]\n  })));\n}\n/**\n * Create a new EnumType with the given values.\n */\nfunction makeEnumType(typeName, values,\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n  const names = Object.create(null);\n  const numbers = Object.create(null);\n  const normalValues = [];\n  for (const value of values) {\n    // We do not surface options at this time\n    // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n    const n = normalizeEnumValue(value);\n    normalValues.push(n);\n    names[value.name] = n;\n    numbers[value.no] = n;\n  }\n  return {\n    typeName,\n    values: normalValues,\n    // We do not surface options at this time\n    // options: opt?.options ?? Object.create(null),\n    findName(name) {\n      return names[name];\n    },\n    findNumber(no) {\n      return numbers[no];\n    }\n  };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nfunction makeEnum(typeName, values, opt) {\n  const enumObject = {};\n  for (const value of values) {\n    const n = normalizeEnumValue(value);\n    enumObject[n.localName] = n.no;\n    enumObject[n.no] = n.localName;\n  }\n  setEnumType(enumObject, typeName, values);\n  return enumObject;\n}\nfunction normalizeEnumValue(value) {\n  if (\"localName\" in value) {\n    return value;\n  }\n  return Object.assign(Object.assign({}, value), {\n    localName: value.name\n  });\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nclass Message {\n  /**\n   * Compare with a message of the same type.\n   * Note that this function disregards extensions and unknown fields.\n   */\n  equals(other) {\n    return this.getType().runtime.util.equals(this.getType(), this, other);\n  }\n  /**\n   * Create a deep copy.\n   */\n  clone() {\n    return this.getType().runtime.util.clone(this);\n  }\n  /**\n   * Parse from binary data, merging fields.\n   *\n   * Repeated fields are appended. Map entries are added, overwriting\n   * existing keys.\n   *\n   * If a message field is already present, it will be merged with the\n   * new data.\n   */\n  fromBinary(bytes, options) {\n    const type = this.getType(),\n      format = type.runtime.bin,\n      opt = format.makeReadOptions(options);\n    format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n    return this;\n  }\n  /**\n   * Parse a message from a JSON value.\n   */\n  fromJson(jsonValue, options) {\n    const type = this.getType(),\n      format = type.runtime.json,\n      opt = format.makeReadOptions(options);\n    format.readMessage(type, jsonValue, opt, this);\n    return this;\n  }\n  /**\n   * Parse a message from a JSON string.\n   */\n  fromJsonString(jsonString, options) {\n    let json;\n    try {\n      json = JSON.parse(jsonString);\n    } catch (e) {\n      throw new Error(\"cannot decode \".concat(this.getType().typeName, \" from JSON: \").concat(e instanceof Error ? e.message : String(e)));\n    }\n    return this.fromJson(json, options);\n  }\n  /**\n   * Serialize the message to binary data.\n   */\n  toBinary(options) {\n    const type = this.getType(),\n      bin = type.runtime.bin,\n      opt = bin.makeWriteOptions(options),\n      writer = opt.writerFactory();\n    bin.writeMessage(this, writer, opt);\n    return writer.finish();\n  }\n  /**\n   * Serialize the message to a JSON value, a JavaScript value that can be\n   * passed to JSON.stringify().\n   */\n  toJson(options) {\n    const type = this.getType(),\n      json = type.runtime.json,\n      opt = json.makeWriteOptions(options);\n    return json.writeMessage(this, opt);\n  }\n  /**\n   * Serialize the message to a JSON string.\n   */\n  toJsonString(options) {\n    var _a;\n    const value = this.toJson(options);\n    return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n  }\n  /**\n   * Override for serialization behavior. This will be invoked when calling\n   * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n   *\n   * Note that this will not serialize google.protobuf.Any with a packed\n   * message because the protobuf JSON format specifies that it needs to be\n   * unpacked, and this is only possible with a type registry to look up the\n   * message type.  As a result, attempting to serialize a message with this\n   * type will throw an Error.\n   *\n   * This method is protected because you should not need to invoke it\n   * directly -- instead use JSON.stringify or toJsonString for\n   * stringified JSON.  Alternatively, if actual JSON is desired, you should\n   * use toJson.\n   */\n  toJSON() {\n    return this.toJson({\n      emitDefaultValues: true\n    });\n  }\n  /**\n   * Retrieve the MessageType of this message - a singleton that represents\n   * the protobuf message declaration and provides metadata for reflection-\n   * based operations.\n   */\n  getType() {\n    // Any class that extends Message _must_ provide a complete static\n    // implementation of MessageType.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n    return Object.getPrototypeOf(this).constructor;\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a new message type using the given runtime.\n */\nfunction makeMessageType(runtime, typeName, fields, opt) {\n  var _a;\n  const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n  const type = {\n    [localName]: function (data) {\n      runtime.util.initFields(this);\n      runtime.util.initPartial(data, this);\n    }\n  }[localName];\n  Object.setPrototypeOf(type.prototype, new Message());\n  Object.assign(type, {\n    runtime,\n    typeName,\n    fields: runtime.util.newFieldList(fields),\n    fromBinary(bytes, options) {\n      return new type().fromBinary(bytes, options);\n    },\n    fromJson(jsonValue, options) {\n      return new type().fromJson(jsonValue, options);\n    },\n    fromJsonString(jsonString, options) {\n      return new type().fromJsonString(jsonString, options);\n    },\n    equals(a, b) {\n      return runtime.util.equals(type, a, b);\n    }\n  });\n  return type;\n}\n\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n  let lowBits = 0;\n  let highBits = 0;\n  for (let shift = 0; shift < 28; shift += 7) {\n    let b = this.buf[this.pos++];\n    lowBits |= (b & 0x7f) << shift;\n    if ((b & 0x80) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  let middleByte = this.buf[this.pos++];\n  // last four bits of the first 32 bit number\n  lowBits |= (middleByte & 0x0f) << 28;\n  // 3 upper bits are part of the next 32 bit number\n  highBits = (middleByte & 0x70) >> 4;\n  if ((middleByte & 0x80) == 0) {\n    this.assertBounds();\n    return [lowBits, highBits];\n  }\n  for (let shift = 3; shift <= 31; shift += 7) {\n    let b = this.buf[this.pos++];\n    highBits |= (b & 0x7f) << shift;\n    if ((b & 0x80) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n  for (let i = 0; i < 28; i = i + 7) {\n    const shift = lo >>> i;\n    const hasNext = !(shift >>> 7 == 0 && hi == 0);\n    const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n    bytes.push(byte);\n    if (!hasNext) {\n      return;\n    }\n  }\n  const splitBits = lo >>> 28 & 0x0f | (hi & 0x07) << 4;\n  const hasMoreBits = !(hi >> 3 == 0);\n  bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n  if (!hasMoreBits) {\n    return;\n  }\n  for (let i = 3; i < 31; i = i + 7) {\n    const shift = hi >>> i;\n    const hasNext = !(shift >>> 7 == 0);\n    const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n    bytes.push(byte);\n    if (!hasNext) {\n      return;\n    }\n  }\n  bytes.push(hi >>> 31 & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n  // Check for minus sign.\n  const minus = dec[0] === \"-\";\n  if (minus) {\n    dec = dec.slice(1);\n  }\n  // Work 6 decimal digits at a time, acting like we're converting base 1e6\n  // digits to binary. This is safe to do with floating point math because\n  // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n  const base = 1e6;\n  let lowBits = 0;\n  let highBits = 0;\n  function add1e6digit(begin, end) {\n    // Note: Number('') is 0.\n    const digit1e6 = Number(dec.slice(begin, end));\n    highBits *= base;\n    lowBits = lowBits * base + digit1e6;\n    // Carry bits from lowBits to\n    if (lowBits >= TWO_PWR_32_DBL) {\n      highBits = highBits + (lowBits / TWO_PWR_32_DBL | 0);\n      lowBits = lowBits % TWO_PWR_32_DBL;\n    }\n  }\n  add1e6digit(-24, -18);\n  add1e6digit(-18, -12);\n  add1e6digit(-12, -6);\n  add1e6digit(-6);\n  return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n  let bits = newBits(lo, hi);\n  // If we're treating the input as a signed value and the high bit is set, do\n  // a manual two's complement conversion before the decimal conversion.\n  const negative = bits.hi & 0x80000000;\n  if (negative) {\n    bits = negate(bits.lo, bits.hi);\n  }\n  const result = uInt64ToString(bits.lo, bits.hi);\n  return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n  ({\n    lo,\n    hi\n  } = toUnsigned(lo, hi));\n  // Skip the expensive conversion if the number is small enough to use the\n  // built-in conversions.\n  // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n  // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n  // integer precision.\n  // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n  if (hi <= 0x1FFFFF) {\n    return String(TWO_PWR_32_DBL * hi + lo);\n  }\n  // What this code is doing is essentially converting the input number from\n  // base-2 to base-1e7, which allows us to represent the 64-bit range with\n  // only 3 (very large) digits. Those digits are then trivial to convert to\n  // a base-10 string.\n  // The magic numbers used here are -\n  // 2^24 = 16777216 = (1,6777216) in base-1e7.\n  // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n  // Split 32:32 representation into 16:24:24 representation so our\n  // intermediate digits don't overflow.\n  const low = lo & 0xFFFFFF;\n  const mid = (lo >>> 24 | hi << 8) & 0xFFFFFF;\n  const high = hi >> 16 & 0xFFFF;\n  // Assemble our three base-1e7 digits, ignoring carries. The maximum\n  // value in a digit at this step is representable as a 48-bit integer, which\n  // can be stored in a 64-bit floating point number.\n  let digitA = low + mid * 6777216 + high * 6710656;\n  let digitB = mid + high * 8147497;\n  let digitC = high * 2;\n  // Apply carries from A to B and from B to C.\n  const base = 10000000;\n  if (digitA >= base) {\n    digitB += Math.floor(digitA / base);\n    digitA %= base;\n  }\n  if (digitB >= base) {\n    digitC += Math.floor(digitB / base);\n    digitB %= base;\n  }\n  // If digitC is 0, then we should have returned in the trivial code path\n  // at the top for non-safe integers. Given this, we can assume both digitB\n  // and digitA need leading zeros.\n  return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) + decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n  return {\n    lo: lo >>> 0,\n    hi: hi >>> 0\n  };\n}\nfunction newBits(lo, hi) {\n  return {\n    lo: lo | 0,\n    hi: hi | 0\n  };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n  highBits = ~highBits;\n  if (lowBits) {\n    lowBits = ~lowBits + 1;\n  } else {\n    // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n    // adding 1 to that, results in 0x100000000, which leaves\n    // the low bits 0x0 and simply adds one to the high bits.\n    highBits += 1;\n  }\n  return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = digit1e7 => {\n  const partial = String(digit1e7);\n  return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n  if (value >= 0) {\n    // write value as varint 32\n    while (value > 0x7f) {\n      bytes.push(value & 0x7f | 0x80);\n      value = value >>> 7;\n    }\n    bytes.push(value);\n  } else {\n    for (let i = 0; i < 9; i++) {\n      bytes.push(value & 127 | 128);\n      value = value >> 7;\n    }\n    bytes.push(1);\n  }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n  let b = this.buf[this.pos++];\n  let result = b & 0x7f;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 7;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 14;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 0x7f) << 21;\n  if ((b & 0x80) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  // Extract only last 4 bits\n  b = this.buf[this.pos++];\n  result |= (b & 0x0f) << 28;\n  for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++) b = this.buf[this.pos++];\n  if ((b & 0x80) != 0) throw new Error(\"invalid varint\");\n  this.assertBounds();\n  // Result can have 32 bits, convert it to unsigned\n  return result >>> 0;\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nfunction makeInt64Support() {\n  const dv = new DataView(new ArrayBuffer(8));\n  // note that Safari 14 implements BigInt, but not the DataView methods\n  const ok = typeof BigInt === \"function\" && typeof dv.getBigInt64 === \"function\" && typeof dv.getBigUint64 === \"function\" && typeof dv.setBigInt64 === \"function\" && typeof dv.setBigUint64 === \"function\" && (typeof process != \"object\" || typeof process.env != \"object\" || process.env.BUF_BIGINT_DISABLE !== \"1\");\n  if (ok) {\n    const MIN = BigInt(\"-9223372036854775808\"),\n      MAX = BigInt(\"9223372036854775807\"),\n      UMIN = BigInt(\"0\"),\n      UMAX = BigInt(\"18446744073709551615\");\n    return {\n      zero: BigInt(0),\n      supported: true,\n      parse(value) {\n        const bi = typeof value == \"bigint\" ? value : BigInt(value);\n        if (bi > MAX || bi < MIN) {\n          throw new Error(\"int64 invalid: \".concat(value));\n        }\n        return bi;\n      },\n      uParse(value) {\n        const bi = typeof value == \"bigint\" ? value : BigInt(value);\n        if (bi > UMAX || bi < UMIN) {\n          throw new Error(\"uint64 invalid: \".concat(value));\n        }\n        return bi;\n      },\n      enc(value) {\n        dv.setBigInt64(0, this.parse(value), true);\n        return {\n          lo: dv.getInt32(0, true),\n          hi: dv.getInt32(4, true)\n        };\n      },\n      uEnc(value) {\n        dv.setBigInt64(0, this.uParse(value), true);\n        return {\n          lo: dv.getInt32(0, true),\n          hi: dv.getInt32(4, true)\n        };\n      },\n      dec(lo, hi) {\n        dv.setInt32(0, lo, true);\n        dv.setInt32(4, hi, true);\n        return dv.getBigInt64(0, true);\n      },\n      uDec(lo, hi) {\n        dv.setInt32(0, lo, true);\n        dv.setInt32(4, hi, true);\n        return dv.getBigUint64(0, true);\n      }\n    };\n  }\n  const assertInt64String = value => assert(/^-?[0-9]+$/.test(value), \"int64 invalid: \".concat(value));\n  const assertUInt64String = value => assert(/^[0-9]+$/.test(value), \"uint64 invalid: \".concat(value));\n  return {\n    zero: \"0\",\n    supported: false,\n    parse(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertInt64String(value);\n      return value;\n    },\n    uParse(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertUInt64String(value);\n      return value;\n    },\n    enc(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertInt64String(value);\n      return int64FromString(value);\n    },\n    uEnc(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertUInt64String(value);\n      return int64FromString(value);\n    },\n    dec(lo, hi) {\n      return int64ToString(lo, hi);\n    },\n    uDec(lo, hi) {\n      return uInt64ToString(lo, hi);\n    }\n  };\n}\nconst protoInt64 = makeInt64Support();\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n  // 0 is reserved for errors.\n  // Order is weird for historical reasons.\n  ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n  ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n  // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n  // negative values are likely.\n  ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n  ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n  // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n  // negative values are likely.\n  ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n  ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n  ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n  ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n  ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n  // Tag-delimited aggregate.\n  // Group type is deprecated and not supported in proto3. However, Proto3\n  // implementations should still be able to parse the group wire format and\n  // treat group fields as unknown fields.\n  // TYPE_GROUP = 10,\n  // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n  // New in version 2.\n  ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n  ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n  // TYPE_ENUM = 14,\n  ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n  ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n  ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n  ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nvar LongType;\n(function (LongType) {\n  /**\n   * Use JavaScript BigInt.\n   */\n  LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n  /**\n   * Use JavaScript String.\n   *\n   * Field option `[jstype = JS_STRING]`.\n   */\n  LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n  if (a === b) {\n    // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n    return true;\n  }\n  // Special case BYTES - we need to compare each byte individually\n  if (type == ScalarType.BYTES) {\n    if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // Special case 64-bit integers - we support number, string and bigint representation.\n  // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n  switch (type) {\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      // Loose comparison will match between 0n, 0 and \"0\".\n      return a == b;\n  }\n  // Anything that hasn't been caught by strict comparison or special cased\n  // BYTES and 64-bit integers is not equal.\n  return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longType) {\n  switch (type) {\n    case ScalarType.BOOL:\n      return false;\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n      return longType == 0 ? protoInt64.zero : \"0\";\n    case ScalarType.DOUBLE:\n    case ScalarType.FLOAT:\n      return 0.0;\n    case ScalarType.BYTES:\n      return new Uint8Array(0);\n    case ScalarType.STRING:\n      return \"\";\n    default:\n      // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n      // We do not use individual cases to save a few bytes code size.\n      return 0;\n  }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n  switch (type) {\n    case ScalarType.BOOL:\n      return value === false;\n    case ScalarType.STRING:\n      return value === \"\";\n    case ScalarType.BYTES:\n      return value instanceof Uint8Array && !value.byteLength;\n    default:\n      return value == 0;\n    // Loose comparison matches 0n, 0 and \"0\"\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n  /**\n   * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n   */\n  WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n  /**\n   * Used for fixed64, sfixed64, double.\n   * Always 8 bytes with little-endian byte order.\n   */\n  WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n  /**\n   * Used for string, bytes, embedded messages, packed repeated fields\n   *\n   * Only repeated numeric types (types which use the varint, 32-bit,\n   * or 64-bit wire types) can be packed. In proto3, such fields are\n   * packed by default.\n   */\n  WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n  /**\n   * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n   * in editions with message_encoding = DELIMITED.\n   */\n  WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n  /**\n   * End of a tag-delimited aggregate.\n   */\n  WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n  /**\n   * Used for fixed32, sfixed32, float.\n   * Always 4 bytes with little-endian byte order.\n   */\n  WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nclass BinaryWriter {\n  constructor(textEncoder) {\n    /**\n     * Previous fork states.\n     */\n    this.stack = [];\n    this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n    this.chunks = [];\n    this.buf = [];\n  }\n  /**\n   * Return all bytes written and reset this writer.\n   */\n  finish() {\n    this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n    let len = 0;\n    for (let i = 0; i < this.chunks.length; i++) len += this.chunks[i].length;\n    let bytes = new Uint8Array(len);\n    let offset = 0;\n    for (let i = 0; i < this.chunks.length; i++) {\n      bytes.set(this.chunks[i], offset);\n      offset += this.chunks[i].length;\n    }\n    this.chunks = [];\n    return bytes;\n  }\n  /**\n   * Start a new fork for length-delimited data like a message\n   * or a packed repeated field.\n   *\n   * Must be joined later with `join()`.\n   */\n  fork() {\n    this.stack.push({\n      chunks: this.chunks,\n      buf: this.buf\n    });\n    this.chunks = [];\n    this.buf = [];\n    return this;\n  }\n  /**\n   * Join the last fork. Write its length and bytes, then\n   * return to the previous state.\n   */\n  join() {\n    // get chunk of fork\n    let chunk = this.finish();\n    // restore previous state\n    let prev = this.stack.pop();\n    if (!prev) throw new Error(\"invalid state, fork stack empty\");\n    this.chunks = prev.chunks;\n    this.buf = prev.buf;\n    // write length of chunk as varint\n    this.uint32(chunk.byteLength);\n    return this.raw(chunk);\n  }\n  /**\n   * Writes a tag (field number and wire type).\n   *\n   * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n   *\n   * Generated code should compute the tag ahead of time and call `uint32()`.\n   */\n  tag(fieldNo, type) {\n    return this.uint32((fieldNo << 3 | type) >>> 0);\n  }\n  /**\n   * Write a chunk of raw bytes.\n   */\n  raw(chunk) {\n    if (this.buf.length) {\n      this.chunks.push(new Uint8Array(this.buf));\n      this.buf = [];\n    }\n    this.chunks.push(chunk);\n    return this;\n  }\n  /**\n   * Write a `uint32` value, an unsigned 32 bit varint.\n   */\n  uint32(value) {\n    assertUInt32(value);\n    // write value as varint 32, inlined for speed\n    while (value > 0x7f) {\n      this.buf.push(value & 0x7f | 0x80);\n      value = value >>> 7;\n    }\n    this.buf.push(value);\n    return this;\n  }\n  /**\n   * Write a `int32` value, a signed 32 bit varint.\n   */\n  int32(value) {\n    assertInt32(value);\n    varint32write(value, this.buf);\n    return this;\n  }\n  /**\n   * Write a `bool` value, a variant.\n   */\n  bool(value) {\n    this.buf.push(value ? 1 : 0);\n    return this;\n  }\n  /**\n   * Write a `bytes` value, length-delimited arbitrary data.\n   */\n  bytes(value) {\n    this.uint32(value.byteLength); // write length of chunk as varint\n    return this.raw(value);\n  }\n  /**\n   * Write a `string` value, length-delimited data converted to UTF-8 text.\n   */\n  string(value) {\n    let chunk = this.textEncoder.encode(value);\n    this.uint32(chunk.byteLength); // write length of chunk as varint\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `float` value, 32-bit floating point number.\n   */\n  float(value) {\n    assertFloat32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setFloat32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `double` value, a 64-bit floating point number.\n   */\n  double(value) {\n    let chunk = new Uint8Array(8);\n    new DataView(chunk.buffer).setFloat64(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32(value) {\n    assertUInt32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setUint32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32(value) {\n    assertInt32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setInt32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32(value) {\n    assertInt32(value);\n    // zigzag encode\n    value = (value << 1 ^ value >> 31) >>> 0;\n    varint32write(value, this.buf);\n    return this;\n  }\n  /**\n   * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64(value) {\n    let chunk = new Uint8Array(8),\n      view = new DataView(chunk.buffer),\n      tc = protoInt64.enc(value);\n    view.setInt32(0, tc.lo, true);\n    view.setInt32(4, tc.hi, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64(value) {\n    let chunk = new Uint8Array(8),\n      view = new DataView(chunk.buffer),\n      tc = protoInt64.uEnc(value);\n    view.setInt32(0, tc.lo, true);\n    view.setInt32(4, tc.hi, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `int64` value, a signed 64-bit varint.\n   */\n  int64(value) {\n    let tc = protoInt64.enc(value);\n    varint64write(tc.lo, tc.hi, this.buf);\n    return this;\n  }\n  /**\n   * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64(value) {\n    let tc = protoInt64.enc(value),\n      // zigzag encode\n      sign = tc.hi >> 31,\n      lo = tc.lo << 1 ^ sign,\n      hi = (tc.hi << 1 | tc.lo >>> 31) ^ sign;\n    varint64write(lo, hi, this.buf);\n    return this;\n  }\n  /**\n   * Write a `uint64` value, an unsigned 64-bit varint.\n   */\n  uint64(value) {\n    let tc = protoInt64.uEnc(value);\n    varint64write(tc.lo, tc.hi, this.buf);\n    return this;\n  }\n}\nclass BinaryReader {\n  constructor(buf, textDecoder) {\n    this.varint64 = varint64read; // dirty cast for `this`\n    /**\n     * Read a `uint32` field, an unsigned 32 bit varint.\n     */\n    this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n    this.buf = buf;\n    this.len = buf.length;\n    this.pos = 0;\n    this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n  }\n  /**\n   * Reads a tag - field number and wire type.\n   */\n  tag() {\n    let tag = this.uint32(),\n      fieldNo = tag >>> 3,\n      wireType = tag & 7;\n    if (fieldNo <= 0 || wireType < 0 || wireType > 5) throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n    return [fieldNo, wireType];\n  }\n  /**\n   * Skip one element and return the skipped data.\n   *\n   * When skipping StartGroup, provide the tags field number to check for\n   * matching field number in the EndGroup tag.\n   */\n  skip(wireType, fieldNo) {\n    let start = this.pos;\n    switch (wireType) {\n      case WireType.Varint:\n        while (this.buf[this.pos++] & 0x80) {\n          // ignore\n        }\n        break;\n      // eslint-disable-next-line\n      // @ts-ignore TS7029: Fallthrough case in switch\n      case WireType.Bit64:\n        this.pos += 4;\n      // eslint-disable-next-line\n      // @ts-ignore TS7029: Fallthrough case in switch\n      case WireType.Bit32:\n        this.pos += 4;\n        break;\n      case WireType.LengthDelimited:\n        let len = this.uint32();\n        this.pos += len;\n        break;\n      case WireType.StartGroup:\n        for (;;) {\n          const [fn, wt] = this.tag();\n          if (wt === WireType.EndGroup) {\n            if (fieldNo !== undefined && fn !== fieldNo) {\n              throw new Error(\"invalid end group tag\");\n            }\n            break;\n          }\n          this.skip(wt, fn);\n        }\n        break;\n      default:\n        throw new Error(\"cant skip wire type \" + wireType);\n    }\n    this.assertBounds();\n    return this.buf.subarray(start, this.pos);\n  }\n  /**\n   * Throws error if position in byte array is out of range.\n   */\n  assertBounds() {\n    if (this.pos > this.len) throw new RangeError(\"premature EOF\");\n  }\n  /**\n   * Read a `int32` field, a signed 32 bit varint.\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n  /**\n   * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32() {\n    let zze = this.uint32();\n    // decode zigzag\n    return zze >>> 1 ^ -(zze & 1);\n  }\n  /**\n   * Read a `int64` field, a signed 64-bit varint.\n   */\n  int64() {\n    return protoInt64.dec(...this.varint64());\n  }\n  /**\n   * Read a `uint64` field, an unsigned 64-bit varint.\n   */\n  uint64() {\n    return protoInt64.uDec(...this.varint64());\n  }\n  /**\n   * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64() {\n    let [lo, hi] = this.varint64();\n    // decode zig zag\n    let s = -(lo & 1);\n    lo = (lo >>> 1 | (hi & 1) << 31) ^ s;\n    hi = hi >>> 1 ^ s;\n    return protoInt64.dec(lo, hi);\n  }\n  /**\n   * Read a `bool` field, a variant.\n   */\n  bool() {\n    let [lo, hi] = this.varint64();\n    return lo !== 0 || hi !== 0;\n  }\n  /**\n   * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32() {\n    return this.view.getUint32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32() {\n    return this.view.getInt32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64() {\n    return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64() {\n    return protoInt64.dec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `float` field, 32-bit floating point number.\n   */\n  float() {\n    return this.view.getFloat32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `double` field, a 64-bit floating point number.\n   */\n  double() {\n    return this.view.getFloat64((this.pos += 8) - 8, true);\n  }\n  /**\n   * Read a `bytes` field, length-delimited arbitrary data.\n   */\n  bytes() {\n    let len = this.uint32(),\n      start = this.pos;\n    this.pos += len;\n    this.assertBounds();\n    return this.buf.subarray(start, start + len);\n  }\n  /**\n   * Read a `string` field, length-delimited data converted to UTF-8 text.\n   */\n  string() {\n    return this.textDecoder.decode(this.bytes());\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create a new extension using the given runtime.\n */\nfunction makeExtension(runtime, typeName, extendee, field) {\n  let fi;\n  return {\n    typeName,\n    extendee,\n    get field() {\n      if (!fi) {\n        const i = typeof field == \"function\" ? field() : field;\n        i.name = typeName.split(\".\").pop();\n        i.jsonName = \"[\".concat(typeName, \"]\");\n        fi = runtime.util.newFieldList([i]).list()[0];\n      }\n      return fi;\n    },\n    runtime\n  };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nfunction createExtensionContainer(extension) {\n  const localName = extension.field.localName;\n  const container = Object.create(null);\n  container[localName] = initExtensionField(extension);\n  return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n  const field = ext.field;\n  if (field.repeated) {\n    return [];\n  }\n  if (field.default !== undefined) {\n    return field.default;\n  }\n  switch (field.kind) {\n    case \"enum\":\n      return field.T.values[0].no;\n    case \"scalar\":\n      return scalarZeroValue(field.T, field.L);\n    case \"message\":\n      // eslint-disable-next-line no-case-declarations\n      const T = field.T,\n        value = new T();\n      return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n    case \"map\":\n      throw \"map fields are not allowed to be extensions\";\n  }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nfunction filterUnknownFields(unknownFields, field) {\n  if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n    // singular scalar fields do not merge, we pick the last\n    for (let i = unknownFields.length - 1; i >= 0; --i) {\n      if (unknownFields[i].no == field.no) {\n        return [unknownFields[i]];\n      }\n    }\n    return [];\n  }\n  return unknownFields.filter(uf => uf.no === field.no);\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++) decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nconst protoBase64 = {\n  /**\n   * Decodes a base64 string to a byte array.\n   *\n   * - ignores white-space, including line breaks and tabs\n   * - allows inner padding (can decode concatenated base64 strings)\n   * - does not require padding\n   * - understands base64url encoding:\n   *   \"-\" instead of \"+\",\n   *   \"_\" instead of \"/\",\n   *   no padding\n   */\n  dec(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    if (base64Str[base64Str.length - 2] == \"=\") es -= 2;else if (base64Str[base64Str.length - 1] == \"=\") es -= 1;\n    let bytes = new Uint8Array(es),\n      bytePos = 0,\n      // position in byte array\n      groupPos = 0,\n      // position in base64 group\n      b,\n      // current byte\n      p = 0; // previous byte\n    for (let i = 0; i < base64Str.length; i++) {\n      b = decTable[base64Str.charCodeAt(i)];\n      if (b === undefined) {\n        switch (base64Str[i]) {\n          // @ts-ignore TS7029: Fallthrough case in switch\n          case \"=\":\n            groupPos = 0;\n          // reset state when padding found\n          // @ts-ignore TS7029: Fallthrough case in switch\n          case \"\\n\":\n          case \"\\r\":\n          case \"\\t\":\n          case \" \":\n            continue;\n          // skip white-space, and padding\n          default:\n            throw Error(\"invalid base64 string.\");\n        }\n      }\n      switch (groupPos) {\n        case 0:\n          p = b;\n          groupPos = 1;\n          break;\n        case 1:\n          bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n          p = b;\n          groupPos = 2;\n          break;\n        case 2:\n          bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n          p = b;\n          groupPos = 3;\n          break;\n        case 3:\n          bytes[bytePos++] = (p & 3) << 6 | b;\n          groupPos = 0;\n          break;\n      }\n    }\n    if (groupPos == 1) throw Error(\"invalid base64 string.\");\n    return bytes.subarray(0, bytePos);\n  },\n  /**\n   * Encode a byte array to a base64 string.\n   */\n  enc(bytes) {\n    let base64 = \"\",\n      groupPos = 0,\n      // position in base64 group\n      b,\n      // current byte\n      p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n      b = bytes[i];\n      switch (groupPos) {\n        case 0:\n          base64 += encTable[b >> 2];\n          p = (b & 3) << 4;\n          groupPos = 1;\n          break;\n        case 1:\n          base64 += encTable[p | b >> 4];\n          p = (b & 15) << 2;\n          groupPos = 2;\n          break;\n        case 2:\n          base64 += encTable[p | b >> 6];\n          base64 += encTable[b & 63];\n          groupPos = 0;\n          break;\n      }\n    }\n    // add output padding\n    if (groupPos) {\n      base64 += encTable[p];\n      base64 += \"=\";\n      if (groupPos == 1) base64 += \"=\";\n    }\n    return base64;\n  }\n};\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction getExtension(message, extension, options) {\n  assertExtendee(extension, message);\n  const opt = extension.runtime.bin.makeReadOptions(options);\n  const ufs = filterUnknownFields(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n  const [container, get] = createExtensionContainer(extension);\n  for (const uf of ufs) {\n    extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n  }\n  return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction setExtension(message, extension, value, options) {\n  assertExtendee(extension, message);\n  const readOpt = extension.runtime.bin.makeReadOptions(options);\n  const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n  if (hasExtension(message, extension)) {\n    const ufs = message.getType().runtime.bin.listUnknownFields(message).filter(uf => uf.no != extension.field.no);\n    message.getType().runtime.bin.discardUnknownFields(message);\n    for (const uf of ufs) {\n      message.getType().runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n    }\n  }\n  const writer = writeOpt.writerFactory();\n  let f = extension.field;\n  // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n  // We patch the field info to use explicit presence:\n  if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n    f = Object.assign(Object.assign({}, extension.field), {\n      opt: true\n    });\n  }\n  extension.runtime.bin.writeField(f, value, writer, writeOpt);\n  const reader = readOpt.readerFactory(writer.finish());\n  while (reader.pos < reader.len) {\n    const [no, wireType] = reader.tag();\n    const data = reader.skip(wireType, no);\n    message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n  }\n}\n/**\n * Check whether an extension is set on a message.\n */\nfunction hasExtension(message, extension) {\n  const messageType = message.getType();\n  return extension.extendee.typeName === messageType.typeName && !!messageType.runtime.bin.listUnknownFields(message).find(uf => uf.no == extension.field.no);\n}\nfunction assertExtendee(extension, message) {\n  assert(extension.extendee.typeName == message.getType().typeName, \"extension \".concat(extension.typeName, \" can only be applied to message \").concat(extension.extendee.typeName));\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns true if the field is set.\n */\nfunction isFieldSet(field, target) {\n  const localName = field.localName;\n  if (field.repeated) {\n    return target[localName].length > 0;\n  }\n  if (field.oneof) {\n    return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n  }\n  switch (field.kind) {\n    case \"enum\":\n    case \"scalar\":\n      if (field.opt || field.req) {\n        // explicit presence\n        return target[localName] !== undefined;\n      }\n      // implicit presence\n      if (field.kind == \"enum\") {\n        return target[localName] !== field.T.values[0].no;\n      }\n      return !isScalarZeroValue(field.T, target[localName]);\n    case \"message\":\n      return target[localName] !== undefined;\n    case \"map\":\n      return Object.keys(target[localName]).length > 0;\n    // eslint-disable-line @typescript-eslint/no-unsafe-argument\n  }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nfunction clearField(field, target) {\n  const localName = field.localName;\n  const implicitPresence = !field.opt && !field.req;\n  if (field.repeated) {\n    target[localName] = [];\n  } else if (field.oneof) {\n    target[field.oneof.localName] = {\n      case: undefined\n    };\n  } else {\n    switch (field.kind) {\n      case \"map\":\n        target[localName] = {};\n        break;\n      case \"enum\":\n        target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n        break;\n      case \"scalar\":\n        target[localName] = implicitPresence ? scalarZeroValue(field.T, field.L) : undefined;\n        break;\n      case \"message\":\n        target[localName] = undefined;\n        break;\n    }\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nfunction isMessage(arg, type) {\n  if (arg === null || typeof arg != \"object\") {\n    return false;\n  }\n  if (!Object.getOwnPropertyNames(Message.prototype).every(m => m in arg && typeof arg[m] == \"function\")) {\n    return false;\n  }\n  const actualType = arg.getType();\n  if (actualType === null || typeof actualType != \"function\" || !(\"typeName\" in actualType) || typeof actualType.typeName != \"string\") {\n    return false;\n  }\n  return type === undefined ? true : actualType.typeName == type.typeName;\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nfunction wrapField(type, value) {\n  if (isMessage(value) || !type.fieldWrapper) {\n    return value;\n  }\n  return type.fieldWrapper.wrapField(value);\n}\n({\n  \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n  \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n  \"google.protobuf.Int64Value\": ScalarType.INT64,\n  \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n  \"google.protobuf.Int32Value\": ScalarType.INT32,\n  \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n  \"google.protobuf.BoolValue\": ScalarType.BOOL,\n  \"google.protobuf.StringValue\": ScalarType.STRING,\n  \"google.protobuf.BytesValue\": ScalarType.BYTES\n});\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n  ignoreUnknownFields: false\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n  emitDefaultValues: false,\n  enumAsInteger: false,\n  useProtoFieldName: false,\n  prettySpaces: 0\n};\nfunction makeReadOptions$1(options) {\n  return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions$1(options) {\n  return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nfunction makeJsonFormat() {\n  return {\n    makeReadOptions: makeReadOptions$1,\n    makeWriteOptions: makeWriteOptions$1,\n    readMessage(type, json, options, message) {\n      if (json == null || Array.isArray(json) || typeof json != \"object\") {\n        throw new Error(\"cannot decode message \".concat(type.typeName, \" from JSON: \").concat(debugJsonValue(json)));\n      }\n      message = message !== null && message !== void 0 ? message : new type();\n      const oneofSeen = new Map();\n      const registry = options.typeRegistry;\n      for (const [jsonKey, jsonValue] of Object.entries(json)) {\n        const field = type.fields.findJsonName(jsonKey);\n        if (field) {\n          if (field.oneof) {\n            if (jsonValue === null && field.kind == \"scalar\") {\n              // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n              continue;\n            }\n            const seen = oneofSeen.get(field.oneof);\n            if (seen !== undefined) {\n              throw new Error(\"cannot decode message \".concat(type.typeName, \" from JSON: multiple keys for oneof \\\"\").concat(field.oneof.name, \"\\\" present: \\\"\").concat(seen, \"\\\", \\\"\").concat(jsonKey, \"\\\"\"));\n            }\n            oneofSeen.set(field.oneof, jsonKey);\n          }\n          readField$1(message, jsonValue, field, options, type);\n        } else {\n          let found = false;\n          if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) && jsonKey.startsWith(\"[\") && jsonKey.endsWith(\"]\")) {\n            const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n            if (ext && ext.extendee.typeName == type.typeName) {\n              found = true;\n              const [container, get] = createExtensionContainer(ext);\n              readField$1(container, jsonValue, ext.field, options, ext);\n              // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n              // so that users can bring their own binary reader and writer factories\n              // if necessary.\n              setExtension(message, ext, get(), options);\n            }\n          }\n          if (!found && !options.ignoreUnknownFields) {\n            throw new Error(\"cannot decode message \".concat(type.typeName, \" from JSON: key \\\"\").concat(jsonKey, \"\\\" is unknown\"));\n          }\n        }\n      }\n      return message;\n    },\n    writeMessage(message, options) {\n      const type = message.getType();\n      const json = {};\n      let field;\n      try {\n        for (field of type.fields.byNumber()) {\n          if (!isFieldSet(field, message)) {\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (field.req) {\n              throw \"required field not set\";\n            }\n            if (!options.emitDefaultValues) {\n              continue;\n            }\n            if (!canEmitFieldDefaultValue(field)) {\n              continue;\n            }\n          }\n          const value = field.oneof ? message[field.oneof.localName].value : message[field.localName];\n          const jsonValue = writeField$1(field, value, options);\n          if (jsonValue !== undefined) {\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n          }\n        }\n        const registry = options.typeRegistry;\n        if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n          for (const uf of type.runtime.bin.listUnknownFields(message)) {\n            const ext = registry.findExtensionFor(type.typeName, uf.no);\n            if (ext && hasExtension(message, ext)) {\n              // We pass on the options as BinaryReadOptions, so that users can bring their own\n              // binary reader factory if necessary.\n              const value = getExtension(message, ext, options);\n              const jsonValue = writeField$1(ext.field, value, options);\n              if (jsonValue !== undefined) {\n                json[ext.field.jsonName] = jsonValue;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        const m = field ? \"cannot encode field \".concat(type.typeName, \".\").concat(field.name, \" to JSON\") : \"cannot encode message \".concat(type.typeName, \" to JSON\");\n        const r = e instanceof Error ? e.message : String(e);\n        throw new Error(m + (r.length > 0 ? \": \".concat(r) : \"\"));\n      }\n      return json;\n    },\n    readScalar(type, json, longType) {\n      // The signature of our internal function has changed. For backwards-\n      // compatibility, we support the old form that is part of the public API\n      // through the interface JsonFormat.\n      return readScalar$1(type, json, longType !== null && longType !== void 0 ? longType : LongType.BIGINT, true);\n    },\n    writeScalar(type, value, emitDefaultValues) {\n      // The signature of our internal function has changed. For backwards-\n      // compatibility, we support the old form that is part of the public API\n      // through the interface JsonFormat.\n      if (value === undefined) {\n        return undefined;\n      }\n      if (emitDefaultValues || isScalarZeroValue(type, value)) {\n        return writeScalar$1(type, value);\n      }\n      return undefined;\n    },\n    debug: debugJsonValue\n  };\n}\nfunction debugJsonValue(json) {\n  if (json === null) {\n    return \"null\";\n  }\n  switch (typeof json) {\n    case \"object\":\n      return Array.isArray(json) ? \"array\" : \"object\";\n    case \"string\":\n      return json.length > 100 ? \"string\" : \"\\\"\".concat(json.split('\"').join('\\\\\"'), \"\\\"\");\n    default:\n      return String(json);\n  }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField$1(target, jsonValue, field, options, parentType) {\n  let localName = field.localName;\n  if (field.repeated) {\n    assert(field.kind != \"map\");\n    if (jsonValue === null) {\n      return;\n    }\n    if (!Array.isArray(jsonValue)) {\n      throw new Error(\"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonValue)));\n    }\n    const targetArray = target[localName];\n    for (const jsonItem of jsonValue) {\n      if (jsonItem === null) {\n        throw new Error(\"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonItem)));\n      }\n      switch (field.kind) {\n        case \"message\":\n          targetArray.push(field.T.fromJson(jsonItem, options));\n          break;\n        case \"enum\":\n          const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n          if (enumValue !== tokenIgnoredUnknownEnum) {\n            targetArray.push(enumValue);\n          }\n          break;\n        case \"scalar\":\n          try {\n            targetArray.push(readScalar$1(field.T, jsonItem, field.L, true));\n          } catch (e) {\n            let m = \"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonItem));\n            if (e instanceof Error && e.message.length > 0) {\n              m += \": \".concat(e.message);\n            }\n            throw new Error(m);\n          }\n          break;\n      }\n    }\n  } else if (field.kind == \"map\") {\n    if (jsonValue === null) {\n      return;\n    }\n    if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n      throw new Error(\"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonValue)));\n    }\n    const targetMap = target[localName];\n    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n      if (jsonMapValue === null) {\n        throw new Error(\"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: map value null\"));\n      }\n      let key;\n      try {\n        key = readMapKey(field.K, jsonMapKey);\n      } catch (e) {\n        let m = \"cannot decode map key for field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonValue));\n        if (e instanceof Error && e.message.length > 0) {\n          m += \": \".concat(e.message);\n        }\n        throw new Error(m);\n      }\n      switch (field.V.kind) {\n        case \"message\":\n          targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n          break;\n        case \"enum\":\n          const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n          if (enumValue !== tokenIgnoredUnknownEnum) {\n            targetMap[key] = enumValue;\n          }\n          break;\n        case \"scalar\":\n          try {\n            targetMap[key] = readScalar$1(field.V.T, jsonMapValue, LongType.BIGINT, true);\n          } catch (e) {\n            let m = \"cannot decode map value for field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonValue));\n            if (e instanceof Error && e.message.length > 0) {\n              m += \": \".concat(e.message);\n            }\n            throw new Error(m);\n          }\n          break;\n      }\n    }\n  } else {\n    if (field.oneof) {\n      target = target[field.oneof.localName] = {\n        case: localName\n      };\n      localName = \"value\";\n    }\n    switch (field.kind) {\n      case \"message\":\n        const messageType = field.T;\n        if (jsonValue === null && messageType.typeName != \"google.protobuf.Value\") {\n          return;\n        }\n        let currentValue = target[localName];\n        if (isMessage(currentValue)) {\n          currentValue.fromJson(jsonValue, options);\n        } else {\n          target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n          if (messageType.fieldWrapper && !field.oneof) {\n            target[localName] = messageType.fieldWrapper.unwrapField(currentValue);\n          }\n        }\n        break;\n      case \"enum\":\n        const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n        switch (enumValue) {\n          case tokenNull:\n            clearField(field, target);\n            break;\n          case tokenIgnoredUnknownEnum:\n            break;\n          default:\n            target[localName] = enumValue;\n            break;\n        }\n        break;\n      case \"scalar\":\n        try {\n          const scalarValue = readScalar$1(field.T, jsonValue, field.L, false);\n          switch (scalarValue) {\n            case tokenNull:\n              clearField(field, target);\n              break;\n            default:\n              target[localName] = scalarValue;\n              break;\n          }\n        } catch (e) {\n          let m = \"cannot decode field \".concat(parentType.typeName, \".\").concat(field.name, \" from JSON: \").concat(debugJsonValue(jsonValue));\n          if (e instanceof Error && e.message.length > 0) {\n            m += \": \".concat(e.message);\n          }\n          throw new Error(m);\n        }\n        break;\n    }\n  }\n}\nfunction readMapKey(type, json) {\n  if (type === ScalarType.BOOL) {\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (json) {\n      case \"true\":\n        json = true;\n        break;\n      case \"false\":\n        json = false;\n        break;\n    }\n  }\n  return readScalar$1(type, json, LongType.BIGINT, true).toString();\n}\nfunction readScalar$1(type, json, longType, nullAsZeroValue) {\n  if (json === null) {\n    if (nullAsZeroValue) {\n      return scalarZeroValue(type, longType);\n    }\n    return tokenNull;\n  }\n  // every valid case in the switch below returns, and every fall\n  // through is regarded as a failure.\n  switch (type) {\n    // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n    // Either numbers or strings are accepted. Exponent notation is also accepted.\n    case ScalarType.DOUBLE:\n    case ScalarType.FLOAT:\n      if (json === \"NaN\") return Number.NaN;\n      if (json === \"Infinity\") return Number.POSITIVE_INFINITY;\n      if (json === \"-Infinity\") return Number.NEGATIVE_INFINITY;\n      if (json === \"\") {\n        // empty string is not a number\n        break;\n      }\n      if (typeof json == \"string\" && json.trim().length !== json.length) {\n        // extra whitespace\n        break;\n      }\n      if (typeof json != \"string\" && typeof json != \"number\") {\n        break;\n      }\n      const float = Number(json);\n      if (Number.isNaN(float)) {\n        // not a number\n        break;\n      }\n      if (!Number.isFinite(float)) {\n        // infinity and -infinity are handled by string representation above, so this is an error\n        break;\n      }\n      if (type == ScalarType.FLOAT) assertFloat32(float);\n      return float;\n    // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n    case ScalarType.INT32:\n    case ScalarType.FIXED32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n    case ScalarType.UINT32:\n      let int32;\n      if (typeof json == \"number\") int32 = json;else if (typeof json == \"string\" && json.length > 0) {\n        if (json.trim().length === json.length) int32 = Number(json);\n      }\n      if (int32 === undefined) break;\n      if (type == ScalarType.UINT32 || type == ScalarType.FIXED32) assertUInt32(int32);else assertInt32(int32);\n      return int32;\n    // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      if (typeof json != \"number\" && typeof json != \"string\") break;\n      const long = protoInt64.parse(json);\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      return longType ? long.toString() : long;\n    case ScalarType.FIXED64:\n    case ScalarType.UINT64:\n      if (typeof json != \"number\" && typeof json != \"string\") break;\n      const uLong = protoInt64.uParse(json);\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      return longType ? uLong.toString() : uLong;\n    // bool:\n    case ScalarType.BOOL:\n      if (typeof json !== \"boolean\") break;\n      return json;\n    // string:\n    case ScalarType.STRING:\n      if (typeof json !== \"string\") {\n        break;\n      }\n      // A string must always contain UTF-8 encoded or 7-bit ASCII.\n      // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n      try {\n        encodeURIComponent(json);\n      } catch (e) {\n        throw new Error(\"invalid UTF8\");\n      }\n      return json;\n    // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n    // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n    case ScalarType.BYTES:\n      if (json === \"\") return new Uint8Array(0);\n      if (typeof json !== \"string\") break;\n      return protoBase64.dec(json);\n  }\n  throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n  if (json === null) {\n    if (type.typeName == \"google.protobuf.NullValue\") {\n      return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n    }\n    return nullAsZeroValue ? type.values[0].no : tokenNull;\n  }\n  // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n  switch (typeof json) {\n    case \"number\":\n      if (Number.isInteger(json)) {\n        return json;\n      }\n      break;\n    case \"string\":\n      const value = type.findName(json);\n      if (value !== undefined) {\n        return value.no;\n      }\n      if (ignoreUnknownFields) {\n        return tokenIgnoredUnknownEnum;\n      }\n      break;\n  }\n  throw new Error(\"cannot decode enum \".concat(type.typeName, \" from JSON: \").concat(debugJsonValue(json)));\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n  if (field.repeated || field.kind == \"map\") {\n    // maps are {}, repeated fields are []\n    return true;\n  }\n  if (field.oneof) {\n    // oneof fields are never emitted\n    return false;\n  }\n  if (field.kind == \"message\") {\n    // singular message field are allowed to emit JSON null, but we do not\n    return false;\n  }\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  if (field.opt || field.req) {\n    // the field uses explicit presence, so we cannot emit a zero value\n    return false;\n  }\n  return true;\n}\nfunction writeField$1(field, value, options) {\n  if (field.kind == \"map\") {\n    assert(typeof value == \"object\" && value != null);\n    const jsonObj = {};\n    const entries = Object.entries(value);\n    switch (field.V.kind) {\n      case \"scalar\":\n        for (const [entryKey, entryValue] of entries) {\n          jsonObj[entryKey.toString()] = writeScalar$1(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n        }\n        break;\n      case \"message\":\n        for (const [entryKey, entryValue] of entries) {\n          // JSON standard allows only (double quoted) string as property key\n          jsonObj[entryKey.toString()] = entryValue.toJson(options);\n        }\n        break;\n      case \"enum\":\n        const enumType = field.V.T;\n        for (const [entryKey, entryValue] of entries) {\n          // JSON standard allows only (double quoted) string as property key\n          jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n        }\n        break;\n    }\n    return options.emitDefaultValues || entries.length > 0 ? jsonObj : undefined;\n  }\n  if (field.repeated) {\n    assert(Array.isArray(value));\n    const jsonArr = [];\n    switch (field.kind) {\n      case \"scalar\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(writeScalar$1(field.T, value[i]));\n        }\n        break;\n      case \"enum\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n        }\n        break;\n      case \"message\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(value[i].toJson(options));\n        }\n        break;\n    }\n    return options.emitDefaultValues || jsonArr.length > 0 ? jsonArr : undefined;\n  }\n  switch (field.kind) {\n    case \"scalar\":\n      return writeScalar$1(field.T, value);\n    case \"enum\":\n      return writeEnum(field.T, value, options.enumAsInteger);\n    case \"message\":\n      return wrapField(field.T, value).toJson(options);\n  }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n  var _a;\n  assert(typeof value == \"number\");\n  if (type.typeName == \"google.protobuf.NullValue\") {\n    return null;\n  }\n  if (enumAsInteger) {\n    return value;\n  }\n  const val = type.findNumber(value);\n  return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar$1(type, value) {\n  switch (type) {\n    // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n    case ScalarType.INT32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n    case ScalarType.FIXED32:\n    case ScalarType.UINT32:\n      assert(typeof value == \"number\");\n      return value;\n    // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n    // Either numbers or strings are accepted. Exponent notation is also accepted.\n    case ScalarType.FLOAT:\n    // assertFloat32(value);\n    case ScalarType.DOUBLE:\n      // eslint-disable-line no-fallthrough\n      assert(typeof value == \"number\");\n      if (Number.isNaN(value)) return \"NaN\";\n      if (value === Number.POSITIVE_INFINITY) return \"Infinity\";\n      if (value === Number.NEGATIVE_INFINITY) return \"-Infinity\";\n      return value;\n    // string:\n    case ScalarType.STRING:\n      assert(typeof value == \"string\");\n      return value;\n    // bool:\n    case ScalarType.BOOL:\n      assert(typeof value == \"boolean\");\n      return value;\n    // JSON value will be a decimal string. Either numbers or strings are accepted.\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      assert(typeof value == \"bigint\" || typeof value == \"string\" || typeof value == \"number\");\n      return value.toString();\n    // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n    // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n    case ScalarType.BYTES:\n      assert(value instanceof Uint8Array);\n      return protoBase64.enc(value);\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n  readUnknownFields: true,\n  readerFactory: bytes => new BinaryReader(bytes)\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n  writeUnknownFields: true,\n  writerFactory: () => new BinaryWriter()\n};\nfunction makeReadOptions(options) {\n  return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n  return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction makeBinaryFormat() {\n  return {\n    makeReadOptions,\n    makeWriteOptions,\n    listUnknownFields(message) {\n      var _a;\n      return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n    },\n    discardUnknownFields(message) {\n      delete message[unknownFieldsSymbol];\n    },\n    writeUnknownFields(message, writer) {\n      const m = message;\n      const c = m[unknownFieldsSymbol];\n      if (c) {\n        for (const f of c) {\n          writer.tag(f.no, f.wireType).raw(f.data);\n        }\n      }\n    },\n    onUnknownField(message, no, wireType, data) {\n      const m = message;\n      if (!Array.isArray(m[unknownFieldsSymbol])) {\n        m[unknownFieldsSymbol] = [];\n      }\n      m[unknownFieldsSymbol].push({\n        no,\n        wireType,\n        data\n      });\n    },\n    readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n      const type = message.getType();\n      // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n      const end = delimitedMessageEncoding ? reader.len : reader.pos + lengthOrEndTagFieldNo;\n      let fieldNo, wireType;\n      while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimitedMessageEncoding === true && wireType == WireType.EndGroup) {\n          break;\n        }\n        const field = type.fields.find(fieldNo);\n        if (!field) {\n          const data = reader.skip(wireType, fieldNo);\n          if (options.readUnknownFields) {\n            this.onUnknownField(message, fieldNo, wireType, data);\n          }\n          continue;\n        }\n        readField(message, reader, field, wireType, options);\n      }\n      if (delimitedMessageEncoding && (\n      // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n      wireType != WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n        throw new Error(\"invalid end group tag\");\n      }\n    },\n    readField,\n    writeMessage(message, writer, options) {\n      const type = message.getType();\n      for (const field of type.fields.byNumber()) {\n        if (!isFieldSet(field, message)) {\n          if (field.req) {\n            throw new Error(\"cannot encode field \".concat(type.typeName, \".\").concat(field.name, \" to binary: required field not set\"));\n          }\n          continue;\n        }\n        const value = field.oneof ? message[field.oneof.localName].value : message[field.localName];\n        writeField(field, value, writer, options);\n      }\n      if (options.writeUnknownFields) {\n        this.writeUnknownFields(message, writer);\n      }\n      return writer;\n    },\n    writeField(field, value, writer, options) {\n      // The behavior of our internal function has changed, it does no longer\n      // accept `undefined` values for singular scalar and map.\n      // For backwards-compatibility, we support the old form that is part of\n      // the public API through the interface BinaryFormat.\n      if (value === undefined) {\n        return undefined;\n      }\n      writeField(field, value, writer, options);\n    }\n  };\n}\nfunction readField(target,\n// eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n  let {\n    repeated,\n    localName\n  } = field;\n  if (field.oneof) {\n    target = target[field.oneof.localName];\n    if (target.case != localName) {\n      delete target.value;\n    }\n    target.case = localName;\n    localName = \"value\";\n  }\n  switch (field.kind) {\n    case \"scalar\":\n    case \"enum\":\n      const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n      let read = readScalar;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n      if (field.kind == \"scalar\" && field.L > 0) {\n        read = readScalarLTString;\n      }\n      if (repeated) {\n        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n        const isPacked = wireType == WireType.LengthDelimited && scalarType != ScalarType.STRING && scalarType != ScalarType.BYTES;\n        if (isPacked) {\n          let e = reader.uint32() + reader.pos;\n          while (reader.pos < e) {\n            arr.push(read(reader, scalarType));\n          }\n        } else {\n          arr.push(read(reader, scalarType));\n        }\n      } else {\n        target[localName] = read(reader, scalarType);\n      }\n      break;\n    case \"message\":\n      const messageType = field.T;\n      if (repeated) {\n        // safe to assume presence of array, oneof cannot contain repeated values\n        target[localName].push(readMessageField(reader, new messageType(), options, field));\n      } else {\n        if (isMessage(target[localName])) {\n          readMessageField(reader, target[localName], options, field);\n        } else {\n          target[localName] = readMessageField(reader, new messageType(), options, field);\n          if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n            target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n          }\n        }\n      }\n      break;\n    case \"map\":\n      let [mapKey, mapVal] = readMapEntry(field, reader, options);\n      // safe to assume presence of map object, oneof cannot contain repeated values\n      target[localName][mapKey] = mapVal;\n      break;\n  }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n  const format = message.getType().runtime.bin;\n  const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n  format.readMessage(message, reader, delimited ? field.no : reader.uint32(),\n  // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n  options, delimited);\n  return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n  const length = reader.uint32(),\n    end = reader.pos + length;\n  let key, val;\n  while (reader.pos < end) {\n    const [fieldNo] = reader.tag();\n    switch (fieldNo) {\n      case 1:\n        key = readScalar(reader, field.K);\n        break;\n      case 2:\n        switch (field.V.kind) {\n          case \"scalar\":\n            val = readScalar(reader, field.V.T);\n            break;\n          case \"enum\":\n            val = reader.int32();\n            break;\n          case \"message\":\n            val = readMessageField(reader, new field.V.T(), options, undefined);\n            break;\n        }\n        break;\n    }\n  }\n  if (key === undefined) {\n    key = scalarZeroValue(field.K, LongType.BIGINT);\n  }\n  if (typeof key != \"string\" && typeof key != \"number\") {\n    key = key.toString();\n  }\n  if (val === undefined) {\n    switch (field.V.kind) {\n      case \"scalar\":\n        val = scalarZeroValue(field.V.T, LongType.BIGINT);\n        break;\n      case \"enum\":\n        val = field.V.T.values[0].no;\n        break;\n      case \"message\":\n        val = new field.V.T();\n        break;\n    }\n  }\n  return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n  const v = readScalar(reader, type);\n  return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n  switch (type) {\n    case ScalarType.STRING:\n      return reader.string();\n    case ScalarType.BOOL:\n      return reader.bool();\n    case ScalarType.DOUBLE:\n      return reader.double();\n    case ScalarType.FLOAT:\n      return reader.float();\n    case ScalarType.INT32:\n      return reader.int32();\n    case ScalarType.INT64:\n      return reader.int64();\n    case ScalarType.UINT64:\n      return reader.uint64();\n    case ScalarType.FIXED64:\n      return reader.fixed64();\n    case ScalarType.BYTES:\n      return reader.bytes();\n    case ScalarType.FIXED32:\n      return reader.fixed32();\n    case ScalarType.SFIXED32:\n      return reader.sfixed32();\n    case ScalarType.SFIXED64:\n      return reader.sfixed64();\n    case ScalarType.SINT64:\n      return reader.sint64();\n    case ScalarType.UINT32:\n      return reader.uint32();\n    case ScalarType.SINT32:\n      return reader.sint32();\n  }\n}\nfunction writeField(field, value, writer, options) {\n  assert(value !== undefined);\n  const repeated = field.repeated;\n  switch (field.kind) {\n    case \"scalar\":\n    case \"enum\":\n      let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n      if (repeated) {\n        assert(Array.isArray(value));\n        if (field.packed) {\n          writePacked(writer, scalarType, field.no, value);\n        } else {\n          for (const item of value) {\n            writeScalar(writer, scalarType, field.no, item);\n          }\n        }\n      } else {\n        writeScalar(writer, scalarType, field.no, value);\n      }\n      break;\n    case \"message\":\n      if (repeated) {\n        assert(Array.isArray(value));\n        for (const item of value) {\n          writeMessageField(writer, options, field, item);\n        }\n      } else {\n        writeMessageField(writer, options, field, value);\n      }\n      break;\n    case \"map\":\n      assert(typeof value == \"object\" && value != null);\n      for (const [key, val] of Object.entries(value)) {\n        writeMapEntry(writer, options, field, key, val);\n      }\n      break;\n  }\n}\nfunction writeMapEntry(writer, options, field, key, value) {\n  writer.tag(field.no, WireType.LengthDelimited);\n  writer.fork();\n  // javascript only allows number or string for object properties\n  // we convert from our representation to the protobuf type\n  let keyValue = key;\n  // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n  switch (field.K) {\n    case ScalarType.INT32:\n    case ScalarType.FIXED32:\n    case ScalarType.UINT32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n      keyValue = Number.parseInt(key);\n      break;\n    case ScalarType.BOOL:\n      assert(key == \"true\" || key == \"false\");\n      keyValue = key == \"true\";\n      break;\n  }\n  // write key, expecting key field number = 1\n  writeScalar(writer, field.K, 1, keyValue);\n  // write value, expecting value field number = 2\n  switch (field.V.kind) {\n    case \"scalar\":\n      writeScalar(writer, field.V.T, 2, value);\n      break;\n    case \"enum\":\n      writeScalar(writer, ScalarType.INT32, 2, value);\n      break;\n    case \"message\":\n      assert(value !== undefined);\n      writer.tag(2, WireType.LengthDelimited).bytes(value.toBinary(options));\n      break;\n  }\n  writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n  const message = wrapField(field.T, value);\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  if (field.delimited) writer.tag(field.no, WireType.StartGroup).raw(message.toBinary(options)).tag(field.no, WireType.EndGroup);else writer.tag(field.no, WireType.LengthDelimited).bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n  assert(value !== undefined);\n  let [wireType, method] = scalarTypeInfo(type);\n  writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n  if (!value.length) {\n    return;\n  }\n  writer.tag(fieldNo, WireType.LengthDelimited).fork();\n  let [, method] = scalarTypeInfo(type);\n  for (let i = 0; i < value.length; i++) {\n    writer[method](value[i]);\n  }\n  writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n  let wireType = WireType.Varint;\n  // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n  switch (type) {\n    case ScalarType.BYTES:\n    case ScalarType.STRING:\n      wireType = WireType.LengthDelimited;\n      break;\n    case ScalarType.DOUBLE:\n    case ScalarType.FIXED64:\n    case ScalarType.SFIXED64:\n      wireType = WireType.Bit64;\n      break;\n    case ScalarType.FIXED32:\n    case ScalarType.SFIXED32:\n    case ScalarType.FLOAT:\n      wireType = WireType.Bit32;\n      break;\n  }\n  const method = ScalarType[type].toLowerCase();\n  return [wireType, method];\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nfunction makeUtilCommon() {\n  return {\n    setEnumType,\n    initPartial(source, target) {\n      if (source === undefined) {\n        return;\n      }\n      const type = target.getType();\n      for (const member of type.fields.byMember()) {\n        const localName = member.localName,\n          t = target,\n          s = source;\n        if (s[localName] == null) {\n          // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n          continue;\n        }\n        switch (member.kind) {\n          case \"oneof\":\n            const sk = s[localName].case;\n            if (sk === undefined) {\n              continue;\n            }\n            const sourceField = member.findField(sk);\n            let val = s[localName].value;\n            if (sourceField && sourceField.kind == \"message\" && !isMessage(val, sourceField.T)) {\n              val = new sourceField.T(val);\n            } else if (sourceField && sourceField.kind === \"scalar\" && sourceField.T === ScalarType.BYTES) {\n              val = toU8Arr(val);\n            }\n            t[localName] = {\n              case: sk,\n              value: val\n            };\n            break;\n          case \"scalar\":\n          case \"enum\":\n            let copy = s[localName];\n            if (member.T === ScalarType.BYTES) {\n              copy = member.repeated ? copy.map(toU8Arr) : toU8Arr(copy);\n            }\n            t[localName] = copy;\n            break;\n          case \"map\":\n            switch (member.V.kind) {\n              case \"scalar\":\n              case \"enum\":\n                if (member.V.T === ScalarType.BYTES) {\n                  for (const [k, v] of Object.entries(s[localName])) {\n                    t[localName][k] = toU8Arr(v);\n                  }\n                } else {\n                  Object.assign(t[localName], s[localName]);\n                }\n                break;\n              case \"message\":\n                const messageType = member.V.T;\n                for (const k of Object.keys(s[localName])) {\n                  let val = s[localName][k];\n                  if (!messageType.fieldWrapper) {\n                    // We only take partial input for messages that are not a wrapper type.\n                    // For those messages, we recursively normalize the partial input.\n                    val = new messageType(val);\n                  }\n                  t[localName][k] = val;\n                }\n                break;\n            }\n            break;\n          case \"message\":\n            const mt = member.T;\n            if (member.repeated) {\n              t[localName] = s[localName].map(val => isMessage(val, mt) ? val : new mt(val));\n            } else {\n              const val = s[localName];\n              if (mt.fieldWrapper) {\n                if (\n                // We can't use BytesValue.typeName as that will create a circular import\n                mt.typeName === \"google.protobuf.BytesValue\") {\n                  t[localName] = toU8Arr(val);\n                } else {\n                  t[localName] = val;\n                }\n              } else {\n                t[localName] = isMessage(val, mt) ? val : new mt(val);\n              }\n            }\n            break;\n        }\n      }\n    },\n    // TODO use isFieldSet() here to support future field presence\n    equals(type, a, b) {\n      if (a === b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      return type.fields.byMember().every(m => {\n        const va = a[m.localName];\n        const vb = b[m.localName];\n        if (m.repeated) {\n          if (va.length !== vb.length) {\n            return false;\n          }\n          // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n          switch (m.kind) {\n            case \"message\":\n              return va.every((a, i) => m.T.equals(a, vb[i]));\n            case \"scalar\":\n              return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n            case \"enum\":\n              return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n          }\n          throw new Error(\"repeated cannot contain \".concat(m.kind));\n        }\n        switch (m.kind) {\n          case \"message\":\n            return m.T.equals(va, vb);\n          case \"enum\":\n            return scalarEquals(ScalarType.INT32, va, vb);\n          case \"scalar\":\n            return scalarEquals(m.T, va, vb);\n          case \"oneof\":\n            if (va.case !== vb.case) {\n              return false;\n            }\n            const s = m.findField(va.case);\n            if (s === undefined) {\n              return true;\n            }\n            // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n            switch (s.kind) {\n              case \"message\":\n                return s.T.equals(va.value, vb.value);\n              case \"enum\":\n                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n              case \"scalar\":\n                return scalarEquals(s.T, va.value, vb.value);\n            }\n            throw new Error(\"oneof cannot contain \".concat(s.kind));\n          case \"map\":\n            const keys = Object.keys(va).concat(Object.keys(vb));\n            switch (m.V.kind) {\n              case \"message\":\n                const messageType = m.V.T;\n                return keys.every(k => messageType.equals(va[k], vb[k]));\n              case \"enum\":\n                return keys.every(k => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n              case \"scalar\":\n                const scalarType = m.V.T;\n                return keys.every(k => scalarEquals(scalarType, va[k], vb[k]));\n            }\n            break;\n        }\n      });\n    },\n    // TODO use isFieldSet() here to support future field presence\n    clone(message) {\n      const type = message.getType(),\n        target = new type(),\n        any = target;\n      for (const member of type.fields.byMember()) {\n        const source = message[member.localName];\n        let copy;\n        if (member.repeated) {\n          copy = source.map(cloneSingularField);\n        } else if (member.kind == \"map\") {\n          copy = any[member.localName];\n          for (const [key, v] of Object.entries(source)) {\n            copy[key] = cloneSingularField(v);\n          }\n        } else if (member.kind == \"oneof\") {\n          const f = member.findField(source.case);\n          copy = f ? {\n            case: source.case,\n            value: cloneSingularField(source.value)\n          } : {\n            case: undefined\n          };\n        } else {\n          copy = cloneSingularField(source);\n        }\n        any[member.localName] = copy;\n      }\n      for (const uf of type.runtime.bin.listUnknownFields(message)) {\n        type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n      }\n      return target;\n    }\n  };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n  if (value === undefined) {\n    return value;\n  }\n  if (isMessage(value)) {\n    return value.clone();\n  }\n  if (value instanceof Uint8Array) {\n    const c = new Uint8Array(value.byteLength);\n    c.set(value);\n    return c;\n  }\n  return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n  return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nfunction makeProtoRuntime(syntax, newFieldList, initFields) {\n  return {\n    syntax,\n    json: makeJsonFormat(),\n    bin: makeBinaryFormat(),\n    util: Object.assign(Object.assign({}, makeUtilCommon()), {\n      newFieldList,\n      initFields\n    }),\n    makeMessageType(typeName, fields, opt) {\n      return makeMessageType(this, typeName, fields, opt);\n    },\n    makeEnum,\n    makeEnumType,\n    getEnumType,\n    makeExtension(typeName, extendee, field) {\n      return makeExtension(this, typeName, extendee, field);\n    }\n  };\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass InternalFieldList {\n  constructor(fields, normalizer) {\n    this._fields = fields;\n    this._normalizer = normalizer;\n  }\n  findJsonName(jsonName) {\n    if (!this.jsonNames) {\n      const t = {};\n      for (const f of this.list()) {\n        t[f.jsonName] = t[f.name] = f;\n      }\n      this.jsonNames = t;\n    }\n    return this.jsonNames[jsonName];\n  }\n  find(fieldNo) {\n    if (!this.numbers) {\n      const t = {};\n      for (const f of this.list()) {\n        t[f.no] = f;\n      }\n      this.numbers = t;\n    }\n    return this.numbers[fieldNo];\n  }\n  list() {\n    if (!this.all) {\n      this.all = this._normalizer(this._fields);\n    }\n    return this.all;\n  }\n  byNumber() {\n    if (!this.numbersAsc) {\n      this.numbersAsc = this.list().concat().sort((a, b) => a.no - b.no);\n    }\n    return this.numbersAsc;\n  }\n  byMember() {\n    if (!this.members) {\n      this.members = [];\n      const a = this.members;\n      let o;\n      for (const f of this.list()) {\n        if (f.oneof) {\n          if (f.oneof !== o) {\n            o = f.oneof;\n            a.push(o);\n          }\n        } else {\n          a.push(f);\n        }\n      }\n    }\n    return this.members;\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\n/**\n * Returns the name of a field in generated code.\n */\nfunction localFieldName(protoName, inOneof) {\n  const name = protoCamelCase(protoName);\n  if (inOneof) {\n    // oneof member names are not properties, but values of the `case` property.\n    return name;\n  }\n  return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nfunction localOneofName(protoName) {\n  return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nconst fieldJsonName = protoCamelCase;\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n  let capNext = false;\n  const b = [];\n  for (let i = 0; i < snakeCase.length; i++) {\n    let c = snakeCase.charAt(i);\n    switch (c) {\n      case \"_\":\n        capNext = true;\n        break;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        b.push(c);\n        capNext = false;\n        break;\n      default:\n        if (capNext) {\n          capNext = false;\n          c = c.toUpperCase();\n        }\n        b.push(c);\n        break;\n    }\n  }\n  return b.join(\"\");\n}\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n// names reserved by JavaScript\n\"constructor\", \"toString\", \"toJSON\", \"valueOf\"]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n// names reserved by the runtime\n\"getType\", \"clone\", \"equals\", \"fromBinary\", \"fromJson\", \"fromJsonString\", \"toBinary\", \"toJson\", \"toJsonString\",\n// names reserved by the runtime for the future\n\"toObject\"]);\nconst fallback = name => \"\".concat(name, \"$\");\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = name => {\n  if (reservedMessageProperties.has(name)) {\n    return fallback(name);\n  }\n  return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst safeObjectProperty = name => {\n  if (reservedObjectProperties.has(name)) {\n    return fallback(name);\n  }\n  return name;\n};\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass InternalOneofInfo {\n  constructor(name) {\n    this.kind = \"oneof\";\n    this.repeated = false;\n    this.packed = false;\n    this.opt = false;\n    this.req = false;\n    this.default = undefined;\n    this.fields = [];\n    this.name = name;\n    this.localName = localOneofName(name);\n  }\n  addField(field) {\n    assert(field.oneof === this, \"field \".concat(field.name, \" not one of \").concat(this.name));\n    this.fields.push(field);\n  }\n  findField(localName) {\n    if (!this._lookup) {\n      this._lookup = Object.create(null);\n      for (let i = 0; i < this.fields.length; i++) {\n        this._lookup[this.fields[i].localName] = this.fields[i];\n      }\n    }\n    return this._lookup[localName];\n  }\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nfunction normalizeFieldInfos(fieldInfos, packedByDefault) {\n  var _a, _b, _c, _d, _e, _f;\n  const r = [];\n  let o;\n  for (const field of typeof fieldInfos == \"function\" ? fieldInfos() : fieldInfos) {\n    const f = field;\n    f.localName = localFieldName(field.name, field.oneof !== undefined);\n    f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n    f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n    if (field.kind == \"scalar\") {\n      f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n    }\n    f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n    f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n    f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n    if (field.packed === undefined) {\n      {\n        f.packed = field.kind == \"enum\" || field.kind == \"scalar\" && field.T != ScalarType.BYTES && field.T != ScalarType.STRING;\n      }\n    }\n    // We do not surface options at this time\n    // f.options = field.options ?? emptyReadonlyObject;\n    if (field.oneof !== undefined) {\n      const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n      if (!o || o.name != ooname) {\n        o = new InternalOneofInfo(ooname);\n      }\n      f.oneof = o;\n      o.addField(f);\n    }\n    r.push(f);\n  }\n  return r;\n}\n\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nconst proto3 = makeProtoRuntime(\"proto3\", fields => {\n  return new InternalFieldList(fields, source => normalizeFieldInfos(source));\n},\n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\ntarget => {\n  for (const member of target.getType().fields.byMember()) {\n    if (member.opt) {\n      continue;\n    }\n    const name = member.localName,\n      t = target;\n    if (member.repeated) {\n      t[name] = [];\n      continue;\n    }\n    switch (member.kind) {\n      case \"oneof\":\n        t[name] = {\n          case: undefined\n        };\n        break;\n      case \"enum\":\n        t[name] = 0;\n        break;\n      case \"map\":\n        t[name] = {};\n        break;\n      case \"scalar\":\n        t[name] = scalarZeroValue(member.T, member.L);\n        break;\n    }\n  }\n});\n\n// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @generated from enum livekit.TrackType\n */\nconst TrackType = /*@__PURE__*/proto3.makeEnum(\"livekit.TrackType\", [{\n  no: 0,\n  name: \"AUDIO\"\n}, {\n  no: 1,\n  name: \"VIDEO\"\n}, {\n  no: 2,\n  name: \"DATA\"\n}]);\n\n/**\n * @generated from enum livekit.TrackSource\n */\nconst TrackSource = /*@__PURE__*/proto3.makeEnum(\"livekit.TrackSource\", [{\n  no: 0,\n  name: \"UNKNOWN\"\n}, {\n  no: 1,\n  name: \"CAMERA\"\n}, {\n  no: 2,\n  name: \"MICROPHONE\"\n}, {\n  no: 3,\n  name: \"SCREEN_SHARE\"\n}, {\n  no: 4,\n  name: \"SCREEN_SHARE_AUDIO\"\n}]);\n\n/**\n * @generated from enum livekit.VideoQuality\n */\nconst VideoQuality$1 = /*@__PURE__*/proto3.makeEnum(\"livekit.VideoQuality\", [{\n  no: 0,\n  name: \"LOW\"\n}, {\n  no: 1,\n  name: \"MEDIUM\"\n}, {\n  no: 2,\n  name: \"HIGH\"\n}, {\n  no: 3,\n  name: \"OFF\"\n}]);\n\n/**\n * @generated from enum livekit.ConnectionQuality\n */\nconst ConnectionQuality$1 = /*@__PURE__*/proto3.makeEnum(\"livekit.ConnectionQuality\", [{\n  no: 0,\n  name: \"POOR\"\n}, {\n  no: 1,\n  name: \"GOOD\"\n}, {\n  no: 2,\n  name: \"EXCELLENT\"\n}, {\n  no: 3,\n  name: \"LOST\"\n}]);\n\n/**\n * @generated from enum livekit.ClientConfigSetting\n */\nconst ClientConfigSetting = /*@__PURE__*/proto3.makeEnum(\"livekit.ClientConfigSetting\", [{\n  no: 0,\n  name: \"UNSET\"\n}, {\n  no: 1,\n  name: \"DISABLED\"\n}, {\n  no: 2,\n  name: \"ENABLED\"\n}]);\n\n/**\n * @generated from enum livekit.DisconnectReason\n */\nconst DisconnectReason = /*@__PURE__*/proto3.makeEnum(\"livekit.DisconnectReason\", [{\n  no: 0,\n  name: \"UNKNOWN_REASON\"\n}, {\n  no: 1,\n  name: \"CLIENT_INITIATED\"\n}, {\n  no: 2,\n  name: \"DUPLICATE_IDENTITY\"\n}, {\n  no: 3,\n  name: \"SERVER_SHUTDOWN\"\n}, {\n  no: 4,\n  name: \"PARTICIPANT_REMOVED\"\n}, {\n  no: 5,\n  name: \"ROOM_DELETED\"\n}, {\n  no: 6,\n  name: \"STATE_MISMATCH\"\n}, {\n  no: 7,\n  name: \"JOIN_FAILURE\"\n}, {\n  no: 8,\n  name: \"MIGRATION\"\n}, {\n  no: 9,\n  name: \"SIGNAL_CLOSE\"\n}, {\n  no: 10,\n  name: \"ROOM_CLOSED\"\n}]);\n\n/**\n * @generated from enum livekit.ReconnectReason\n */\nconst ReconnectReason = /*@__PURE__*/proto3.makeEnum(\"livekit.ReconnectReason\", [{\n  no: 0,\n  name: \"RR_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"RR_SIGNAL_DISCONNECTED\"\n}, {\n  no: 2,\n  name: \"RR_PUBLISHER_FAILED\"\n}, {\n  no: 3,\n  name: \"RR_SUBSCRIBER_FAILED\"\n}, {\n  no: 4,\n  name: \"RR_SWITCH_CANDIDATE\"\n}]);\n\n/**\n * @generated from enum livekit.SubscriptionError\n */\nconst SubscriptionError = /*@__PURE__*/proto3.makeEnum(\"livekit.SubscriptionError\", [{\n  no: 0,\n  name: \"SE_UNKNOWN\"\n}, {\n  no: 1,\n  name: \"SE_CODEC_UNSUPPORTED\"\n}, {\n  no: 2,\n  name: \"SE_TRACK_NOTFOUND\"\n}]);\n\n/**\n * @generated from enum livekit.AudioTrackFeature\n */\nconst AudioTrackFeature = /*@__PURE__*/proto3.makeEnum(\"livekit.AudioTrackFeature\", [{\n  no: 0,\n  name: \"TF_STEREO\"\n}, {\n  no: 1,\n  name: \"TF_NO_DTX\"\n}, {\n  no: 2,\n  name: \"TF_AUTO_GAIN_CONTROL\"\n}, {\n  no: 3,\n  name: \"TF_ECHO_CANCELLATION\"\n}, {\n  no: 4,\n  name: \"TF_NOISE_SUPPRESSION\"\n}, {\n  no: 5,\n  name: \"TF_ENHANCED_NOISE_CANCELLATION\"\n}]);\n\n/**\n * @generated from message livekit.Room\n */\nconst Room$1 = /*@__PURE__*/proto3.makeMessageType(\"livekit.Room\", () => [{\n  no: 1,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"empty_timeout\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 14,\n  name: \"departure_timeout\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 4,\n  name: \"max_participants\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 5,\n  name: \"creation_time\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}, {\n  no: 6,\n  name: \"turn_password\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 7,\n  name: \"enabled_codecs\",\n  kind: \"message\",\n  T: Codec,\n  repeated: true\n}, {\n  no: 8,\n  name: \"metadata\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 9,\n  name: \"num_participants\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 11,\n  name: \"num_publishers\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 10,\n  name: \"active_recording\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 13,\n  name: \"version\",\n  kind: \"message\",\n  T: TimedVersion\n}]);\n\n/**\n * @generated from message livekit.Codec\n */\nconst Codec = /*@__PURE__*/proto3.makeMessageType(\"livekit.Codec\", () => [{\n  no: 1,\n  name: \"mime\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"fmtp_line\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.ParticipantPermission\n */\nconst ParticipantPermission = /*@__PURE__*/proto3.makeMessageType(\"livekit.ParticipantPermission\", () => [{\n  no: 1,\n  name: \"can_subscribe\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 2,\n  name: \"can_publish\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 3,\n  name: \"can_publish_data\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 9,\n  name: \"can_publish_sources\",\n  kind: \"enum\",\n  T: proto3.getEnumType(TrackSource),\n  repeated: true\n}, {\n  no: 7,\n  name: \"hidden\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 8,\n  name: \"recorder\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 10,\n  name: \"can_update_metadata\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 11,\n  name: \"agent\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.ParticipantInfo\n */\nconst ParticipantInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.ParticipantInfo\", () => [{\n  no: 1,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"identity\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"state\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ParticipantInfo_State)\n}, {\n  no: 4,\n  name: \"tracks\",\n  kind: \"message\",\n  T: TrackInfo,\n  repeated: true\n}, {\n  no: 5,\n  name: \"metadata\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 6,\n  name: \"joined_at\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}, {\n  no: 9,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 10,\n  name: \"version\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 11,\n  name: \"permission\",\n  kind: \"message\",\n  T: ParticipantPermission\n}, {\n  no: 12,\n  name: \"region\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 13,\n  name: \"is_publisher\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 14,\n  name: \"kind\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ParticipantInfo_Kind)\n}, {\n  no: 15,\n  name: \"attributes\",\n  kind: \"map\",\n  K: 9 /* ScalarType.STRING */,\n  V: {\n    kind: \"scalar\",\n    T: 9 /* ScalarType.STRING */\n  }\n}, {\n  no: 16,\n  name: \"disconnect_reason\",\n  kind: \"enum\",\n  T: proto3.getEnumType(DisconnectReason)\n}]);\n\n/**\n * @generated from enum livekit.ParticipantInfo.State\n */\nconst ParticipantInfo_State = /*@__PURE__*/proto3.makeEnum(\"livekit.ParticipantInfo.State\", [{\n  no: 0,\n  name: \"JOINING\"\n}, {\n  no: 1,\n  name: \"JOINED\"\n}, {\n  no: 2,\n  name: \"ACTIVE\"\n}, {\n  no: 3,\n  name: \"DISCONNECTED\"\n}]);\n\n/**\n * @generated from enum livekit.ParticipantInfo.Kind\n */\nconst ParticipantInfo_Kind = /*@__PURE__*/proto3.makeEnum(\"livekit.ParticipantInfo.Kind\", [{\n  no: 0,\n  name: \"STANDARD\"\n}, {\n  no: 1,\n  name: \"INGRESS\"\n}, {\n  no: 2,\n  name: \"EGRESS\"\n}, {\n  no: 3,\n  name: \"SIP\"\n}, {\n  no: 4,\n  name: \"AGENT\"\n}]);\n\n/**\n * @generated from enum livekit.Encryption.Type\n */\nconst Encryption_Type = /*@__PURE__*/proto3.makeEnum(\"livekit.Encryption.Type\", [{\n  no: 0,\n  name: \"NONE\"\n}, {\n  no: 1,\n  name: \"GCM\"\n}, {\n  no: 2,\n  name: \"CUSTOM\"\n}]);\n\n/**\n * @generated from message livekit.SimulcastCodecInfo\n */\nconst SimulcastCodecInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.SimulcastCodecInfo\", () => [{\n  no: 1,\n  name: \"mime_type\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"mid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"cid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 4,\n  name: \"layers\",\n  kind: \"message\",\n  T: VideoLayer,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.TrackInfo\n */\nconst TrackInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrackInfo\", () => [{\n  no: 1,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"type\",\n  kind: \"enum\",\n  T: proto3.getEnumType(TrackType)\n}, {\n  no: 3,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 4,\n  name: \"muted\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 5,\n  name: \"width\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 6,\n  name: \"height\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 7,\n  name: \"simulcast\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 8,\n  name: \"disable_dtx\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 9,\n  name: \"source\",\n  kind: \"enum\",\n  T: proto3.getEnumType(TrackSource)\n}, {\n  no: 10,\n  name: \"layers\",\n  kind: \"message\",\n  T: VideoLayer,\n  repeated: true\n}, {\n  no: 11,\n  name: \"mime_type\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 12,\n  name: \"mid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 13,\n  name: \"codecs\",\n  kind: \"message\",\n  T: SimulcastCodecInfo,\n  repeated: true\n}, {\n  no: 14,\n  name: \"stereo\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 15,\n  name: \"disable_red\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 16,\n  name: \"encryption\",\n  kind: \"enum\",\n  T: proto3.getEnumType(Encryption_Type)\n}, {\n  no: 17,\n  name: \"stream\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 18,\n  name: \"version\",\n  kind: \"message\",\n  T: TimedVersion\n}, {\n  no: 19,\n  name: \"audio_features\",\n  kind: \"enum\",\n  T: proto3.getEnumType(AudioTrackFeature),\n  repeated: true\n}]);\n\n/**\n * provide information about available spatial layers\n *\n * @generated from message livekit.VideoLayer\n */\nconst VideoLayer = /*@__PURE__*/proto3.makeMessageType(\"livekit.VideoLayer\", () => [{\n  no: 1,\n  name: \"quality\",\n  kind: \"enum\",\n  T: proto3.getEnumType(VideoQuality$1)\n}, {\n  no: 2,\n  name: \"width\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 3,\n  name: \"height\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 4,\n  name: \"bitrate\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 5,\n  name: \"ssrc\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}]);\n\n/**\n * new DataPacket API\n *\n * @generated from message livekit.DataPacket\n */\nconst DataPacket = /*@__PURE__*/proto3.makeMessageType(\"livekit.DataPacket\", () => [{\n  no: 1,\n  name: \"kind\",\n  kind: \"enum\",\n  T: proto3.getEnumType(DataPacket_Kind)\n}, {\n  no: 4,\n  name: \"participant_identity\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 5,\n  name: \"destination_identities\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 2,\n  name: \"user\",\n  kind: \"message\",\n  T: UserPacket,\n  oneof: \"value\"\n}, {\n  no: 3,\n  name: \"speaker\",\n  kind: \"message\",\n  T: ActiveSpeakerUpdate,\n  oneof: \"value\"\n}, {\n  no: 6,\n  name: \"sip_dtmf\",\n  kind: \"message\",\n  T: SipDTMF,\n  oneof: \"value\"\n}, {\n  no: 7,\n  name: \"transcription\",\n  kind: \"message\",\n  T: Transcription,\n  oneof: \"value\"\n}]);\n\n/**\n * @generated from enum livekit.DataPacket.Kind\n */\nconst DataPacket_Kind = /*@__PURE__*/proto3.makeEnum(\"livekit.DataPacket.Kind\", [{\n  no: 0,\n  name: \"RELIABLE\"\n}, {\n  no: 1,\n  name: \"LOSSY\"\n}]);\n\n/**\n * @generated from message livekit.ActiveSpeakerUpdate\n */\nconst ActiveSpeakerUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.ActiveSpeakerUpdate\", () => [{\n  no: 1,\n  name: \"speakers\",\n  kind: \"message\",\n  T: SpeakerInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.SpeakerInfo\n */\nconst SpeakerInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.SpeakerInfo\", () => [{\n  no: 1,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"level\",\n  kind: \"scalar\",\n  T: 2 /* ScalarType.FLOAT */\n}, {\n  no: 3,\n  name: \"active\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.UserPacket\n */\nconst UserPacket = /*@__PURE__*/proto3.makeMessageType(\"livekit.UserPacket\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 5,\n  name: \"participant_identity\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"payload\",\n  kind: \"scalar\",\n  T: 12 /* ScalarType.BYTES */\n}, {\n  no: 3,\n  name: \"destination_sids\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 6,\n  name: \"destination_identities\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 4,\n  name: \"topic\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  opt: true\n}, {\n  no: 8,\n  name: \"id\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  opt: true\n}, {\n  no: 9,\n  name: \"start_time\",\n  kind: \"scalar\",\n  T: 4 /* ScalarType.UINT64 */,\n  opt: true\n}, {\n  no: 10,\n  name: \"end_time\",\n  kind: \"scalar\",\n  T: 4 /* ScalarType.UINT64 */,\n  opt: true\n}]);\n\n/**\n * @generated from message livekit.SipDTMF\n */\nconst SipDTMF = /*@__PURE__*/proto3.makeMessageType(\"livekit.SipDTMF\", () => [{\n  no: 3,\n  name: \"code\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 4,\n  name: \"digit\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.Transcription\n */\nconst Transcription = /*@__PURE__*/proto3.makeMessageType(\"livekit.Transcription\", () => [{\n  no: 2,\n  name: \"transcribed_participant_identity\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"track_id\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 4,\n  name: \"segments\",\n  kind: \"message\",\n  T: TranscriptionSegment,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.TranscriptionSegment\n */\nconst TranscriptionSegment = /*@__PURE__*/proto3.makeMessageType(\"livekit.TranscriptionSegment\", () => [{\n  no: 1,\n  name: \"id\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"text\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"start_time\",\n  kind: \"scalar\",\n  T: 4 /* ScalarType.UINT64 */\n}, {\n  no: 4,\n  name: \"end_time\",\n  kind: \"scalar\",\n  T: 4 /* ScalarType.UINT64 */\n}, {\n  no: 5,\n  name: \"final\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 6,\n  name: \"language\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.ParticipantTracks\n */\nconst ParticipantTracks = /*@__PURE__*/proto3.makeMessageType(\"livekit.ParticipantTracks\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"track_sids\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}]);\n\n/**\n * details about the server\n *\n * @generated from message livekit.ServerInfo\n */\nconst ServerInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.ServerInfo\", () => [{\n  no: 1,\n  name: \"edition\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ServerInfo_Edition)\n}, {\n  no: 2,\n  name: \"version\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"protocol\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}, {\n  no: 4,\n  name: \"region\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 5,\n  name: \"node_id\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 6,\n  name: \"debug_info\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 7,\n  name: \"agent_protocol\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}]);\n\n/**\n * @generated from enum livekit.ServerInfo.Edition\n */\nconst ServerInfo_Edition = /*@__PURE__*/proto3.makeEnum(\"livekit.ServerInfo.Edition\", [{\n  no: 0,\n  name: \"Standard\"\n}, {\n  no: 1,\n  name: \"Cloud\"\n}]);\n\n/**\n * details about the client\n *\n * @generated from message livekit.ClientInfo\n */\nconst ClientInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.ClientInfo\", () => [{\n  no: 1,\n  name: \"sdk\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ClientInfo_SDK)\n}, {\n  no: 2,\n  name: \"version\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"protocol\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}, {\n  no: 4,\n  name: \"os\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 5,\n  name: \"os_version\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 6,\n  name: \"device_model\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 7,\n  name: \"browser\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 8,\n  name: \"browser_version\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 9,\n  name: \"address\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 10,\n  name: \"network\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from enum livekit.ClientInfo.SDK\n */\nconst ClientInfo_SDK = /*@__PURE__*/proto3.makeEnum(\"livekit.ClientInfo.SDK\", [{\n  no: 0,\n  name: \"UNKNOWN\"\n}, {\n  no: 1,\n  name: \"JS\"\n}, {\n  no: 2,\n  name: \"SWIFT\"\n}, {\n  no: 3,\n  name: \"ANDROID\"\n}, {\n  no: 4,\n  name: \"FLUTTER\"\n}, {\n  no: 5,\n  name: \"GO\"\n}, {\n  no: 6,\n  name: \"UNITY\"\n}, {\n  no: 7,\n  name: \"REACT_NATIVE\"\n}, {\n  no: 8,\n  name: \"RUST\"\n}, {\n  no: 9,\n  name: \"PYTHON\"\n}, {\n  no: 10,\n  name: \"CPP\"\n}]);\n\n/**\n * server provided client configuration\n *\n * @generated from message livekit.ClientConfiguration\n */\nconst ClientConfiguration = /*@__PURE__*/proto3.makeMessageType(\"livekit.ClientConfiguration\", () => [{\n  no: 1,\n  name: \"video\",\n  kind: \"message\",\n  T: VideoConfiguration\n}, {\n  no: 2,\n  name: \"screen\",\n  kind: \"message\",\n  T: VideoConfiguration\n}, {\n  no: 3,\n  name: \"resume_connection\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ClientConfigSetting)\n}, {\n  no: 4,\n  name: \"disabled_codecs\",\n  kind: \"message\",\n  T: DisabledCodecs\n}, {\n  no: 5,\n  name: \"force_relay\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ClientConfigSetting)\n}]);\n\n/**\n * @generated from message livekit.VideoConfiguration\n */\nconst VideoConfiguration = /*@__PURE__*/proto3.makeMessageType(\"livekit.VideoConfiguration\", () => [{\n  no: 1,\n  name: \"hardware_encoder\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ClientConfigSetting)\n}]);\n\n/**\n * @generated from message livekit.DisabledCodecs\n */\nconst DisabledCodecs = /*@__PURE__*/proto3.makeMessageType(\"livekit.DisabledCodecs\", () => [{\n  no: 1,\n  name: \"codecs\",\n  kind: \"message\",\n  T: Codec,\n  repeated: true\n}, {\n  no: 2,\n  name: \"publish\",\n  kind: \"message\",\n  T: Codec,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.TimedVersion\n */\nconst TimedVersion = /*@__PURE__*/proto3.makeMessageType(\"livekit.TimedVersion\", () => [{\n  no: 1,\n  name: \"unix_micro\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}, {\n  no: 2,\n  name: \"ticks\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}]);\n\n// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @generated from enum livekit.SignalTarget\n */\nconst SignalTarget = /*@__PURE__*/proto3.makeEnum(\"livekit.SignalTarget\", [{\n  no: 0,\n  name: \"PUBLISHER\"\n}, {\n  no: 1,\n  name: \"SUBSCRIBER\"\n}]);\n\n/**\n * @generated from enum livekit.StreamState\n */\nconst StreamState = /*@__PURE__*/proto3.makeEnum(\"livekit.StreamState\", [{\n  no: 0,\n  name: \"ACTIVE\"\n}, {\n  no: 1,\n  name: \"PAUSED\"\n}]);\n\n/**\n * @generated from enum livekit.CandidateProtocol\n */\nconst CandidateProtocol = /*@__PURE__*/proto3.makeEnum(\"livekit.CandidateProtocol\", [{\n  no: 0,\n  name: \"UDP\"\n}, {\n  no: 1,\n  name: \"TCP\"\n}, {\n  no: 2,\n  name: \"TLS\"\n}]);\n\n/**\n * @generated from message livekit.SignalRequest\n */\nconst SignalRequest = /*@__PURE__*/proto3.makeMessageType(\"livekit.SignalRequest\", () => [{\n  no: 1,\n  name: \"offer\",\n  kind: \"message\",\n  T: SessionDescription,\n  oneof: \"message\"\n}, {\n  no: 2,\n  name: \"answer\",\n  kind: \"message\",\n  T: SessionDescription,\n  oneof: \"message\"\n}, {\n  no: 3,\n  name: \"trickle\",\n  kind: \"message\",\n  T: TrickleRequest,\n  oneof: \"message\"\n}, {\n  no: 4,\n  name: \"add_track\",\n  kind: \"message\",\n  T: AddTrackRequest,\n  oneof: \"message\"\n}, {\n  no: 5,\n  name: \"mute\",\n  kind: \"message\",\n  T: MuteTrackRequest,\n  oneof: \"message\"\n}, {\n  no: 6,\n  name: \"subscription\",\n  kind: \"message\",\n  T: UpdateSubscription,\n  oneof: \"message\"\n}, {\n  no: 7,\n  name: \"track_setting\",\n  kind: \"message\",\n  T: UpdateTrackSettings,\n  oneof: \"message\"\n}, {\n  no: 8,\n  name: \"leave\",\n  kind: \"message\",\n  T: LeaveRequest,\n  oneof: \"message\"\n}, {\n  no: 10,\n  name: \"update_layers\",\n  kind: \"message\",\n  T: UpdateVideoLayers,\n  oneof: \"message\"\n}, {\n  no: 11,\n  name: \"subscription_permission\",\n  kind: \"message\",\n  T: SubscriptionPermission,\n  oneof: \"message\"\n}, {\n  no: 12,\n  name: \"sync_state\",\n  kind: \"message\",\n  T: SyncState,\n  oneof: \"message\"\n}, {\n  no: 13,\n  name: \"simulate\",\n  kind: \"message\",\n  T: SimulateScenario,\n  oneof: \"message\"\n}, {\n  no: 14,\n  name: \"ping\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */,\n  oneof: \"message\"\n}, {\n  no: 15,\n  name: \"update_metadata\",\n  kind: \"message\",\n  T: UpdateParticipantMetadata,\n  oneof: \"message\"\n}, {\n  no: 16,\n  name: \"ping_req\",\n  kind: \"message\",\n  T: Ping,\n  oneof: \"message\"\n}, {\n  no: 17,\n  name: \"update_audio_track\",\n  kind: \"message\",\n  T: UpdateLocalAudioTrack,\n  oneof: \"message\"\n}, {\n  no: 18,\n  name: \"update_video_track\",\n  kind: \"message\",\n  T: UpdateLocalVideoTrack,\n  oneof: \"message\"\n}]);\n\n/**\n * @generated from message livekit.SignalResponse\n */\nconst SignalResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.SignalResponse\", () => [{\n  no: 1,\n  name: \"join\",\n  kind: \"message\",\n  T: JoinResponse,\n  oneof: \"message\"\n}, {\n  no: 2,\n  name: \"answer\",\n  kind: \"message\",\n  T: SessionDescription,\n  oneof: \"message\"\n}, {\n  no: 3,\n  name: \"offer\",\n  kind: \"message\",\n  T: SessionDescription,\n  oneof: \"message\"\n}, {\n  no: 4,\n  name: \"trickle\",\n  kind: \"message\",\n  T: TrickleRequest,\n  oneof: \"message\"\n}, {\n  no: 5,\n  name: \"update\",\n  kind: \"message\",\n  T: ParticipantUpdate,\n  oneof: \"message\"\n}, {\n  no: 6,\n  name: \"track_published\",\n  kind: \"message\",\n  T: TrackPublishedResponse,\n  oneof: \"message\"\n}, {\n  no: 8,\n  name: \"leave\",\n  kind: \"message\",\n  T: LeaveRequest,\n  oneof: \"message\"\n}, {\n  no: 9,\n  name: \"mute\",\n  kind: \"message\",\n  T: MuteTrackRequest,\n  oneof: \"message\"\n}, {\n  no: 10,\n  name: \"speakers_changed\",\n  kind: \"message\",\n  T: SpeakersChanged,\n  oneof: \"message\"\n}, {\n  no: 11,\n  name: \"room_update\",\n  kind: \"message\",\n  T: RoomUpdate,\n  oneof: \"message\"\n}, {\n  no: 12,\n  name: \"connection_quality\",\n  kind: \"message\",\n  T: ConnectionQualityUpdate,\n  oneof: \"message\"\n}, {\n  no: 13,\n  name: \"stream_state_update\",\n  kind: \"message\",\n  T: StreamStateUpdate,\n  oneof: \"message\"\n}, {\n  no: 14,\n  name: \"subscribed_quality_update\",\n  kind: \"message\",\n  T: SubscribedQualityUpdate,\n  oneof: \"message\"\n}, {\n  no: 15,\n  name: \"subscription_permission_update\",\n  kind: \"message\",\n  T: SubscriptionPermissionUpdate,\n  oneof: \"message\"\n}, {\n  no: 16,\n  name: \"refresh_token\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  oneof: \"message\"\n}, {\n  no: 17,\n  name: \"track_unpublished\",\n  kind: \"message\",\n  T: TrackUnpublishedResponse,\n  oneof: \"message\"\n}, {\n  no: 18,\n  name: \"pong\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */,\n  oneof: \"message\"\n}, {\n  no: 19,\n  name: \"reconnect\",\n  kind: \"message\",\n  T: ReconnectResponse,\n  oneof: \"message\"\n}, {\n  no: 20,\n  name: \"pong_resp\",\n  kind: \"message\",\n  T: Pong,\n  oneof: \"message\"\n}, {\n  no: 21,\n  name: \"subscription_response\",\n  kind: \"message\",\n  T: SubscriptionResponse,\n  oneof: \"message\"\n}, {\n  no: 22,\n  name: \"request_response\",\n  kind: \"message\",\n  T: RequestResponse,\n  oneof: \"message\"\n}, {\n  no: 23,\n  name: \"track_subscribed\",\n  kind: \"message\",\n  T: TrackSubscribed,\n  oneof: \"message\"\n}]);\n\n/**\n * @generated from message livekit.SimulcastCodec\n */\nconst SimulcastCodec = /*@__PURE__*/proto3.makeMessageType(\"livekit.SimulcastCodec\", () => [{\n  no: 1,\n  name: \"codec\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"cid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.AddTrackRequest\n */\nconst AddTrackRequest = /*@__PURE__*/proto3.makeMessageType(\"livekit.AddTrackRequest\", () => [{\n  no: 1,\n  name: \"cid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"type\",\n  kind: \"enum\",\n  T: proto3.getEnumType(TrackType)\n}, {\n  no: 4,\n  name: \"width\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 5,\n  name: \"height\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 6,\n  name: \"muted\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 7,\n  name: \"disable_dtx\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 8,\n  name: \"source\",\n  kind: \"enum\",\n  T: proto3.getEnumType(TrackSource)\n}, {\n  no: 9,\n  name: \"layers\",\n  kind: \"message\",\n  T: VideoLayer,\n  repeated: true\n}, {\n  no: 10,\n  name: \"simulcast_codecs\",\n  kind: \"message\",\n  T: SimulcastCodec,\n  repeated: true\n}, {\n  no: 11,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 12,\n  name: \"stereo\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 13,\n  name: \"disable_red\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 14,\n  name: \"encryption\",\n  kind: \"enum\",\n  T: proto3.getEnumType(Encryption_Type)\n}, {\n  no: 15,\n  name: \"stream\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.TrickleRequest\n */\nconst TrickleRequest = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrickleRequest\", () => [{\n  no: 1,\n  name: \"candidateInit\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"target\",\n  kind: \"enum\",\n  T: proto3.getEnumType(SignalTarget)\n}, {\n  no: 3,\n  name: \"final\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.MuteTrackRequest\n */\nconst MuteTrackRequest = /*@__PURE__*/proto3.makeMessageType(\"livekit.MuteTrackRequest\", () => [{\n  no: 1,\n  name: \"sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"muted\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.JoinResponse\n */\nconst JoinResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.JoinResponse\", () => [{\n  no: 1,\n  name: \"room\",\n  kind: \"message\",\n  T: Room$1\n}, {\n  no: 2,\n  name: \"participant\",\n  kind: \"message\",\n  T: ParticipantInfo\n}, {\n  no: 3,\n  name: \"other_participants\",\n  kind: \"message\",\n  T: ParticipantInfo,\n  repeated: true\n}, {\n  no: 4,\n  name: \"server_version\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 5,\n  name: \"ice_servers\",\n  kind: \"message\",\n  T: ICEServer,\n  repeated: true\n}, {\n  no: 6,\n  name: \"subscriber_primary\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 7,\n  name: \"alternative_url\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 8,\n  name: \"client_configuration\",\n  kind: \"message\",\n  T: ClientConfiguration\n}, {\n  no: 9,\n  name: \"server_region\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 10,\n  name: \"ping_timeout\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}, {\n  no: 11,\n  name: \"ping_interval\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */\n}, {\n  no: 12,\n  name: \"server_info\",\n  kind: \"message\",\n  T: ServerInfo\n}, {\n  no: 13,\n  name: \"sif_trailer\",\n  kind: \"scalar\",\n  T: 12 /* ScalarType.BYTES */\n}]);\n\n/**\n * @generated from message livekit.ReconnectResponse\n */\nconst ReconnectResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.ReconnectResponse\", () => [{\n  no: 1,\n  name: \"ice_servers\",\n  kind: \"message\",\n  T: ICEServer,\n  repeated: true\n}, {\n  no: 2,\n  name: \"client_configuration\",\n  kind: \"message\",\n  T: ClientConfiguration\n}]);\n\n/**\n * @generated from message livekit.TrackPublishedResponse\n */\nconst TrackPublishedResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrackPublishedResponse\", () => [{\n  no: 1,\n  name: \"cid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"track\",\n  kind: \"message\",\n  T: TrackInfo\n}]);\n\n/**\n * @generated from message livekit.TrackUnpublishedResponse\n */\nconst TrackUnpublishedResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrackUnpublishedResponse\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.SessionDescription\n */\nconst SessionDescription = /*@__PURE__*/proto3.makeMessageType(\"livekit.SessionDescription\", () => [{\n  no: 1,\n  name: \"type\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"sdp\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.ParticipantUpdate\n */\nconst ParticipantUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.ParticipantUpdate\", () => [{\n  no: 1,\n  name: \"participants\",\n  kind: \"message\",\n  T: ParticipantInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.UpdateSubscription\n */\nconst UpdateSubscription = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateSubscription\", () => [{\n  no: 1,\n  name: \"track_sids\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 2,\n  name: \"subscribe\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 3,\n  name: \"participant_tracks\",\n  kind: \"message\",\n  T: ParticipantTracks,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.UpdateTrackSettings\n */\nconst UpdateTrackSettings = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateTrackSettings\", () => [{\n  no: 1,\n  name: \"track_sids\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 3,\n  name: \"disabled\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 4,\n  name: \"quality\",\n  kind: \"enum\",\n  T: proto3.getEnumType(VideoQuality$1)\n}, {\n  no: 5,\n  name: \"width\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 6,\n  name: \"height\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 7,\n  name: \"fps\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 8,\n  name: \"priority\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}]);\n\n/**\n * @generated from message livekit.UpdateLocalAudioTrack\n */\nconst UpdateLocalAudioTrack = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateLocalAudioTrack\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"features\",\n  kind: \"enum\",\n  T: proto3.getEnumType(AudioTrackFeature),\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.UpdateLocalVideoTrack\n */\nconst UpdateLocalVideoTrack = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateLocalVideoTrack\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"width\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 3,\n  name: \"height\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}]);\n\n/**\n * @generated from message livekit.LeaveRequest\n */\nconst LeaveRequest = /*@__PURE__*/proto3.makeMessageType(\"livekit.LeaveRequest\", () => [{\n  no: 1,\n  name: \"can_reconnect\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 2,\n  name: \"reason\",\n  kind: \"enum\",\n  T: proto3.getEnumType(DisconnectReason)\n}, {\n  no: 3,\n  name: \"action\",\n  kind: \"enum\",\n  T: proto3.getEnumType(LeaveRequest_Action)\n}, {\n  no: 4,\n  name: \"regions\",\n  kind: \"message\",\n  T: RegionSettings\n}]);\n\n/**\n * indicates action clients should take on receiving this message\n *\n * @generated from enum livekit.LeaveRequest.Action\n */\nconst LeaveRequest_Action = /*@__PURE__*/proto3.makeEnum(\"livekit.LeaveRequest.Action\", [{\n  no: 0,\n  name: \"DISCONNECT\"\n}, {\n  no: 1,\n  name: \"RESUME\"\n}, {\n  no: 2,\n  name: \"RECONNECT\"\n}]);\n\n/**\n * message to indicate published video track dimensions are changing\n *\n * @generated from message livekit.UpdateVideoLayers\n * @deprecated\n */\nconst UpdateVideoLayers = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateVideoLayers\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"layers\",\n  kind: \"message\",\n  T: VideoLayer,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.UpdateParticipantMetadata\n */\nconst UpdateParticipantMetadata = /*@__PURE__*/proto3.makeMessageType(\"livekit.UpdateParticipantMetadata\", () => [{\n  no: 1,\n  name: \"metadata\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"name\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"attributes\",\n  kind: \"map\",\n  K: 9 /* ScalarType.STRING */,\n  V: {\n    kind: \"scalar\",\n    T: 9 /* ScalarType.STRING */\n  }\n}, {\n  no: 4,\n  name: \"request_id\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}]);\n\n/**\n * @generated from message livekit.ICEServer\n */\nconst ICEServer = /*@__PURE__*/proto3.makeMessageType(\"livekit.ICEServer\", () => [{\n  no: 1,\n  name: \"urls\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 2,\n  name: \"username\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"credential\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.SpeakersChanged\n */\nconst SpeakersChanged = /*@__PURE__*/proto3.makeMessageType(\"livekit.SpeakersChanged\", () => [{\n  no: 1,\n  name: \"speakers\",\n  kind: \"message\",\n  T: SpeakerInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.RoomUpdate\n */\nconst RoomUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.RoomUpdate\", () => [{\n  no: 1,\n  name: \"room\",\n  kind: \"message\",\n  T: Room$1\n}]);\n\n/**\n * @generated from message livekit.ConnectionQualityInfo\n */\nconst ConnectionQualityInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.ConnectionQualityInfo\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"quality\",\n  kind: \"enum\",\n  T: proto3.getEnumType(ConnectionQuality$1)\n}, {\n  no: 3,\n  name: \"score\",\n  kind: \"scalar\",\n  T: 2 /* ScalarType.FLOAT */\n}]);\n\n/**\n * @generated from message livekit.ConnectionQualityUpdate\n */\nconst ConnectionQualityUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.ConnectionQualityUpdate\", () => [{\n  no: 1,\n  name: \"updates\",\n  kind: \"message\",\n  T: ConnectionQualityInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.StreamStateInfo\n */\nconst StreamStateInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.StreamStateInfo\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"state\",\n  kind: \"enum\",\n  T: proto3.getEnumType(StreamState)\n}]);\n\n/**\n * @generated from message livekit.StreamStateUpdate\n */\nconst StreamStateUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.StreamStateUpdate\", () => [{\n  no: 1,\n  name: \"stream_states\",\n  kind: \"message\",\n  T: StreamStateInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.SubscribedQuality\n */\nconst SubscribedQuality = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscribedQuality\", () => [{\n  no: 1,\n  name: \"quality\",\n  kind: \"enum\",\n  T: proto3.getEnumType(VideoQuality$1)\n}, {\n  no: 2,\n  name: \"enabled\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.SubscribedCodec\n */\nconst SubscribedCodec = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscribedCodec\", () => [{\n  no: 1,\n  name: \"codec\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"qualities\",\n  kind: \"message\",\n  T: SubscribedQuality,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.SubscribedQualityUpdate\n */\nconst SubscribedQualityUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscribedQualityUpdate\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"subscribed_qualities\",\n  kind: \"message\",\n  T: SubscribedQuality,\n  repeated: true\n}, {\n  no: 3,\n  name: \"subscribed_codecs\",\n  kind: \"message\",\n  T: SubscribedCodec,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.TrackPermission\n */\nconst TrackPermission = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrackPermission\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"all_tracks\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 3,\n  name: \"track_sids\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}, {\n  no: 4,\n  name: \"participant_identity\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from message livekit.SubscriptionPermission\n */\nconst SubscriptionPermission = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscriptionPermission\", () => [{\n  no: 1,\n  name: \"all_participants\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}, {\n  no: 2,\n  name: \"track_permissions\",\n  kind: \"message\",\n  T: TrackPermission,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.SubscriptionPermissionUpdate\n */\nconst SubscriptionPermissionUpdate = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscriptionPermissionUpdate\", () => [{\n  no: 1,\n  name: \"participant_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"allowed\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */\n}]);\n\n/**\n * @generated from message livekit.SyncState\n */\nconst SyncState = /*@__PURE__*/proto3.makeMessageType(\"livekit.SyncState\", () => [{\n  no: 1,\n  name: \"answer\",\n  kind: \"message\",\n  T: SessionDescription\n}, {\n  no: 2,\n  name: \"subscription\",\n  kind: \"message\",\n  T: UpdateSubscription\n}, {\n  no: 3,\n  name: \"publish_tracks\",\n  kind: \"message\",\n  T: TrackPublishedResponse,\n  repeated: true\n}, {\n  no: 4,\n  name: \"data_channels\",\n  kind: \"message\",\n  T: DataChannelInfo,\n  repeated: true\n}, {\n  no: 5,\n  name: \"offer\",\n  kind: \"message\",\n  T: SessionDescription\n}, {\n  no: 6,\n  name: \"track_sids_disabled\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.DataChannelInfo\n */\nconst DataChannelInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.DataChannelInfo\", () => [{\n  no: 1,\n  name: \"label\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"id\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 3,\n  name: \"target\",\n  kind: \"enum\",\n  T: proto3.getEnumType(SignalTarget)\n}]);\n\n/**\n * @generated from message livekit.SimulateScenario\n */\nconst SimulateScenario = /*@__PURE__*/proto3.makeMessageType(\"livekit.SimulateScenario\", () => [{\n  no: 1,\n  name: \"speaker_update\",\n  kind: \"scalar\",\n  T: 5 /* ScalarType.INT32 */,\n  oneof: \"scenario\"\n}, {\n  no: 2,\n  name: \"node_failure\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}, {\n  no: 3,\n  name: \"migration\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}, {\n  no: 4,\n  name: \"server_leave\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}, {\n  no: 5,\n  name: \"switch_candidate_protocol\",\n  kind: \"enum\",\n  T: proto3.getEnumType(CandidateProtocol),\n  oneof: \"scenario\"\n}, {\n  no: 6,\n  name: \"subscriber_bandwidth\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */,\n  oneof: \"scenario\"\n}, {\n  no: 7,\n  name: \"disconnect_signal_on_resume\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}, {\n  no: 8,\n  name: \"disconnect_signal_on_resume_no_messages\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}, {\n  no: 9,\n  name: \"leave_request_full_reconnect\",\n  kind: \"scalar\",\n  T: 8 /* ScalarType.BOOL */,\n  oneof: \"scenario\"\n}]);\n\n/**\n * @generated from message livekit.Ping\n */\nconst Ping = /*@__PURE__*/proto3.makeMessageType(\"livekit.Ping\", () => [{\n  no: 1,\n  name: \"timestamp\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}, {\n  no: 2,\n  name: \"rtt\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}]);\n\n/**\n * @generated from message livekit.Pong\n */\nconst Pong = /*@__PURE__*/proto3.makeMessageType(\"livekit.Pong\", () => [{\n  no: 1,\n  name: \"last_ping_timestamp\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}, {\n  no: 2,\n  name: \"timestamp\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}]);\n\n/**\n * @generated from message livekit.RegionSettings\n */\nconst RegionSettings = /*@__PURE__*/proto3.makeMessageType(\"livekit.RegionSettings\", () => [{\n  no: 1,\n  name: \"regions\",\n  kind: \"message\",\n  T: RegionInfo,\n  repeated: true\n}]);\n\n/**\n * @generated from message livekit.RegionInfo\n */\nconst RegionInfo = /*@__PURE__*/proto3.makeMessageType(\"livekit.RegionInfo\", () => [{\n  no: 1,\n  name: \"region\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"url\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 3,\n  name: \"distance\",\n  kind: \"scalar\",\n  T: 3 /* ScalarType.INT64 */\n}]);\n\n/**\n * @generated from message livekit.SubscriptionResponse\n */\nconst SubscriptionResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.SubscriptionResponse\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}, {\n  no: 2,\n  name: \"err\",\n  kind: \"enum\",\n  T: proto3.getEnumType(SubscriptionError)\n}]);\n\n/**\n * @generated from message livekit.RequestResponse\n */\nconst RequestResponse = /*@__PURE__*/proto3.makeMessageType(\"livekit.RequestResponse\", () => [{\n  no: 1,\n  name: \"request_id\",\n  kind: \"scalar\",\n  T: 13 /* ScalarType.UINT32 */\n}, {\n  no: 2,\n  name: \"reason\",\n  kind: \"enum\",\n  T: proto3.getEnumType(RequestResponse_Reason)\n}, {\n  no: 3,\n  name: \"message\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\n/**\n * @generated from enum livekit.RequestResponse.Reason\n */\nconst RequestResponse_Reason = /*@__PURE__*/proto3.makeEnum(\"livekit.RequestResponse.Reason\", [{\n  no: 0,\n  name: \"OK\"\n}, {\n  no: 1,\n  name: \"NOT_FOUND\"\n}, {\n  no: 2,\n  name: \"NOT_ALLOWED\"\n}, {\n  no: 3,\n  name: \"LIMIT_EXCEEDED\"\n}]);\n\n/**\n * @generated from message livekit.TrackSubscribed\n */\nconst TrackSubscribed = /*@__PURE__*/proto3.makeMessageType(\"livekit.TrackSubscribed\", () => [{\n  no: 1,\n  name: \"track_sid\",\n  kind: \"scalar\",\n  T: 9 /* ScalarType.STRING */\n}]);\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar loglevel = {exports: {}};\n\n/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (module) {\n  (function (root, definition) {\n\n    if (module.exports) {\n      module.exports = definition();\n    } else {\n      root.log = definition();\n    }\n  })(commonjsGlobal, function () {\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function () {};\n    var undefinedType = \"undefined\";\n    var isIE = typeof window !== undefinedType && typeof window.navigator !== undefinedType && /Trident\\/|MSIE /.test(window.navigator.userAgent);\n    var logMethods = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"];\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n      var method = obj[methodName];\n      if (typeof method.bind === 'function') {\n        return method.bind(obj);\n      } else {\n        try {\n          return Function.prototype.bind.call(method, obj);\n        } catch (e) {\n          // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n          return function () {\n            return Function.prototype.apply.apply(method, [obj, arguments]);\n          };\n        }\n      }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n      if (console.log) {\n        if (console.log.apply) {\n          console.log.apply(console, arguments);\n        } else {\n          // In old IE, native console methods themselves don't have apply().\n          Function.prototype.apply.apply(console.log, [console, arguments]);\n        }\n      }\n      if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n      if (methodName === 'debug') {\n        methodName = 'log';\n      }\n      if (typeof console === undefinedType) {\n        return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n      } else if (methodName === 'trace' && isIE) {\n        return traceForIE;\n      } else if (console[methodName] !== undefined) {\n        return bindMethod(console, methodName);\n      } else if (console.log !== undefined) {\n        return bindMethod(console, 'log');\n      } else {\n        return noop;\n      }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n      /*jshint validthis:true */\n      var level = this.getLevel();\n\n      // Replace the actual methods.\n      for (var i = 0; i < logMethods.length; i++) {\n        var methodName = logMethods[i];\n        this[methodName] = i < level ? noop : this.methodFactory(methodName, level, this.name);\n      }\n\n      // Define log.log as an alias for log.debug\n      this.log = this.debug;\n\n      // Return any important warnings.\n      if (typeof console === undefinedType && level < this.levels.SILENT) {\n        return \"No console available for logging\";\n      }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n      return function () {\n        if (typeof console !== undefinedType) {\n          replaceLoggingMethods.call(this);\n          this[methodName].apply(this, arguments);\n        }\n      };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n      /*jshint validthis:true */\n      return realMethod(methodName) || enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n      function persistLevelIfPossible(levelNum) {\n        var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n        if (typeof window === undefinedType || !storageKey) return;\n\n        // Use localStorage if available\n        try {\n          window.localStorage[storageKey] = levelName;\n          return;\n        } catch (ignore) {}\n\n        // Use session cookie as fallback\n        try {\n          window.document.cookie = encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n        } catch (ignore) {}\n      }\n      function getPersistedLevel() {\n        var storedLevel;\n        if (typeof window === undefinedType || !storageKey) return;\n        try {\n          storedLevel = window.localStorage[storageKey];\n        } catch (ignore) {}\n\n        // Fallback to cookies if local storage gives us nothing\n        if (typeof storedLevel === undefinedType) {\n          try {\n            var cookie = window.document.cookie;\n            var cookieName = encodeURIComponent(storageKey);\n            var location = cookie.indexOf(cookieName + \"=\");\n            if (location !== -1) {\n              storedLevel = /^([^;]+)/.exec(cookie.slice(location + cookieName.length + 1))[1];\n            }\n          } catch (ignore) {}\n        }\n\n        // If the stored level is not valid, treat it as if nothing was stored.\n        if (self.levels[storedLevel] === undefined) {\n          storedLevel = undefined;\n        }\n        return storedLevel;\n      }\n      function clearPersistedLevel() {\n        if (typeof window === undefinedType || !storageKey) return;\n\n        // Use localStorage if available\n        try {\n          window.localStorage.removeItem(storageKey);\n        } catch (ignore) {}\n\n        // Use session cookie as fallback\n        try {\n          window.document.cookie = encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n        } catch (ignore) {}\n      }\n      function normalizeLevel(input) {\n        var level = input;\n        if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n          level = self.levels[level.toUpperCase()];\n        }\n        if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n          return level;\n        } else {\n          throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n        }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n      self.levels = {\n        \"TRACE\": 0,\n        \"DEBUG\": 1,\n        \"INFO\": 2,\n        \"WARN\": 3,\n        \"ERROR\": 4,\n        \"SILENT\": 5\n      };\n      self.methodFactory = factory || defaultMethodFactory;\n      self.getLevel = function () {\n        if (userLevel != null) {\n          return userLevel;\n        } else if (defaultLevel != null) {\n          return defaultLevel;\n        } else {\n          return inheritedLevel;\n        }\n      };\n      self.setLevel = function (level, persist) {\n        userLevel = normalizeLevel(level);\n        if (persist !== false) {\n          // defaults to true\n          persistLevelIfPossible(userLevel);\n        }\n\n        // NOTE: in v2, this should call rebuild(), which updates children.\n        return replaceLoggingMethods.call(self);\n      };\n      self.setDefaultLevel = function (level) {\n        defaultLevel = normalizeLevel(level);\n        if (!getPersistedLevel()) {\n          self.setLevel(level, false);\n        }\n      };\n      self.resetLevel = function () {\n        userLevel = null;\n        clearPersistedLevel();\n        replaceLoggingMethods.call(self);\n      };\n      self.enableAll = function (persist) {\n        self.setLevel(self.levels.TRACE, persist);\n      };\n      self.disableAll = function (persist) {\n        self.setLevel(self.levels.SILENT, persist);\n      };\n      self.rebuild = function () {\n        if (defaultLogger !== self) {\n          inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n        }\n        replaceLoggingMethods.call(self);\n        if (defaultLogger === self) {\n          for (var childName in _loggersByName) {\n            _loggersByName[childName].rebuild();\n          }\n        }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(defaultLogger ? defaultLogger.getLevel() : \"WARN\");\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n        userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n    defaultLogger.getLogger = function getLogger(name) {\n      if (typeof name !== \"symbol\" && typeof name !== \"string\" || name === \"\") {\n        throw new TypeError(\"You must supply a name when creating a logger.\");\n      }\n      var logger = _loggersByName[name];\n      if (!logger) {\n        logger = _loggersByName[name] = new Logger(name, defaultLogger.methodFactory);\n      }\n      return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = typeof window !== undefinedType ? window.log : undefined;\n    defaultLogger.noConflict = function () {\n      if (typeof window !== undefinedType && window.log === defaultLogger) {\n        window.log = _log;\n      }\n      return defaultLogger;\n    };\n    defaultLogger.getLoggers = function getLoggers() {\n      return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n    return defaultLogger;\n  });\n})(loglevel);\nvar loglevelExports = loglevel.exports;\n\nvar LogLevel;\n(function (LogLevel) {\n  LogLevel[LogLevel[\"trace\"] = 0] = \"trace\";\n  LogLevel[LogLevel[\"debug\"] = 1] = \"debug\";\n  LogLevel[LogLevel[\"info\"] = 2] = \"info\";\n  LogLevel[LogLevel[\"warn\"] = 3] = \"warn\";\n  LogLevel[LogLevel[\"error\"] = 4] = \"error\";\n  LogLevel[LogLevel[\"silent\"] = 5] = \"silent\";\n})(LogLevel || (LogLevel = {}));\nvar LoggerNames;\n(function (LoggerNames) {\n  LoggerNames[\"Default\"] = \"livekit\";\n  LoggerNames[\"Room\"] = \"livekit-room\";\n  LoggerNames[\"Participant\"] = \"livekit-participant\";\n  LoggerNames[\"Track\"] = \"livekit-track\";\n  LoggerNames[\"Publication\"] = \"livekit-track-publication\";\n  LoggerNames[\"Engine\"] = \"livekit-engine\";\n  LoggerNames[\"Signal\"] = \"livekit-signal\";\n  LoggerNames[\"PCManager\"] = \"livekit-pc-manager\";\n  LoggerNames[\"PCTransport\"] = \"livekit-pc-transport\";\n  LoggerNames[\"E2EE\"] = \"lk-e2ee\";\n})(LoggerNames || (LoggerNames = {}));\nlet livekitLogger = loglevelExports.getLogger('livekit');\nconst livekitLoggers = Object.values(LoggerNames).map(name => loglevelExports.getLogger(name));\nlivekitLogger.setDefaultLevel(LogLevel.info);\n/**\n * @internal\n */\nfunction getLogger(name) {\n  const logger = loglevelExports.getLogger(name);\n  logger.setDefaultLevel(livekitLogger.getLevel());\n  return logger;\n}\nfunction setLogLevel(level, loggerName) {\n  if (loggerName) {\n    loglevelExports.getLogger(loggerName).setLevel(level);\n  } else {\n    for (const logger of livekitLoggers) {\n      logger.setLevel(level);\n    }\n  }\n}\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nfunction setLogExtension(extension, logger) {\n  const loggers = logger ? [logger] : livekitLoggers;\n  loggers.forEach(logR => {\n    const originalFactory = logR.methodFactory;\n    logR.methodFactory = (methodName, configLevel, loggerName) => {\n      const rawMethod = originalFactory(methodName, configLevel, loggerName);\n      const logLevel = LogLevel[methodName];\n      const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n      return (msg, context) => {\n        if (context) rawMethod(msg, context);else rawMethod(msg);\n        if (needLog) {\n          extension(logLevel, msg, context);\n        }\n      };\n    };\n    logR.setLevel(logR.getLevel());\n  });\n}\nconst workerLogger = loglevelExports.getLogger('lk-e2ee');\n\nconst maxRetryDelay = 7000;\nconst DEFAULT_RETRY_DELAYS_IN_MS = [0, 300, 2 * 2 * 300, 3 * 3 * 300, 4 * 4 * 300, maxRetryDelay, maxRetryDelay, maxRetryDelay, maxRetryDelay, maxRetryDelay];\nclass DefaultReconnectPolicy {\n  constructor(retryDelays) {\n    this._retryDelays = retryDelays !== undefined ? [...retryDelays] : DEFAULT_RETRY_DELAYS_IN_MS;\n  }\n  nextRetryDelayInMs(context) {\n    if (context.retryCount >= this._retryDelays.length) return null;\n    const retryDelay = this._retryDelays[context.retryCount];\n    if (context.retryCount <= 1) return retryDelay;\n    return retryDelay + Math.random() * 1000;\n  }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar events = {exports: {}};\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nevents.exports = EventEmitter;\nevents.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n  var handler = events[type];\n  if (handler === undefined) return false;\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n  return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n  return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n  return this;\n};\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this;\n\n  // not listening for removeListener, no need to emit\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n  listeners = events[type];\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n  return this;\n};\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n  if (events !== undefined) {\n    var evlistener = events[type];\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n  return 0;\n}\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n  return copy;\n}\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n  list.pop();\n}\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\nvar eventsExports = events.exports;\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = e => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nfunction disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool + '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\nfunction log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nfunction deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nfunction detectBrowser(window) {\n  // Returned result object.\n  const result = {\n    browser: null,\n    version: null\n  };\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator || !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n  const {\n    navigator\n  } = window;\n\n  // Prefer navigator.userAgentData.\n  if (navigator.userAgentData && navigator.userAgentData.brands) {\n    const chromium = navigator.userAgentData.brands.find(brand => {\n      return brand.brand === 'Chromium';\n    });\n    if (chromium) {\n      return {\n        browser: 'chrome',\n        version: parseInt(chromium.version, 10)\n      };\n    }\n  }\n  if (navigator.mozGetUserMedia) {\n    // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia || window.isSecureContext === false && window.webkitRTCPeerConnection) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver && 'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else {\n    // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nfunction compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n  return Object.keys(data).reduce(function (accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {\n      [key]: value\n    });\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' && value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\nconst logging = log;\nfunction shimGetUserMedia$2(window, browserDetails) {\n  const navigator = window && window.navigator;\n  if (!navigator.mediaDevices) {\n    return;\n  }\n  const constraintsToChrome_ = function (c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = typeof c[key] === 'object' ? c[key] : {\n        ideal: c[key]\n      };\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function (prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return name === 'deviceId' ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n  const shimConstraints_ = function (constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function (obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && (typeof face === 'object' ? face : {\n        ideal: face\n      });\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n      if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices().then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match => d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {\n                exact: dev.deviceId\n              } : {\n                ideal: dev.deviceId\n              };\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n  const shimError_ = function (e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n  const getUserMedia_ = function (constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\nfunction shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\nfunction shimOnTrack$1(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = e => {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', te => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers().find(r => r.track && r.track.id === te.track.id);\n            } else {\n              receiver = {\n                track: te.track\n              };\n            }\n            const event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver\n            };\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(track => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers().find(r => r.track && r.track.id === track.id);\n            } else {\n              receiver = {\n                track\n              };\n            }\n            const event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver\n            };\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', {\n          value: {\n            receiver: e.receiver\n          }\n        });\n      }\n      return e;\n    });\n  }\n}\nfunction shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function (pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        let sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n        const idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        const sender = this._senders.find(s => s.track === track);\n        if (sender) {\n          // remove sender\n          this._senders.splice(this._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\nfunction shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n      /* Note: this will include stats of all senders that\n       *   send a track with the same id as sender.track as\n       *   it is not possible to identify the RTCRtpSender.\n       */\n      filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(receiver => receiver._pc = this);\n        return receivers;\n      };\n    }\n    wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result => filterStats(result, receiver.track, false));\n    };\n  }\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\nfunction shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(streamId => this._shimmedLocalStreams[streamId][0]);\n  };\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    const sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders().filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          this._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (this._shimmedLocalStreams[streamId].length === 1) {\n          delete this._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\nfunction shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    const nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n  };\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    const streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 || !streams[0].getTracks().find(t => t === track)) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n    const alreadyExists = this.getSenders().find(s => s.track === track);\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    const oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      const newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(s => s.track === track);\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {\n      [method]() {\n        const args = arguments;\n        const isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(this, [description => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          }, err => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]]);\n        }\n        return nativeMethod.apply(this, arguments).then(description => replaceInternalStreamId(this, description));\n      }\n    };\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n  const origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get() {\n      const description = origLocalDescription.get.apply(this);\n      if (description.type === '') {\n        return description;\n      }\n      return replaceInternalStreamId(this, description);\n    }\n  });\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    const isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    let stream;\n    Object.keys(this._streams).forEach(streamid => {\n      const hasTrack = this._streams[streamid].getTracks().find(track => sender.track === track);\n      if (hasTrack) {\n        stream = this._streams[streamid];\n      }\n    });\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\nfunction shimPeerConnection$1(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      const nativeMethod = window.RTCPeerConnection.prototype[method];\n      const methodObj = {\n        [method]() {\n          arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }\n      };\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nfunction fixNegotiationNeeded(window, browserDetails) {\n  wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n\nvar chromeShim = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixNegotiationNeeded: fixNegotiationNeeded,\n    shimAddTrackRemoveTrack: shimAddTrackRemoveTrack,\n    shimAddTrackRemoveTrackWithNative: shimAddTrackRemoveTrackWithNative,\n    shimGetSendersWithDtmf: shimGetSendersWithDtmf,\n    shimGetUserMedia: shimGetUserMedia$2,\n    shimMediaStream: shimMediaStream,\n    shimOnTrack: shimOnTrack$1,\n    shimPeerConnection: shimPeerConnection$1,\n    shimSenderReceiverGetStats: shimSenderReceiverGetStats\n});\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\nfunction shimGetUserMedia$1(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function (obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function () {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\nfunction shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    if (!(constraints && constraints.video)) {\n      const err = new DOMException('getDisplayMedia without video ' + 'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = {\n        mediaSource: preferredMediaSource\n      };\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\nfunction shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nfunction shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      const nativeMethod = window.RTCPeerConnection.prototype[method];\n      const methodObj = {\n        [method]() {\n          arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }\n      };\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null]).then(stats => {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(stat => {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n          // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n          stats.forEach((stat, i) => {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\nfunction shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\nfunction shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\nfunction shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(sender => {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        this.removeTrack(sender);\n      }\n    });\n  };\n}\nfunction shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\nfunction shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      // WebIDL input coercion and validation\n      let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n      if (sendEncodings === undefined) {\n        sendEncodings = [];\n      }\n      sendEncodings = [...sendEncodings];\n      const shouldPerformCheck = sendEncodings.length > 0;\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        sendEncodings.forEach(encodingParam => {\n          if ('rid' in encodingParam) {\n            const ridRegex = /^[a-z0-9]{0,16}$/i;\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n      const transceiver = origAddTransceiver.apply(this, arguments);\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        const {\n          sender\n        } = transceiver;\n        const params = sender.getParameters();\n        if (!('encodings' in params) ||\n        // Avoid being fooled by patched getParameters() below.\n        params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n          params.encodings = sendEncodings;\n          sender.sendEncodings = sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).then(() => {\n            delete sender.sendEncodings;\n          }).catch(() => {\n            delete sender.sendEncodings;\n          }));\n        }\n      }\n      return transceiver;\n    };\n  }\n}\nfunction shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters = function getParameters() {\n      const params = origGetParameters.apply(this, arguments);\n      if (!('encodings' in params)) {\n        params.encodings = [].concat(this.sendEncodings || [{}]);\n      }\n      return params;\n    };\n  }\n}\nfunction shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(() => {\n        return origCreateOffer.apply(this, arguments);\n      }).finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\nfunction shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      }).finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n\nvar firefoxShim = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    shimAddTransceiver: shimAddTransceiver,\n    shimCreateAnswer: shimCreateAnswer,\n    shimCreateOffer: shimCreateOffer,\n    shimGetDisplayMedia: shimGetDisplayMedia,\n    shimGetParameters: shimGetParameters,\n    shimGetUserMedia: shimGetUserMedia$1,\n    shimOnTrack: shimOnTrack,\n    shimPeerConnection: shimPeerConnection,\n    shimRTCDataChannel: shimRTCDataChannel,\n    shimReceiverGetStats: shimReceiverGetStats,\n    shimRemoveStream: shimRemoveStream,\n    shimSenderGetStats: shimSenderGetStats\n});\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nfunction shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track, stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track, stream));\n    };\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track) {\n      for (var _len = arguments.length, streams = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        streams[_key - 1] = arguments[_key];\n      }\n      if (streams) {\n        streams.forEach(stream => {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (!this._localStreams.includes(stream)) {\n            this._localStreams.push(stream);\n          }\n        });\n      }\n      return _addTrack.apply(this, arguments);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      const index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      const tracks = stream.getTracks();\n      this.getSenders().forEach(sender => {\n        if (tracks.includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\nfunction shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function getRemoteStreams() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = e => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      const pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(stream => {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\nfunction shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n  prototype.createOffer = function createOffer(successCallback, failureCallback) {\n    const options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    const promise = origCreateOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.createAnswer = function createAnswer(successCallback, failureCallback) {\n    const options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    const promise = origCreateAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  let withCallback = function (description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n  withCallback = function (description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n  withCallback = function (candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\nfunction shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = constraints => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n  if (!navigator.getUserMedia && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n    }.bind(navigator);\n  }\n}\nfunction shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({}, constraints, {\n      video: compactObject(constraints.video)\n    });\n  }\n  return constraints;\n}\nfunction shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function RTCPeerConnection(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      const newIceServers = [];\n      for (let i = 0; i < pcConfig.iceServers.length; i++) {\n        let server = pcConfig.iceServers[i];\n        if (server.urls === undefined && server.url) {\n          deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\nfunction shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nfunction shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      const audioTransceiver = this.getTransceivers().find(transceiver => transceiver.receiver.track.kind === 'audio');\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) {\n        this.addTransceiver('audio', {\n          direction: 'recvonly'\n        });\n      }\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      const videoTransceiver = this.getTransceivers().find(transceiver => transceiver.receiver.track.kind === 'video');\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) {\n        this.addTransceiver('video', {\n          direction: 'recvonly'\n        });\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\nfunction shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\nvar safariShim = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    shimAudioContext: shimAudioContext,\n    shimCallbacksAPI: shimCallbacksAPI,\n    shimConstraints: shimConstraints,\n    shimCreateOfferLegacy: shimCreateOfferLegacy,\n    shimGetUserMedia: shimGetUserMedia,\n    shimLocalStreamsAPI: shimLocalStreamsAPI,\n    shimRTCIceServerUrls: shimRTCIceServerUrls,\n    shimRemoteStreamsAPI: shimRemoteStreamsAPI,\n    shimTrackEventTransceiver: shimTrackEventTransceiver\n});\n\nvar sdp$1 = {exports: {}};\n\n/* eslint-env node */\n(function (module) {\n\n  // SDP helpers.\n  const SDPUtils = {};\n\n  // Generate an alphanumeric identifier for cname or mids.\n  // TODO: use UUIDs instead? https://gist.github.com/jed/982883\n  SDPUtils.generateIdentifier = function () {\n    return Math.random().toString(36).substring(2, 12);\n  };\n\n  // The RTCP CNAME used by all peerconnections from the same JS.\n  SDPUtils.localCName = SDPUtils.generateIdentifier();\n\n  // Splits SDP into lines, dealing with both CRLF and LF.\n  SDPUtils.splitLines = function (blob) {\n    return blob.trim().split('\\n').map(line => line.trim());\n  };\n  // Splits SDP into sessionpart and mediasections. Ensures CRLF.\n  SDPUtils.splitSections = function (blob) {\n    const parts = blob.split('\\nm=');\n    return parts.map((part, index) => (index > 0 ? 'm=' + part : part).trim() + '\\r\\n');\n  };\n\n  // Returns the session description.\n  SDPUtils.getDescription = function (blob) {\n    const sections = SDPUtils.splitSections(blob);\n    return sections && sections[0];\n  };\n\n  // Returns the individual media sections.\n  SDPUtils.getMediaSections = function (blob) {\n    const sections = SDPUtils.splitSections(blob);\n    sections.shift();\n    return sections;\n  };\n\n  // Returns lines that start with a certain prefix.\n  SDPUtils.matchPrefix = function (blob, prefix) {\n    return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n  };\n\n  // Parses an ICE candidate line. Sample input:\n  // candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n  // rport 55996\"\n  // Input can be prefixed with a=.\n  SDPUtils.parseCandidate = function (line) {\n    let parts;\n    // Parse both variants.\n    if (line.indexOf('a=candidate:') === 0) {\n      parts = line.substring(12).split(' ');\n    } else {\n      parts = line.substring(10).split(' ');\n    }\n    const candidate = {\n      foundation: parts[0],\n      component: {\n        1: 'rtp',\n        2: 'rtcp'\n      }[parts[1]] || parts[1],\n      protocol: parts[2].toLowerCase(),\n      priority: parseInt(parts[3], 10),\n      ip: parts[4],\n      address: parts[4],\n      // address is an alias for ip.\n      port: parseInt(parts[5], 10),\n      // skip parts[6] == 'typ'\n      type: parts[7]\n    };\n    for (let i = 8; i < parts.length; i += 2) {\n      switch (parts[i]) {\n        case 'raddr':\n          candidate.relatedAddress = parts[i + 1];\n          break;\n        case 'rport':\n          candidate.relatedPort = parseInt(parts[i + 1], 10);\n          break;\n        case 'tcptype':\n          candidate.tcpType = parts[i + 1];\n          break;\n        case 'ufrag':\n          candidate.ufrag = parts[i + 1]; // for backward compatibility.\n          candidate.usernameFragment = parts[i + 1];\n          break;\n        default:\n          // extension handling, in particular ufrag. Don't overwrite.\n          if (candidate[parts[i]] === undefined) {\n            candidate[parts[i]] = parts[i + 1];\n          }\n          break;\n      }\n    }\n    return candidate;\n  };\n\n  // Translates a candidate object into SDP candidate attribute.\n  // This does not include the a= prefix!\n  SDPUtils.writeCandidate = function (candidate) {\n    const sdp = [];\n    sdp.push(candidate.foundation);\n    const component = candidate.component;\n    if (component === 'rtp') {\n      sdp.push(1);\n    } else if (component === 'rtcp') {\n      sdp.push(2);\n    } else {\n      sdp.push(component);\n    }\n    sdp.push(candidate.protocol.toUpperCase());\n    sdp.push(candidate.priority);\n    sdp.push(candidate.address || candidate.ip);\n    sdp.push(candidate.port);\n    const type = candidate.type;\n    sdp.push('typ');\n    sdp.push(type);\n    if (type !== 'host' && candidate.relatedAddress && candidate.relatedPort) {\n      sdp.push('raddr');\n      sdp.push(candidate.relatedAddress);\n      sdp.push('rport');\n      sdp.push(candidate.relatedPort);\n    }\n    if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n      sdp.push('tcptype');\n      sdp.push(candidate.tcpType);\n    }\n    if (candidate.usernameFragment || candidate.ufrag) {\n      sdp.push('ufrag');\n      sdp.push(candidate.usernameFragment || candidate.ufrag);\n    }\n    return 'candidate:' + sdp.join(' ');\n  };\n\n  // Parses an ice-options line, returns an array of option tags.\n  // Sample input:\n  // a=ice-options:foo bar\n  SDPUtils.parseIceOptions = function (line) {\n    return line.substring(14).split(' ');\n  };\n\n  // Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n  // a=rtpmap:111 opus/48000/2\n  SDPUtils.parseRtpMap = function (line) {\n    let parts = line.substring(9).split(' ');\n    const parsed = {\n      payloadType: parseInt(parts.shift(), 10) // was: id\n    };\n    parts = parts[0].split('/');\n    parsed.name = parts[0];\n    parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n    parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n    // legacy alias, got renamed back to channels in ORTC.\n    parsed.numChannels = parsed.channels;\n    return parsed;\n  };\n\n  // Generates a rtpmap line from RTCRtpCodecCapability or\n  // RTCRtpCodecParameters.\n  SDPUtils.writeRtpMap = function (codec) {\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    const channels = codec.channels || codec.numChannels || 1;\n    return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate + (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n  };\n\n  // Parses a extmap line (headerextension from RFC 5285). Sample input:\n  // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n  // a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\n  SDPUtils.parseExtmap = function (line) {\n    const parts = line.substring(9).split(' ');\n    return {\n      id: parseInt(parts[0], 10),\n      direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n      uri: parts[1],\n      attributes: parts.slice(2).join(' ')\n    };\n  };\n\n  // Generates an extmap line from RTCRtpHeaderExtensionParameters or\n  // RTCRtpHeaderExtension.\n  SDPUtils.writeExtmap = function (headerExtension) {\n    return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) + (headerExtension.direction && headerExtension.direction !== 'sendrecv' ? '/' + headerExtension.direction : '') + ' ' + headerExtension.uri + (headerExtension.attributes ? ' ' + headerExtension.attributes : '') + '\\r\\n';\n  };\n\n  // Parses a fmtp line, returns dictionary. Sample input:\n  // a=fmtp:96 vbr=on;cng=on\n  // Also deals with vbr=on; cng=on\n  SDPUtils.parseFmtp = function (line) {\n    const parsed = {};\n    let kv;\n    const parts = line.substring(line.indexOf(' ') + 1).split(';');\n    for (let j = 0; j < parts.length; j++) {\n      kv = parts[j].trim().split('=');\n      parsed[kv[0].trim()] = kv[1];\n    }\n    return parsed;\n  };\n\n  // Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n  SDPUtils.writeFmtp = function (codec) {\n    let line = '';\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    if (codec.parameters && Object.keys(codec.parameters).length) {\n      const params = [];\n      Object.keys(codec.parameters).forEach(param => {\n        if (codec.parameters[param] !== undefined) {\n          params.push(param + '=' + codec.parameters[param]);\n        } else {\n          params.push(param);\n        }\n      });\n      line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n    }\n    return line;\n  };\n\n  // Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n  // a=rtcp-fb:98 nack rpsi\n  SDPUtils.parseRtcpFb = function (line) {\n    const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n    return {\n      type: parts.shift(),\n      parameter: parts.join(' ')\n    };\n  };\n\n  // Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n  SDPUtils.writeRtcpFb = function (codec) {\n    let lines = '';\n    let pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n      // FIXME: special handling for trr-int?\n      codec.rtcpFeedback.forEach(fb => {\n        lines += 'a=rtcp-fb:' + pt + ' ' + fb.type + (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') + '\\r\\n';\n      });\n    }\n    return lines;\n  };\n\n  // Parses a RFC 5576 ssrc media attribute. Sample input:\n  // a=ssrc:3735928559 cname:something\n  SDPUtils.parseSsrcMedia = function (line) {\n    const sp = line.indexOf(' ');\n    const parts = {\n      ssrc: parseInt(line.substring(7, sp), 10)\n    };\n    const colon = line.indexOf(':', sp);\n    if (colon > -1) {\n      parts.attribute = line.substring(sp + 1, colon);\n      parts.value = line.substring(colon + 1);\n    } else {\n      parts.attribute = line.substring(sp + 1);\n    }\n    return parts;\n  };\n\n  // Parse a ssrc-group line (see RFC 5576). Sample input:\n  // a=ssrc-group:semantics 12 34\n  SDPUtils.parseSsrcGroup = function (line) {\n    const parts = line.substring(13).split(' ');\n    return {\n      semantics: parts.shift(),\n      ssrcs: parts.map(ssrc => parseInt(ssrc, 10))\n    };\n  };\n\n  // Extracts the MID (RFC 5888) from a media section.\n  // Returns the MID or undefined if no mid line was found.\n  SDPUtils.getMid = function (mediaSection) {\n    const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n    if (mid) {\n      return mid.substring(6);\n    }\n  };\n\n  // Parses a fingerprint line for DTLS-SRTP.\n  SDPUtils.parseFingerprint = function (line) {\n    const parts = line.substring(14).split(' ');\n    return {\n      algorithm: parts[0].toLowerCase(),\n      // algorithm is case-sensitive in Edge.\n      value: parts[1].toUpperCase() // the definition is upper-case in RFC 4572.\n    };\n  };\n\n  // Extracts DTLS parameters from SDP media section or sessionpart.\n  // FIXME: for consistency with other functions this should only\n  //   get the fingerprint line as input. See also getIceParameters.\n  SDPUtils.getDtlsParameters = function (mediaSection, sessionpart) {\n    const lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=fingerprint:');\n    // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n    return {\n      role: 'auto',\n      fingerprints: lines.map(SDPUtils.parseFingerprint)\n    };\n  };\n\n  // Serializes DTLS parameters to SDP.\n  SDPUtils.writeDtlsParameters = function (params, setupType) {\n    let sdp = 'a=setup:' + setupType + '\\r\\n';\n    params.fingerprints.forEach(fp => {\n      sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n    });\n    return sdp;\n  };\n\n  // Parses a=crypto lines into\n  //   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\n  SDPUtils.parseCryptoLine = function (line) {\n    const parts = line.substring(9).split(' ');\n    return {\n      tag: parseInt(parts[0], 10),\n      cryptoSuite: parts[1],\n      keyParams: parts[2],\n      sessionParams: parts.slice(3)\n    };\n  };\n  SDPUtils.writeCryptoLine = function (parameters) {\n    return 'a=crypto:' + parameters.tag + ' ' + parameters.cryptoSuite + ' ' + (typeof parameters.keyParams === 'object' ? SDPUtils.writeCryptoKeyParams(parameters.keyParams) : parameters.keyParams) + (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') + '\\r\\n';\n  };\n\n  // Parses the crypto key parameters into\n  //   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\n  SDPUtils.parseCryptoKeyParams = function (keyParams) {\n    if (keyParams.indexOf('inline:') !== 0) {\n      return null;\n    }\n    const parts = keyParams.substring(7).split('|');\n    return {\n      keyMethod: 'inline',\n      keySalt: parts[0],\n      lifeTime: parts[1],\n      mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n      mkiLength: parts[2] ? parts[2].split(':')[1] : undefined\n    };\n  };\n  SDPUtils.writeCryptoKeyParams = function (keyParams) {\n    return keyParams.keyMethod + ':' + keyParams.keySalt + (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') + (keyParams.mkiValue && keyParams.mkiLength ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength : '');\n  };\n\n  // Extracts all SDES parameters.\n  SDPUtils.getCryptoParameters = function (mediaSection, sessionpart) {\n    const lines = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=crypto:');\n    return lines.map(SDPUtils.parseCryptoLine);\n  };\n\n  // Parses ICE information from SDP media section or sessionpart.\n  // FIXME: for consistency with other functions this should only\n  //   get the ice-ufrag and ice-pwd lines as input.\n  SDPUtils.getIceParameters = function (mediaSection, sessionpart) {\n    const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-ufrag:')[0];\n    const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart, 'a=ice-pwd:')[0];\n    if (!(ufrag && pwd)) {\n      return null;\n    }\n    return {\n      usernameFragment: ufrag.substring(12),\n      password: pwd.substring(10)\n    };\n  };\n\n  // Serializes ICE parameters to SDP.\n  SDPUtils.writeIceParameters = function (params) {\n    let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' + 'a=ice-pwd:' + params.password + '\\r\\n';\n    if (params.iceLite) {\n      sdp += 'a=ice-lite\\r\\n';\n    }\n    return sdp;\n  };\n\n  // Parses the SDP media section and returns RTCRtpParameters.\n  SDPUtils.parseRtpParameters = function (mediaSection) {\n    const description = {\n      codecs: [],\n      headerExtensions: [],\n      fecMechanisms: [],\n      rtcp: []\n    };\n    const lines = SDPUtils.splitLines(mediaSection);\n    const mline = lines[0].split(' ');\n    description.profile = mline[2];\n    for (let i = 3; i < mline.length; i++) {\n      // find all codecs from mline[3..]\n      const pt = mline[i];\n      const rtpmapline = SDPUtils.matchPrefix(mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n      if (rtpmapline) {\n        const codec = SDPUtils.parseRtpMap(rtpmapline);\n        const fmtps = SDPUtils.matchPrefix(mediaSection, 'a=fmtp:' + pt + ' ');\n        // Only the first a=fmtp:<pt> is considered.\n        codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n        codec.rtcpFeedback = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:' + pt + ' ').map(SDPUtils.parseRtcpFb);\n        description.codecs.push(codec);\n        // parse FEC mechanisms from rtpmap lines.\n        switch (codec.name.toUpperCase()) {\n          case 'RED':\n          case 'ULPFEC':\n            description.fecMechanisms.push(codec.name.toUpperCase());\n            break;\n        }\n      }\n    }\n    SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n      description.headerExtensions.push(SDPUtils.parseExtmap(line));\n    });\n    const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ').map(SDPUtils.parseRtcpFb);\n    description.codecs.forEach(codec => {\n      wildcardRtcpFb.forEach(fb => {\n        const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n          return existingFeedback.type === fb.type && existingFeedback.parameter === fb.parameter;\n        });\n        if (!duplicate) {\n          codec.rtcpFeedback.push(fb);\n        }\n      });\n    });\n    // FIXME: parse rtcp.\n    return description;\n  };\n\n  // Generates parts of the SDP media section describing the capabilities /\n  // parameters.\n  SDPUtils.writeRtpDescription = function (kind, caps) {\n    let sdp = '';\n\n    // Build the mline.\n    sdp += 'm=' + kind + ' ';\n    sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n    sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n    sdp += caps.codecs.map(codec => {\n      if (codec.preferredPayloadType !== undefined) {\n        return codec.preferredPayloadType;\n      }\n      return codec.payloadType;\n    }).join(' ') + '\\r\\n';\n    sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n    sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n    // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n    caps.codecs.forEach(codec => {\n      sdp += SDPUtils.writeRtpMap(codec);\n      sdp += SDPUtils.writeFmtp(codec);\n      sdp += SDPUtils.writeRtcpFb(codec);\n    });\n    let maxptime = 0;\n    caps.codecs.forEach(codec => {\n      if (codec.maxptime > maxptime) {\n        maxptime = codec.maxptime;\n      }\n    });\n    if (maxptime > 0) {\n      sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n    }\n    if (caps.headerExtensions) {\n      caps.headerExtensions.forEach(extension => {\n        sdp += SDPUtils.writeExtmap(extension);\n      });\n    }\n    // FIXME: write fecMechanisms.\n    return sdp;\n  };\n\n  // Parses the SDP media section and returns an array of\n  // RTCRtpEncodingParameters.\n  SDPUtils.parseRtpEncodingParameters = function (mediaSection) {\n    const encodingParameters = [];\n    const description = SDPUtils.parseRtpParameters(mediaSection);\n    const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n    const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n    // filter a=ssrc:... cname:, ignore PlanB-msid\n    const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(line => SDPUtils.parseSsrcMedia(line)).filter(parts => parts.attribute === 'cname');\n    const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n    let secondarySsrc;\n    const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID').map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n    if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n      secondarySsrc = flows[0][1];\n    }\n    description.codecs.forEach(codec => {\n      if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n        let encParam = {\n          ssrc: primarySsrc,\n          codecPayloadType: parseInt(codec.parameters.apt, 10)\n        };\n        if (primarySsrc && secondarySsrc) {\n          encParam.rtx = {\n            ssrc: secondarySsrc\n          };\n        }\n        encodingParameters.push(encParam);\n        if (hasRed) {\n          encParam = JSON.parse(JSON.stringify(encParam));\n          encParam.fec = {\n            ssrc: primarySsrc,\n            mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n          };\n          encodingParameters.push(encParam);\n        }\n      }\n    });\n    if (encodingParameters.length === 0 && primarySsrc) {\n      encodingParameters.push({\n        ssrc: primarySsrc\n      });\n    }\n\n    // we support both b=AS and b=TIAS but interpret AS as TIAS.\n    let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n    if (bandwidth.length) {\n      if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n        bandwidth = parseInt(bandwidth[0].substring(7), 10);\n      } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n        // use formula from JSEP to convert b=AS to TIAS value.\n        bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95 - 50 * 40 * 8;\n      } else {\n        bandwidth = undefined;\n      }\n      encodingParameters.forEach(params => {\n        params.maxBitrate = bandwidth;\n      });\n    }\n    return encodingParameters;\n  };\n\n  // parses http://draft.ortc.org/#rtcrtcpparameters*\n  SDPUtils.parseRtcpParameters = function (mediaSection) {\n    const rtcpParameters = {};\n\n    // Gets the first SSRC. Note that with RTX there might be multiple\n    // SSRCs.\n    const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(line => SDPUtils.parseSsrcMedia(line)).filter(obj => obj.attribute === 'cname')[0];\n    if (remoteSsrc) {\n      rtcpParameters.cname = remoteSsrc.value;\n      rtcpParameters.ssrc = remoteSsrc.ssrc;\n    }\n\n    // Edge uses the compound attribute instead of reducedSize\n    // compound is !reducedSize\n    const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n    rtcpParameters.reducedSize = rsize.length > 0;\n    rtcpParameters.compound = rsize.length === 0;\n\n    // parses the rtcp-mux attrіbute.\n    // Note that Edge does not support unmuxed RTCP.\n    const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n    rtcpParameters.mux = mux.length > 0;\n    return rtcpParameters;\n  };\n  SDPUtils.writeRtcpParameters = function (rtcpParameters) {\n    let sdp = '';\n    if (rtcpParameters.reducedSize) {\n      sdp += 'a=rtcp-rsize\\r\\n';\n    }\n    if (rtcpParameters.mux) {\n      sdp += 'a=rtcp-mux\\r\\n';\n    }\n    if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n      sdp += 'a=ssrc:' + rtcpParameters.ssrc + ' cname:' + rtcpParameters.cname + '\\r\\n';\n    }\n    return sdp;\n  };\n\n  // parses either a=msid: or a=ssrc:... msid lines and returns\n  // the id of the MediaStream and MediaStreamTrack.\n  SDPUtils.parseMsid = function (mediaSection) {\n    let parts;\n    const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n    if (spec.length === 1) {\n      parts = spec[0].substring(7).split(' ');\n      return {\n        stream: parts[0],\n        track: parts[1]\n      };\n    }\n    const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:').map(line => SDPUtils.parseSsrcMedia(line)).filter(msidParts => msidParts.attribute === 'msid');\n    if (planB.length > 0) {\n      parts = planB[0].value.split(' ');\n      return {\n        stream: parts[0],\n        track: parts[1]\n      };\n    }\n  };\n\n  // SCTP\n  // parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n  // to draft-ietf-mmusic-sctp-sdp-05\n  SDPUtils.parseSctpDescription = function (mediaSection) {\n    const mline = SDPUtils.parseMLine(mediaSection);\n    const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n    let maxMessageSize;\n    if (maxSizeLine.length > 0) {\n      maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n    }\n    if (isNaN(maxMessageSize)) {\n      maxMessageSize = 65536;\n    }\n    const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n    if (sctpPort.length > 0) {\n      return {\n        port: parseInt(sctpPort[0].substring(12), 10),\n        protocol: mline.fmt,\n        maxMessageSize\n      };\n    }\n    const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n    if (sctpMapLines.length > 0) {\n      const parts = sctpMapLines[0].substring(10).split(' ');\n      return {\n        port: parseInt(parts[0], 10),\n        protocol: parts[1],\n        maxMessageSize\n      };\n    }\n  };\n\n  // SCTP\n  // outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n  // support by now receiving in this format, unless we originally parsed\n  // as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n  // protocol of DTLS/SCTP -- without UDP/ or TCP/)\n  SDPUtils.writeSctpDescription = function (media, sctp) {\n    let output = [];\n    if (media.protocol !== 'DTLS/SCTP') {\n      output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctp-port:' + sctp.port + '\\r\\n'];\n    } else {\n      output = ['m=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n', 'c=IN IP4 0.0.0.0\\r\\n', 'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'];\n    }\n    if (sctp.maxMessageSize !== undefined) {\n      output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n    }\n    return output.join('');\n  };\n\n  // Generate a session ID for SDP.\n  // https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n  // recommends using a cryptographically random +ve 64-bit value\n  // but right now this should be acceptable and within the right range\n  SDPUtils.generateSessionId = function () {\n    return Math.random().toString().substr(2, 22);\n  };\n\n  // Write boiler plate for start of SDP\n  // sessId argument is optional - if not supplied it will\n  // be generated randomly\n  // sessVersion is optional and defaults to 2\n  // sessUser is optional and defaults to 'thisisadapterortc'\n  SDPUtils.writeSessionBoilerplate = function (sessId, sessVer, sessUser) {\n    let sessionId;\n    const version = sessVer !== undefined ? sessVer : 2;\n    if (sessId) {\n      sessionId = sessId;\n    } else {\n      sessionId = SDPUtils.generateSessionId();\n    }\n    const user = sessUser || 'thisisadapterortc';\n    // FIXME: sess-id should be an NTP timestamp.\n    return 'v=0\\r\\n' + 'o=' + user + ' ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' + 's=-\\r\\n' + 't=0 0\\r\\n';\n  };\n\n  // Gets the direction from the mediaSection or the sessionpart.\n  SDPUtils.getDirection = function (mediaSection, sessionpart) {\n    // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n    const lines = SDPUtils.splitLines(mediaSection);\n    for (let i = 0; i < lines.length; i++) {\n      switch (lines[i]) {\n        case 'a=sendrecv':\n        case 'a=sendonly':\n        case 'a=recvonly':\n        case 'a=inactive':\n          return lines[i].substring(2);\n        // FIXME: What should happen here?\n      }\n    }\n    if (sessionpart) {\n      return SDPUtils.getDirection(sessionpart);\n    }\n    return 'sendrecv';\n  };\n  SDPUtils.getKind = function (mediaSection) {\n    const lines = SDPUtils.splitLines(mediaSection);\n    const mline = lines[0].split(' ');\n    return mline[0].substring(2);\n  };\n  SDPUtils.isRejected = function (mediaSection) {\n    return mediaSection.split(' ', 2)[1] === '0';\n  };\n  SDPUtils.parseMLine = function (mediaSection) {\n    const lines = SDPUtils.splitLines(mediaSection);\n    const parts = lines[0].substring(2).split(' ');\n    return {\n      kind: parts[0],\n      port: parseInt(parts[1], 10),\n      protocol: parts[2],\n      fmt: parts.slice(3).join(' ')\n    };\n  };\n  SDPUtils.parseOLine = function (mediaSection) {\n    const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n    const parts = line.substring(2).split(' ');\n    return {\n      username: parts[0],\n      sessionId: parts[1],\n      sessionVersion: parseInt(parts[2], 10),\n      netType: parts[3],\n      addressType: parts[4],\n      address: parts[5]\n    };\n  };\n\n  // a very naive interpretation of a valid SDP.\n  SDPUtils.isValidSDP = function (blob) {\n    if (typeof blob !== 'string' || blob.length === 0) {\n      return false;\n    }\n    const lines = SDPUtils.splitLines(blob);\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n        return false;\n      }\n      // TODO: check the modifier a bit more.\n    }\n    return true;\n  };\n\n  // Expose public methods.\n  {\n    module.exports = SDPUtils;\n  }\n})(sdp$1);\nvar sdpExports = sdp$1.exports;\nvar SDPUtils = /*@__PURE__*/getDefaultExportFromCjs(sdpExports);\n\nvar sdp = /*#__PURE__*/_mergeNamespaces({\n    __proto__: null,\n    default: SDPUtils\n}, [sdpExports]);\n\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\nfunction shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key, {\n            value: parsedCandidate[key]\n          });\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\nfunction shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'relayProtocol' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp'\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\nfunction shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n  const sctpInDescription = function (description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n  const getRemoteFirefoxVersion = function (description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n  const getCanSendMaxMessageSize = function (remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n  const getMaxMessageSize = function (description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n    const match = SDPUtils.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n  const origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      const {\n        sdpSemantics\n      } = this.getConfiguration();\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      let maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      const sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\nfunction shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    const dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nfunction shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ['setLocalDescription', 'setRemoteDescription'].forEach(method => {\n    const origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\nfunction removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter(line => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\nfunction shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions.\n    // Native support for ignoring exists for Chrome M77+.\n    // Safari ignores as well, exact version unknown but works in the same\n    // version that also ignores addIceCandidate(null).\n    if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nfunction shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    let desc = arguments[0] || {};\n    if (typeof desc !== 'object' || desc.type && desc.sdp) {\n      return nativeSetLocalDescription.apply(this, arguments);\n    }\n    // The remaining steps should technically happen when SLD comes off the\n    // RTCPeerConnection's operations chain (not ahead of going on it), but\n    // this is too difficult to shim. Instead, this shim only covers the\n    // common case where the operations chain is empty. This is imperfect, but\n    // should cover many cases. Rationale: Even if we can't reduce the glare\n    // window to zero on imperfect implementations, there's value in tapping\n    // into the perfect negotiation pattern that several browsers support.\n    desc = {\n      type: desc.type,\n      sdp: desc.sdp\n    };\n    if (!desc.type) {\n      switch (this.signalingState) {\n        case 'stable':\n        case 'have-local-offer':\n        case 'have-remote-pranswer':\n          desc.type = 'offer';\n          break;\n        default:\n          desc.type = 'answer';\n          break;\n      }\n    }\n    if (desc.sdp || desc.type !== 'offer' && desc.type !== 'answer') {\n      return nativeSetLocalDescription.apply(this, [desc]);\n    }\n    const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n    return func.apply(this).then(d => nativeSetLocalDescription.apply(this, [d]));\n  };\n}\n\nvar commonShim = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    removeExtmapAllowMixed: removeExtmapAllowMixed,\n    shimAddIceCandidateNullOrEmpty: shimAddIceCandidateNullOrEmpty,\n    shimConnectionState: shimConnectionState,\n    shimMaxMessageSize: shimMaxMessageSize,\n    shimParameterlessSetLocalDescription: shimParameterlessSetLocalDescription,\n    shimRTCIceCandidate: shimRTCIceCandidate,\n    shimRTCIceCandidateRelayProtocol: shimRTCIceCandidateRelayProtocol,\n    shimSendThrowTypeError: shimSendThrowTypeError\n});\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n// Shimming starts here.\nfunction adapterFactory() {\n  let {\n    window\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    shimChrome: true,\n    shimFirefox: true,\n    shimSafari: true\n  };\n  // Utils.\n  const logging = log;\n  const browserDetails = detectBrowser(window);\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: extractVersion,\n    disableLog: disableLog,\n    disableWarnings: disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !shimPeerConnection$1 || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      shimParameterlessSetLocalDescription(window);\n      shimGetUserMedia$2(window, browserDetails);\n      shimMediaStream(window);\n      shimPeerConnection$1(window, browserDetails);\n      shimOnTrack$1(window);\n      shimAddTrackRemoveTrack(window, browserDetails);\n      shimGetSendersWithDtmf(window);\n      shimSenderReceiverGetStats(window);\n      fixNegotiationNeeded(window, browserDetails);\n      shimRTCIceCandidate(window);\n      shimRTCIceCandidateRelayProtocol(window);\n      shimConnectionState(window);\n      shimMaxMessageSize(window, browserDetails);\n      shimSendThrowTypeError(window);\n      removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      shimParameterlessSetLocalDescription(window);\n      shimGetUserMedia$1(window, browserDetails);\n      shimPeerConnection(window, browserDetails);\n      shimOnTrack(window);\n      shimRemoveStream(window);\n      shimSenderGetStats(window);\n      shimReceiverGetStats(window);\n      shimRTCDataChannel(window);\n      shimAddTransceiver(window);\n      shimGetParameters(window);\n      shimCreateOffer(window);\n      shimCreateAnswer(window);\n      shimRTCIceCandidate(window);\n      shimConnectionState(window);\n      shimMaxMessageSize(window, browserDetails);\n      shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      shimParameterlessSetLocalDescription(window);\n      shimRTCIceServerUrls(window);\n      shimCreateOfferLegacy(window);\n      shimCallbacksAPI(window);\n      shimLocalStreamsAPI(window);\n      shimRemoteStreamsAPI(window);\n      shimTrackEventTransceiver(window);\n      shimGetUserMedia(window);\n      shimAudioContext(window);\n      shimRTCIceCandidate(window);\n      shimRTCIceCandidateRelayProtocol(window);\n      shimMaxMessageSize(window, browserDetails);\n      shimSendThrowTypeError(window);\n      removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n  return adapter;\n}\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\nadapterFactory({\n  window: typeof window === 'undefined' ? undefined : window\n});\n\nconst ENCRYPTION_ALGORITHM = 'AES-GCM';\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nconst DECRYPTION_FAILURE_TOLERANCE = 10;\n// flag set to indicate that e2ee has been setup for sender/receiver;\nconst E2EE_FLAG = 'lk_e2ee';\nconst SALT = 'LKFrameEncryptionKey';\nconst KEY_PROVIDER_DEFAULTS = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n  keyringSize: 16\n};\n\nvar KeyProviderEvent;\n(function (KeyProviderEvent) {\n  KeyProviderEvent[\"SetKey\"] = \"setKey\";\n  KeyProviderEvent[\"RatchetRequest\"] = \"ratchetRequest\";\n  KeyProviderEvent[\"KeyRatcheted\"] = \"keyRatcheted\";\n})(KeyProviderEvent || (KeyProviderEvent = {}));\nvar KeyHandlerEvent;\n(function (KeyHandlerEvent) {\n  KeyHandlerEvent[\"KeyRatcheted\"] = \"keyRatcheted\";\n})(KeyHandlerEvent || (KeyHandlerEvent = {}));\nvar EncryptionEvent;\n(function (EncryptionEvent) {\n  EncryptionEvent[\"ParticipantEncryptionStatusChanged\"] = \"participantEncryptionStatusChanged\";\n  EncryptionEvent[\"EncryptionError\"] = \"encryptionError\";\n})(EncryptionEvent || (EncryptionEvent = {}));\nvar CryptorEvent;\n(function (CryptorEvent) {\n  CryptorEvent[\"Error\"] = \"cryptorError\";\n})(CryptorEvent || (CryptorEvent = {}));\n\nfunction isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\nfunction isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\nfunction isInsertableStreamSupported() {\n  return typeof window.RTCRtpSender !== 'undefined' &&\n  // @ts-ignore\n  typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined';\n}\nfunction isVideoFrame(frame) {\n  return 'type' in frame;\n}\nfunction importKey(keyBytes_1) {\n  return __awaiter(this, arguments, void 0, function (keyBytes) {\n    let algorithm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      name: ENCRYPTION_ALGORITHM\n    };\n    let usage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'encrypt';\n    return function* () {\n      // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n      return crypto.subtle.importKey('raw', keyBytes, algorithm, false, usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt']);\n    }();\n  });\n}\nfunction createKeyMaterialFromString(password) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let enc = new TextEncoder();\n    const keyMaterial = yield crypto.subtle.importKey('raw', enc.encode(password), {\n      name: 'PBKDF2'\n    }, false, ['deriveBits', 'deriveKey']);\n    return keyMaterial;\n  });\n}\nfunction createKeyMaterialFromBuffer(cryptoBuffer) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const keyMaterial = yield crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, ['deriveBits', 'deriveKey']);\n    return keyMaterial;\n  });\n}\nfunction getAlgoOptions(algorithmName, salt) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128)\n      };\n    case 'PBKDF2':\n      {\n        return {\n          name: 'PBKDF2',\n          salt: encodedSalt,\n          hash: 'SHA-256',\n          iterations: 100000\n        };\n      }\n    default:\n      throw new Error(\"algorithm \".concat(algorithmName, \" is currently unsupported\"));\n  }\n}\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nfunction deriveKeys(material, salt) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n    // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n    const encryptionKey = yield crypto.subtle.deriveKey(algorithmOptions, material, {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128\n    }, false, ['encrypt', 'decrypt']);\n    return {\n      material,\n      encryptionKey\n    };\n  });\n}\nfunction createE2EEKey() {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nfunction ratchet(material, salt) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n    return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n  });\n}\nfunction needsRbspUnescaping(frameData) {\n  for (var i = 0; i < frameData.length - 3; i++) {\n    if (frameData[i] == 0 && frameData[i + 1] == 0 && frameData[i + 2] == 3) return true;\n  }\n  return false;\n}\nfunction parseRbsp(stream) {\n  const dataOut = [];\n  var length = stream.length;\n  for (var i = 0; i < stream.length;) {\n    // Be careful about over/underflow here. byte_length_ - 3 can underflow, and\n    // i + 3 can overflow, but byte_length_ - i can't, because i < byte_length_\n    // above, and that expression will produce the number of bytes left in\n    // the stream including the byte at i.\n    if (length - i >= 3 && !stream[i] && !stream[i + 1] && stream[i + 2] == 3) {\n      // Two rbsp bytes.\n      dataOut.push(stream[i++]);\n      dataOut.push(stream[i++]);\n      // Skip the emulation byte.\n      i++;\n    } else {\n      // Single rbsp byte.\n      dataOut.push(stream[i++]);\n    }\n  }\n  return new Uint8Array(dataOut);\n}\nconst kZerosInStartSequence = 2;\nconst kEmulationByte = 3;\nfunction writeRbsp(data_in) {\n  const dataOut = [];\n  var numConsecutiveZeros = 0;\n  for (var i = 0; i < data_in.length; ++i) {\n    var byte = data_in[i];\n    if (byte <= kEmulationByte && numConsecutiveZeros >= kZerosInStartSequence) {\n      // Need to escape.\n      dataOut.push(kEmulationByte);\n      numConsecutiveZeros = 0;\n    }\n    dataOut.push(byte);\n    if (byte == 0) {\n      ++numConsecutiveZeros;\n    } else {\n      numConsecutiveZeros = 0;\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n\n/**\n * @experimental\n */\nclass BaseKeyProvider extends eventsExports.EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    /**\n     * callback being invoked after a ratchet request has been performed on a participant\n     * that surfaces the new key material.\n     * @param material\n     * @param keyIndex\n     */\n    this.onKeyRatcheted = (material, keyIndex) => {\n      livekitLogger.debug('key ratcheted event received', {\n        material,\n        keyIndex\n      });\n    };\n    this.keyInfoMap = new Map();\n    this.options = Object.assign(Object.assign({}, KEY_PROVIDER_DEFAULTS), options);\n    this.on(KeyProviderEvent.KeyRatcheted, this.onKeyRatcheted);\n  }\n  /**\n   * callback to invoke once a key has been set for a participant\n   * @param key\n   * @param participantIdentity\n   * @param keyIndex\n   */\n  onSetEncryptionKey(key, participantIdentity, keyIndex) {\n    const keyInfo = {\n      key,\n      participantIdentity,\n      keyIndex\n    };\n    if (!this.options.sharedKey && !participantIdentity) {\n      throw new Error('participant identity needs to be passed for encryption key if sharedKey option is false');\n    }\n    this.keyInfoMap.set(\"\".concat(participantIdentity !== null && participantIdentity !== void 0 ? participantIdentity : 'shared', \"-\").concat(keyIndex !== null && keyIndex !== void 0 ? keyIndex : 0), keyInfo);\n    this.emit(KeyProviderEvent.SetKey, keyInfo);\n  }\n  getKeys() {\n    return Array.from(this.keyInfoMap.values());\n  }\n  getOptions() {\n    return this.options;\n  }\n  ratchetKey(participantIdentity, keyIndex) {\n    this.emit(KeyProviderEvent.RatchetRequest, participantIdentity, keyIndex);\n  }\n}\n/**\n * A basic KeyProvider implementation intended for a single shared\n * passphrase between all participants\n * @experimental\n */\nclass ExternalE2EEKeyProvider extends BaseKeyProvider {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const opts = Object.assign(Object.assign({}, options), {\n      sharedKey: true,\n      // for a shared key provider failing to decrypt for a specific participant\n      // should not mark the key as invalid, so we accept wrong keys forever\n      // and won't try to auto-ratchet\n      ratchetWindowSize: 0,\n      failureTolerance: -1\n    });\n    super(opts);\n  }\n  /**\n   * Accepts a passphrase that's used to create the crypto keys.\n   * When passing in a string, PBKDF2 is used.\n   * When passing in an Array buffer of cryptographically random numbers, HKDF is being used. (recommended)\n   * @param key\n   */\n  setKey(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const derivedKey = typeof key === 'string' ? yield createKeyMaterialFromString(key) : yield createKeyMaterialFromBuffer(key);\n      this.onSetEncryptionKey(derivedKey);\n    });\n  }\n}\n\nclass LivekitError extends Error {\n  constructor(code, message) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\nclass ConnectionError extends LivekitError {\n  constructor(message, reason, status) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n  }\n}\nclass DeviceUnsupportedError extends LivekitError {\n  constructor(message) {\n    super(21, message !== null && message !== void 0 ? message : 'device is unsupported');\n  }\n}\nclass TrackInvalidError extends LivekitError {\n  constructor(message) {\n    super(20, message !== null && message !== void 0 ? message : 'track is invalid');\n  }\n}\nclass UnsupportedServer extends LivekitError {\n  constructor(message) {\n    super(10, message !== null && message !== void 0 ? message : 'unsupported server');\n  }\n}\nclass UnexpectedConnectionState extends LivekitError {\n  constructor(message) {\n    super(12, message !== null && message !== void 0 ? message : 'unexpected connection state');\n  }\n}\nclass NegotiationError extends LivekitError {\n  constructor(message) {\n    super(13, message !== null && message !== void 0 ? message : 'unable to negotiate');\n  }\n}\nclass PublishDataError extends LivekitError {\n  constructor(message) {\n    super(13, message !== null && message !== void 0 ? message : 'unable to publish data');\n  }\n}\nclass SignalRequestError extends LivekitError {\n  constructor(message, reason) {\n    super(15, message);\n    this.reason = reason;\n  }\n}\nvar MediaDeviceFailure;\n(function (MediaDeviceFailure) {\n  // user rejected permissions\n  MediaDeviceFailure[\"PermissionDenied\"] = \"PermissionDenied\";\n  // device is not available\n  MediaDeviceFailure[\"NotFound\"] = \"NotFound\";\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  MediaDeviceFailure[\"DeviceInUse\"] = \"DeviceInUse\";\n  MediaDeviceFailure[\"Other\"] = \"Other\";\n})(MediaDeviceFailure || (MediaDeviceFailure = {}));\n(function (MediaDeviceFailure) {\n  function getFailure(error) {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n  MediaDeviceFailure.getFailure = getFailure;\n})(MediaDeviceFailure || (MediaDeviceFailure = {}));\n\nvar CryptorErrorReason;\n(function (CryptorErrorReason) {\n  CryptorErrorReason[CryptorErrorReason[\"InvalidKey\"] = 0] = \"InvalidKey\";\n  CryptorErrorReason[CryptorErrorReason[\"MissingKey\"] = 1] = \"MissingKey\";\n  CryptorErrorReason[CryptorErrorReason[\"InternalError\"] = 2] = \"InternalError\";\n})(CryptorErrorReason || (CryptorErrorReason = {}));\nclass CryptorError extends LivekitError {\n  constructor(message) {\n    let reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CryptorErrorReason.InternalError;\n    let participantIdentity = arguments.length > 2 ? arguments[2] : undefined;\n    super(40, message);\n    this.reason = reason;\n    this.participantIdentity = participantIdentity;\n  }\n}\n\n/**\n * Events are the primary way LiveKit notifies your application of changes.\n *\n * The following are events emitted by [[Room]], listen to room events like\n *\n * ```typescript\n * room.on(RoomEvent.TrackPublished, (track, publication, participant) => {})\n * ```\n */\nvar RoomEvent;\n(function (RoomEvent) {\n  /**\n   * When the connection to the server has been established\n   */\n  RoomEvent[\"Connected\"] = \"connected\";\n  /**\n   * When the connection to the server has been interrupted and it's attempting\n   * to reconnect.\n   */\n  RoomEvent[\"Reconnecting\"] = \"reconnecting\";\n  /**\n   * When the signal connection to the server has been interrupted. This isn't noticeable to users most of the time.\n   * It will resolve with a `RoomEvent.Reconnected` once the signal connection has been re-established.\n   * If media fails additionally it an additional `RoomEvent.Reconnecting` will be emitted.\n   */\n  RoomEvent[\"SignalReconnecting\"] = \"signalReconnecting\";\n  /**\n   * Fires when a reconnection has been successful.\n   */\n  RoomEvent[\"Reconnected\"] = \"reconnected\";\n  /**\n   * When disconnected from room. This fires when room.disconnect() is called or\n   * when an unrecoverable connection issue had occured.\n   *\n   * DisconnectReason can be used to determine why the participant was disconnected. Notable reasons are\n   * - DUPLICATE_IDENTITY: another client with the same identity has joined the room\n   * - PARTICIPANT_REMOVED: participant was removed by RemoveParticipant API\n   * - ROOM_DELETED: the room has ended via DeleteRoom API\n   *\n   * args: ([[DisconnectReason]])\n   */\n  RoomEvent[\"Disconnected\"] = \"disconnected\";\n  /**\n   * Whenever the connection state of the room changes\n   *\n   * args: ([[ConnectionState]])\n   */\n  RoomEvent[\"ConnectionStateChanged\"] = \"connectionStateChanged\";\n  /**\n   * When input or output devices on the machine have changed.\n   */\n  RoomEvent[\"MediaDevicesChanged\"] = \"mediaDevicesChanged\";\n  /**\n   * When a [[RemoteParticipant]] joins *after* the local\n   * participant. It will not emit events for participants that are already\n   * in the room\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  RoomEvent[\"ParticipantConnected\"] = \"participantConnected\";\n  /**\n   * When a [[RemoteParticipant]] leaves *after* the local\n   * participant has joined.\n   *\n   * args: ([[RemoteParticipant]])\n   */\n  RoomEvent[\"ParticipantDisconnected\"] = \"participantDisconnected\";\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackPublished\"] = \"trackPublished\";\n  /**\n   * The [[LocalParticipant]] has subscribed to a new track. This event will **always**\n   * fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackSubscribed\"] = \"trackSubscribed\";\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid, [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackSubscriptionFailed\"] = \"trackSubscriptionFailed\";\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackUnpublished\"] = \"trackUnpublished\";\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[Track]], [[RemoteTrackPublication]], [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackUnsubscribed\"] = \"trackUnsubscribed\";\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  RoomEvent[\"TrackMuted\"] = \"trackMuted\";\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]], [[Participant]])\n   */\n  RoomEvent[\"TrackUnmuted\"] = \"trackUnmuted\";\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  RoomEvent[\"LocalTrackPublished\"] = \"localTrackPublished\";\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]], [[LocalParticipant]])\n   */\n  RoomEvent[\"LocalTrackUnpublished\"] = \"localTrackUnpublished\";\n  /**\n   * When a local audio track is published the SDK checks whether there is complete silence\n   * on that track and emits the LocalAudioSilenceDetected event in that case.\n   * This allows for applications to show UI informing users that they might have to\n   * reset their audio hardware or check for proper device connectivity.\n   */\n  RoomEvent[\"LocalAudioSilenceDetected\"] = \"localAudioSilenceDetected\";\n  /**\n   * Active speakers changed. List of speakers are ordered by their audio level.\n   * loudest speakers first. This will include the LocalParticipant too.\n   *\n   * Speaker updates are sent only to the publishing participant and their subscribers.\n   *\n   * args: (Array<[[Participant]]>)\n   */\n  RoomEvent[\"ActiveSpeakersChanged\"] = \"activeSpeakersChanged\";\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   *\n   * args: (prevMetadata: string, [[Participant]])\n   *\n   */\n  RoomEvent[\"ParticipantMetadataChanged\"] = \"participantMetadataChanged\";\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  RoomEvent[\"ParticipantNameChanged\"] = \"participantNameChanged\";\n  /**\n   * Participant attributes is an app-specific key value state to be pushed to\n   * all users.\n   * When a participant's attributes changed, this event will be emitted with the changed attributes and the participant\n   */\n  RoomEvent[\"ParticipantAttributesChanged\"] = \"participantAttributesChanged\";\n  /**\n   * Room metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateRoomMetadata is called to change a room's state,\n   * *all*  participants in the room will fire this event.\n   *\n   * args: (string)\n   */\n  RoomEvent[\"RoomMetadataChanged\"] = \"roomMetadataChanged\";\n  /**\n   * Data received from another participant.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, participant: [[Participant]], kind: [[DataPacket_Kind]], topic?: string)\n   */\n  RoomEvent[\"DataReceived\"] = \"dataReceived\";\n  /**\n   * SIP DTMF tones received from another participant.\n   *\n   * args: (participant: [[Participant]], dtmf: [[DataPacket_Kind]])\n   */\n  RoomEvent[\"SipDTMFReceived\"] = \"sipDTMFReceived\";\n  /**\n   * Transcription received from a participant's track.\n   * @beta\n   */\n  RoomEvent[\"TranscriptionReceived\"] = \"transcriptionReceived\";\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]], participant: [[Participant]])\n   */\n  RoomEvent[\"ConnectionQualityChanged\"] = \"connectionQualityChanged\";\n  /**\n   * StreamState indicates if a subscribed (remote) track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]],\n   *        participant: [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackStreamStateChanged\"] = \"trackStreamStateChanged\";\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.PermissionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackSubscriptionPermissionChanged\"] = \"trackSubscriptionPermissionChanged\";\n  /**\n   * One of subscribed tracks have changed its status for the current\n   * participant.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]],\n   *        participant: [[RemoteParticipant]])\n   */\n  RoomEvent[\"TrackSubscriptionStatusChanged\"] = \"trackSubscriptionStatusChanged\";\n  /**\n   * LiveKit will attempt to autoplay all audio tracks when you attach them to\n   * audio elements. However, if that fails, we'll notify you via AudioPlaybackStatusChanged.\n   * `Room.canPlaybackAudio` will indicate if audio playback is permitted.\n   */\n  RoomEvent[\"AudioPlaybackStatusChanged\"] = \"audioPlaybackChanged\";\n  /**\n   * LiveKit will attempt to autoplay all video tracks when you attach them to\n   * a video element. However, if that fails, we'll notify you via VideoPlaybackStatusChanged.\n   * Calling `room.startVideo()` in a user gesture event handler will resume the video playback.\n   */\n  RoomEvent[\"VideoPlaybackStatusChanged\"] = \"videoPlaybackChanged\";\n  /**\n   * When we have encountered an error while attempting to create a track.\n   * The errors take place in getUserMedia().\n   * Use MediaDeviceFailure.getFailure(error) to get the reason of failure.\n   * [[LocalParticipant.lastCameraError]] and [[LocalParticipant.lastMicrophoneError]]\n   * will indicate if it had an error while creating the audio or video track respectively.\n   *\n   * args: (error: Error)\n   */\n  RoomEvent[\"MediaDevicesError\"] = \"mediaDevicesError\";\n  /**\n   * A participant's permission has changed. Currently only fired on LocalParticipant.\n   * args: (prevPermissions: [[ParticipantPermission]], participant: [[Participant]])\n   */\n  RoomEvent[\"ParticipantPermissionsChanged\"] = \"participantPermissionsChanged\";\n  /**\n   * Signal connected, can publish tracks.\n   */\n  RoomEvent[\"SignalConnected\"] = \"signalConnected\";\n  /**\n   * Recording of a room has started/stopped. Room.isRecording will be updated too.\n   * args: (isRecording: boolean)\n   */\n  RoomEvent[\"RecordingStatusChanged\"] = \"recordingStatusChanged\";\n  RoomEvent[\"ParticipantEncryptionStatusChanged\"] = \"participantEncryptionStatusChanged\";\n  RoomEvent[\"EncryptionError\"] = \"encryptionError\";\n  /**\n   * Emits whenever the current buffer status of a data channel changes\n   * args: (isLow: boolean, kind: [[DataPacket_Kind]])\n   */\n  RoomEvent[\"DCBufferStatusChanged\"] = \"dcBufferStatusChanged\";\n  /**\n   * Triggered by a call to room.switchActiveDevice\n   * args: (kind: MediaDeviceKind, deviceId: string)\n   */\n  RoomEvent[\"ActiveDeviceChanged\"] = \"activeDeviceChanged\";\n})(RoomEvent || (RoomEvent = {}));\nvar ParticipantEvent;\n(function (ParticipantEvent) {\n  /**\n   * When a new track is published to room *after* the local\n   * participant has joined. It will not fire for tracks that are already published.\n   *\n   * A track published doesn't mean the participant has subscribed to it. It's\n   * simply reflecting the state of the room.\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  ParticipantEvent[\"TrackPublished\"] = \"trackPublished\";\n  /**\n   * Successfully subscribed to the [[RemoteParticipant]]'s track.\n   * This event will **always** fire as long as new tracks are ready for use.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  ParticipantEvent[\"TrackSubscribed\"] = \"trackSubscribed\";\n  /**\n   * Could not subscribe to a track\n   *\n   * args: (track sid)\n   */\n  ParticipantEvent[\"TrackSubscriptionFailed\"] = \"trackSubscriptionFailed\";\n  /**\n   * A [[RemoteParticipant]] has unpublished a track\n   *\n   * args: ([[RemoteTrackPublication]])\n   */\n  ParticipantEvent[\"TrackUnpublished\"] = \"trackUnpublished\";\n  /**\n   * A subscribed track is no longer available. Clients should listen to this\n   * event and ensure they detach tracks.\n   *\n   * args: ([[RemoteTrack]], [[RemoteTrackPublication]])\n   */\n  ParticipantEvent[\"TrackUnsubscribed\"] = \"trackUnsubscribed\";\n  /**\n   * A track that was muted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  ParticipantEvent[\"TrackMuted\"] = \"trackMuted\";\n  /**\n   * A track that was unmuted, fires on both [[RemoteParticipant]]s and [[LocalParticipant]]\n   *\n   * args: ([[TrackPublication]])\n   */\n  ParticipantEvent[\"TrackUnmuted\"] = \"trackUnmuted\";\n  /**\n   * A local track was published successfully. This event is helpful to know\n   * when to update your local UI with the newly published track.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  ParticipantEvent[\"LocalTrackPublished\"] = \"localTrackPublished\";\n  /**\n   * A local track was unpublished. This event is helpful to know when to remove\n   * the local track from your UI.\n   *\n   * When a user stops sharing their screen by pressing \"End\" on the browser UI,\n   * this event will also fire.\n   *\n   * args: ([[LocalTrackPublication]])\n   */\n  ParticipantEvent[\"LocalTrackUnpublished\"] = \"localTrackUnpublished\";\n  /**\n   * Participant metadata is a simple way for app-specific state to be pushed to\n   * all users.\n   * When RoomService.UpdateParticipantMetadata is called to change a participant's\n   * state, *all*  participants in the room will fire this event.\n   * To access the current metadata, see [[Participant.metadata]].\n   *\n   * args: (prevMetadata: string)\n   *\n   */\n  ParticipantEvent[\"ParticipantMetadataChanged\"] = \"participantMetadataChanged\";\n  /**\n   * Participant's display name changed\n   *\n   * args: (name: string, [[Participant]])\n   *\n   */\n  ParticipantEvent[\"ParticipantNameChanged\"] = \"participantNameChanged\";\n  /**\n   * Data received from this participant as sender.\n   * Data packets provides the ability to use LiveKit to send/receive arbitrary payloads.\n   * All participants in the room will receive the messages sent to the room.\n   *\n   * args: (payload: Uint8Array, kind: [[DataPacket_Kind]])\n   */\n  ParticipantEvent[\"DataReceived\"] = \"dataReceived\";\n  /**\n   * SIP DTMF tones received from this participant as sender.\n   *\n   * args: (dtmf: [[DataPacket_Kind]])\n   */\n  ParticipantEvent[\"SipDTMFReceived\"] = \"sipDTMFReceived\";\n  /**\n   * Transcription received from this participant as data source.\n   * @beta\n   */\n  ParticipantEvent[\"TranscriptionReceived\"] = \"transcriptionReceived\";\n  /**\n   * Has speaking status changed for the current participant\n   *\n   * args: (speaking: boolean)\n   */\n  ParticipantEvent[\"IsSpeakingChanged\"] = \"isSpeakingChanged\";\n  /**\n   * Connection quality was changed for a Participant. It'll receive updates\n   * from the local participant, as well as any [[RemoteParticipant]]s that we are\n   * subscribed to.\n   *\n   * args: (connectionQuality: [[ConnectionQuality]])\n   */\n  ParticipantEvent[\"ConnectionQualityChanged\"] = \"connectionQualityChanged\";\n  /**\n   * StreamState indicates if a subscribed track has been paused by the SFU\n   * (typically this happens because of subscriber's bandwidth constraints)\n   *\n   * When bandwidth conditions allow, the track will be resumed automatically.\n   * TrackStreamStateChanged will also be emitted when that happens.\n   *\n   * args: (pub: [[RemoteTrackPublication]], streamState: [[Track.StreamState]])\n   */\n  ParticipantEvent[\"TrackStreamStateChanged\"] = \"trackStreamStateChanged\";\n  /**\n   * One of subscribed tracks have changed its permissions for the current\n   * participant. If permission was revoked, then the track will no longer\n   * be subscribed. If permission was granted, a TrackSubscribed event will\n   * be emitted.\n   *\n   * args: (pub: [[RemoteTrackPublication]],\n   *        status: [[TrackPublication.SubscriptionStatus]])\n   */\n  ParticipantEvent[\"TrackSubscriptionPermissionChanged\"] = \"trackSubscriptionPermissionChanged\";\n  /**\n   * One of the remote participants publications has changed its subscription status.\n   *\n   */\n  ParticipantEvent[\"TrackSubscriptionStatusChanged\"] = \"trackSubscriptionStatusChanged\";\n  // fired only on LocalParticipant\n  /** @internal */\n  ParticipantEvent[\"MediaDevicesError\"] = \"mediaDevicesError\";\n  // fired only on LocalParticipant\n  /** @internal */\n  ParticipantEvent[\"AudioStreamAcquired\"] = \"audioStreamAcquired\";\n  /**\n   * A participant's permission has changed. Currently only fired on LocalParticipant.\n   * args: (prevPermissions: [[ParticipantPermission]])\n   */\n  ParticipantEvent[\"ParticipantPermissionsChanged\"] = \"participantPermissionsChanged\";\n  /** @internal */\n  ParticipantEvent[\"PCTrackAdded\"] = \"pcTrackAdded\";\n  /**\n   * Participant attributes is an app-specific key value state to be pushed to\n   * all users.\n   * When a participant's attributes changed, this event will be emitted with the changed attributes\n   */\n  ParticipantEvent[\"AttributesChanged\"] = \"attributesChanged\";\n})(ParticipantEvent || (ParticipantEvent = {}));\n/** @internal */\nvar EngineEvent;\n(function (EngineEvent) {\n  EngineEvent[\"TransportsCreated\"] = \"transportsCreated\";\n  EngineEvent[\"Connected\"] = \"connected\";\n  EngineEvent[\"Disconnected\"] = \"disconnected\";\n  EngineEvent[\"Resuming\"] = \"resuming\";\n  EngineEvent[\"Resumed\"] = \"resumed\";\n  EngineEvent[\"Restarting\"] = \"restarting\";\n  EngineEvent[\"Restarted\"] = \"restarted\";\n  EngineEvent[\"SignalResumed\"] = \"signalResumed\";\n  EngineEvent[\"SignalRestarted\"] = \"signalRestarted\";\n  EngineEvent[\"Closing\"] = \"closing\";\n  EngineEvent[\"MediaTrackAdded\"] = \"mediaTrackAdded\";\n  EngineEvent[\"ActiveSpeakersUpdate\"] = \"activeSpeakersUpdate\";\n  EngineEvent[\"DataPacketReceived\"] = \"dataPacketReceived\";\n  EngineEvent[\"RTPVideoMapUpdate\"] = \"rtpVideoMapUpdate\";\n  EngineEvent[\"DCBufferStatusChanged\"] = \"dcBufferStatusChanged\";\n  EngineEvent[\"ParticipantUpdate\"] = \"participantUpdate\";\n  EngineEvent[\"RoomUpdate\"] = \"roomUpdate\";\n  EngineEvent[\"SpeakersChanged\"] = \"speakersChanged\";\n  EngineEvent[\"StreamStateChanged\"] = \"streamStateChanged\";\n  EngineEvent[\"ConnectionQualityUpdate\"] = \"connectionQualityUpdate\";\n  EngineEvent[\"SubscriptionError\"] = \"subscriptionError\";\n  EngineEvent[\"SubscriptionPermissionUpdate\"] = \"subscriptionPermissionUpdate\";\n  EngineEvent[\"RemoteMute\"] = \"remoteMute\";\n  EngineEvent[\"SubscribedQualityUpdate\"] = \"subscribedQualityUpdate\";\n  EngineEvent[\"LocalTrackUnpublished\"] = \"localTrackUnpublished\";\n  EngineEvent[\"LocalTrackSubscribed\"] = \"localTrackSubscribed\";\n  EngineEvent[\"Offline\"] = \"offline\";\n  EngineEvent[\"SignalRequestResponse\"] = \"signalRequestResponse\";\n})(EngineEvent || (EngineEvent = {}));\nvar TrackEvent;\n(function (TrackEvent) {\n  TrackEvent[\"Message\"] = \"message\";\n  TrackEvent[\"Muted\"] = \"muted\";\n  TrackEvent[\"Unmuted\"] = \"unmuted\";\n  /**\n   * Only fires on LocalTracks\n   */\n  TrackEvent[\"Restarted\"] = \"restarted\";\n  TrackEvent[\"Ended\"] = \"ended\";\n  TrackEvent[\"Subscribed\"] = \"subscribed\";\n  TrackEvent[\"Unsubscribed\"] = \"unsubscribed\";\n  /** @internal */\n  TrackEvent[\"UpdateSettings\"] = \"updateSettings\";\n  /** @internal */\n  TrackEvent[\"UpdateSubscription\"] = \"updateSubscription\";\n  /** @internal */\n  TrackEvent[\"AudioPlaybackStarted\"] = \"audioPlaybackStarted\";\n  /** @internal */\n  TrackEvent[\"AudioPlaybackFailed\"] = \"audioPlaybackFailed\";\n  /**\n   * @internal\n   * Only fires on LocalAudioTrack instances\n   */\n  TrackEvent[\"AudioSilenceDetected\"] = \"audioSilenceDetected\";\n  /** @internal */\n  TrackEvent[\"VisibilityChanged\"] = \"visibilityChanged\";\n  /** @internal */\n  TrackEvent[\"VideoDimensionsChanged\"] = \"videoDimensionsChanged\";\n  /** @internal */\n  TrackEvent[\"VideoPlaybackStarted\"] = \"videoPlaybackStarted\";\n  /** @internal */\n  TrackEvent[\"VideoPlaybackFailed\"] = \"videoPlaybackFailed\";\n  /** @internal */\n  TrackEvent[\"ElementAttached\"] = \"elementAttached\";\n  /** @internal */\n  TrackEvent[\"ElementDetached\"] = \"elementDetached\";\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  TrackEvent[\"UpstreamPaused\"] = \"upstreamPaused\";\n  /**\n   * @internal\n   * Only fires on LocalTracks\n   */\n  TrackEvent[\"UpstreamResumed\"] = \"upstreamResumed\";\n  /**\n   * @internal\n   * Fires on RemoteTrackPublication\n   */\n  TrackEvent[\"SubscriptionPermissionChanged\"] = \"subscriptionPermissionChanged\";\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  TrackEvent[\"SubscriptionStatusChanged\"] = \"subscriptionStatusChanged\";\n  /**\n   * Fires on RemoteTrackPublication\n   */\n  TrackEvent[\"SubscriptionFailed\"] = \"subscriptionFailed\";\n  /**\n   * @internal\n   */\n  TrackEvent[\"TrackProcessorUpdate\"] = \"trackProcessorUpdate\";\n  /**\n   * @internal\n   */\n  TrackEvent[\"AudioTrackFeatureUpdate\"] = \"audioTrackFeatureUpdate\";\n  /**\n   * @beta\n   */\n  TrackEvent[\"TranscriptionReceived\"] = \"transcriptionReceived\";\n  /**\n   * @experimental\n   */\n  TrackEvent[\"TimeSyncUpdate\"] = \"timeSyncUpdate\";\n})(TrackEvent || (TrackEvent = {}));\n\nfunction r(r, e, n) {\n  var i, t, o;\n  void 0 === e && (e = 50), void 0 === n && (n = {});\n  var a = null != (i = n.isImmediate) && i,\n    u = null != (t = n.callback) && t,\n    c = n.maxWait,\n    v = Date.now(),\n    l = [];\n  function f() {\n    if (void 0 !== c) {\n      var r = Date.now() - v;\n      if (r + e >= c) return c - r;\n    }\n    return e;\n  }\n  var d = function () {\n    var e = [].slice.call(arguments),\n      n = this;\n    return new Promise(function (i, t) {\n      var c = a && void 0 === o;\n      if (void 0 !== o && clearTimeout(o), o = setTimeout(function () {\n        if (o = void 0, v = Date.now(), !a) {\n          var i = r.apply(n, e);\n          u && u(i), l.forEach(function (r) {\n            return (0, r.resolve)(i);\n          }), l = [];\n        }\n      }, f()), c) {\n        var d = r.apply(n, e);\n        return u && u(d), i(d);\n      }\n      l.push({\n        resolve: i,\n        reject: t\n      });\n    });\n  };\n  return d.cancel = function (r) {\n    void 0 !== o && clearTimeout(o), l.forEach(function (e) {\n      return (0, e.reject)(r);\n    }), l = [];\n  }, d;\n}\n\n// tiny, simplified version of https://github.com/lancedikson/bowser/blob/master/src/parser-browsers.js\n// reduced to only differentiate Chrome(ium) based browsers / Firefox / Safari\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\nlet browserDetails;\n/**\n * @internal\n */\nfunction getBrowser(userAgent) {\n  let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (typeof userAgent === 'undefined' && typeof navigator === 'undefined') {\n    return;\n  }\n  const ua = (userAgent !== null && userAgent !== void 0 ? userAgent : navigator.userAgent).toLowerCase();\n  if (browserDetails === undefined || force) {\n    const browser = browsersList.find(_ref => {\n      let {\n        test\n      } = _ref;\n      return test.test(ua);\n    });\n    browserDetails = browser === null || browser === void 0 ? void 0 : browser.describe(ua);\n  }\n  return browserDetails;\n}\nconst browsersList = [{\n  test: /firefox|iceweasel|fxios/i,\n  describe(ua) {\n    const browser = {\n      name: 'Firefox',\n      version: getMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua),\n      os: ua.toLowerCase().includes('fxios') ? 'iOS' : undefined,\n      osVersion: getOSVersion(ua)\n    };\n    return browser;\n  }\n}, {\n  test: /chrom|crios|crmo/i,\n  describe(ua) {\n    const browser = {\n      name: 'Chrome',\n      version: getMatch(/(?:chrome|chromium|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua),\n      os: ua.toLowerCase().includes('crios') ? 'iOS' : undefined,\n      osVersion: getOSVersion(ua)\n    };\n    return browser;\n  }\n}, /* Safari */\n{\n  test: /safari|applewebkit/i,\n  describe(ua) {\n    const browser = {\n      name: 'Safari',\n      version: getMatch(commonVersionIdentifier, ua),\n      os: ua.includes('mobile/') ? 'iOS' : 'macOS',\n      osVersion: getOSVersion(ua)\n    };\n    return browser;\n  }\n}];\nfunction getMatch(exp, ua) {\n  let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  const match = ua.match(exp);\n  return match && match.length >= id && match[id] || '';\n}\nfunction getOSVersion(ua) {\n  return ua.includes('mac os') ? getMatch(/\\(.+?(\\d+_\\d+(:?_\\d+)?)/, ua, 1).replace(/_/g, '.') : undefined;\n}\n\nvar version$1 = \"2.5.0\";\n\nconst version = version$1;\nconst protocolVersion = 15;\n\n/**\n * Timers that can be overridden with platform specific implementations\n * that ensure that they are fired. These should be used when it is critical\n * that the timer fires on time.\n */\nclass CriticalTimers {}\n// eslint-disable-next-line @typescript-eslint/no-implied-eval\nCriticalTimers.setTimeout = function () {\n  return setTimeout(...arguments);\n};\n// eslint-disable-next-line @typescript-eslint/no-implied-eval\nCriticalTimers.setInterval = function () {\n  return setInterval(...arguments);\n};\nCriticalTimers.clearTimeout = function () {\n  return clearTimeout(...arguments);\n};\nCriticalTimers.clearInterval = function () {\n  return clearInterval(...arguments);\n};\n\nclass VideoPreset {\n  constructor(widthOrOptions, height, maxBitrate, maxFramerate, priority) {\n    if (typeof widthOrOptions === 'object') {\n      this.width = widthOrOptions.width;\n      this.height = widthOrOptions.height;\n      this.aspectRatio = widthOrOptions.aspectRatio;\n      this.encoding = {\n        maxBitrate: widthOrOptions.maxBitrate,\n        maxFramerate: widthOrOptions.maxFramerate,\n        priority: widthOrOptions.priority\n      };\n    } else if (height !== undefined && maxBitrate !== undefined) {\n      this.width = widthOrOptions;\n      this.height = height;\n      this.aspectRatio = widthOrOptions / height;\n      this.encoding = {\n        maxBitrate,\n        maxFramerate,\n        priority\n      };\n    } else {\n      throw new TypeError('Unsupported options: provide at least width, height and maxBitrate');\n    }\n  }\n  get resolution() {\n    return {\n      width: this.width,\n      height: this.height,\n      frameRate: this.encoding.maxFramerate,\n      aspectRatio: this.aspectRatio\n    };\n  }\n}\nconst backupCodecs = ['vp8', 'h264'];\nconst videoCodecs = ['vp8', 'h264', 'vp9', 'av1'];\nfunction isBackupCodec(codec) {\n  return !!backupCodecs.find(backup => backup === codec);\n}\nvar AudioPresets;\n(function (AudioPresets) {\n  AudioPresets.telephone = {\n    maxBitrate: 12000\n  };\n  AudioPresets.speech = {\n    maxBitrate: 20000\n  };\n  AudioPresets.music = {\n    maxBitrate: 32000\n  };\n  AudioPresets.musicStereo = {\n    maxBitrate: 48000\n  };\n  AudioPresets.musicHighQuality = {\n    maxBitrate: 64000\n  };\n  AudioPresets.musicHighQualityStereo = {\n    maxBitrate: 96000\n  };\n})(AudioPresets || (AudioPresets = {}));\n/**\n * Sane presets for video resolution/encoding\n */\nconst VideoPresets = {\n  h90: new VideoPreset(160, 90, 90000, 20),\n  h180: new VideoPreset(320, 180, 160000, 20),\n  h216: new VideoPreset(384, 216, 180000, 20),\n  h360: new VideoPreset(640, 360, 450000, 20),\n  h540: new VideoPreset(960, 540, 800000, 25),\n  h720: new VideoPreset(1280, 720, 1700000, 30),\n  h1080: new VideoPreset(1920, 1080, 3000000, 30),\n  h1440: new VideoPreset(2560, 1440, 5000000, 30),\n  h2160: new VideoPreset(3840, 2160, 8000000, 30)\n};\n/**\n * Four by three presets\n */\nconst VideoPresets43 = {\n  h120: new VideoPreset(160, 120, 70000, 20),\n  h180: new VideoPreset(240, 180, 125000, 20),\n  h240: new VideoPreset(320, 240, 140000, 20),\n  h360: new VideoPreset(480, 360, 330000, 20),\n  h480: new VideoPreset(640, 480, 500000, 20),\n  h540: new VideoPreset(720, 540, 600000, 25),\n  h720: new VideoPreset(960, 720, 1300000, 30),\n  h1080: new VideoPreset(1440, 1080, 2300000, 30),\n  h1440: new VideoPreset(1920, 1440, 3800000, 30)\n};\nconst ScreenSharePresets = {\n  h360fps3: new VideoPreset(640, 360, 200000, 3, 'medium'),\n  h360fps15: new VideoPreset(640, 360, 400000, 15, 'medium'),\n  h720fps5: new VideoPreset(1280, 720, 800000, 5, 'medium'),\n  h720fps15: new VideoPreset(1280, 720, 1500000, 15, 'medium'),\n  h720fps30: new VideoPreset(1280, 720, 2000000, 30, 'medium'),\n  h1080fps15: new VideoPreset(1920, 1080, 2500000, 15, 'medium'),\n  h1080fps30: new VideoPreset(1920, 1080, 5000000, 30, 'medium'),\n  // original resolution, without resizing\n  original: new VideoPreset(0, 0, 7000000, 30, 'medium')\n};\n\nfunction cloneDeep(value) {\n  if (typeof value === 'undefined') {\n    return;\n  }\n  if (typeof structuredClone === 'function') {\n    return structuredClone(value);\n  } else {\n    return JSON.parse(JSON.stringify(value));\n  }\n}\n\nconst BACKGROUND_REACTION_DELAY = 5000;\n// keep old audio elements when detached, we would re-use them since on iOS\n// Safari tracks which audio elements have been \"blessed\" by the user.\nconst recycledElements = [];\nvar VideoQuality;\n(function (VideoQuality) {\n  VideoQuality[VideoQuality[\"LOW\"] = 0] = \"LOW\";\n  VideoQuality[VideoQuality[\"MEDIUM\"] = 1] = \"MEDIUM\";\n  VideoQuality[VideoQuality[\"HIGH\"] = 2] = \"HIGH\";\n})(VideoQuality || (VideoQuality = {}));\nclass Track extends eventsExports.EventEmitter {\n  constructor(mediaTrack, kind) {\n    let loggerOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _a;\n    super();\n    this.attachedElements = [];\n    this.isMuted = false;\n    /**\n     * indicates current state of stream, it'll indicate `paused` if the track\n     * has been paused by congestion controller\n     */\n    this.streamState = Track.StreamState.Active;\n    this.isInBackground = false;\n    this._currentBitrate = 0;\n    this.log = livekitLogger;\n    this.appVisibilityChangedListener = () => {\n      if (this.backgroundTimeout) {\n        clearTimeout(this.backgroundTimeout);\n      }\n      // delay app visibility update if it goes to hidden\n      // update immediately if it comes back to focus\n      if (document.visibilityState === 'hidden') {\n        this.backgroundTimeout = setTimeout(() => this.handleAppVisibilityChanged(), BACKGROUND_REACTION_DELAY);\n      } else {\n        this.handleAppVisibilityChanged();\n      }\n    };\n    this.log = getLogger((_a = loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Track);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this._mediaStreamTrack = mediaTrack;\n    this._mediaStreamID = mediaTrack.id;\n    this.source = Track.Source.Unknown;\n  }\n  get logContext() {\n    var _a;\n    return Object.assign(Object.assign({}, (_a = this.loggerContextCb) === null || _a === void 0 ? void 0 : _a.call(this)), getLogContextFromTrack(this));\n  }\n  /** current receive bits per second */\n  get currentBitrate() {\n    return this._currentBitrate;\n  }\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n  /**\n   * @internal\n   * used for keep mediaStream's first id, since it's id might change\n   * if we disable/enable a track\n   */\n  get mediaStreamID() {\n    return this._mediaStreamID;\n  }\n  attach(element) {\n    let elementType = 'audio';\n    if (this.kind === Track.Kind.Video) {\n      elementType = 'video';\n    }\n    if (this.attachedElements.length === 0 && this.kind === Track.Kind.Video) {\n      this.addAppVisibilityListener();\n    }\n    if (!element) {\n      if (elementType === 'audio') {\n        recycledElements.forEach(e => {\n          if (e.parentElement === null && !element) {\n            element = e;\n          }\n        });\n        if (element) {\n          // remove it from pool\n          recycledElements.splice(recycledElements.indexOf(element), 1);\n        }\n      }\n      if (!element) {\n        element = document.createElement(elementType);\n      }\n    }\n    if (!this.attachedElements.includes(element)) {\n      this.attachedElements.push(element);\n    }\n    // even if we believe it's already attached to the element, it's possible\n    // the element's srcObject was set to something else out of band.\n    // we'll want to re-attach it in that case\n    attachToElement(this.mediaStreamTrack, element);\n    // handle auto playback failures\n    const allMediaStreamTracks = element.srcObject.getTracks();\n    const hasAudio = allMediaStreamTracks.some(tr => tr.kind === 'audio');\n    // manually play media to detect auto playback status\n    element.play().then(() => {\n      this.emit(hasAudio ? TrackEvent.AudioPlaybackStarted : TrackEvent.VideoPlaybackStarted);\n    }).catch(e => {\n      if (e.name === 'NotAllowedError') {\n        this.emit(hasAudio ? TrackEvent.AudioPlaybackFailed : TrackEvent.VideoPlaybackFailed, e);\n      } else if (e.name === 'AbortError') {\n        // commonly triggered by another `play` request, only log for debugging purposes\n        livekitLogger.debug(\"\".concat(hasAudio ? 'audio' : 'video', \" playback aborted, likely due to new play request\"));\n      } else {\n        livekitLogger.warn(\"could not playback \".concat(hasAudio ? 'audio' : 'video'), e);\n      }\n      // If audio playback isn't allowed make sure we still play back the video\n      if (hasAudio && element && allMediaStreamTracks.some(tr => tr.kind === 'video') && e.name === 'NotAllowedError') {\n        element.muted = true;\n        element.play().catch(() => {\n          // catch for Safari, exceeded options at this point to automatically play the media element\n        });\n      }\n    });\n    this.emit(TrackEvent.ElementAttached, element);\n    return element;\n  }\n  detach(element) {\n    try {\n      // detach from a single element\n      if (element) {\n        detachTrack(this.mediaStreamTrack, element);\n        const idx = this.attachedElements.indexOf(element);\n        if (idx >= 0) {\n          this.attachedElements.splice(idx, 1);\n          this.recycleElement(element);\n          this.emit(TrackEvent.ElementDetached, element);\n        }\n        return element;\n      }\n      const detached = [];\n      this.attachedElements.forEach(elm => {\n        detachTrack(this.mediaStreamTrack, elm);\n        detached.push(elm);\n        this.recycleElement(elm);\n        this.emit(TrackEvent.ElementDetached, elm);\n      });\n      // remove all tracks\n      this.attachedElements = [];\n      return detached;\n    } finally {\n      if (this.attachedElements.length === 0) {\n        this.removeAppVisibilityListener();\n      }\n    }\n  }\n  stop() {\n    this.stopMonitor();\n    this._mediaStreamTrack.stop();\n  }\n  enable() {\n    this._mediaStreamTrack.enabled = true;\n  }\n  disable() {\n    this._mediaStreamTrack.enabled = false;\n  }\n  /* @internal */\n  stopMonitor() {\n    if (this.monitorInterval) {\n      clearInterval(this.monitorInterval);\n    }\n    if (this.timeSyncHandle) {\n      cancelAnimationFrame(this.timeSyncHandle);\n    }\n  }\n  /** @internal */\n  updateLoggerOptions(loggerOptions) {\n    if (loggerOptions.loggerName) {\n      this.log = getLogger(loggerOptions.loggerName);\n    }\n    if (loggerOptions.loggerContextCb) {\n      this.loggerContextCb = loggerOptions.loggerContextCb;\n    }\n  }\n  recycleElement(element) {\n    if (element instanceof HTMLAudioElement) {\n      // we only need to re-use a single element\n      let shouldCache = true;\n      element.pause();\n      recycledElements.forEach(e => {\n        if (!e.parentElement) {\n          shouldCache = false;\n        }\n      });\n      if (shouldCache) {\n        recycledElements.push(element);\n      }\n    }\n  }\n  handleAppVisibilityChanged() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.isInBackground = document.visibilityState === 'hidden';\n      if (!this.isInBackground && this.kind === Track.Kind.Video) {\n        setTimeout(() => this.attachedElements.forEach(el => el.play().catch(() => {\n          /** catch clause necessary for Safari */\n        })), 0);\n      }\n    });\n  }\n  addAppVisibilityListener() {\n    if (isWeb()) {\n      this.isInBackground = document.visibilityState === 'hidden';\n      document.addEventListener('visibilitychange', this.appVisibilityChangedListener);\n    } else {\n      this.isInBackground = false;\n    }\n  }\n  removeAppVisibilityListener() {\n    if (isWeb()) {\n      document.removeEventListener('visibilitychange', this.appVisibilityChangedListener);\n    }\n  }\n}\nfunction attachToElement(track, element) {\n  let mediaStream;\n  if (element.srcObject instanceof MediaStream) {\n    mediaStream = element.srcObject;\n  } else {\n    mediaStream = new MediaStream();\n  }\n  // check if track matches existing track\n  let existingTracks;\n  if (track.kind === 'audio') {\n    existingTracks = mediaStream.getAudioTracks();\n  } else {\n    existingTracks = mediaStream.getVideoTracks();\n  }\n  if (!existingTracks.includes(track)) {\n    existingTracks.forEach(et => {\n      mediaStream.removeTrack(et);\n    });\n    mediaStream.addTrack(track);\n  }\n  if (!isSafari() || !(element instanceof HTMLVideoElement)) {\n    // when in low power mode (applies to both macOS and iOS), Safari will show a play/pause overlay\n    // when a video starts that has the `autoplay` attribute is set.\n    // we work around this by _not_ setting the autoplay attribute on safari and instead call `setTimeout(() => el.play(),0)` further down\n    element.autoplay = true;\n  }\n  // In case there are no audio tracks present on the mediastream, we set the element as muted to ensure autoplay works\n  element.muted = mediaStream.getAudioTracks().length === 0;\n  if (element instanceof HTMLVideoElement) {\n    element.playsInline = true;\n  }\n  // avoid flicker\n  if (element.srcObject !== mediaStream) {\n    element.srcObject = mediaStream;\n    if ((isSafari() || isFireFox()) && element instanceof HTMLVideoElement) {\n      // Firefox also has a timing issue where video doesn't actually get attached unless\n      // performed out-of-band\n      // Safari 15 has a bug where in certain layouts, video element renders\n      // black until the page is resized or other changes take place.\n      // Resetting the src triggers it to render.\n      // https://developer.apple.com/forums/thread/690523\n      setTimeout(() => {\n        element.srcObject = mediaStream;\n        // Safari 15 sometimes fails to start a video\n        // when the window is backgrounded before the first frame is drawn\n        // manually calling play here seems to fix that\n        element.play().catch(() => {\n          /** do nothing */\n        });\n      }, 0);\n    }\n  }\n}\n/** @internal */\nfunction detachTrack(track, element) {\n  if (element.srcObject instanceof MediaStream) {\n    const mediaStream = element.srcObject;\n    mediaStream.removeTrack(track);\n    if (mediaStream.getTracks().length > 0) {\n      element.srcObject = mediaStream;\n    } else {\n      element.srcObject = null;\n    }\n  }\n}\n(function (Track) {\n  let Kind;\n  (function (Kind) {\n    Kind[\"Audio\"] = \"audio\";\n    Kind[\"Video\"] = \"video\";\n    Kind[\"Unknown\"] = \"unknown\";\n  })(Kind = Track.Kind || (Track.Kind = {}));\n  let Source;\n  (function (Source) {\n    Source[\"Camera\"] = \"camera\";\n    Source[\"Microphone\"] = \"microphone\";\n    Source[\"ScreenShare\"] = \"screen_share\";\n    Source[\"ScreenShareAudio\"] = \"screen_share_audio\";\n    Source[\"Unknown\"] = \"unknown\";\n  })(Source = Track.Source || (Track.Source = {}));\n  let StreamState$1;\n  (function (StreamState) {\n    StreamState[\"Active\"] = \"active\";\n    StreamState[\"Paused\"] = \"paused\";\n    StreamState[\"Unknown\"] = \"unknown\";\n  })(StreamState$1 = Track.StreamState || (Track.StreamState = {}));\n  /** @internal */\n  function kindToProto(k) {\n    switch (k) {\n      case Kind.Audio:\n        return TrackType.AUDIO;\n      case Kind.Video:\n        return TrackType.VIDEO;\n      default:\n        // FIXME this was UNRECOGNIZED before\n        return TrackType.DATA;\n    }\n  }\n  Track.kindToProto = kindToProto;\n  /** @internal */\n  function kindFromProto(t) {\n    switch (t) {\n      case TrackType.AUDIO:\n        return Kind.Audio;\n      case TrackType.VIDEO:\n        return Kind.Video;\n      default:\n        return Kind.Unknown;\n    }\n  }\n  Track.kindFromProto = kindFromProto;\n  /** @internal */\n  function sourceToProto(s) {\n    switch (s) {\n      case Source.Camera:\n        return TrackSource.CAMERA;\n      case Source.Microphone:\n        return TrackSource.MICROPHONE;\n      case Source.ScreenShare:\n        return TrackSource.SCREEN_SHARE;\n      case Source.ScreenShareAudio:\n        return TrackSource.SCREEN_SHARE_AUDIO;\n      default:\n        return TrackSource.UNKNOWN;\n    }\n  }\n  Track.sourceToProto = sourceToProto;\n  /** @internal */\n  function sourceFromProto(s) {\n    switch (s) {\n      case TrackSource.CAMERA:\n        return Source.Camera;\n      case TrackSource.MICROPHONE:\n        return Source.Microphone;\n      case TrackSource.SCREEN_SHARE:\n        return Source.ScreenShare;\n      case TrackSource.SCREEN_SHARE_AUDIO:\n        return Source.ScreenShareAudio;\n      default:\n        return Source.Unknown;\n    }\n  }\n  Track.sourceFromProto = sourceFromProto;\n  /** @internal */\n  function streamStateFromProto(s) {\n    switch (s) {\n      case StreamState.ACTIVE:\n        return StreamState$1.Active;\n      case StreamState.PAUSED:\n        return StreamState$1.Paused;\n      default:\n        return StreamState$1.Unknown;\n    }\n  }\n  Track.streamStateFromProto = streamStateFromProto;\n})(Track || (Track = {}));\n\nfunction mergeDefaultOptions(options, audioDefaults, videoDefaults) {\n  var _a;\n  const opts = (_a = cloneDeep(options)) !== null && _a !== void 0 ? _a : {};\n  if (opts.audio === true) opts.audio = {};\n  if (opts.video === true) opts.video = {};\n  // use defaults\n  if (opts.audio) {\n    mergeObjectWithoutOverwriting(opts.audio, audioDefaults);\n  }\n  if (opts.video) {\n    mergeObjectWithoutOverwriting(opts.video, videoDefaults);\n  }\n  return opts;\n}\nfunction mergeObjectWithoutOverwriting(mainObject, objectToMerge) {\n  Object.keys(objectToMerge).forEach(key => {\n    if (mainObject[key] === undefined) mainObject[key] = objectToMerge[key];\n  });\n  return mainObject;\n}\nfunction constraintsForOptions(options) {\n  const constraints = {};\n  if (options.video) {\n    // default video options\n    if (typeof options.video === 'object') {\n      const videoOptions = {};\n      const target = videoOptions;\n      const source = options.video;\n      Object.keys(source).forEach(key => {\n        switch (key) {\n          case 'resolution':\n            // flatten VideoResolution fields\n            mergeObjectWithoutOverwriting(target, source.resolution);\n            break;\n          default:\n            target[key] = source[key];\n        }\n      });\n      constraints.video = videoOptions;\n    } else {\n      constraints.video = options.video;\n    }\n  } else {\n    constraints.video = false;\n  }\n  if (options.audio) {\n    if (typeof options.audio === 'object') {\n      constraints.audio = options.audio;\n    } else {\n      constraints.audio = true;\n    }\n  } else {\n    constraints.audio = false;\n  }\n  return constraints;\n}\n/**\n * This function detects silence on a given [[Track]] instance.\n * Returns true if the track seems to be entirely silent.\n */\nfunction detectSilence(track_1) {\n  return __awaiter(this, arguments, void 0, function (track) {\n    let timeOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n    return function* () {\n      const ctx = getNewAudioContext();\n      if (ctx) {\n        const analyser = ctx.createAnalyser();\n        analyser.fftSize = 2048;\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        const source = ctx.createMediaStreamSource(new MediaStream([track.mediaStreamTrack]));\n        source.connect(analyser);\n        yield sleep(timeOffset);\n        analyser.getByteTimeDomainData(dataArray);\n        const someNoise = dataArray.some(sample => sample !== 128 && sample !== 0);\n        ctx.close();\n        return !someNoise;\n      }\n      return false;\n    }();\n  });\n}\n/**\n * @internal\n */\nfunction getNewAudioContext() {\n  const AudioContext =\n  // @ts-ignore\n  typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  if (AudioContext) {\n    return new AudioContext({\n      latencyHint: 'interactive'\n    });\n  }\n}\n/**\n * @internal\n */\nfunction sourceToKind(source) {\n  if (source === Track.Source.Microphone) {\n    return 'audioinput';\n  } else if (source === Track.Source.Camera) {\n    return 'videoinput';\n  } else {\n    return undefined;\n  }\n}\n/**\n * @internal\n */\nfunction screenCaptureToDisplayMediaStreamOptions(options) {\n  var _a, _b;\n  let videoConstraints = (_a = options.video) !== null && _a !== void 0 ? _a : true;\n  // treat 0 as uncapped\n  if (options.resolution && options.resolution.width > 0 && options.resolution.height > 0) {\n    videoConstraints = typeof videoConstraints === 'boolean' ? {} : videoConstraints;\n    if (isSafari()) {\n      videoConstraints = Object.assign(Object.assign({}, videoConstraints), {\n        width: {\n          max: options.resolution.width\n        },\n        height: {\n          max: options.resolution.height\n        },\n        frameRate: options.resolution.frameRate\n      });\n    } else {\n      videoConstraints = Object.assign(Object.assign({}, videoConstraints), {\n        width: {\n          ideal: options.resolution.width\n        },\n        height: {\n          ideal: options.resolution.height\n        },\n        frameRate: options.resolution.frameRate\n      });\n    }\n  }\n  return {\n    audio: (_b = options.audio) !== null && _b !== void 0 ? _b : false,\n    video: videoConstraints,\n    // @ts-expect-error support for experimental display media features\n    controller: options.controller,\n    selfBrowserSurface: options.selfBrowserSurface,\n    surfaceSwitching: options.surfaceSwitching,\n    systemAudio: options.systemAudio,\n    preferCurrentTab: options.preferCurrentTab\n  };\n}\nfunction mimeTypeToVideoCodecString(mimeType) {\n  const codec = mimeType.split('/')[1].toLowerCase();\n  if (!videoCodecs.includes(codec)) {\n    throw Error(\"Video codec not supported: \".concat(codec));\n  }\n  return codec;\n}\nfunction getTrackPublicationInfo(tracks) {\n  const infos = [];\n  tracks.forEach(track => {\n    if (track.track !== undefined) {\n      infos.push(new TrackPublishedResponse({\n        cid: track.track.mediaStreamID,\n        track: track.trackInfo\n      }));\n    }\n  });\n  return infos;\n}\nfunction getLogContextFromTrack(track) {\n  if (track instanceof Track) {\n    return {\n      trackID: track.sid,\n      source: track.source,\n      muted: track.isMuted,\n      enabled: track.mediaStreamTrack.enabled,\n      kind: track.kind,\n      streamID: track.mediaStreamID,\n      streamTrackID: track.mediaStreamTrack.id\n    };\n  } else {\n    return {\n      trackID: track.trackSid,\n      enabled: track.isEnabled,\n      muted: track.isMuted,\n      trackInfo: Object.assign({\n        mimeType: track.mimeType,\n        name: track.trackName,\n        encrypted: track.isEncrypted,\n        kind: track.kind,\n        source: track.source\n      }, track.track ? getLogContextFromTrack(track.track) : {})\n    };\n  }\n}\nfunction supportsSynchronizationSources() {\n  return typeof RTCRtpReceiver !== 'undefined' && 'getSynchronizationSources' in RTCRtpReceiver;\n}\nfunction diffAttributes(oldValues, newValues) {\n  var _a;\n  if (oldValues === undefined) {\n    oldValues = {};\n  }\n  if (newValues === undefined) {\n    newValues = {};\n  }\n  const allKeys = [...Object.keys(newValues), ...Object.keys(oldValues)];\n  const diff = {};\n  for (const key of allKeys) {\n    if (oldValues[key] !== newValues[key]) {\n      diff[key] = (_a = newValues[key]) !== null && _a !== void 0 ? _a : '';\n    }\n  }\n  return diff;\n}\n\nconst separator = '|';\nconst ddExtensionURI = 'https://aomediacodec.github.io/av1-rtp-spec/#dependency-descriptor-rtp-header-extension';\nfunction unpackStreamId(packed) {\n  const parts = packed.split(separator);\n  if (parts.length > 1) {\n    return [parts[0], packed.substr(parts[0].length + 1)];\n  }\n  return [packed, ''];\n}\nfunction sleep(duration) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise(resolve => CriticalTimers.setTimeout(resolve, duration));\n  });\n}\n/** @internal */\nfunction supportsTransceiver() {\n  return 'addTransceiver' in RTCPeerConnection.prototype;\n}\n/** @internal */\nfunction supportsAddTrack() {\n  return 'addTrack' in RTCPeerConnection.prototype;\n}\nfunction supportsAdaptiveStream() {\n  return typeof ResizeObserver !== undefined && typeof IntersectionObserver !== undefined;\n}\nfunction supportsDynacast() {\n  return supportsTransceiver();\n}\nfunction supportsAV1() {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isSafari()) {\n    // Safari 17 on iPhone14 reports AV1 capability, but does not actually support it\n    return false;\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasAV1 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/AV1') {\n        hasAV1 = true;\n        break;\n      }\n    }\n  }\n  return hasAV1;\n}\nfunction supportsVP9() {\n  if (!('getCapabilities' in RTCRtpSender)) {\n    return false;\n  }\n  if (isFireFox()) {\n    // technically speaking FireFox supports VP9, but SVC publishing is broken\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1633876\n    return false;\n  }\n  if (isSafari()) {\n    const browser = getBrowser();\n    if ((browser === null || browser === void 0 ? void 0 : browser.version) && compareVersions(browser.version, '16') < 0) {\n      // Safari 16 and below does not support VP9\n      return false;\n    }\n  }\n  const capabilities = RTCRtpSender.getCapabilities('video');\n  let hasVP9 = false;\n  if (capabilities) {\n    for (const codec of capabilities.codecs) {\n      if (codec.mimeType === 'video/VP9') {\n        hasVP9 = true;\n        break;\n      }\n    }\n  }\n  return hasVP9;\n}\nfunction isSVCCodec(codec) {\n  return codec === 'av1' || codec === 'vp9';\n}\nfunction supportsSetSinkId(elm) {\n  if (!document) {\n    return false;\n  }\n  if (!elm) {\n    elm = document.createElement('audio');\n  }\n  return 'setSinkId' in elm;\n}\nfunction isBrowserSupported() {\n  if (typeof RTCPeerConnection === 'undefined') {\n    return false;\n  }\n  return supportsTransceiver() || supportsAddTrack();\n}\nfunction isFireFox() {\n  var _a;\n  return ((_a = getBrowser()) === null || _a === void 0 ? void 0 : _a.name) === 'Firefox';\n}\nfunction isSafari() {\n  var _a;\n  return ((_a = getBrowser()) === null || _a === void 0 ? void 0 : _a.name) === 'Safari';\n}\nfunction isSafari17() {\n  const b = getBrowser();\n  return (b === null || b === void 0 ? void 0 : b.name) === 'Safari' && b.version.startsWith('17.');\n}\nfunction isMobile() {\n  var _a, _b;\n  if (!isWeb()) return false;\n  return (\n    // @ts-expect-error `userAgentData` is not yet part of typescript\n    (_b = (_a = navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.mobile) !== null && _b !== void 0 ? _b : /Tablet|iPad|Mobile|Android|BlackBerry/.test(navigator.userAgent)\n  );\n}\nfunction isE2EESimulcastSupported() {\n  const browser = getBrowser();\n  const supportedSafariVersion = '17.2'; // see https://bugs.webkit.org/show_bug.cgi?id=257803\n  if (browser) {\n    if (browser.name !== 'Safari' && browser.os !== 'iOS') {\n      return true;\n    } else if (browser.os === 'iOS' && browser.osVersion && compareVersions(supportedSafariVersion, browser.osVersion) >= 0) {\n      return true;\n    } else if (browser.name === 'Safari' && compareVersions(supportedSafariVersion, browser.version) >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nfunction isWeb() {\n  return typeof document !== 'undefined';\n}\nfunction isReactNative() {\n  // navigator.product is deprecated on browsers, but will be set appropriately for react-native.\n  return navigator.product == 'ReactNative';\n}\nfunction isCloud(serverUrl) {\n  return serverUrl.hostname.endsWith('.livekit.cloud') || serverUrl.hostname.endsWith('.livekit.run');\n}\nfunction getLKReactNativeInfo() {\n  // global defined only for ReactNative.\n  // @ts-ignore\n  if (global && global.LiveKitReactNativeGlobal) {\n    // @ts-ignore\n    return global.LiveKitReactNativeGlobal;\n  }\n  return undefined;\n}\nfunction getReactNativeOs() {\n  if (!isReactNative()) {\n    return undefined;\n  }\n  let info = getLKReactNativeInfo();\n  if (info) {\n    return info.platform;\n  }\n  return undefined;\n}\nfunction getDevicePixelRatio() {\n  if (isWeb()) {\n    return window.devicePixelRatio;\n  }\n  if (isReactNative()) {\n    let info = getLKReactNativeInfo();\n    if (info) {\n      return info.devicePixelRatio;\n    }\n  }\n  return 1;\n}\nfunction compareVersions(v1, v2) {\n  const parts1 = v1.split('.');\n  const parts2 = v2.split('.');\n  const k = Math.min(parts1.length, parts2.length);\n  for (let i = 0; i < k; ++i) {\n    const p1 = parseInt(parts1[i], 10);\n    const p2 = parseInt(parts2[i], 10);\n    if (p1 > p2) return 1;\n    if (p1 < p2) return -1;\n    if (i === k - 1 && p1 === p2) return 0;\n  }\n  if (v1 === '' && v2 !== '') {\n    return -1;\n  } else if (v2 === '') {\n    return 1;\n  }\n  return parts1.length == parts2.length ? 0 : parts1.length < parts2.length ? -1 : 1;\n}\nfunction roDispatchCallback(entries) {\n  for (const entry of entries) {\n    entry.target.handleResize(entry);\n  }\n}\nfunction ioDispatchCallback(entries) {\n  for (const entry of entries) {\n    entry.target.handleVisibilityChanged(entry);\n  }\n}\nlet resizeObserver = null;\nconst getResizeObserver = () => {\n  if (!resizeObserver) resizeObserver = new ResizeObserver(roDispatchCallback);\n  return resizeObserver;\n};\nlet intersectionObserver = null;\nconst getIntersectionObserver = () => {\n  if (!intersectionObserver) {\n    intersectionObserver = new IntersectionObserver(ioDispatchCallback, {\n      root: null,\n      rootMargin: '0px'\n    });\n  }\n  return intersectionObserver;\n};\nfunction getClientInfo() {\n  var _a;\n  const info = new ClientInfo({\n    sdk: ClientInfo_SDK.JS,\n    protocol: protocolVersion,\n    version\n  });\n  if (isReactNative()) {\n    info.os = (_a = getReactNativeOs()) !== null && _a !== void 0 ? _a : '';\n  }\n  return info;\n}\nlet emptyVideoStreamTrack;\nfunction getEmptyVideoStreamTrack() {\n  if (!emptyVideoStreamTrack) {\n    emptyVideoStreamTrack = createDummyVideoStreamTrack();\n  }\n  return emptyVideoStreamTrack.clone();\n}\nfunction createDummyVideoStreamTrack() {\n  let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 16;\n  let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  let enabled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let paintContent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const canvas = document.createElement('canvas');\n  // the canvas size is set to 16 by default, because electron apps seem to fail with smaller values\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx === null || ctx === void 0 ? void 0 : ctx.fillRect(0, 0, canvas.width, canvas.height);\n  if (paintContent && ctx) {\n    ctx.beginPath();\n    ctx.arc(width / 2, height / 2, 50, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fillStyle = 'grey';\n    ctx.fill();\n  }\n  // @ts-ignore\n  const dummyStream = canvas.captureStream();\n  const [dummyTrack] = dummyStream.getTracks();\n  if (!dummyTrack) {\n    throw Error('Could not get empty media stream video track');\n  }\n  dummyTrack.enabled = enabled;\n  return dummyTrack;\n}\nlet emptyAudioStreamTrack;\nfunction getEmptyAudioStreamTrack() {\n  if (!emptyAudioStreamTrack) {\n    // implementation adapted from https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n    const ctx = new AudioContext();\n    const oscillator = ctx.createOscillator();\n    const gain = ctx.createGain();\n    gain.gain.setValueAtTime(0, 0);\n    const dst = ctx.createMediaStreamDestination();\n    oscillator.connect(gain);\n    gain.connect(dst);\n    oscillator.start();\n    [emptyAudioStreamTrack] = dst.stream.getAudioTracks();\n    if (!emptyAudioStreamTrack) {\n      throw Error('Could not get empty media stream audio track');\n    }\n    emptyAudioStreamTrack.enabled = false;\n  }\n  return emptyAudioStreamTrack.clone();\n}\nclass Future {\n  constructor(futureBase, onFinally) {\n    this.onFinally = onFinally;\n    this.promise = new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n      this.resolve = resolve;\n      this.reject = reject;\n      if (futureBase) {\n        yield futureBase(resolve, reject);\n      }\n    })).finally(() => {\n      var _a;\n      return (_a = this.onFinally) === null || _a === void 0 ? void 0 : _a.call(this);\n    });\n  }\n}\n/**\n * Creates and returns an analyser web audio node that is attached to the provided track.\n * Additionally returns a convenience method `calculateVolume` to perform instant volume readings on that track.\n * Call the returned `cleanup` function to close the audioContext that has been created for the instance of this helper\n */\nfunction createAudioAnalyser(track, options) {\n  const opts = Object.assign({\n    cloneTrack: false,\n    fftSize: 2048,\n    smoothingTimeConstant: 0.8,\n    minDecibels: -100,\n    maxDecibels: -80\n  }, options);\n  const audioContext = getNewAudioContext();\n  if (!audioContext) {\n    throw new Error('Audio Context not supported on this browser');\n  }\n  const streamTrack = opts.cloneTrack ? track.mediaStreamTrack.clone() : track.mediaStreamTrack;\n  const mediaStreamSource = audioContext.createMediaStreamSource(new MediaStream([streamTrack]));\n  const analyser = audioContext.createAnalyser();\n  analyser.minDecibels = opts.minDecibels;\n  analyser.maxDecibels = opts.maxDecibels;\n  analyser.fftSize = opts.fftSize;\n  analyser.smoothingTimeConstant = opts.smoothingTimeConstant;\n  mediaStreamSource.connect(analyser);\n  const dataArray = new Uint8Array(analyser.frequencyBinCount);\n  /**\n   * Calculates the current volume of the track in the range from 0 to 1\n   */\n  const calculateVolume = () => {\n    analyser.getByteFrequencyData(dataArray);\n    let sum = 0;\n    for (const amplitude of dataArray) {\n      sum += Math.pow(amplitude / 255, 2);\n    }\n    const volume = Math.sqrt(sum / dataArray.length);\n    return volume;\n  };\n  const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n    yield audioContext.close();\n    if (opts.cloneTrack) {\n      streamTrack.stop();\n    }\n  });\n  return {\n    calculateVolume,\n    analyser,\n    cleanup\n  };\n}\n/**\n * @internal\n */\nclass Mutex {\n  constructor() {\n    this._locking = Promise.resolve();\n    this._locks = 0;\n  }\n  isLocked() {\n    return this._locks > 0;\n  }\n  lock() {\n    this._locks += 1;\n    let unlockNext;\n    const willLock = new Promise(resolve => unlockNext = () => {\n      this._locks -= 1;\n      resolve();\n    });\n    const willUnlock = this._locking.then(() => unlockNext);\n    this._locking = this._locking.then(() => willLock);\n    return willUnlock;\n  }\n}\nfunction isVideoCodec(maybeCodec) {\n  return videoCodecs.includes(maybeCodec);\n}\nfunction unwrapConstraint(constraint) {\n  if (typeof constraint === 'string' || typeof constraint === 'number') {\n    return constraint;\n  }\n  if (Array.isArray(constraint)) {\n    return constraint[0];\n  }\n  if (constraint.exact) {\n    if (Array.isArray(constraint.exact)) {\n      return constraint.exact[0];\n    }\n    return constraint.exact;\n  }\n  if (constraint.ideal) {\n    if (Array.isArray(constraint.ideal)) {\n      return constraint.ideal[0];\n    }\n    return constraint.ideal;\n  }\n  throw Error('could not unwrap constraint');\n}\nfunction toWebsocketUrl(url) {\n  if (url.startsWith('http')) {\n    return url.replace(/^(http)/, 'ws');\n  }\n  return url;\n}\nfunction toHttpUrl(url) {\n  if (url.startsWith('ws')) {\n    return url.replace(/^(ws)/, 'http');\n  }\n  return url;\n}\nfunction extractTranscriptionSegments(transcription) {\n  return transcription.segments.map(_ref => {\n    let {\n      id,\n      text,\n      language,\n      startTime,\n      endTime,\n      final\n    } = _ref;\n    return {\n      id,\n      text,\n      startTime: Number.parseInt(startTime.toString()),\n      endTime: Number.parseInt(endTime.toString()),\n      final,\n      language\n    };\n  });\n}\n\nconst defaultId = 'default';\nclass DeviceManager {\n  static getInstance() {\n    if (this.instance === undefined) {\n      this.instance = new DeviceManager();\n    }\n    return this.instance;\n  }\n  getDevices(kind_1) {\n    return __awaiter(this, arguments, void 0, function (kind) {\n      var _this = this;\n      let requestPermissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return function* () {\n        var _a;\n        if (((_a = DeviceManager.userMediaPromiseMap) === null || _a === void 0 ? void 0 : _a.size) > 0) {\n          livekitLogger.debug('awaiting getUserMedia promise');\n          try {\n            if (kind) {\n              yield DeviceManager.userMediaPromiseMap.get(kind);\n            } else {\n              yield Promise.all(DeviceManager.userMediaPromiseMap.values());\n            }\n          } catch (e) {\n            livekitLogger.warn('error waiting for media permissons');\n          }\n        }\n        let devices = yield navigator.mediaDevices.enumerateDevices();\n        if (requestPermissions &&\n        // for safari we need to skip this check, as otherwise it will re-acquire user media and fail on iOS https://bugs.webkit.org/show_bug.cgi?id=179363\n        !(isSafari() && _this.hasDeviceInUse(kind))) {\n          const isDummyDeviceOrEmpty = devices.filter(d => d.kind === kind).length === 0 || devices.some(device => {\n            const noLabel = device.label === '';\n            const isRelevant = kind ? device.kind === kind : true;\n            return noLabel && isRelevant;\n          });\n          if (isDummyDeviceOrEmpty) {\n            const permissionsToAcquire = {\n              video: kind !== 'audioinput' && kind !== 'audiooutput',\n              audio: kind !== 'videoinput'\n            };\n            const stream = yield navigator.mediaDevices.getUserMedia(permissionsToAcquire);\n            devices = yield navigator.mediaDevices.enumerateDevices();\n            stream.getTracks().forEach(track => {\n              track.stop();\n            });\n          }\n        }\n        if (kind) {\n          devices = devices.filter(device => device.kind === kind);\n        }\n        return devices;\n      }();\n    });\n  }\n  normalizeDeviceId(kind, deviceId, groupId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (deviceId !== defaultId) {\n        return deviceId;\n      }\n      // resolve actual device id if it's 'default': Chrome returns it when no\n      // device has been chosen\n      const devices = yield this.getDevices(kind);\n      const defaultDevice = devices.find(d => d.deviceId === defaultId);\n      if (!defaultDevice) {\n        livekitLogger.warn('could not reliably determine default device');\n        return undefined;\n      }\n      const device = devices.find(d => d.deviceId !== defaultId && d.groupId === (groupId !== null && groupId !== void 0 ? groupId : defaultDevice.groupId));\n      if (!device) {\n        livekitLogger.warn('could not reliably determine default device');\n        return undefined;\n      }\n      return device === null || device === void 0 ? void 0 : device.deviceId;\n    });\n  }\n  hasDeviceInUse(kind) {\n    return kind ? DeviceManager.userMediaPromiseMap.has(kind) : DeviceManager.userMediaPromiseMap.size > 0;\n  }\n}\nDeviceManager.mediaDeviceKinds = ['audioinput', 'audiooutput', 'videoinput'];\nDeviceManager.userMediaPromiseMap = new Map();\n\nconst defaultDimensionsTimeout = 1000;\nclass LocalTrack extends Track {\n  /** @internal */\n  get sender() {\n    return this._sender;\n  }\n  /** @internal */\n  set sender(sender) {\n    this._sender = sender;\n  }\n  get constraints() {\n    return this._constraints;\n  }\n  /**\n   *\n   * @param mediaTrack\n   * @param kind\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(mediaTrack, kind, constraints) {\n    let userProvidedTrack = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let loggerOptions = arguments.length > 4 ? arguments[4] : undefined;\n    super(mediaTrack, kind, loggerOptions);\n    this.manuallyStopped = false;\n    this._isUpstreamPaused = false;\n    this.handleTrackMuteEvent = () => this.debouncedTrackMuteHandler().catch(() => this.log.debug('track mute bounce got cancelled by an unmute event', this.logContext));\n    this.debouncedTrackMuteHandler = r(() => __awaiter(this, void 0, void 0, function* () {\n      yield this.pauseUpstream();\n    }), 5000);\n    this.handleTrackUnmuteEvent = () => __awaiter(this, void 0, void 0, function* () {\n      this.debouncedTrackMuteHandler.cancel('unmute');\n      yield this.resumeUpstream();\n    });\n    this.handleEnded = () => {\n      if (this.isInBackground) {\n        this.reacquireTrack = true;\n      }\n      this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n      this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n      this.emit(TrackEvent.Ended, this);\n    };\n    this.reacquireTrack = false;\n    this.providedByUser = userProvidedTrack;\n    this.muteLock = new Mutex();\n    this.pauseUpstreamLock = new Mutex();\n    this.processorLock = new Mutex();\n    this.restartLock = new Mutex();\n    this.setMediaStreamTrack(mediaTrack, true);\n    // added to satisfy TS compiler, constraints are synced with MediaStreamTrack\n    this._constraints = mediaTrack.getConstraints();\n    if (constraints) {\n      this._constraints = constraints;\n    }\n  }\n  get id() {\n    return this._mediaStreamTrack.id;\n  }\n  get dimensions() {\n    if (this.kind !== Track.Kind.Video) {\n      return undefined;\n    }\n    const {\n      width,\n      height\n    } = this._mediaStreamTrack.getSettings();\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n    return undefined;\n  }\n  get isUpstreamPaused() {\n    return this._isUpstreamPaused;\n  }\n  get isUserProvided() {\n    return this.providedByUser;\n  }\n  get mediaStreamTrack() {\n    var _a, _b;\n    return (_b = (_a = this.processor) === null || _a === void 0 ? void 0 : _a.processedTrack) !== null && _b !== void 0 ? _b : this._mediaStreamTrack;\n  }\n  setMediaStreamTrack(newTrack, force) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (newTrack === this._mediaStreamTrack && !force) {\n        return;\n      }\n      if (this._mediaStreamTrack) {\n        // detach\n        this.attachedElements.forEach(el => {\n          detachTrack(this._mediaStreamTrack, el);\n        });\n        this.debouncedTrackMuteHandler.cancel('new-track');\n        this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n        this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n        this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n      }\n      this.mediaStream = new MediaStream([newTrack]);\n      if (newTrack) {\n        newTrack.addEventListener('ended', this.handleEnded);\n        // when underlying track emits mute, it indicates that the device is unable\n        // to produce media. In this case we'll need to signal with remote that\n        // the track is \"muted\"\n        // note this is different from LocalTrack.mute because we do not want to\n        // touch MediaStreamTrack.enabled\n        newTrack.addEventListener('mute', this.handleTrackMuteEvent);\n        newTrack.addEventListener('unmute', this.handleTrackUnmuteEvent);\n        this._constraints = newTrack.getConstraints();\n      }\n      let processedTrack;\n      if (this.processor && newTrack) {\n        const unlock = yield this.processorLock.lock();\n        try {\n          this.log.debug('restarting processor', this.logContext);\n          if (this.kind === 'unknown') {\n            throw TypeError('cannot set processor on track of unknown kind');\n          }\n          if (this.processorElement) {\n            attachToElement(newTrack, this.processorElement);\n            // ensure the processorElement itself stays muted\n            this.processorElement.muted = true;\n          }\n          yield this.processor.restart({\n            track: newTrack,\n            kind: this.kind,\n            element: this.processorElement\n          });\n          processedTrack = this.processor.processedTrack;\n        } finally {\n          unlock();\n        }\n      }\n      if (this.sender) {\n        yield this.sender.replaceTrack(processedTrack !== null && processedTrack !== void 0 ? processedTrack : newTrack);\n      }\n      // if `newTrack` is different from the existing track, stop the\n      // older track just before replacing it\n      if (!this.providedByUser && this._mediaStreamTrack !== newTrack) {\n        this._mediaStreamTrack.stop();\n      }\n      this._mediaStreamTrack = newTrack;\n      if (newTrack) {\n        // sync muted state with the enabled state of the newly provided track\n        this._mediaStreamTrack.enabled = !this.isMuted;\n        // when a valid track is replace, we'd want to start producing\n        yield this.resumeUpstream();\n        this.attachedElements.forEach(el => {\n          attachToElement(processedTrack !== null && processedTrack !== void 0 ? processedTrack : newTrack, el);\n        });\n      }\n    });\n  }\n  waitForDimensions() {\n    return __awaiter(this, arguments, void 0, function () {\n      var _this = this;\n      let timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDimensionsTimeout;\n      return function* () {\n        var _a;\n        if (_this.kind === Track.Kind.Audio) {\n          throw new Error('cannot get dimensions for audio tracks');\n        }\n        if (((_a = getBrowser()) === null || _a === void 0 ? void 0 : _a.os) === 'iOS') {\n          // browsers report wrong initial resolution on iOS.\n          // when slightly delaying the call to .getSettings(), the correct resolution is being reported\n          yield sleep(10);\n        }\n        const started = Date.now();\n        while (Date.now() - started < timeout) {\n          const dims = _this.dimensions;\n          if (dims) {\n            return dims;\n          }\n          yield sleep(50);\n        }\n        throw new TrackInvalidError('unable to get track dimensions after timeout');\n      }();\n    });\n  }\n  /**\n   * @returns DeviceID of the device that is currently being used for this track\n   */\n  getDeviceId() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // screen share doesn't have a usable device id\n      if (this.source === Track.Source.ScreenShare) {\n        return;\n      }\n      const {\n        deviceId,\n        groupId\n      } = this._mediaStreamTrack.getSettings();\n      const kind = this.kind === Track.Kind.Audio ? 'audioinput' : 'videoinput';\n      return DeviceManager.getInstance().normalizeDeviceId(kind, deviceId, groupId);\n    });\n  }\n  mute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.setTrackMuted(true);\n      return this;\n    });\n  }\n  unmute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.setTrackMuted(false);\n      return this;\n    });\n  }\n  replaceTrack(track, userProvidedOrOptions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.sender) {\n        throw new TrackInvalidError('unable to replace an unpublished track');\n      }\n      let userProvidedTrack;\n      let stopProcessor;\n      if (typeof userProvidedOrOptions === 'boolean') {\n        userProvidedTrack = userProvidedOrOptions;\n      } else if (userProvidedOrOptions !== undefined) {\n        userProvidedTrack = userProvidedOrOptions.userProvidedTrack;\n        stopProcessor = userProvidedOrOptions.stopProcessor;\n      }\n      this.providedByUser = userProvidedTrack !== null && userProvidedTrack !== void 0 ? userProvidedTrack : true;\n      this.log.debug('replace MediaStreamTrack', this.logContext);\n      yield this.setMediaStreamTrack(track);\n      // this must be synced *after* setting mediaStreamTrack above, since it relies\n      // on the previous state in order to cleanup\n      if (stopProcessor && this.processor) {\n        yield this.stopProcessor();\n      }\n      return this;\n    });\n  }\n  restart(constraints) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.manuallyStopped = false;\n      const unlock = yield this.restartLock.lock();\n      try {\n        if (!constraints) {\n          constraints = this._constraints;\n        }\n        this.log.debug('restarting track with constraints', Object.assign(Object.assign({}, this.logContext), {\n          constraints\n        }));\n        const streamConstraints = {\n          audio: false,\n          video: false\n        };\n        if (this.kind === Track.Kind.Video) {\n          streamConstraints.video = constraints;\n        } else {\n          streamConstraints.audio = constraints;\n        }\n        // these steps are duplicated from setMediaStreamTrack because we must stop\n        // the previous tracks before new tracks can be acquired\n        this.attachedElements.forEach(el => {\n          detachTrack(this.mediaStreamTrack, el);\n        });\n        this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n        // on Safari, the old audio track must be stopped before attempting to acquire\n        // the new track, otherwise the new track will stop with\n        // 'A MediaStreamTrack ended due to a capture failure`\n        this._mediaStreamTrack.stop();\n        // create new track and attach\n        const mediaStream = yield navigator.mediaDevices.getUserMedia(streamConstraints);\n        const newTrack = mediaStream.getTracks()[0];\n        newTrack.addEventListener('ended', this.handleEnded);\n        this.log.debug('re-acquired MediaStreamTrack', this.logContext);\n        yield this.setMediaStreamTrack(newTrack);\n        this._constraints = constraints;\n        this.emit(TrackEvent.Restarted, this);\n        if (this.manuallyStopped) {\n          this.log.warn('track was stopped during a restart, stopping restarted track', this.logContext);\n          this.stop();\n        }\n        return this;\n      } finally {\n        unlock();\n      }\n    });\n  }\n  setTrackMuted(muted) {\n    this.log.debug(\"setting \".concat(this.kind, \" track \").concat(muted ? 'muted' : 'unmuted'), this.logContext);\n    if (this.isMuted === muted && this._mediaStreamTrack.enabled !== muted) {\n      return;\n    }\n    this.isMuted = muted;\n    this._mediaStreamTrack.enabled = !muted;\n    this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n  }\n  get needsReAcquisition() {\n    return this._mediaStreamTrack.readyState !== 'live' || this._mediaStreamTrack.muted || !this._mediaStreamTrack.enabled || this.reacquireTrack;\n  }\n  handleAppVisibilityChanged() {\n    const _super = Object.create(null, {\n      handleAppVisibilityChanged: {\n        get: () => super.handleAppVisibilityChanged\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      yield _super.handleAppVisibilityChanged.call(this);\n      if (!isMobile()) return;\n      this.log.debug(\"visibility changed, is in Background: \".concat(this.isInBackground), this.logContext);\n      if (!this.isInBackground && this.needsReAcquisition && !this.isUserProvided && !this.isMuted) {\n        this.log.debug(\"track needs to be reacquired, restarting \".concat(this.source), this.logContext);\n        yield this.restart();\n        this.reacquireTrack = false;\n      }\n    });\n  }\n  stop() {\n    var _a;\n    this.manuallyStopped = true;\n    super.stop();\n    this._mediaStreamTrack.removeEventListener('ended', this.handleEnded);\n    this._mediaStreamTrack.removeEventListener('mute', this.handleTrackMuteEvent);\n    this._mediaStreamTrack.removeEventListener('unmute', this.handleTrackUnmuteEvent);\n    (_a = this.processor) === null || _a === void 0 ? void 0 : _a.destroy();\n    this.processor = undefined;\n  }\n  /**\n   * pauses publishing to the server without disabling the local MediaStreamTrack\n   * this is used to display a user's own video locally while pausing publishing to\n   * the server.\n   * this API is unsupported on Safari < 12 due to a bug\n   **/\n  pauseUpstream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.pauseUpstreamLock.lock();\n      try {\n        if (this._isUpstreamPaused === true) {\n          return;\n        }\n        if (!this.sender) {\n          this.log.warn('unable to pause upstream for an unpublished track', this.logContext);\n          return;\n        }\n        this._isUpstreamPaused = true;\n        this.emit(TrackEvent.UpstreamPaused, this);\n        const browser = getBrowser();\n        if ((browser === null || browser === void 0 ? void 0 : browser.name) === 'Safari' && compareVersions(browser.version, '12.0') < 0) {\n          // https://bugs.webkit.org/show_bug.cgi?id=184911\n          throw new DeviceUnsupportedError('pauseUpstream is not supported on Safari < 12.');\n        }\n        yield this.sender.replaceTrack(null);\n      } finally {\n        unlock();\n      }\n    });\n  }\n  resumeUpstream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.pauseUpstreamLock.lock();\n      try {\n        if (this._isUpstreamPaused === false) {\n          return;\n        }\n        if (!this.sender) {\n          this.log.warn('unable to resume upstream for an unpublished track', this.logContext);\n          return;\n        }\n        this._isUpstreamPaused = false;\n        this.emit(TrackEvent.UpstreamResumed, this);\n        // this operation is noop if mediastreamtrack is already being sent\n        yield this.sender.replaceTrack(this.mediaStreamTrack);\n      } finally {\n        unlock();\n      }\n    });\n  }\n  /**\n   * Gets the RTCStatsReport for the LocalTrack's underlying RTCRtpSender\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  getRTCStatsReport() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!((_a = this.sender) === null || _a === void 0 ? void 0 : _a.getStats)) {\n        return;\n      }\n      const statsReport = yield this.sender.getStats();\n      return statsReport;\n    });\n  }\n  /**\n   * Sets a processor on this track.\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   *\n   * @param processor\n   * @param showProcessedStreamLocally\n   * @returns\n   */\n  setProcessor(processor_1) {\n    return __awaiter(this, arguments, void 0, function (processor) {\n      var _this2 = this;\n      let showProcessedStreamLocally = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return function* () {\n        var _a;\n        const unlock = yield _this2.processorLock.lock();\n        try {\n          _this2.log.debug('setting up processor', _this2.logContext);\n          const processorElement = document.createElement(_this2.kind);\n          const processorOptions = {\n            kind: _this2.kind,\n            track: _this2._mediaStreamTrack,\n            element: processorElement,\n            audioContext: _this2.audioContext\n          };\n          yield processor.init(processorOptions);\n          _this2.log.debug('processor initialized', _this2.logContext);\n          if (_this2.processor) {\n            yield _this2.stopProcessor();\n          }\n          if (_this2.kind === 'unknown') {\n            throw TypeError('cannot set processor on track of unknown kind');\n          }\n          attachToElement(_this2._mediaStreamTrack, processorElement);\n          processorElement.muted = true;\n          processorElement.play().catch(error => _this2.log.error('failed to play processor element', Object.assign(Object.assign({}, _this2.logContext), {\n            error\n          })));\n          _this2.processor = processor;\n          _this2.processorElement = processorElement;\n          if (_this2.processor.processedTrack) {\n            for (const el of _this2.attachedElements) {\n              if (el !== _this2.processorElement && showProcessedStreamLocally) {\n                detachTrack(_this2._mediaStreamTrack, el);\n                attachToElement(_this2.processor.processedTrack, el);\n              }\n            }\n            yield (_a = _this2.sender) === null || _a === void 0 ? void 0 : _a.replaceTrack(_this2.processor.processedTrack);\n          }\n          _this2.emit(TrackEvent.TrackProcessorUpdate, _this2.processor);\n        } finally {\n          unlock();\n        }\n      }();\n    });\n  }\n  getProcessor() {\n    return this.processor;\n  }\n  /**\n   * Stops the track processor\n   * See https://github.com/livekit/track-processors-js for example usage\n   *\n   * @experimental\n   * @returns\n   */\n  stopProcessor() {\n    return __awaiter(this, arguments, void 0, function () {\n      var _this3 = this;\n      let keepElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return function* () {\n        var _a, _b;\n        if (!_this3.processor) return;\n        _this3.log.debug('stopping processor', _this3.logContext);\n        (_a = _this3.processor.processedTrack) === null || _a === void 0 ? void 0 : _a.stop();\n        yield _this3.processor.destroy();\n        _this3.processor = undefined;\n        if (!keepElement) {\n          (_b = _this3.processorElement) === null || _b === void 0 ? void 0 : _b.remove();\n          _this3.processorElement = undefined;\n        }\n        // apply original track constraints in case the processor changed them\n        yield _this3._mediaStreamTrack.applyConstraints(_this3._constraints);\n        // force re-setting of the mediaStreamTrack on the sender\n        yield _this3.setMediaStreamTrack(_this3._mediaStreamTrack, true);\n        _this3.emit(TrackEvent.TrackProcessorUpdate);\n      }();\n    });\n  }\n}\n\n/**\n * @experimental\n */\nclass E2EEManager extends eventsExports.EventEmitter {\n  constructor(options) {\n    super();\n    this.onWorkerMessage = ev => {\n      var _a, _b;\n      const {\n        kind,\n        data\n      } = ev.data;\n      switch (kind) {\n        case 'error':\n          livekitLogger.error(data.error.message);\n          this.emit(EncryptionEvent.EncryptionError, data.error);\n          break;\n        case 'initAck':\n          if (data.enabled) {\n            this.keyProvider.getKeys().forEach(keyInfo => {\n              this.postKey(keyInfo);\n            });\n          }\n          break;\n        case 'enable':\n          if (this.encryptionEnabled !== data.enabled && data.participantIdentity === ((_a = this.room) === null || _a === void 0 ? void 0 : _a.localParticipant.identity)) {\n            this.emit(EncryptionEvent.ParticipantEncryptionStatusChanged, data.enabled, this.room.localParticipant);\n            this.encryptionEnabled = data.enabled;\n          } else if (data.participantIdentity) {\n            const participant = (_b = this.room) === null || _b === void 0 ? void 0 : _b.getParticipantByIdentity(data.participantIdentity);\n            if (!participant) {\n              throw TypeError(\"couldn't set encryption status, participant not found\".concat(data.participantIdentity));\n            }\n            this.emit(EncryptionEvent.ParticipantEncryptionStatusChanged, data.enabled, participant);\n          }\n          if (this.encryptionEnabled) {\n            this.keyProvider.getKeys().forEach(keyInfo => {\n              this.postKey(keyInfo);\n            });\n          }\n          break;\n        case 'ratchetKey':\n          this.keyProvider.emit(KeyProviderEvent.KeyRatcheted, data.material, data.keyIndex);\n          break;\n      }\n    };\n    this.onWorkerError = ev => {\n      livekitLogger.error('e2ee worker encountered an error:', {\n        error: ev.error\n      });\n      this.emit(EncryptionEvent.EncryptionError, ev.error);\n    };\n    this.keyProvider = options.keyProvider;\n    this.worker = options.worker;\n    this.encryptionEnabled = false;\n  }\n  /**\n   * @internal\n   */\n  setup(room) {\n    if (!isE2EESupported()) {\n      throw new DeviceUnsupportedError('tried to setup end-to-end encryption on an unsupported browser');\n    }\n    livekitLogger.info('setting up e2ee');\n    if (room !== this.room) {\n      this.room = room;\n      this.setupEventListeners(room, this.keyProvider);\n      // this.worker = new Worker('');\n      const msg = {\n        kind: 'init',\n        data: {\n          keyProviderOptions: this.keyProvider.getOptions(),\n          loglevel: workerLogger.getLevel()\n        }\n      };\n      if (this.worker) {\n        livekitLogger.info(\"initializing worker\", {\n          worker: this.worker\n        });\n        this.worker.onmessage = this.onWorkerMessage;\n        this.worker.onerror = this.onWorkerError;\n        this.worker.postMessage(msg);\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  setParticipantCryptorEnabled(enabled, participantIdentity) {\n    livekitLogger.debug(\"set e2ee to \".concat(enabled, \" for participant \").concat(participantIdentity));\n    this.postEnable(enabled, participantIdentity);\n  }\n  /**\n   * @internal\n   */\n  setSifTrailer(trailer) {\n    if (!trailer || trailer.length === 0) {\n      livekitLogger.warn(\"ignoring server sent trailer as it's empty\");\n    } else {\n      this.postSifTrailer(trailer);\n    }\n  }\n  setupEngine(engine) {\n    engine.on(EngineEvent.RTPVideoMapUpdate, rtpMap => {\n      this.postRTPMap(rtpMap);\n    });\n  }\n  setupEventListeners(room, keyProvider) {\n    room.on(RoomEvent.TrackPublished, (pub, participant) => this.setParticipantCryptorEnabled(pub.trackInfo.encryption !== Encryption_Type.NONE, participant.identity));\n    room.on(RoomEvent.ConnectionStateChanged, state => {\n      if (state === ConnectionState.Connected) {\n        room.remoteParticipants.forEach(participant => {\n          participant.trackPublications.forEach(pub => {\n            this.setParticipantCryptorEnabled(pub.trackInfo.encryption !== Encryption_Type.NONE, participant.identity);\n          });\n        });\n      }\n    }).on(RoomEvent.TrackUnsubscribed, (track, _, participant) => {\n      var _a;\n      const msg = {\n        kind: 'removeTransform',\n        data: {\n          participantIdentity: participant.identity,\n          trackId: track.mediaStreamID\n        }\n      };\n      (_a = this.worker) === null || _a === void 0 ? void 0 : _a.postMessage(msg);\n    }).on(RoomEvent.TrackSubscribed, (track, pub, participant) => {\n      this.setupE2EEReceiver(track, participant.identity, pub.trackInfo);\n    }).on(RoomEvent.SignalConnected, () => {\n      if (!this.room) {\n        throw new TypeError(\"expected room to be present on signal connect\");\n      }\n      this.setParticipantCryptorEnabled(this.room.localParticipant.isE2EEEnabled, this.room.localParticipant.identity);\n      keyProvider.getKeys().forEach(keyInfo => {\n        this.postKey(keyInfo);\n      });\n    });\n    room.localParticipant.on(ParticipantEvent.LocalTrackPublished, publication => __awaiter(this, void 0, void 0, function* () {\n      this.setupE2EESender(publication.track, publication.track.sender);\n    }));\n    keyProvider.on(KeyProviderEvent.SetKey, keyInfo => this.postKey(keyInfo)).on(KeyProviderEvent.RatchetRequest, (participantId, keyIndex) => this.postRatchetRequest(participantId, keyIndex));\n  }\n  postRatchetRequest(participantIdentity, keyIndex) {\n    if (!this.worker) {\n      throw Error('could not ratchet key, worker is missing');\n    }\n    const msg = {\n      kind: 'ratchetRequest',\n      data: {\n        participantIdentity: participantIdentity,\n        keyIndex\n      }\n    };\n    this.worker.postMessage(msg);\n  }\n  postKey(_ref) {\n    let {\n      key,\n      participantIdentity,\n      keyIndex\n    } = _ref;\n    var _a;\n    if (!this.worker) {\n      throw Error('could not set key, worker is missing');\n    }\n    const msg = {\n      kind: 'setKey',\n      data: {\n        participantIdentity: participantIdentity,\n        isPublisher: participantIdentity === ((_a = this.room) === null || _a === void 0 ? void 0 : _a.localParticipant.identity),\n        key,\n        keyIndex\n      }\n    };\n    this.worker.postMessage(msg);\n  }\n  postEnable(enabled, participantIdentity) {\n    if (this.worker) {\n      const enableMsg = {\n        kind: 'enable',\n        data: {\n          enabled,\n          participantIdentity\n        }\n      };\n      this.worker.postMessage(enableMsg);\n    } else {\n      throw new ReferenceError('failed to enable e2ee, worker is not ready');\n    }\n  }\n  postRTPMap(map) {\n    var _a;\n    if (!this.worker) {\n      throw TypeError('could not post rtp map, worker is missing');\n    }\n    if (!((_a = this.room) === null || _a === void 0 ? void 0 : _a.localParticipant.identity)) {\n      throw TypeError('could not post rtp map, local participant identity is missing');\n    }\n    const msg = {\n      kind: 'setRTPMap',\n      data: {\n        map,\n        participantIdentity: this.room.localParticipant.identity\n      }\n    };\n    this.worker.postMessage(msg);\n  }\n  postSifTrailer(trailer) {\n    if (!this.worker) {\n      throw Error('could not post SIF trailer, worker is missing');\n    }\n    const msg = {\n      kind: 'setSifTrailer',\n      data: {\n        trailer\n      }\n    };\n    this.worker.postMessage(msg);\n  }\n  setupE2EEReceiver(track, remoteId, trackInfo) {\n    if (!track.receiver) {\n      return;\n    }\n    if (!(trackInfo === null || trackInfo === void 0 ? void 0 : trackInfo.mimeType) || trackInfo.mimeType === '') {\n      throw new TypeError('MimeType missing from trackInfo, cannot set up E2EE cryptor');\n    }\n    this.handleReceiver(track.receiver, track.mediaStreamID, remoteId, track.kind === 'video' ? mimeTypeToVideoCodecString(trackInfo.mimeType) : undefined);\n  }\n  setupE2EESender(track, sender) {\n    if (!(track instanceof LocalTrack) || !sender) {\n      if (!sender) livekitLogger.warn('early return because sender is not ready');\n      return;\n    }\n    this.handleSender(sender, track.mediaStreamID, undefined);\n  }\n  /**\n   * Handles the given {@code RTCRtpReceiver} by creating a {@code TransformStream} which will inject\n   * a frame decoder.\n   *\n   */\n  handleReceiver(receiver, trackId, participantIdentity, codec) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.worker) {\n        return;\n      }\n      if (isScriptTransformSupported()) {\n        const options = {\n          kind: 'decode',\n          participantIdentity,\n          trackId,\n          codec\n        };\n        // @ts-ignore\n        receiver.transform = new RTCRtpScriptTransform(this.worker, options);\n      } else {\n        if (E2EE_FLAG in receiver && codec) {\n          // only update codec\n          const msg = {\n            kind: 'updateCodec',\n            data: {\n              trackId,\n              codec,\n              participantIdentity: participantIdentity\n            }\n          };\n          this.worker.postMessage(msg);\n          return;\n        }\n        // @ts-ignore\n        let writable = receiver.writableStream;\n        // @ts-ignore\n        let readable = receiver.readableStream;\n        if (!writable || !readable) {\n          // @ts-ignore\n          const receiverStreams = receiver.createEncodedStreams();\n          // @ts-ignore\n          receiver.writableStream = receiverStreams.writable;\n          writable = receiverStreams.writable;\n          // @ts-ignore\n          receiver.readableStream = receiverStreams.readable;\n          readable = receiverStreams.readable;\n        }\n        const msg = {\n          kind: 'decode',\n          data: {\n            readableStream: readable,\n            writableStream: writable,\n            trackId: trackId,\n            codec,\n            participantIdentity: participantIdentity\n          }\n        };\n        this.worker.postMessage(msg, [readable, writable]);\n      }\n      // @ts-ignore\n      receiver[E2EE_FLAG] = true;\n    });\n  }\n  /**\n   * Handles the given {@code RTCRtpSender} by creating a {@code TransformStream} which will inject\n   * a frame encoder.\n   *\n   */\n  handleSender(sender, trackId, codec) {\n    var _a;\n    if (E2EE_FLAG in sender || !this.worker) {\n      return;\n    }\n    if (!((_a = this.room) === null || _a === void 0 ? void 0 : _a.localParticipant.identity) || this.room.localParticipant.identity === '') {\n      throw TypeError('local identity needs to be known in order to set up encrypted sender');\n    }\n    if (isScriptTransformSupported()) {\n      livekitLogger.info('initialize script transform');\n      const options = {\n        kind: 'encode',\n        participantIdentity: this.room.localParticipant.identity,\n        trackId,\n        codec\n      };\n      // @ts-ignore\n      sender.transform = new RTCRtpScriptTransform(this.worker, options);\n    } else {\n      livekitLogger.info('initialize encoded streams');\n      // @ts-ignore\n      const senderStreams = sender.createEncodedStreams();\n      const msg = {\n        kind: 'encode',\n        data: {\n          readableStream: senderStreams.readable,\n          writableStream: senderStreams.writable,\n          codec,\n          trackId,\n          participantIdentity: this.room.localParticipant.identity\n        }\n      };\n      this.worker.postMessage(msg, [senderStreams.readable, senderStreams.writable]);\n    }\n    // @ts-ignore\n    sender[E2EE_FLAG] = true;\n  }\n}\n\nvar QueueTaskStatus;\n(function (QueueTaskStatus) {\n  QueueTaskStatus[QueueTaskStatus[\"WAITING\"] = 0] = \"WAITING\";\n  QueueTaskStatus[QueueTaskStatus[\"RUNNING\"] = 1] = \"RUNNING\";\n  QueueTaskStatus[QueueTaskStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\n})(QueueTaskStatus || (QueueTaskStatus = {}));\nclass AsyncQueue {\n  constructor() {\n    this.pendingTasks = new Map();\n    this.taskMutex = new Mutex();\n    this.nextTaskIndex = 0;\n  }\n  run(task) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const taskInfo = {\n        id: this.nextTaskIndex++,\n        enqueuedAt: Date.now(),\n        status: QueueTaskStatus.WAITING\n      };\n      this.pendingTasks.set(taskInfo.id, taskInfo);\n      const unlock = yield this.taskMutex.lock();\n      try {\n        taskInfo.executedAt = Date.now();\n        taskInfo.status = QueueTaskStatus.RUNNING;\n        return yield task();\n      } finally {\n        taskInfo.status = QueueTaskStatus.COMPLETED;\n        this.pendingTasks.delete(taskInfo.id);\n        unlock();\n      }\n    });\n  }\n  flush() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.run(() => __awaiter(this, void 0, void 0, function* () {}));\n    });\n  }\n  snapshot() {\n    return Array.from(this.pendingTasks.values());\n  }\n}\n\nconst passThroughQueueSignals = ['syncState', 'trickle', 'offer', 'answer', 'simulate', 'leave'];\nfunction canPassThroughQueue(req) {\n  const canPass = passThroughQueueSignals.indexOf(req.case) >= 0;\n  livekitLogger.trace('request allowed to bypass queue:', {\n    canPass,\n    req\n  });\n  return canPass;\n}\nvar SignalConnectionState;\n(function (SignalConnectionState) {\n  SignalConnectionState[SignalConnectionState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n  SignalConnectionState[SignalConnectionState[\"CONNECTED\"] = 1] = \"CONNECTED\";\n  SignalConnectionState[SignalConnectionState[\"RECONNECTING\"] = 2] = \"RECONNECTING\";\n  SignalConnectionState[SignalConnectionState[\"DISCONNECTING\"] = 3] = \"DISCONNECTING\";\n  SignalConnectionState[SignalConnectionState[\"DISCONNECTED\"] = 4] = \"DISCONNECTED\";\n})(SignalConnectionState || (SignalConnectionState = {}));\n/** @internal */\nclass SignalClient {\n  get currentState() {\n    return this.state;\n  }\n  get isDisconnected() {\n    return this.state === SignalConnectionState.DISCONNECTING || this.state === SignalConnectionState.DISCONNECTED;\n  }\n  get isEstablishingConnection() {\n    return this.state === SignalConnectionState.CONNECTING || this.state === SignalConnectionState.RECONNECTING;\n  }\n  getNextRequestId() {\n    this._requestId += 1;\n    return this._requestId;\n  }\n  constructor() {\n    let useJSON = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let loggerOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    /** signal rtt in milliseconds */\n    this.rtt = 0;\n    this.state = SignalConnectionState.DISCONNECTED;\n    this.log = livekitLogger;\n    this._requestId = 0;\n    /** @internal */\n    this.resetCallbacks = () => {\n      this.onAnswer = undefined;\n      this.onLeave = undefined;\n      this.onLocalTrackPublished = undefined;\n      this.onLocalTrackUnpublished = undefined;\n      this.onNegotiateRequested = undefined;\n      this.onOffer = undefined;\n      this.onRemoteMuteChanged = undefined;\n      this.onSubscribedQualityUpdate = undefined;\n      this.onTokenRefresh = undefined;\n      this.onTrickle = undefined;\n      this.onClose = undefined;\n    };\n    this.log = getLogger((_a = loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Signal);\n    this.loggerContextCb = loggerOptions.loggerContextCb;\n    this.useJSON = useJSON;\n    this.requestQueue = new AsyncQueue();\n    this.queuedRequests = [];\n    this.closingLock = new Mutex();\n    this.connectionLock = new Mutex();\n    this.state = SignalConnectionState.DISCONNECTED;\n  }\n  get logContext() {\n    var _a, _b;\n    return (_b = (_a = this.loggerContextCb) === null || _a === void 0 ? void 0 : _a.call(this)) !== null && _b !== void 0 ? _b : {};\n  }\n  join(url, token, opts, abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // during a full reconnect, we'd want to start the sequence even if currently\n      // connected\n      this.state = SignalConnectionState.CONNECTING;\n      this.options = opts;\n      const res = yield this.connect(url, token, opts, abortSignal);\n      return res;\n    });\n  }\n  reconnect(url, token, sid, reason) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.options) {\n        this.log.warn('attempted to reconnect without signal options being set, ignoring', this.logContext);\n        return;\n      }\n      this.state = SignalConnectionState.RECONNECTING;\n      // clear ping interval and restart it once reconnected\n      this.clearPingInterval();\n      const res = yield this.connect(url, token, Object.assign(Object.assign({}, this.options), {\n        reconnect: true,\n        sid,\n        reconnectReason: reason\n      }));\n      return res;\n    });\n  }\n  connect(url, token, opts, abortSignal) {\n    this.connectOptions = opts;\n    url = toWebsocketUrl(url);\n    // strip trailing slash\n    url = url.replace(/\\/$/, '');\n    url += '/rtc';\n    const clientInfo = getClientInfo();\n    const params = createConnectionParams(token, clientInfo, opts);\n    return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.connectionLock.lock();\n      try {\n        const abortHandler = () => __awaiter(this, void 0, void 0, function* () {\n          this.close();\n          clearTimeout(wsTimeout);\n          reject(new ConnectionError('room connection has been cancelled (signal)'));\n        });\n        const wsTimeout = setTimeout(() => {\n          this.close();\n          reject(new ConnectionError('room connection has timed out (signal)'));\n        }, opts.websocketTimeout);\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n          abortHandler();\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener('abort', abortHandler);\n        this.log.debug(\"connecting to \".concat(url + params), this.logContext);\n        if (this.ws) {\n          yield this.close(false);\n        }\n        this.ws = new WebSocket(url + params);\n        this.ws.binaryType = 'arraybuffer';\n        this.ws.onopen = () => {\n          clearTimeout(wsTimeout);\n        };\n        this.ws.onerror = ev => __awaiter(this, void 0, void 0, function* () {\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            this.state = SignalConnectionState.DISCONNECTED;\n            clearTimeout(wsTimeout);\n            try {\n              const resp = yield fetch(\"http\".concat(url.substring(2), \"/validate\").concat(params));\n              if (resp.status.toFixed(0).startsWith('4')) {\n                const msg = yield resp.text();\n                reject(new ConnectionError(msg, 0 /* ConnectionErrorReason.NotAllowed */, resp.status));\n              } else {\n                reject(new ConnectionError('Internal error', 2 /* ConnectionErrorReason.InternalError */, resp.status));\n              }\n            } catch (e) {\n              reject(new ConnectionError('server was not reachable', 1 /* ConnectionErrorReason.ServerUnreachable */));\n            }\n            return;\n          }\n          // other errors, handle\n          this.handleWSError(ev);\n        });\n        this.ws.onmessage = ev => __awaiter(this, void 0, void 0, function* () {\n          var _a, _b, _c;\n          // not considered connected until JoinResponse is received\n          let resp;\n          if (typeof ev.data === 'string') {\n            const json = JSON.parse(ev.data);\n            resp = SignalResponse.fromJson(json, {\n              ignoreUnknownFields: true\n            });\n          } else if (ev.data instanceof ArrayBuffer) {\n            resp = SignalResponse.fromBinary(new Uint8Array(ev.data));\n          } else {\n            this.log.error(\"could not decode websocket message: \".concat(typeof ev.data), this.logContext);\n            return;\n          }\n          if (this.state !== SignalConnectionState.CONNECTED) {\n            let shouldProcessMessage = false;\n            // handle join message only\n            if (((_a = resp.message) === null || _a === void 0 ? void 0 : _a.case) === 'join') {\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener('abort', abortHandler);\n              this.pingTimeoutDuration = resp.message.value.pingTimeout;\n              this.pingIntervalDuration = resp.message.value.pingInterval;\n              if (this.pingTimeoutDuration && this.pingTimeoutDuration > 0) {\n                this.log.debug('ping config', Object.assign(Object.assign({}, this.logContext), {\n                  timeout: this.pingTimeoutDuration,\n                  interval: this.pingIntervalDuration\n                }));\n                this.startPingInterval();\n              }\n              resolve(resp.message.value);\n            } else if (this.state === SignalConnectionState.RECONNECTING && resp.message.case !== 'leave') {\n              // in reconnecting, any message received means signal reconnected\n              this.state = SignalConnectionState.CONNECTED;\n              abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener('abort', abortHandler);\n              this.startPingInterval();\n              if (((_b = resp.message) === null || _b === void 0 ? void 0 : _b.case) === 'reconnect') {\n                resolve(resp.message.value);\n              } else {\n                this.log.debug('declaring signal reconnected without reconnect response received', this.logContext);\n                resolve(undefined);\n                shouldProcessMessage = true;\n              }\n            } else if (this.isEstablishingConnection && resp.message.case === 'leave') {\n              reject(new ConnectionError('Received leave request while trying to (re)connect', 4 /* ConnectionErrorReason.LeaveRequest */));\n            } else if (!opts.reconnect) {\n              // non-reconnect case, should receive join response first\n              reject(new ConnectionError(\"did not receive join response, got \".concat((_c = resp.message) === null || _c === void 0 ? void 0 : _c.case, \" instead\")));\n            }\n            if (!shouldProcessMessage) {\n              return;\n            }\n          }\n          if (this.signalLatency) {\n            yield sleep(this.signalLatency);\n          }\n          this.handleSignalResponse(resp);\n        });\n        this.ws.onclose = ev => {\n          if (this.isEstablishingConnection) {\n            reject(new ConnectionError('Websocket got closed during a (re)connection attempt'));\n          }\n          this.log.warn(\"websocket closed\", Object.assign(Object.assign({}, this.logContext), {\n            reason: ev.reason,\n            code: ev.code,\n            wasClean: ev.wasClean,\n            state: this.state\n          }));\n          this.handleOnClose(ev.reason);\n        };\n      } finally {\n        unlock();\n      }\n    }));\n  }\n  close() {\n    return __awaiter(this, arguments, void 0, function () {\n      var _this = this;\n      let updateState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return function* () {\n        const unlock = yield _this.closingLock.lock();\n        try {\n          _this.clearPingInterval();\n          if (updateState) {\n            _this.state = SignalConnectionState.DISCONNECTING;\n          }\n          if (_this.ws) {\n            _this.ws.onmessage = null;\n            _this.ws.onopen = null;\n            _this.ws.onclose = null;\n            // calling `ws.close()` only starts the closing handshake (CLOSING state), prefer to wait until state is actually CLOSED\n            const closePromise = new Promise(resolve => {\n              if (_this.ws) {\n                _this.ws.onclose = () => {\n                  resolve();\n                };\n              } else {\n                resolve();\n              }\n            });\n            if (_this.ws.readyState < _this.ws.CLOSING) {\n              _this.ws.close();\n              // 250ms grace period for ws to close gracefully\n              yield Promise.race([closePromise, sleep(250)]);\n            }\n            _this.ws = undefined;\n          }\n        } finally {\n          if (updateState) {\n            _this.state = SignalConnectionState.DISCONNECTED;\n          }\n          unlock();\n        }\n      }();\n    });\n  }\n  // initial offer after joining\n  sendOffer(offer) {\n    this.log.debug('sending offer', Object.assign(Object.assign({}, this.logContext), {\n      offerSdp: offer.sdp\n    }));\n    this.sendRequest({\n      case: 'offer',\n      value: toProtoSessionDescription(offer)\n    });\n  }\n  // answer a server-initiated offer\n  sendAnswer(answer) {\n    this.log.debug('sending answer', Object.assign(Object.assign({}, this.logContext), {\n      answerSdp: answer.sdp\n    }));\n    return this.sendRequest({\n      case: 'answer',\n      value: toProtoSessionDescription(answer)\n    });\n  }\n  sendIceCandidate(candidate, target) {\n    this.log.trace('sending ice candidate', Object.assign(Object.assign({}, this.logContext), {\n      candidate\n    }));\n    return this.sendRequest({\n      case: 'trickle',\n      value: new TrickleRequest({\n        candidateInit: JSON.stringify(candidate),\n        target\n      })\n    });\n  }\n  sendMuteTrack(trackSid, muted) {\n    return this.sendRequest({\n      case: 'mute',\n      value: new MuteTrackRequest({\n        sid: trackSid,\n        muted\n      })\n    });\n  }\n  sendAddTrack(req) {\n    return this.sendRequest({\n      case: 'addTrack',\n      value: req\n    });\n  }\n  sendUpdateLocalMetadata(metadata_1, name_1) {\n    return __awaiter(this, arguments, void 0, function (metadata, name) {\n      var _this2 = this;\n      let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return function* () {\n        const requestId = _this2.getNextRequestId();\n        yield _this2.sendRequest({\n          case: 'updateMetadata',\n          value: new UpdateParticipantMetadata({\n            requestId,\n            metadata,\n            name,\n            attributes\n          })\n        });\n        return requestId;\n      }();\n    });\n  }\n  sendUpdateTrackSettings(settings) {\n    this.sendRequest({\n      case: 'trackSetting',\n      value: settings\n    });\n  }\n  sendUpdateSubscription(sub) {\n    return this.sendRequest({\n      case: 'subscription',\n      value: sub\n    });\n  }\n  sendSyncState(sync) {\n    return this.sendRequest({\n      case: 'syncState',\n      value: sync\n    });\n  }\n  sendUpdateVideoLayers(trackSid, layers) {\n    return this.sendRequest({\n      case: 'updateLayers',\n      value: new UpdateVideoLayers({\n        trackSid,\n        layers\n      })\n    });\n  }\n  sendUpdateSubscriptionPermissions(allParticipants, trackPermissions) {\n    return this.sendRequest({\n      case: 'subscriptionPermission',\n      value: new SubscriptionPermission({\n        allParticipants,\n        trackPermissions\n      })\n    });\n  }\n  sendSimulateScenario(scenario) {\n    return this.sendRequest({\n      case: 'simulate',\n      value: scenario\n    });\n  }\n  sendPing() {\n    /** send both of ping and pingReq for compatibility to old and new server */\n    return Promise.all([this.sendRequest({\n      case: 'ping',\n      value: protoInt64.parse(Date.now())\n    }), this.sendRequest({\n      case: 'pingReq',\n      value: new Ping({\n        timestamp: protoInt64.parse(Date.now()),\n        rtt: protoInt64.parse(this.rtt)\n      })\n    })]);\n  }\n  sendUpdateLocalAudioTrack(trackSid, features) {\n    return this.sendRequest({\n      case: 'updateAudioTrack',\n      value: new UpdateLocalAudioTrack({\n        trackSid,\n        features\n      })\n    });\n  }\n  sendLeave() {\n    return this.sendRequest({\n      case: 'leave',\n      value: new LeaveRequest({\n        reason: DisconnectReason.CLIENT_INITIATED,\n        // server doesn't process this field, keeping it here to indicate the intent of a full disconnect\n        action: LeaveRequest_Action.DISCONNECT\n      })\n    });\n  }\n  sendRequest(message_1) {\n    return __awaiter(this, arguments, void 0, function (message) {\n      var _this3 = this;\n      let fromQueue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return function* () {\n        // capture all requests while reconnecting and put them in a queue\n        // unless the request originates from the queue, then don't enqueue again\n        const canQueue = !fromQueue && !canPassThroughQueue(message);\n        if (canQueue && _this3.state === SignalConnectionState.RECONNECTING) {\n          _this3.queuedRequests.push(() => __awaiter(_this3, void 0, void 0, function* () {\n            yield this.sendRequest(message, true);\n          }));\n          return;\n        }\n        // make sure previously queued requests are being sent first\n        if (!fromQueue) {\n          yield _this3.requestQueue.flush();\n        }\n        if (_this3.signalLatency) {\n          yield sleep(_this3.signalLatency);\n        }\n        if (!_this3.ws || _this3.ws.readyState !== _this3.ws.OPEN) {\n          _this3.log.error(\"cannot send signal request before connected, type: \".concat(message === null || message === void 0 ? void 0 : message.case), _this3.logContext);\n          return;\n        }\n        const req = new SignalRequest({\n          message\n        });\n        try {\n          if (_this3.useJSON) {\n            _this3.ws.send(req.toJsonString());\n          } else {\n            _this3.ws.send(req.toBinary());\n          }\n        } catch (e) {\n          _this3.log.error('error sending signal message', Object.assign(Object.assign({}, _this3.logContext), {\n            error: e\n          }));\n        }\n      }();\n    });\n  }\n  handleSignalResponse(res) {\n    var _a, _b;\n    const msg = res.message;\n    if (msg == undefined) {\n      this.log.debug('received unsupported message', this.logContext);\n      return;\n    }\n    let pingHandled = false;\n    if (msg.case === 'answer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onAnswer) {\n        this.onAnswer(sd);\n      }\n    } else if (msg.case === 'offer') {\n      const sd = fromProtoSessionDescription(msg.value);\n      if (this.onOffer) {\n        this.onOffer(sd);\n      }\n    } else if (msg.case === 'trickle') {\n      const candidate = JSON.parse(msg.value.candidateInit);\n      if (this.onTrickle) {\n        this.onTrickle(candidate, msg.value.target);\n      }\n    } else if (msg.case === 'update') {\n      if (this.onParticipantUpdate) {\n        this.onParticipantUpdate((_a = msg.value.participants) !== null && _a !== void 0 ? _a : []);\n      }\n    } else if (msg.case === 'trackPublished') {\n      if (this.onLocalTrackPublished) {\n        this.onLocalTrackPublished(msg.value);\n      }\n    } else if (msg.case === 'speakersChanged') {\n      if (this.onSpeakersChanged) {\n        this.onSpeakersChanged((_b = msg.value.speakers) !== null && _b !== void 0 ? _b : []);\n      }\n    } else if (msg.case === 'leave') {\n      if (this.onLeave) {\n        this.onLeave(msg.value);\n      }\n    } else if (msg.case === 'mute') {\n      if (this.onRemoteMuteChanged) {\n        this.onRemoteMuteChanged(msg.value.sid, msg.value.muted);\n      }\n    } else if (msg.case === 'roomUpdate') {\n      if (this.onRoomUpdate && msg.value.room) {\n        this.onRoomUpdate(msg.value.room);\n      }\n    } else if (msg.case === 'connectionQuality') {\n      if (this.onConnectionQuality) {\n        this.onConnectionQuality(msg.value);\n      }\n    } else if (msg.case === 'streamStateUpdate') {\n      if (this.onStreamStateUpdate) {\n        this.onStreamStateUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscribedQualityUpdate') {\n      if (this.onSubscribedQualityUpdate) {\n        this.onSubscribedQualityUpdate(msg.value);\n      }\n    } else if (msg.case === 'subscriptionPermissionUpdate') {\n      if (this.onSubscriptionPermissionUpdate) {\n        this.onSubscriptionPermissionUpdate(msg.value);\n      }\n    } else if (msg.case === 'refreshToken') {\n      if (this.onTokenRefresh) {\n        this.onTokenRefresh(msg.value);\n      }\n    } else if (msg.case === 'trackUnpublished') {\n      if (this.onLocalTrackUnpublished) {\n        this.onLocalTrackUnpublished(msg.value);\n      }\n    } else if (msg.case === 'subscriptionResponse') {\n      if (this.onSubscriptionError) {\n        this.onSubscriptionError(msg.value);\n      }\n    } else if (msg.case === 'pong') ; else if (msg.case === 'pongResp') {\n      this.rtt = Date.now() - Number.parseInt(msg.value.lastPingTimestamp.toString());\n      this.resetPingTimeout();\n      pingHandled = true;\n    } else if (msg.case === 'requestResponse') {\n      if (this.onRequestResponse) {\n        this.onRequestResponse(msg.value);\n      }\n    } else if (msg.case === 'trackSubscribed') {\n      if (this.onLocalTrackSubscribed) {\n        this.onLocalTrackSubscribed(msg.value.trackSid);\n      }\n    } else {\n      this.log.debug('unsupported message', Object.assign(Object.assign({}, this.logContext), {\n        msgCase: msg.case\n      }));\n    }\n    if (!pingHandled) {\n      this.resetPingTimeout();\n    }\n  }\n  setReconnected() {\n    while (this.queuedRequests.length > 0) {\n      const req = this.queuedRequests.shift();\n      if (req) {\n        this.requestQueue.run(req);\n      }\n    }\n  }\n  handleOnClose(reason) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === SignalConnectionState.DISCONNECTED) return;\n      const onCloseCallback = this.onClose;\n      yield this.close();\n      this.log.debug(\"websocket connection closed: \".concat(reason), Object.assign(Object.assign({}, this.logContext), {\n        reason\n      }));\n      if (onCloseCallback) {\n        onCloseCallback(reason);\n      }\n    });\n  }\n  handleWSError(ev) {\n    this.log.error('websocket error', Object.assign(Object.assign({}, this.logContext), {\n      error: ev\n    }));\n  }\n  /**\n   * Resets the ping timeout and starts a new timeout.\n   * Call this after receiving a pong message\n   */\n  resetPingTimeout() {\n    this.clearPingTimeout();\n    if (!this.pingTimeoutDuration) {\n      this.log.warn('ping timeout duration not set', this.logContext);\n      return;\n    }\n    this.pingTimeout = CriticalTimers.setTimeout(() => {\n      this.log.warn(\"ping timeout triggered. last pong received at: \".concat(new Date(Date.now() - this.pingTimeoutDuration * 1000).toUTCString()), this.logContext);\n      this.handleOnClose('ping timeout');\n    }, this.pingTimeoutDuration * 1000);\n  }\n  /**\n   * Clears ping timeout (does not start a new timeout)\n   */\n  clearPingTimeout() {\n    if (this.pingTimeout) {\n      CriticalTimers.clearTimeout(this.pingTimeout);\n    }\n  }\n  startPingInterval() {\n    this.clearPingInterval();\n    this.resetPingTimeout();\n    if (!this.pingIntervalDuration) {\n      this.log.warn('ping interval duration not set', this.logContext);\n      return;\n    }\n    this.log.debug('start ping interval', this.logContext);\n    this.pingInterval = CriticalTimers.setInterval(() => {\n      this.sendPing();\n    }, this.pingIntervalDuration * 1000);\n  }\n  clearPingInterval() {\n    this.log.debug('clearing ping interval', this.logContext);\n    this.clearPingTimeout();\n    if (this.pingInterval) {\n      CriticalTimers.clearInterval(this.pingInterval);\n    }\n  }\n}\nfunction fromProtoSessionDescription(sd) {\n  const rsd = {\n    type: 'offer',\n    sdp: sd.sdp\n  };\n  switch (sd.type) {\n    case 'answer':\n    case 'offer':\n    case 'pranswer':\n    case 'rollback':\n      rsd.type = sd.type;\n      break;\n  }\n  return rsd;\n}\nfunction toProtoSessionDescription(rsd) {\n  const sd = new SessionDescription({\n    sdp: rsd.sdp,\n    type: rsd.type\n  });\n  return sd;\n}\nfunction createConnectionParams(token, info, opts) {\n  var _a;\n  const params = new URLSearchParams();\n  params.set('access_token', token);\n  // opts\n  if (opts.reconnect) {\n    params.set('reconnect', '1');\n    if (opts.sid) {\n      params.set('sid', opts.sid);\n    }\n  }\n  params.set('auto_subscribe', opts.autoSubscribe ? '1' : '0');\n  // ClientInfo\n  params.set('sdk', isReactNative() ? 'reactnative' : 'js');\n  params.set('version', info.version);\n  params.set('protocol', info.protocol.toString());\n  if (info.deviceModel) {\n    params.set('device_model', info.deviceModel);\n  }\n  if (info.os) {\n    params.set('os', info.os);\n  }\n  if (info.osVersion) {\n    params.set('os_version', info.osVersion);\n  }\n  if (info.browser) {\n    params.set('browser', info.browser);\n  }\n  if (info.browserVersion) {\n    params.set('browser_version', info.browserVersion);\n  }\n  if (opts.adaptiveStream) {\n    params.set('adaptive_stream', '1');\n  }\n  if (opts.reconnectReason) {\n    params.set('reconnect_reason', opts.reconnectReason.toString());\n  }\n  // @ts-ignore\n  if ((_a = navigator.connection) === null || _a === void 0 ? void 0 : _a.type) {\n    // @ts-ignore\n    params.set('network', navigator.connection.type);\n  }\n  return \"?\".concat(params.toString());\n}\n\nvar parser$1 = {};\n\nvar grammar$2 = {exports: {}};\n\nvar grammar$1 = grammar$2.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{\n    name: 'name'\n  }],\n  i: [{\n    name: 'description'\n  }],\n  u: [{\n    name: 'uri'\n  }],\n  e: [{\n    name: 'email'\n  }],\n  p: [{\n    name: 'phone'\n  }],\n  z: [{\n    name: 'timezones'\n  }],\n  // TODO: this one can actually be parsed properly...\n  r: [{\n    name: 'repeats'\n  }],\n  // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [{\n    // a=rtpmap:110 opus/48000/2\n    push: 'rtp',\n    reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n    names: ['payload', 'codec', 'rate', 'encoding'],\n    format: function (o) {\n      return o.encoding ? 'rtpmap:%d %s/%s/%s' : o.rate ? 'rtpmap:%d %s/%s' : 'rtpmap:%d %s';\n    }\n  }, {\n    // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n    // a=fmtp:111 minptime=10; useinbandfec=1\n    push: 'fmtp',\n    reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n    names: ['payload', 'config'],\n    format: 'fmtp:%d %s'\n  }, {\n    // a=control:streamid=0\n    name: 'control',\n    reg: /^control:(.*)/,\n    format: 'control:%s'\n  }, {\n    // a=rtcp:65179 IN IP4 193.84.77.194\n    name: 'rtcp',\n    reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n    names: ['port', 'netType', 'ipVer', 'address'],\n    format: function (o) {\n      return o.address != null ? 'rtcp:%d %s IP%d %s' : 'rtcp:%d';\n    }\n  }, {\n    // a=rtcp-fb:98 trr-int 100\n    push: 'rtcpFbTrrInt',\n    reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n    names: ['payload', 'value'],\n    format: 'rtcp-fb:%s trr-int %d'\n  }, {\n    // a=rtcp-fb:98 nack rpsi\n    push: 'rtcpFb',\n    reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n    names: ['payload', 'type', 'subtype'],\n    format: function (o) {\n      return o.subtype != null ? 'rtcp-fb:%s %s %s' : 'rtcp-fb:%s %s';\n    }\n  }, {\n    // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n    // a=extmap:1/recvonly URI-gps-string\n    // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n    push: 'ext',\n    reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n    names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n    format: function (o) {\n      return 'extmap:%d' + (o.direction ? '/%s' : '%v') + (o['encrypt-uri'] ? ' %s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n    }\n  }, {\n    // a=extmap-allow-mixed\n    name: 'extmapAllowMixed',\n    reg: /^(extmap-allow-mixed)/\n  }, {\n    // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n    push: 'crypto',\n    reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n    names: ['id', 'suite', 'config', 'sessionConfig'],\n    format: function (o) {\n      return o.sessionConfig != null ? 'crypto:%d %s %s %s' : 'crypto:%d %s %s';\n    }\n  }, {\n    // a=setup:actpass\n    name: 'setup',\n    reg: /^setup:(\\w*)/,\n    format: 'setup:%s'\n  }, {\n    // a=connection:new\n    name: 'connectionType',\n    reg: /^connection:(new|existing)/,\n    format: 'connection:%s'\n  }, {\n    // a=mid:1\n    name: 'mid',\n    reg: /^mid:([^\\s]*)/,\n    format: 'mid:%s'\n  }, {\n    // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n    name: 'msid',\n    reg: /^msid:(.*)/,\n    format: 'msid:%s'\n  }, {\n    // a=ptime:20\n    name: 'ptime',\n    reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n    format: 'ptime:%d'\n  }, {\n    // a=maxptime:60\n    name: 'maxptime',\n    reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n    format: 'maxptime:%d'\n  }, {\n    // a=sendrecv\n    name: 'direction',\n    reg: /^(sendrecv|recvonly|sendonly|inactive)/\n  }, {\n    // a=ice-lite\n    name: 'icelite',\n    reg: /^(ice-lite)/\n  }, {\n    // a=ice-ufrag:F7gI\n    name: 'iceUfrag',\n    reg: /^ice-ufrag:(\\S*)/,\n    format: 'ice-ufrag:%s'\n  }, {\n    // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n    name: 'icePwd',\n    reg: /^ice-pwd:(\\S*)/,\n    format: 'ice-pwd:%s'\n  }, {\n    // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n    name: 'fingerprint',\n    reg: /^fingerprint:(\\S*) (\\S*)/,\n    names: ['type', 'hash'],\n    format: 'fingerprint:%s %s'\n  }, {\n    // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n    // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n    // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n    // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n    // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n    push: 'candidates',\n    reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n    names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n    format: function (o) {\n      var str = 'candidate:%s %d %s %d %s %d typ %s';\n      str += o.raddr != null ? ' raddr %s rport %d' : '%v%v';\n\n      // NB: candidate has three optional chunks, so %void middles one if it's missing\n      str += o.tcptype != null ? ' tcptype %s' : '%v';\n      if (o.generation != null) {\n        str += ' generation %d';\n      }\n      str += o['network-id'] != null ? ' network-id %d' : '%v';\n      str += o['network-cost'] != null ? ' network-cost %d' : '%v';\n      return str;\n    }\n  }, {\n    // a=end-of-candidates (keep after the candidates line for readability)\n    name: 'endOfCandidates',\n    reg: /^(end-of-candidates)/\n  }, {\n    // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n    name: 'remoteCandidates',\n    reg: /^remote-candidates:(.*)/,\n    format: 'remote-candidates:%s'\n  }, {\n    // a=ice-options:google-ice\n    name: 'iceOptions',\n    reg: /^ice-options:(\\S*)/,\n    format: 'ice-options:%s'\n  }, {\n    // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n    push: 'ssrcs',\n    reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n    names: ['id', 'attribute', 'value'],\n    format: function (o) {\n      var str = 'ssrc:%d';\n      if (o.attribute != null) {\n        str += ' %s';\n        if (o.value != null) {\n          str += ':%s';\n        }\n      }\n      return str;\n    }\n  }, {\n    // a=ssrc-group:FEC 1 2\n    // a=ssrc-group:FEC-FR 3004364195 1080772241\n    push: 'ssrcGroups',\n    // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n    reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n    names: ['semantics', 'ssrcs'],\n    format: 'ssrc-group:%s %s'\n  }, {\n    // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n    name: 'msidSemantic',\n    reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n    names: ['semantic', 'token'],\n    format: 'msid-semantic: %s %s' // space after ':' is not accidental\n  }, {\n    // a=group:BUNDLE audio video\n    push: 'groups',\n    reg: /^group:(\\w*) (.*)/,\n    names: ['type', 'mids'],\n    format: 'group:%s %s'\n  }, {\n    // a=rtcp-mux\n    name: 'rtcpMux',\n    reg: /^(rtcp-mux)/\n  }, {\n    // a=rtcp-rsize\n    name: 'rtcpRsize',\n    reg: /^(rtcp-rsize)/\n  }, {\n    // a=sctpmap:5000 webrtc-datachannel 1024\n    name: 'sctpmap',\n    reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n    names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n    format: function (o) {\n      return o.maxMessageSize != null ? 'sctpmap:%s %s %s' : 'sctpmap:%s %s';\n    }\n  }, {\n    // a=x-google-flag:conference\n    name: 'xGoogleFlag',\n    reg: /^x-google-flag:([^\\s]*)/,\n    format: 'x-google-flag:%s'\n  }, {\n    // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n    push: 'rids',\n    reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n    names: ['id', 'direction', 'params'],\n    format: function (o) {\n      return o.params ? 'rid:%s %s %s' : 'rid:%s %s';\n    }\n  }, {\n    // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n    // a=imageattr:* send [x=800,y=640] recv *\n    // a=imageattr:100 recv [x=320,y=240]\n    push: 'imageattrs',\n    reg: new RegExp(\n    // a=imageattr:97\n    '^imageattr:(\\\\d+|\\\\*)' +\n    // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n    '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n    // recv [x=330,y=250]\n    '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'),\n    names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n    format: function (o) {\n      return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n    }\n  }, {\n    // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n    // a=simulcast:recv 1;4,5 send 6;7\n    name: 'simulcast',\n    reg: new RegExp(\n    // a=simulcast:\n    '^simulcast:' +\n    // send 1,2,3;~4,~5\n    '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n    // space + recv 6;~7,~8\n    '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n    // end\n    '$'),\n    names: ['dir1', 'list1', 'dir2', 'list2'],\n    format: function (o) {\n      return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n    }\n  }, {\n    // old simulcast draft 03 (implemented by Firefox)\n    //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n    // a=simulcast: recv pt=97;98 send pt=97\n    // a=simulcast: send rid=5;6;7 paused=6,7\n    name: 'simulcast_03',\n    reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n    names: ['value'],\n    format: 'simulcast: %s'\n  }, {\n    // a=framerate:25\n    // a=framerate:29.97\n    name: 'framerate',\n    reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n    format: 'framerate:%s'\n  }, {\n    // RFC4570\n    // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n    name: 'sourceFilter',\n    reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n    names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n    format: 'source-filter: %s %s %s %s %s'\n  }, {\n    // a=bundle-only\n    name: 'bundleOnly',\n    reg: /^(bundle-only)/\n  }, {\n    // a=label:1\n    name: 'label',\n    reg: /^label:(.+)/,\n    format: 'label:%s'\n  }, {\n    // RFC version 26 for SCTP over DTLS\n    // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n    name: 'sctpPort',\n    reg: /^sctp-port:(\\d+)$/,\n    format: 'sctp-port:%s'\n  }, {\n    // RFC version 26 for SCTP over DTLS\n    // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n    name: 'maxMessageSize',\n    reg: /^max-message-size:(\\d+)$/,\n    format: 'max-message-size:%s'\n  }, {\n    // RFC7273\n    // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n    push: 'tsRefClocks',\n    reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n    names: ['clksrc', 'clksrcExt'],\n    format: function (o) {\n      return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n    }\n  }, {\n    // RFC7273\n    // a=mediaclk:direct=963214424\n    name: 'mediaClk',\n    reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n    names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n    format: function (o) {\n      var str = 'mediaclk:';\n      str += o.id != null ? 'id=%s %s' : '%v%s';\n      str += o.mediaClockValue != null ? '=%s' : '';\n      str += o.rateNumerator != null ? ' rate=%s' : '';\n      str += o.rateDenominator != null ? '/%s' : '';\n      return str;\n    }\n  }, {\n    // a=keywds:keywords\n    name: 'keywords',\n    reg: /^keywds:(.+)$/,\n    format: 'keywds:%s'\n  }, {\n    // a=content:main\n    name: 'content',\n    reg: /^content:(.+)/,\n    format: 'content:%s'\n  },\n  // BFCP https://tools.ietf.org/html/rfc4583\n  {\n    // a=floorctrl:c-s\n    name: 'bfcpFloorCtrl',\n    reg: /^floorctrl:(c-only|s-only|c-s)/,\n    format: 'floorctrl:%s'\n  }, {\n    // a=confid:1\n    name: 'bfcpConfId',\n    reg: /^confid:(\\d+)/,\n    format: 'confid:%s'\n  }, {\n    // a=userid:1\n    name: 'bfcpUserId',\n    reg: /^userid:(\\d+)/,\n    format: 'userid:%s'\n  }, {\n    // a=floorid:1\n    name: 'bfcpFloorId',\n    reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n    names: ['id', 'mStream'],\n    format: 'floorid:%s mstrm:%s'\n  }, {\n    // any a= that we don't understand is kept verbatim on media.invalid\n    push: 'invalid',\n    names: ['value']\n  }]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar$1).forEach(function (key) {\n  var objs = grammar$1[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\nvar grammarExports = grammar$2.exports;\n\n(function (exports) {\n  var toIntIfInt = function (v) {\n    return String(Number(v)) === v ? Number(v) : v;\n  };\n  var attachProperties = function (match, location, names, rawName) {\n    if (rawName && !names) {\n      location[rawName] = toIntIfInt(match[1]);\n    } else {\n      for (var i = 0; i < names.length; i += 1) {\n        if (match[i + 1] != null) {\n          location[names[i]] = toIntIfInt(match[i + 1]);\n        }\n      }\n    }\n  };\n  var parseReg = function (obj, location, content) {\n    var needsBlank = obj.name && obj.names;\n    if (obj.push && !location[obj.push]) {\n      location[obj.push] = [];\n    } else if (needsBlank && !location[obj.name]) {\n      location[obj.name] = {};\n    }\n    var keyLocation = obj.push ? {} :\n    // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n    attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n    if (obj.push) {\n      location[obj.push].push(keyLocation);\n    }\n  };\n  var grammar = grammarExports;\n  var validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n  exports.parse = function (sdp) {\n    var session = {},\n      media = [],\n      location = session; // points at where properties go under (one of the above)\n\n    // parse lines we understand\n    sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n      var type = l[0];\n      var content = l.slice(2);\n      if (type === 'm') {\n        media.push({\n          rtp: [],\n          fmtp: []\n        });\n        location = media[media.length - 1]; // point at latest media line\n      }\n      for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n        var obj = grammar[type][j];\n        if (obj.reg.test(content)) {\n          return parseReg(obj, location, content);\n        }\n      }\n    });\n    session.media = media; // link it up\n    return session;\n  };\n  var paramReducer = function (acc, expr) {\n    var s = expr.split(/=(.+)/, 2);\n    if (s.length === 2) {\n      acc[s[0]] = toIntIfInt(s[1]);\n    } else if (s.length === 1 && expr.length > 1) {\n      acc[s[0]] = undefined;\n    }\n    return acc;\n  };\n  exports.parseParams = function (str) {\n    return str.split(/;\\s?/).reduce(paramReducer, {});\n  };\n\n  // For backward compatibility - alias will be removed in 3.0.0\n  exports.parseFmtpConfig = exports.parseParams;\n  exports.parsePayloads = function (str) {\n    return str.toString().split(' ').map(Number);\n  };\n  exports.parseRemoteCandidates = function (str) {\n    var candidates = [];\n    var parts = str.split(' ').map(toIntIfInt);\n    for (var i = 0; i < parts.length; i += 3) {\n      candidates.push({\n        component: parts[i],\n        ip: parts[i + 1],\n        port: parts[i + 2]\n      });\n    }\n    return candidates;\n  };\n  exports.parseImageAttributes = function (str) {\n    return str.split(' ').map(function (item) {\n      return item.substring(1, item.length - 1).split(',').reduce(paramReducer, {});\n    });\n  };\n  exports.parseSimulcastStreamList = function (str) {\n    return str.split(';').map(function (stream) {\n      return stream.split(',').map(function (format) {\n        var scid,\n          paused = false;\n        if (format[0] !== '~') {\n          scid = toIntIfInt(format);\n        } else {\n          scid = toIntIfInt(format.substring(1, format.length));\n          paused = true;\n        }\n        return {\n          scid: scid,\n          paused: paused\n        };\n      });\n    });\n  };\n})(parser$1);\n\nvar grammar = grammarExports;\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n      case '%%':\n        return '%';\n      case '%s':\n        return String(arg);\n      case '%d':\n        return Number(arg);\n      case '%v':\n        return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ? obj.format(obj.push ? location : location[obj.name]) : obj.format;\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      } else {\n        // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  } else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = ['v', 'o', 's', 'i', 'u', 'e', 'p', 'c', 'b', 't', 'r', 'z', 'a'];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\nvar writer$1 = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      } else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        } else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n\nvar parser = parser$1;\nvar writer = writer$1;\nvar write = writer;\nvar parse = parser.parse;\nparser.parseParams;\nparser.parseFmtpConfig; // Alias of parseParams().\nparser.parsePayloads;\nparser.parseRemoteCandidates;\nparser.parseImageAttributes;\nparser.parseSimulcastStreamList;\n\n/* The svc codec (av1/vp9) would use a very low bitrate at the begining and\nincrease slowly by the bandwidth estimator until it reach the target bitrate. The\nprocess commonly cost more than 10 seconds cause subscriber will get blur video at\nthe first few seconds. So we use a 70% of target bitrate here as the start bitrate to\neliminate this issue.\n*/\nconst startBitrateForSVC = 0.7;\nconst PCEvents = {\n  NegotiationStarted: 'negotiationStarted',\n  NegotiationComplete: 'negotiationComplete',\n  RTPVideoPayloadTypes: 'rtpVideoPayloadTypes'\n};\n/** @internal */\nclass PCTransport extends eventsExports.EventEmitter {\n  get pc() {\n    if (!this._pc) {\n      this._pc = this.createPC();\n    }\n    return this._pc;\n  }\n  constructor(config) {\n    let loggerOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    super();\n    this.log = livekitLogger;\n    this.pendingCandidates = [];\n    this.restartingIce = false;\n    this.renegotiate = false;\n    this.trackBitrates = [];\n    this.remoteStereoMids = [];\n    this.remoteNackMids = [];\n    // debounced negotiate interface\n    this.negotiate = r(onError => __awaiter(this, void 0, void 0, function* () {\n      this.emit(PCEvents.NegotiationStarted);\n      try {\n        yield this.createAndSendOffer();\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          throw e;\n        }\n      }\n    }), 100);\n    this.close = () => {\n      if (!this._pc) {\n        return;\n      }\n      this._pc.close();\n      this._pc.onconnectionstatechange = null;\n      this._pc.oniceconnectionstatechange = null;\n      this._pc.onicegatheringstatechange = null;\n      this._pc.ondatachannel = null;\n      this._pc.onnegotiationneeded = null;\n      this._pc.onsignalingstatechange = null;\n      this._pc.onicecandidate = null;\n      this._pc.ondatachannel = null;\n      this._pc.ontrack = null;\n      this._pc.onconnectionstatechange = null;\n      this._pc.oniceconnectionstatechange = null;\n      this._pc = null;\n    };\n    this.log = getLogger((_a = loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.PCTransport);\n    this.loggerOptions = loggerOptions;\n    this.config = config;\n    this._pc = this.createPC();\n  }\n  createPC() {\n    const pc = new RTCPeerConnection(this.config);\n    pc.onicecandidate = ev => {\n      var _a;\n      if (!ev.candidate) return;\n      (_a = this.onIceCandidate) === null || _a === void 0 ? void 0 : _a.call(this, ev.candidate);\n    };\n    pc.onicecandidateerror = ev => {\n      var _a;\n      (_a = this.onIceCandidateError) === null || _a === void 0 ? void 0 : _a.call(this, ev);\n    };\n    pc.oniceconnectionstatechange = () => {\n      var _a;\n      (_a = this.onIceConnectionStateChange) === null || _a === void 0 ? void 0 : _a.call(this, pc.iceConnectionState);\n    };\n    pc.onsignalingstatechange = () => {\n      var _a;\n      (_a = this.onSignalingStatechange) === null || _a === void 0 ? void 0 : _a.call(this, pc.signalingState);\n    };\n    pc.onconnectionstatechange = () => {\n      var _a;\n      (_a = this.onConnectionStateChange) === null || _a === void 0 ? void 0 : _a.call(this, pc.connectionState);\n    };\n    pc.ondatachannel = ev => {\n      var _a;\n      (_a = this.onDataChannel) === null || _a === void 0 ? void 0 : _a.call(this, ev);\n    };\n    pc.ontrack = ev => {\n      var _a;\n      (_a = this.onTrack) === null || _a === void 0 ? void 0 : _a.call(this, ev);\n    };\n    return pc;\n  }\n  get logContext() {\n    var _a, _b;\n    return Object.assign({}, (_b = (_a = this.loggerOptions).loggerContextCb) === null || _b === void 0 ? void 0 : _b.call(_a));\n  }\n  get isICEConnected() {\n    return this._pc !== null && (this.pc.iceConnectionState === 'connected' || this.pc.iceConnectionState === 'completed');\n  }\n  addIceCandidate(candidate) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.pc.remoteDescription && !this.restartingIce) {\n        return this.pc.addIceCandidate(candidate);\n      }\n      this.pendingCandidates.push(candidate);\n    });\n  }\n  setRemoteDescription(sd) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      let mungedSDP = undefined;\n      if (sd.type === 'offer') {\n        let {\n          stereoMids,\n          nackMids\n        } = extractStereoAndNackAudioFromOffer(sd);\n        this.remoteStereoMids = stereoMids;\n        this.remoteNackMids = nackMids;\n      } else if (sd.type === 'answer') {\n        const sdpParsed = parse((_a = sd.sdp) !== null && _a !== void 0 ? _a : '');\n        sdpParsed.media.forEach(media => {\n          if (media.type === 'audio') {\n            // mung sdp for opus bitrate settings\n            this.trackBitrates.some(trackbr => {\n              if (!trackbr.transceiver || media.mid != trackbr.transceiver.mid) {\n                return false;\n              }\n              let codecPayload = 0;\n              media.rtp.some(rtp => {\n                if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n                  codecPayload = rtp.payload;\n                  return true;\n                }\n                return false;\n              });\n              if (codecPayload === 0) {\n                return true;\n              }\n              let fmtpFound = false;\n              for (const fmtp of media.fmtp) {\n                if (fmtp.payload === codecPayload) {\n                  fmtp.config = fmtp.config.split(';').filter(attr => !attr.includes('maxaveragebitrate')).join(';');\n                  if (trackbr.maxbr > 0) {\n                    fmtp.config += \";maxaveragebitrate=\".concat(trackbr.maxbr * 1000);\n                  }\n                  fmtpFound = true;\n                  break;\n                }\n              }\n              if (!fmtpFound) {\n                if (trackbr.maxbr > 0) {\n                  media.fmtp.push({\n                    payload: codecPayload,\n                    config: \"maxaveragebitrate=\".concat(trackbr.maxbr * 1000)\n                  });\n                }\n              }\n              return true;\n            });\n          }\n        });\n        mungedSDP = write(sdpParsed);\n      }\n      yield this.setMungedSDP(sd, mungedSDP, true);\n      this.pendingCandidates.forEach(candidate => {\n        this.pc.addIceCandidate(candidate);\n      });\n      this.pendingCandidates = [];\n      this.restartingIce = false;\n      if (this.renegotiate) {\n        this.renegotiate = false;\n        yield this.createAndSendOffer();\n      } else if (sd.type === 'answer') {\n        this.emit(PCEvents.NegotiationComplete);\n        if (sd.sdp) {\n          const sdpParsed = parse(sd.sdp);\n          sdpParsed.media.forEach(media => {\n            if (media.type === 'video') {\n              this.emit(PCEvents.RTPVideoPayloadTypes, media.rtp);\n            }\n          });\n        }\n      }\n    });\n  }\n  createAndSendOffer(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (this.onOffer === undefined) {\n        return;\n      }\n      if (options === null || options === void 0 ? void 0 : options.iceRestart) {\n        this.log.debug('restarting ICE', this.logContext);\n        this.restartingIce = true;\n      }\n      if (this._pc && this._pc.signalingState === 'have-local-offer') {\n        // we're waiting for the peer to accept our offer, so we'll just wait\n        // the only exception to this is when ICE restart is needed\n        const currentSD = this._pc.remoteDescription;\n        if ((options === null || options === void 0 ? void 0 : options.iceRestart) && currentSD) {\n          // TODO: handle when ICE restart is needed but we don't have a remote description\n          // the best thing to do is to recreate the peerconnection\n          yield this._pc.setRemoteDescription(currentSD);\n        } else {\n          this.renegotiate = true;\n          return;\n        }\n      } else if (!this._pc || this._pc.signalingState === 'closed') {\n        this.log.warn('could not createOffer with closed peer connection', this.logContext);\n        return;\n      }\n      // actually negotiate\n      this.log.debug('starting to negotiate', this.logContext);\n      const offer = yield this.pc.createOffer(options);\n      this.log.debug('original offer', Object.assign({\n        sdp: offer.sdp\n      }, this.logContext));\n      const sdpParsed = parse((_a = offer.sdp) !== null && _a !== void 0 ? _a : '');\n      sdpParsed.media.forEach(media => {\n        if (media.type === 'audio') {\n          ensureAudioNackAndStereo(media, [], []);\n        } else if (media.type === 'video') {\n          this.trackBitrates.some(trackbr => {\n            if (!media.msid || !trackbr.cid || !media.msid.includes(trackbr.cid)) {\n              return false;\n            }\n            let codecPayload = 0;\n            media.rtp.some(rtp => {\n              if (rtp.codec.toUpperCase() === trackbr.codec.toUpperCase()) {\n                codecPayload = rtp.payload;\n                return true;\n              }\n              return false;\n            });\n            if (codecPayload === 0) {\n              return true;\n            }\n            if (isSVCCodec(trackbr.codec)) {\n              ensureVideoDDExtensionForSVC(media);\n            }\n            // TODO: av1 slow starting issue already fixed in chrome 124, clean this after some versions\n            // mung sdp for av1 bitrate setting that can't apply by sendEncoding\n            if (trackbr.codec !== 'av1') {\n              return true;\n            }\n            const startBitrate = Math.round(trackbr.maxbr * startBitrateForSVC);\n            for (const fmtp of media.fmtp) {\n              if (fmtp.payload === codecPayload) {\n                // if another track's fmtp already is set, we cannot override the bitrate\n                // this has the unfortunate consequence of being forced to use the\n                // initial track's bitrate for all tracks\n                if (!fmtp.config.includes('x-google-start-bitrate')) {\n                  fmtp.config += \";x-google-start-bitrate=\".concat(startBitrate);\n                }\n                break;\n              }\n            }\n            return true;\n          });\n        }\n      });\n      yield this.setMungedSDP(offer, write(sdpParsed));\n      this.onOffer(offer);\n    });\n  }\n  createAndSetAnswer() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const answer = yield this.pc.createAnswer();\n      const sdpParsed = parse((_a = answer.sdp) !== null && _a !== void 0 ? _a : '');\n      sdpParsed.media.forEach(media => {\n        if (media.type === 'audio') {\n          ensureAudioNackAndStereo(media, this.remoteStereoMids, this.remoteNackMids);\n        }\n      });\n      yield this.setMungedSDP(answer, write(sdpParsed));\n      return answer;\n    });\n  }\n  createDataChannel(label, dataChannelDict) {\n    return this.pc.createDataChannel(label, dataChannelDict);\n  }\n  addTransceiver(mediaStreamTrack, transceiverInit) {\n    return this.pc.addTransceiver(mediaStreamTrack, transceiverInit);\n  }\n  addTrack(track) {\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot add track');\n    }\n    return this._pc.addTrack(track);\n  }\n  setTrackCodecBitrate(info) {\n    this.trackBitrates.push(info);\n  }\n  setConfiguration(rtcConfig) {\n    var _a;\n    if (!this._pc) {\n      throw new UnexpectedConnectionState('PC closed, cannot configure');\n    }\n    return (_a = this._pc) === null || _a === void 0 ? void 0 : _a.setConfiguration(rtcConfig);\n  }\n  canRemoveTrack() {\n    var _a;\n    return !!((_a = this._pc) === null || _a === void 0 ? void 0 : _a.removeTrack);\n  }\n  removeTrack(sender) {\n    var _a;\n    return (_a = this._pc) === null || _a === void 0 ? void 0 : _a.removeTrack(sender);\n  }\n  getConnectionState() {\n    var _a, _b;\n    return (_b = (_a = this._pc) === null || _a === void 0 ? void 0 : _a.connectionState) !== null && _b !== void 0 ? _b : 'closed';\n  }\n  getICEConnectionState() {\n    var _a, _b;\n    return (_b = (_a = this._pc) === null || _a === void 0 ? void 0 : _a.iceConnectionState) !== null && _b !== void 0 ? _b : 'closed';\n  }\n  getSignallingState() {\n    var _a, _b;\n    return (_b = (_a = this._pc) === null || _a === void 0 ? void 0 : _a.signalingState) !== null && _b !== void 0 ? _b : 'closed';\n  }\n  getTransceivers() {\n    var _a, _b;\n    return (_b = (_a = this._pc) === null || _a === void 0 ? void 0 : _a.getTransceivers()) !== null && _b !== void 0 ? _b : [];\n  }\n  getSenders() {\n    var _a, _b;\n    return (_b = (_a = this._pc) === null || _a === void 0 ? void 0 : _a.getSenders()) !== null && _b !== void 0 ? _b : [];\n  }\n  getLocalDescription() {\n    var _a;\n    return (_a = this._pc) === null || _a === void 0 ? void 0 : _a.localDescription;\n  }\n  getRemoteDescription() {\n    var _a;\n    return (_a = this.pc) === null || _a === void 0 ? void 0 : _a.remoteDescription;\n  }\n  getStats() {\n    return this.pc.getStats();\n  }\n  getConnectedAddress() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!this._pc) {\n        return;\n      }\n      let selectedCandidatePairId = '';\n      const candidatePairs = new Map();\n      // id -> candidate ip\n      const candidates = new Map();\n      const stats = yield this._pc.getStats();\n      stats.forEach(v => {\n        switch (v.type) {\n          case 'transport':\n            selectedCandidatePairId = v.selectedCandidatePairId;\n            break;\n          case 'candidate-pair':\n            if (selectedCandidatePairId === '' && v.selected) {\n              selectedCandidatePairId = v.id;\n            }\n            candidatePairs.set(v.id, v);\n            break;\n          case 'remote-candidate':\n            candidates.set(v.id, \"\".concat(v.address, \":\").concat(v.port));\n            break;\n        }\n      });\n      if (selectedCandidatePairId === '') {\n        return undefined;\n      }\n      const selectedID = (_a = candidatePairs.get(selectedCandidatePairId)) === null || _a === void 0 ? void 0 : _a.remoteCandidateId;\n      if (selectedID === undefined) {\n        return undefined;\n      }\n      return candidates.get(selectedID);\n    });\n  }\n  setMungedSDP(sd, munged, remote) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (munged) {\n        const originalSdp = sd.sdp;\n        sd.sdp = munged;\n        try {\n          this.log.debug(\"setting munged \".concat(remote ? 'remote' : 'local', \" description\"), this.logContext);\n          if (remote) {\n            yield this.pc.setRemoteDescription(sd);\n          } else {\n            yield this.pc.setLocalDescription(sd);\n          }\n          return;\n        } catch (e) {\n          this.log.warn(\"not able to set \".concat(sd.type, \", falling back to unmodified sdp\"), Object.assign(Object.assign({}, this.logContext), {\n            error: e,\n            sdp: munged\n          }));\n          sd.sdp = originalSdp;\n        }\n      }\n      try {\n        if (remote) {\n          yield this.pc.setRemoteDescription(sd);\n        } else {\n          yield this.pc.setLocalDescription(sd);\n        }\n      } catch (e) {\n        let msg = 'unknown error';\n        if (e instanceof Error) {\n          msg = e.message;\n        } else if (typeof e === 'string') {\n          msg = e;\n        }\n        const fields = {\n          error: msg,\n          sdp: sd.sdp\n        };\n        if (!remote && this.pc.remoteDescription) {\n          fields.remoteSdp = this.pc.remoteDescription;\n        }\n        this.log.error(\"unable to set \".concat(sd.type), Object.assign(Object.assign({}, this.logContext), {\n          fields\n        }));\n        throw new NegotiationError(msg);\n      }\n    });\n  }\n}\nfunction ensureAudioNackAndStereo(media, stereoMids, nackMids) {\n  // found opus codec to add nack fb\n  let opusPayload = 0;\n  media.rtp.some(rtp => {\n    if (rtp.codec === 'opus') {\n      opusPayload = rtp.payload;\n      return true;\n    }\n    return false;\n  });\n  // add nack rtcpfb if not exist\n  if (opusPayload > 0) {\n    if (!media.rtcpFb) {\n      media.rtcpFb = [];\n    }\n    if (nackMids.includes(media.mid) && !media.rtcpFb.some(fb => fb.payload === opusPayload && fb.type === 'nack')) {\n      media.rtcpFb.push({\n        payload: opusPayload,\n        type: 'nack'\n      });\n    }\n    if (stereoMids.includes(media.mid)) {\n      media.fmtp.some(fmtp => {\n        if (fmtp.payload === opusPayload) {\n          if (!fmtp.config.includes('stereo=1')) {\n            fmtp.config += ';stereo=1';\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  }\n}\nfunction ensureVideoDDExtensionForSVC(media) {\n  var _a, _b;\n  let maxID = 0;\n  const ddFound = (_a = media.ext) === null || _a === void 0 ? void 0 : _a.some(ext => {\n    if (ext.uri === ddExtensionURI) {\n      return true;\n    }\n    if (ext.value > maxID) {\n      maxID = ext.value;\n    }\n    return false;\n  });\n  if (!ddFound) {\n    (_b = media.ext) === null || _b === void 0 ? void 0 : _b.push({\n      value: maxID + 1,\n      uri: ddExtensionURI\n    });\n  }\n}\nfunction extractStereoAndNackAudioFromOffer(offer) {\n  var _a;\n  const stereoMids = [];\n  const nackMids = [];\n  const sdpParsed = parse((_a = offer.sdp) !== null && _a !== void 0 ? _a : '');\n  let opusPayload = 0;\n  sdpParsed.media.forEach(media => {\n    var _a;\n    if (media.type === 'audio') {\n      media.rtp.some(rtp => {\n        if (rtp.codec === 'opus') {\n          opusPayload = rtp.payload;\n          return true;\n        }\n        return false;\n      });\n      if ((_a = media.rtcpFb) === null || _a === void 0 ? void 0 : _a.some(fb => fb.payload === opusPayload && fb.type === 'nack')) {\n        nackMids.push(media.mid);\n      }\n      media.fmtp.some(fmtp => {\n        if (fmtp.payload === opusPayload) {\n          if (fmtp.config.includes('sprop-stereo=1')) {\n            stereoMids.push(media.mid);\n          }\n          return true;\n        }\n        return false;\n      });\n    }\n  });\n  return {\n    stereoMids,\n    nackMids\n  };\n}\n\nconst defaultVideoCodec = 'vp8';\nconst publishDefaults = {\n  audioPreset: AudioPresets.music,\n  dtx: true,\n  red: true,\n  forceStereo: false,\n  simulcast: true,\n  screenShareEncoding: ScreenSharePresets.h1080fps15.encoding,\n  stopMicTrackOnMute: false,\n  videoCodec: defaultVideoCodec,\n  backupCodec: true\n};\nconst audioDefaults = {\n  autoGainControl: true,\n  echoCancellation: true,\n  noiseSuppression: true\n};\nconst videoDefaults = {\n  resolution: VideoPresets.h720.resolution\n};\nconst roomOptionDefaults = {\n  adaptiveStream: false,\n  dynacast: false,\n  stopLocalTrackOnUnpublish: true,\n  reconnectPolicy: new DefaultReconnectPolicy(),\n  disconnectOnPageLeave: true,\n  webAudioMix: false\n};\nconst roomConnectOptionDefaults = {\n  autoSubscribe: true,\n  maxRetries: 1,\n  peerConnectionTimeout: 15000,\n  websocketTimeout: 15000\n};\n\nvar PCTransportState;\n(function (PCTransportState) {\n  PCTransportState[PCTransportState[\"NEW\"] = 0] = \"NEW\";\n  PCTransportState[PCTransportState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n  PCTransportState[PCTransportState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n  PCTransportState[PCTransportState[\"FAILED\"] = 3] = \"FAILED\";\n  PCTransportState[PCTransportState[\"CLOSING\"] = 4] = \"CLOSING\";\n  PCTransportState[PCTransportState[\"CLOSED\"] = 5] = \"CLOSED\";\n})(PCTransportState || (PCTransportState = {}));\nclass PCTransportManager {\n  get needsPublisher() {\n    return this.isPublisherConnectionRequired;\n  }\n  get needsSubscriber() {\n    return this.isSubscriberConnectionRequired;\n  }\n  get currentState() {\n    return this.state;\n  }\n  constructor(rtcConfig, subscriberPrimary, loggerOptions) {\n    var _a;\n    this.peerConnectionTimeout = roomConnectOptionDefaults.peerConnectionTimeout;\n    this.log = livekitLogger;\n    this.updateState = () => {\n      var _a;\n      const previousState = this.state;\n      const connectionStates = this.requiredTransports.map(tr => tr.getConnectionState());\n      if (connectionStates.every(st => st === 'connected')) {\n        this.state = PCTransportState.CONNECTED;\n      } else if (connectionStates.some(st => st === 'failed')) {\n        this.state = PCTransportState.FAILED;\n      } else if (connectionStates.some(st => st === 'connecting')) {\n        this.state = PCTransportState.CONNECTING;\n      } else if (connectionStates.every(st => st === 'closed')) {\n        this.state = PCTransportState.CLOSED;\n      } else if (connectionStates.some(st => st === 'closed')) {\n        this.state = PCTransportState.CLOSING;\n      } else if (connectionStates.every(st => st === 'new')) {\n        this.state = PCTransportState.NEW;\n      }\n      if (previousState !== this.state) {\n        this.log.debug(\"pc state change: from \".concat(PCTransportState[previousState], \" to \").concat(PCTransportState[this.state]), this.logContext);\n        (_a = this.onStateChange) === null || _a === void 0 ? void 0 : _a.call(this, this.state, this.publisher.getConnectionState(), this.subscriber.getConnectionState());\n      }\n    };\n    this.log = getLogger((_a = loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.PCManager);\n    this.loggerOptions = loggerOptions;\n    this.isPublisherConnectionRequired = !subscriberPrimary;\n    this.isSubscriberConnectionRequired = subscriberPrimary;\n    this.publisher = new PCTransport(rtcConfig, loggerOptions);\n    this.subscriber = new PCTransport(rtcConfig, loggerOptions);\n    this.publisher.onConnectionStateChange = this.updateState;\n    this.subscriber.onConnectionStateChange = this.updateState;\n    this.publisher.onIceConnectionStateChange = this.updateState;\n    this.subscriber.onIceConnectionStateChange = this.updateState;\n    this.publisher.onSignalingStatechange = this.updateState;\n    this.subscriber.onSignalingStatechange = this.updateState;\n    this.publisher.onIceCandidate = candidate => {\n      var _a;\n      (_a = this.onIceCandidate) === null || _a === void 0 ? void 0 : _a.call(this, candidate, SignalTarget.PUBLISHER);\n    };\n    this.subscriber.onIceCandidate = candidate => {\n      var _a;\n      (_a = this.onIceCandidate) === null || _a === void 0 ? void 0 : _a.call(this, candidate, SignalTarget.SUBSCRIBER);\n    };\n    // in subscriber primary mode, server side opens sub data channels.\n    this.subscriber.onDataChannel = ev => {\n      var _a;\n      (_a = this.onDataChannel) === null || _a === void 0 ? void 0 : _a.call(this, ev);\n    };\n    this.subscriber.onTrack = ev => {\n      var _a;\n      (_a = this.onTrack) === null || _a === void 0 ? void 0 : _a.call(this, ev);\n    };\n    this.publisher.onOffer = offer => {\n      var _a;\n      (_a = this.onPublisherOffer) === null || _a === void 0 ? void 0 : _a.call(this, offer);\n    };\n    this.state = PCTransportState.NEW;\n    this.connectionLock = new Mutex();\n  }\n  get logContext() {\n    var _a, _b;\n    return Object.assign({}, (_b = (_a = this.loggerOptions).loggerContextCb) === null || _b === void 0 ? void 0 : _b.call(_a));\n  }\n  requirePublisher() {\n    let require = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.isPublisherConnectionRequired = require;\n    this.updateState();\n  }\n  requireSubscriber() {\n    let require = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.isSubscriberConnectionRequired = require;\n    this.updateState();\n  }\n  createAndSendPublisherOffer(options) {\n    return this.publisher.createAndSendOffer(options);\n  }\n  setPublisherAnswer(sd) {\n    return this.publisher.setRemoteDescription(sd);\n  }\n  removeTrack(sender) {\n    return this.publisher.removeTrack(sender);\n  }\n  close() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.publisher && this.publisher.getSignallingState() !== 'closed') {\n        const publisher = this.publisher;\n        for (const sender of publisher.getSenders()) {\n          try {\n            // TODO: react-native-webrtc doesn't have removeTrack yet.\n            if (publisher.canRemoveTrack()) {\n              publisher.removeTrack(sender);\n            }\n          } catch (e) {\n            this.log.warn('could not removeTrack', Object.assign(Object.assign({}, this.logContext), {\n              error: e\n            }));\n          }\n        }\n      }\n      yield Promise.all([this.publisher.close(), this.subscriber.close()]);\n      this.updateState();\n    });\n  }\n  triggerIceRestart() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.subscriber.restartingIce = true;\n      // only restart publisher if it's needed\n      if (this.needsPublisher) {\n        yield this.createAndSendPublisherOffer({\n          iceRestart: true\n        });\n      }\n    });\n  }\n  addIceCandidate(candidate, target) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (target === SignalTarget.PUBLISHER) {\n        yield this.publisher.addIceCandidate(candidate);\n      } else {\n        yield this.subscriber.addIceCandidate(candidate);\n      }\n    });\n  }\n  createSubscriberAnswerFromOffer(sd) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.log.debug('received server offer', Object.assign(Object.assign({}, this.logContext), {\n        RTCSdpType: sd.type,\n        sdp: sd.sdp,\n        signalingState: this.subscriber.getSignallingState().toString()\n      }));\n      yield this.subscriber.setRemoteDescription(sd);\n      // answer the offer\n      const answer = yield this.subscriber.createAndSetAnswer();\n      return answer;\n    });\n  }\n  updateConfiguration(config, iceRestart) {\n    this.publisher.setConfiguration(config);\n    this.subscriber.setConfiguration(config);\n    if (iceRestart) {\n      this.triggerIceRestart();\n    }\n  }\n  ensurePCTransportConnection(abortController, timeout) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const unlock = yield this.connectionLock.lock();\n      try {\n        if (this.isPublisherConnectionRequired && this.publisher.getConnectionState() !== 'connected' && this.publisher.getConnectionState() !== 'connecting') {\n          this.log.debug('negotiation required, start negotiating', this.logContext);\n          this.publisher.negotiate();\n        }\n        yield Promise.all((_a = this.requiredTransports) === null || _a === void 0 ? void 0 : _a.map(transport => this.ensureTransportConnected(transport, abortController, timeout)));\n      } finally {\n        unlock();\n      }\n    });\n  }\n  negotiate(abortController) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        const negotiationTimeout = setTimeout(() => {\n          reject('negotiation timed out');\n        }, this.peerConnectionTimeout);\n        const abortHandler = () => {\n          clearTimeout(negotiationTimeout);\n          reject('negotiation aborted');\n        };\n        abortController.signal.addEventListener('abort', abortHandler);\n        this.publisher.once(PCEvents.NegotiationStarted, () => {\n          if (abortController.signal.aborted) {\n            return;\n          }\n          this.publisher.once(PCEvents.NegotiationComplete, () => {\n            clearTimeout(negotiationTimeout);\n            resolve();\n          });\n        });\n        yield this.publisher.negotiate(e => {\n          clearTimeout(negotiationTimeout);\n          reject(e);\n        });\n      }));\n    });\n  }\n  addPublisherTransceiver(track, transceiverInit) {\n    return this.publisher.addTransceiver(track, transceiverInit);\n  }\n  addPublisherTrack(track) {\n    return this.publisher.addTrack(track);\n  }\n  createPublisherDataChannel(label, dataChannelDict) {\n    return this.publisher.createDataChannel(label, dataChannelDict);\n  }\n  /**\n   * Returns the first required transport's address if no explicit target is specified\n   */\n  getConnectedAddress(target) {\n    if (target === SignalTarget.PUBLISHER) {\n      return this.publisher.getConnectedAddress();\n    } else if (target === SignalTarget.SUBSCRIBER) {\n      return this.publisher.getConnectedAddress();\n    }\n    return this.requiredTransports[0].getConnectedAddress();\n  }\n  get requiredTransports() {\n    const transports = [];\n    if (this.isPublisherConnectionRequired) {\n      transports.push(this.publisher);\n    }\n    if (this.isSubscriberConnectionRequired) {\n      transports.push(this.subscriber);\n    }\n    return transports;\n  }\n  ensureTransportConnected(pcTransport_1, abortController_1) {\n    return __awaiter(this, arguments, void 0, function (pcTransport, abortController) {\n      var _this = this;\n      let timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.peerConnectionTimeout;\n      return function* () {\n        const connectionState = pcTransport.getConnectionState();\n        if (connectionState === 'connected') {\n          return;\n        }\n        return new Promise((resolve, reject) => __awaiter(_this, void 0, void 0, function* () {\n          const abortHandler = () => {\n            this.log.warn('abort transport connection', this.logContext);\n            CriticalTimers.clearTimeout(connectTimeout);\n            reject(new ConnectionError('room connection has been cancelled', 3 /* ConnectionErrorReason.Cancelled */));\n          };\n          if (abortController === null || abortController === void 0 ? void 0 : abortController.signal.aborted) {\n            abortHandler();\n          }\n          abortController === null || abortController === void 0 ? void 0 : abortController.signal.addEventListener('abort', abortHandler);\n          const connectTimeout = CriticalTimers.setTimeout(() => {\n            abortController === null || abortController === void 0 ? void 0 : abortController.signal.removeEventListener('abort', abortHandler);\n            reject(new ConnectionError('could not establish pc connection'));\n          }, timeout);\n          while (this.state !== PCTransportState.CONNECTED) {\n            yield sleep(50); // FIXME we shouldn't rely on `sleep` in the connection paths, as it invokes `setTimeout` which can be drastically throttled by browser implementations\n            if (abortController === null || abortController === void 0 ? void 0 : abortController.signal.aborted) {\n              reject(new ConnectionError('room connection has been cancelled', 3 /* ConnectionErrorReason.Cancelled */));\n              return;\n            }\n          }\n          CriticalTimers.clearTimeout(connectTimeout);\n          abortController === null || abortController === void 0 ? void 0 : abortController.signal.removeEventListener('abort', abortHandler);\n          resolve();\n        }));\n      }();\n    });\n  }\n}\n\nconst monitorFrequency = 2000;\nfunction computeBitrate(currentStats, prevStats) {\n  if (!prevStats) {\n    return 0;\n  }\n  let bytesNow;\n  let bytesPrev;\n  if ('bytesReceived' in currentStats) {\n    bytesNow = currentStats.bytesReceived;\n    bytesPrev = prevStats.bytesReceived;\n  } else if ('bytesSent' in currentStats) {\n    bytesNow = currentStats.bytesSent;\n    bytesPrev = prevStats.bytesSent;\n  }\n  if (bytesNow === undefined || bytesPrev === undefined || currentStats.timestamp === undefined || prevStats.timestamp === undefined) {\n    return 0;\n  }\n  return (bytesNow - bytesPrev) * 8 * 1000 / (currentStats.timestamp - prevStats.timestamp);\n}\n\nclass LocalAudioTrack extends LocalTrack {\n  /**\n   * boolean indicating whether enhanced noise cancellation is currently being used on this track\n   */\n  get enhancedNoiseCancellation() {\n    return this.isKrispNoiseFilterEnabled;\n  }\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(mediaTrack, constraints) {\n    let userProvidedTrack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let audioContext = arguments.length > 3 ? arguments[3] : undefined;\n    let loggerOptions = arguments.length > 4 ? arguments[4] : undefined;\n    super(mediaTrack, Track.Kind.Audio, constraints, userProvidedTrack, loggerOptions);\n    /** @internal */\n    this.stopOnMute = false;\n    this.isKrispNoiseFilterEnabled = false;\n    this.monitorSender = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.sender) {\n        this._currentBitrate = 0;\n        return;\n      }\n      let stats;\n      try {\n        stats = yield this.getSenderStats();\n      } catch (e) {\n        this.log.error('could not get audio sender stats', Object.assign(Object.assign({}, this.logContext), {\n          error: e\n        }));\n        return;\n      }\n      if (stats && this.prevStats) {\n        this._currentBitrate = computeBitrate(stats, this.prevStats);\n      }\n      this.prevStats = stats;\n    });\n    this.handleKrispNoiseFilterEnable = () => {\n      this.isKrispNoiseFilterEnabled = true;\n      this.log.debug(\"Krisp noise filter enabled\", this.logContext);\n      this.emit(TrackEvent.AudioTrackFeatureUpdate, this, AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION, true);\n    };\n    this.handleKrispNoiseFilterDisable = () => {\n      this.isKrispNoiseFilterEnabled = false;\n      this.log.debug(\"Krisp noise filter disabled\", this.logContext);\n      this.emit(TrackEvent.AudioTrackFeatureUpdate, this, AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION, false);\n    };\n    this.audioContext = audioContext;\n    this.checkForSilence();\n  }\n  setDeviceId(deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._constraints.deviceId === deviceId && this._mediaStreamTrack.getSettings().deviceId === unwrapConstraint(deviceId)) {\n        return true;\n      }\n      this._constraints.deviceId = deviceId;\n      if (!this.isMuted) {\n        yield this.restartTrack();\n      }\n      return this.isMuted || unwrapConstraint(deviceId) === this._mediaStreamTrack.getSettings().deviceId;\n    });\n  }\n  mute() {\n    const _super = Object.create(null, {\n      mute: {\n        get: () => super.mute\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.muteLock.lock();\n      try {\n        if (this.isMuted) {\n          this.log.debug('Track already muted', this.logContext);\n          return this;\n        }\n        // disabled special handling as it will cause BT headsets to switch communication modes\n        if (this.source === Track.Source.Microphone && this.stopOnMute && !this.isUserProvided) {\n          this.log.debug('stopping mic track', this.logContext);\n          // also stop the track, so that microphone indicator is turned off\n          this._mediaStreamTrack.stop();\n        }\n        yield _super.mute.call(this);\n        return this;\n      } finally {\n        unlock();\n      }\n    });\n  }\n  unmute() {\n    const _super = Object.create(null, {\n      unmute: {\n        get: () => super.unmute\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.muteLock.lock();\n      try {\n        if (!this.isMuted) {\n          this.log.debug('Track already unmuted', this.logContext);\n          return this;\n        }\n        const deviceHasChanged = this._constraints.deviceId && this._mediaStreamTrack.getSettings().deviceId !== unwrapConstraint(this._constraints.deviceId);\n        if (this.source === Track.Source.Microphone && (this.stopOnMute || this._mediaStreamTrack.readyState === 'ended' || deviceHasChanged) && !this.isUserProvided) {\n          this.log.debug('reacquiring mic track', this.logContext);\n          yield this.restartTrack();\n        }\n        yield _super.unmute.call(this);\n        return this;\n      } finally {\n        unlock();\n      }\n    });\n  }\n  restartTrack(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let constraints;\n      if (options) {\n        const streamConstraints = constraintsForOptions({\n          audio: options\n        });\n        if (typeof streamConstraints.audio !== 'boolean') {\n          constraints = streamConstraints.audio;\n        }\n      }\n      yield this.restart(constraints);\n    });\n  }\n  restart(constraints) {\n    const _super = Object.create(null, {\n      restart: {\n        get: () => super.restart\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const track = yield _super.restart.call(this, constraints);\n      this.checkForSilence();\n      return track;\n    });\n  }\n  /* @internal */\n  startMonitor() {\n    if (!isWeb()) {\n      return;\n    }\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n  setProcessor(processor) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const unlock = yield this.processorLock.lock();\n      try {\n        if (!this.audioContext) {\n          throw Error('Audio context needs to be set on LocalAudioTrack in order to enable processors');\n        }\n        if (this.processor) {\n          yield this.stopProcessor();\n        }\n        const processorOptions = {\n          kind: this.kind,\n          track: this._mediaStreamTrack,\n          audioContext: this.audioContext\n        };\n        this.log.debug(\"setting up audio processor \".concat(processor.name), this.logContext);\n        yield processor.init(processorOptions);\n        this.processor = processor;\n        if (this.processor.processedTrack) {\n          yield (_a = this.sender) === null || _a === void 0 ? void 0 : _a.replaceTrack(this.processor.processedTrack);\n          this.processor.processedTrack.addEventListener('enable-lk-krisp-noise-filter', this.handleKrispNoiseFilterEnable);\n          this.processor.processedTrack.addEventListener('disable-lk-krisp-noise-filter', this.handleKrispNoiseFilterDisable);\n        }\n        this.emit(TrackEvent.TrackProcessorUpdate, this.processor);\n      } finally {\n        unlock();\n      }\n    });\n  }\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext) {\n    this.audioContext = audioContext;\n  }\n  getSenderStats() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!((_a = this.sender) === null || _a === void 0 ? void 0 : _a.getStats)) {\n        return undefined;\n      }\n      const stats = yield this.sender.getStats();\n      let audioStats;\n      stats.forEach(v => {\n        if (v.type === 'outbound-rtp') {\n          audioStats = {\n            type: 'audio',\n            streamId: v.id,\n            packetsSent: v.packetsSent,\n            packetsLost: v.packetsLost,\n            bytesSent: v.bytesSent,\n            timestamp: v.timestamp,\n            roundTripTime: v.roundTripTime,\n            jitter: v.jitter\n          };\n        }\n      });\n      return audioStats;\n    });\n  }\n  checkForSilence() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const trackIsSilent = yield detectSilence(this);\n      if (trackIsSilent) {\n        if (!this.isMuted) {\n          this.log.warn('silence detected on local audio track', this.logContext);\n        }\n        this.emit(TrackEvent.AudioSilenceDetected);\n      }\n      return trackIsSilent;\n    });\n  }\n}\n\n/** @internal */\nfunction mediaTrackToLocalTrack(mediaStreamTrack, constraints, loggerOptions) {\n  switch (mediaStreamTrack.kind) {\n    case 'audio':\n      return new LocalAudioTrack(mediaStreamTrack, constraints, false, undefined, loggerOptions);\n    case 'video':\n      return new LocalVideoTrack(mediaStreamTrack, constraints, false, loggerOptions);\n    default:\n      throw new TrackInvalidError(\"unsupported track type: \".concat(mediaStreamTrack.kind));\n  }\n}\n/* @internal */\nconst presets169 = Object.values(VideoPresets);\n/* @internal */\nconst presets43 = Object.values(VideoPresets43);\n/* @internal */\nconst presetsScreenShare = Object.values(ScreenSharePresets);\n/* @internal */\nconst defaultSimulcastPresets169 = [VideoPresets.h180, VideoPresets.h360];\n/* @internal */\nconst defaultSimulcastPresets43 = [VideoPresets43.h180, VideoPresets43.h360];\n/* @internal */\nconst computeDefaultScreenShareSimulcastPresets = fromPreset => {\n  const layers = [{\n    scaleResolutionDownBy: 2,\n    fps: fromPreset.encoding.maxFramerate\n  }];\n  return layers.map(t => {\n    var _a, _b;\n    return new VideoPreset(Math.floor(fromPreset.width / t.scaleResolutionDownBy), Math.floor(fromPreset.height / t.scaleResolutionDownBy), Math.max(150000, Math.floor(fromPreset.encoding.maxBitrate / (Math.pow(t.scaleResolutionDownBy, 2) * (((_a = fromPreset.encoding.maxFramerate) !== null && _a !== void 0 ? _a : 30) / ((_b = t.fps) !== null && _b !== void 0 ? _b : 30))))), t.fps, fromPreset.encoding.priority);\n  });\n};\n// /**\n//  *\n//  * @internal\n//  * @experimental\n//  */\n// const computeDefaultMultiCodecSimulcastEncodings = (width: number, height: number) => {\n//   // use vp8 as a default\n//   const vp8 = determineAppropriateEncoding(false, width, height);\n//   const vp9 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.9 };\n//   const h264 = { ...vp8, maxBitrate: vp8.maxBitrate * 1.1 };\n//   const av1 = { ...vp8, maxBitrate: vp8.maxBitrate * 0.7 };\n//   return {\n//     vp8,\n//     vp9,\n//     h264,\n//     av1,\n//   };\n// };\nconst videoRids = ['q', 'h', 'f'];\n/* @internal */\nfunction computeVideoEncodings(isScreenShare, width, height, options) {\n  var _a, _b;\n  let videoEncoding = options === null || options === void 0 ? void 0 : options.videoEncoding;\n  if (isScreenShare) {\n    videoEncoding = options === null || options === void 0 ? void 0 : options.screenShareEncoding;\n  }\n  const useSimulcast = options === null || options === void 0 ? void 0 : options.simulcast;\n  const scalabilityMode = options === null || options === void 0 ? void 0 : options.scalabilityMode;\n  const videoCodec = options === null || options === void 0 ? void 0 : options.videoCodec;\n  if (!videoEncoding && !useSimulcast && !scalabilityMode || !width || !height) {\n    // when we aren't simulcasting or svc, will need to return a single encoding without\n    // capping bandwidth. we always require a encoding for dynacast\n    return [{}];\n  }\n  if (!videoEncoding) {\n    // find the right encoding based on width/height\n    videoEncoding = determineAppropriateEncoding(isScreenShare, width, height, videoCodec);\n    livekitLogger.debug('using video encoding', videoEncoding);\n  }\n  const original = new VideoPreset(width, height, videoEncoding.maxBitrate, videoEncoding.maxFramerate, videoEncoding.priority);\n  if (scalabilityMode && isSVCCodec(videoCodec)) {\n    const sm = new ScalabilityMode(scalabilityMode);\n    const encodings = [];\n    if (sm.spatial > 3) {\n      throw new Error(\"unsupported scalabilityMode: \".concat(scalabilityMode));\n    }\n    // Before M113 in Chrome, defining multiple encodings with an SVC codec indicated\n    // that SVC mode should be used. Safari still works this way.\n    // This is a bit confusing but is due to how libwebrtc interpreted the encodings field\n    // before M113.\n    // Announced here: https://groups.google.com/g/discuss-webrtc/c/-QQ3pxrl-fw?pli=1\n    const browser = getBrowser();\n    if (isSafari() ||\n    // Even tho RN runs M114, it does not produce SVC layers when a single encoding\n    // is provided. So we'll use the legacy SVC specification for now.\n    // TODO: when we upstream libwebrtc, this will need additional verification\n    isReactNative() || (browser === null || browser === void 0 ? void 0 : browser.name) === 'Chrome' && compareVersions(browser === null || browser === void 0 ? void 0 : browser.version, '113') < 0) {\n      const bitratesRatio = sm.suffix == 'h' ? 2 : 3;\n      for (let i = 0; i < sm.spatial; i += 1) {\n        // in legacy SVC, scaleResolutionDownBy cannot be set\n        encodings.push({\n          rid: videoRids[2 - i],\n          maxBitrate: videoEncoding.maxBitrate / Math.pow(bitratesRatio, i),\n          maxFramerate: original.encoding.maxFramerate\n        });\n      }\n      // legacy SVC, scalabilityMode is set only on the first encoding\n      /* @ts-ignore */\n      encodings[0].scalabilityMode = scalabilityMode;\n    } else {\n      encodings.push({\n        maxBitrate: videoEncoding.maxBitrate,\n        maxFramerate: original.encoding.maxFramerate,\n        /* @ts-ignore */\n        scalabilityMode: scalabilityMode\n      });\n    }\n    if (original.encoding.priority) {\n      encodings[0].priority = original.encoding.priority;\n      encodings[0].networkPriority = original.encoding.priority;\n    }\n    livekitLogger.debug(\"using svc encoding\", {\n      encodings\n    });\n    return encodings;\n  }\n  if (!useSimulcast) {\n    return [videoEncoding];\n  }\n  let presets = [];\n  if (isScreenShare) {\n    presets = (_a = sortPresets(options === null || options === void 0 ? void 0 : options.screenShareSimulcastLayers)) !== null && _a !== void 0 ? _a : defaultSimulcastLayers(isScreenShare, original);\n  } else {\n    presets = (_b = sortPresets(options === null || options === void 0 ? void 0 : options.videoSimulcastLayers)) !== null && _b !== void 0 ? _b : defaultSimulcastLayers(isScreenShare, original);\n  }\n  let midPreset;\n  if (presets.length > 0) {\n    const lowPreset = presets[0];\n    if (presets.length > 1) {\n      [, midPreset] = presets;\n    }\n    // NOTE:\n    //   1. Ordering of these encodings is important. Chrome seems\n    //      to use the index into encodings to decide which layer\n    //      to disable when CPU constrained.\n    //      So encodings should be ordered in increasing spatial\n    //      resolution order.\n    //   2. livekit-server translates rids into layers. So, all encodings\n    //      should have the base layer `q` and then more added\n    //      based on other conditions.\n    const size = Math.max(width, height);\n    if (size >= 960 && midPreset) {\n      return encodingsFromPresets(width, height, [lowPreset, midPreset, original]);\n    }\n    if (size >= 480) {\n      return encodingsFromPresets(width, height, [lowPreset, original]);\n    }\n  }\n  return encodingsFromPresets(width, height, [original]);\n}\nfunction computeTrackBackupEncodings(track, videoCodec, opts) {\n  var _a, _b, _c, _d;\n  // backupCodec should not be true anymore, default codec is set in LocalParticipant.publish\n  if (!opts.backupCodec || opts.backupCodec === true || opts.backupCodec.codec === opts.videoCodec) {\n    // backup codec publishing is disabled\n    return;\n  }\n  if (videoCodec !== opts.backupCodec.codec) {\n    livekitLogger.warn('requested a different codec than specified as backup', {\n      serverRequested: videoCodec,\n      backup: opts.backupCodec.codec\n    });\n  }\n  opts.videoCodec = videoCodec;\n  // use backup encoding setting as videoEncoding for backup codec publishing\n  opts.videoEncoding = opts.backupCodec.encoding;\n  const settings = track.mediaStreamTrack.getSettings();\n  const width = (_a = settings.width) !== null && _a !== void 0 ? _a : (_b = track.dimensions) === null || _b === void 0 ? void 0 : _b.width;\n  const height = (_c = settings.height) !== null && _c !== void 0 ? _c : (_d = track.dimensions) === null || _d === void 0 ? void 0 : _d.height;\n  const encodings = computeVideoEncodings(track.source === Track.Source.ScreenShare, width, height, opts);\n  return encodings;\n}\n/* @internal */\nfunction determineAppropriateEncoding(isScreenShare, width, height, codec) {\n  const presets = presetsForResolution(isScreenShare, width, height);\n  let {\n    encoding\n  } = presets[0];\n  // handle portrait by swapping dimensions\n  const size = Math.max(width, height);\n  for (let i = 0; i < presets.length; i += 1) {\n    const preset = presets[i];\n    encoding = preset.encoding;\n    if (preset.width >= size) {\n      break;\n    }\n  }\n  // presets are based on the assumption of vp8 as a codec\n  // for other codecs we adjust the maxBitrate if no specific videoEncoding has been provided\n  // users should override these with ones that are optimized for their use case\n  // NOTE: SVC codec bitrates are inclusive of all scalability layers. while\n  // bitrate for non-SVC codecs does not include other simulcast layers.\n  if (codec) {\n    switch (codec) {\n      case 'av1':\n        encoding = Object.assign({}, encoding);\n        encoding.maxBitrate = encoding.maxBitrate * 0.7;\n        break;\n      case 'vp9':\n        encoding = Object.assign({}, encoding);\n        encoding.maxBitrate = encoding.maxBitrate * 0.85;\n        break;\n    }\n  }\n  return encoding;\n}\n/* @internal */\nfunction presetsForResolution(isScreenShare, width, height) {\n  if (isScreenShare) {\n    return presetsScreenShare;\n  }\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return presets169;\n  }\n  return presets43;\n}\n/* @internal */\nfunction defaultSimulcastLayers(isScreenShare, original) {\n  if (isScreenShare) {\n    return computeDefaultScreenShareSimulcastPresets(original);\n  }\n  const {\n    width,\n    height\n  } = original;\n  const aspect = width > height ? width / height : height / width;\n  if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n    return defaultSimulcastPresets169;\n  }\n  return defaultSimulcastPresets43;\n}\n// presets should be ordered by low, medium, high\nfunction encodingsFromPresets(width, height, presets) {\n  const encodings = [];\n  presets.forEach((preset, idx) => {\n    if (idx >= videoRids.length) {\n      return;\n    }\n    const size = Math.min(width, height);\n    const rid = videoRids[idx];\n    const encoding = {\n      rid,\n      scaleResolutionDownBy: Math.max(1, size / Math.min(preset.width, preset.height)),\n      maxBitrate: preset.encoding.maxBitrate\n    };\n    if (preset.encoding.maxFramerate) {\n      encoding.maxFramerate = preset.encoding.maxFramerate;\n    }\n    const canSetPriority = isFireFox() || idx === 0;\n    if (preset.encoding.priority && canSetPriority) {\n      encoding.priority = preset.encoding.priority;\n      encoding.networkPriority = preset.encoding.priority;\n    }\n    encodings.push(encoding);\n  });\n  // RN ios simulcast requires all same framerates.\n  if (isReactNative() && getReactNativeOs() === 'ios') {\n    let topFramerate = undefined;\n    encodings.forEach(encoding => {\n      if (!topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      } else if (encoding.maxFramerate && encoding.maxFramerate > topFramerate) {\n        topFramerate = encoding.maxFramerate;\n      }\n    });\n    let notifyOnce = true;\n    encodings.forEach(encoding => {\n      var _a;\n      if (encoding.maxFramerate != topFramerate) {\n        if (notifyOnce) {\n          notifyOnce = false;\n          livekitLogger.info(\"Simulcast on iOS React-Native requires all encodings to share the same framerate.\");\n        }\n        livekitLogger.info(\"Setting framerate of encoding \\\"\".concat((_a = encoding.rid) !== null && _a !== void 0 ? _a : '', \"\\\" to \").concat(topFramerate));\n        encoding.maxFramerate = topFramerate;\n      }\n    });\n  }\n  return encodings;\n}\n/** @internal */\nfunction sortPresets(presets) {\n  if (!presets) return;\n  return presets.sort((a, b) => {\n    const {\n      encoding: aEnc\n    } = a;\n    const {\n      encoding: bEnc\n    } = b;\n    if (aEnc.maxBitrate > bEnc.maxBitrate) {\n      return 1;\n    }\n    if (aEnc.maxBitrate < bEnc.maxBitrate) return -1;\n    if (aEnc.maxBitrate === bEnc.maxBitrate && aEnc.maxFramerate && bEnc.maxFramerate) {\n      return aEnc.maxFramerate > bEnc.maxFramerate ? 1 : -1;\n    }\n    return 0;\n  });\n}\n/** @internal */\nclass ScalabilityMode {\n  constructor(scalabilityMode) {\n    const results = scalabilityMode.match(/^L(\\d)T(\\d)(h|_KEY|_KEY_SHIFT){0,1}$/);\n    if (!results) {\n      throw new Error('invalid scalability mode');\n    }\n    this.spatial = parseInt(results[1]);\n    this.temporal = parseInt(results[2]);\n    if (results.length > 3) {\n      switch (results[3]) {\n        case 'h':\n        case '_KEY':\n        case '_KEY_SHIFT':\n          this.suffix = results[3];\n      }\n    }\n  }\n  toString() {\n    var _a;\n    return \"L\".concat(this.spatial, \"T\").concat(this.temporal).concat((_a = this.suffix) !== null && _a !== void 0 ? _a : '');\n  }\n}\nfunction getDefaultDegradationPreference(track) {\n  // a few of reasons we have different default paths:\n  // 1. without this, Chrome seems to aggressively resize the SVC video stating `quality-limitation: bandwidth` even when BW isn't an issue\n  // 2. since we are overriding contentHint to motion (to workaround L1T3 publishing), it overrides the default degradationPreference to `balanced`\n  if (track.source === Track.Source.ScreenShare || track.constraints.height && unwrapConstraint(track.constraints.height) >= 1080) {\n    return 'maintain-resolution';\n  } else {\n    return 'balanced';\n  }\n}\n\nconst refreshSubscribedCodecAfterNewCodec = 5000;\nclass LocalVideoTrack extends LocalTrack {\n  get sender() {\n    return this._sender;\n  }\n  set sender(sender) {\n    this._sender = sender;\n    if (this.degradationPreference) {\n      this.setDegradationPreference(this.degradationPreference);\n    }\n  }\n  /**\n   *\n   * @param mediaTrack\n   * @param constraints MediaTrackConstraints that are being used when restarting or reacquiring tracks\n   * @param userProvidedTrack Signals to the SDK whether or not the mediaTrack should be managed (i.e. released and reacquired) internally by the SDK\n   */\n  constructor(mediaTrack, constraints) {\n    let userProvidedTrack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let loggerOptions = arguments.length > 3 ? arguments[3] : undefined;\n    super(mediaTrack, Track.Kind.Video, constraints, userProvidedTrack, loggerOptions);\n    /* @internal */\n    this.simulcastCodecs = new Map();\n    this.degradationPreference = 'balanced';\n    this.monitorSender = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.sender) {\n        this._currentBitrate = 0;\n        return;\n      }\n      let stats;\n      try {\n        stats = yield this.getSenderStats();\n      } catch (e) {\n        this.log.error('could not get audio sender stats', Object.assign(Object.assign({}, this.logContext), {\n          error: e\n        }));\n        return;\n      }\n      const statsMap = new Map(stats.map(s => [s.rid, s]));\n      if (this.prevStats) {\n        let totalBitrate = 0;\n        statsMap.forEach((s, key) => {\n          var _a;\n          const prev = (_a = this.prevStats) === null || _a === void 0 ? void 0 : _a.get(key);\n          totalBitrate += computeBitrate(s, prev);\n        });\n        this._currentBitrate = totalBitrate;\n      }\n      this.prevStats = statsMap;\n    });\n    this.senderLock = new Mutex();\n  }\n  get isSimulcast() {\n    if (this.sender && this.sender.getParameters().encodings.length > 1) {\n      return true;\n    }\n    return false;\n  }\n  /* @internal */\n  startMonitor(signalClient) {\n    var _a;\n    this.signalClient = signalClient;\n    if (!isWeb()) {\n      return;\n    }\n    // save original encodings\n    // TODO : merge simulcast tracks stats\n    const params = (_a = this.sender) === null || _a === void 0 ? void 0 : _a.getParameters();\n    if (params) {\n      this.encodings = params.encodings;\n    }\n    if (this.monitorInterval) {\n      return;\n    }\n    this.monitorInterval = setInterval(() => {\n      this.monitorSender();\n    }, monitorFrequency);\n  }\n  stop() {\n    this._mediaStreamTrack.getConstraints();\n    this.simulcastCodecs.forEach(trackInfo => {\n      trackInfo.mediaStreamTrack.stop();\n    });\n    super.stop();\n  }\n  pauseUpstream() {\n    const _super = Object.create(null, {\n      pauseUpstream: {\n        get: () => super.pauseUpstream\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, e_1, _b, _c;\n      var _d;\n      yield _super.pauseUpstream.call(this);\n      try {\n        for (var _e = true, _f = __asyncValues(this.simulcastCodecs.values()), _g; _g = yield _f.next(), _a = _g.done, !_a; _e = true) {\n          _c = _g.value;\n          _e = false;\n          const sc = _c;\n          yield (_d = sc.sender) === null || _d === void 0 ? void 0 : _d.replaceTrack(null);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (!_e && !_a && (_b = _f.return)) yield _b.call(_f);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    });\n  }\n  resumeUpstream() {\n    const _super = Object.create(null, {\n      resumeUpstream: {\n        get: () => super.resumeUpstream\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, e_2, _b, _c;\n      var _d;\n      yield _super.resumeUpstream.call(this);\n      try {\n        for (var _e = true, _f = __asyncValues(this.simulcastCodecs.values()), _g; _g = yield _f.next(), _a = _g.done, !_a; _e = true) {\n          _c = _g.value;\n          _e = false;\n          const sc = _c;\n          yield (_d = sc.sender) === null || _d === void 0 ? void 0 : _d.replaceTrack(sc.mediaStreamTrack);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (!_e && !_a && (_b = _f.return)) yield _b.call(_f);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    });\n  }\n  mute() {\n    const _super = Object.create(null, {\n      mute: {\n        get: () => super.mute\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.muteLock.lock();\n      try {\n        if (this.isMuted) {\n          this.log.debug('Track already muted', this.logContext);\n          return this;\n        }\n        if (this.source === Track.Source.Camera && !this.isUserProvided) {\n          this.log.debug('stopping camera track', this.logContext);\n          // also stop the track, so that camera indicator is turned off\n          this._mediaStreamTrack.stop();\n        }\n        yield _super.mute.call(this);\n        return this;\n      } finally {\n        unlock();\n      }\n    });\n  }\n  unmute() {\n    const _super = Object.create(null, {\n      unmute: {\n        get: () => super.unmute\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.muteLock.lock();\n      try {\n        if (!this.isMuted) {\n          this.log.debug('Track already unmuted', this.logContext);\n          return this;\n        }\n        if (this.source === Track.Source.Camera && !this.isUserProvided) {\n          this.log.debug('reacquiring camera track', this.logContext);\n          yield this.restartTrack();\n        }\n        yield _super.unmute.call(this);\n        return this;\n      } finally {\n        unlock();\n      }\n    });\n  }\n  setTrackMuted(muted) {\n    super.setTrackMuted(muted);\n    for (const sc of this.simulcastCodecs.values()) {\n      sc.mediaStreamTrack.enabled = !muted;\n    }\n  }\n  getSenderStats() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!((_a = this.sender) === null || _a === void 0 ? void 0 : _a.getStats)) {\n        return [];\n      }\n      const items = [];\n      const stats = yield this.sender.getStats();\n      stats.forEach(v => {\n        var _a;\n        if (v.type === 'outbound-rtp') {\n          const vs = {\n            type: 'video',\n            streamId: v.id,\n            frameHeight: v.frameHeight,\n            frameWidth: v.frameWidth,\n            framesPerSecond: v.framesPerSecond,\n            framesSent: v.framesSent,\n            firCount: v.firCount,\n            pliCount: v.pliCount,\n            nackCount: v.nackCount,\n            packetsSent: v.packetsSent,\n            bytesSent: v.bytesSent,\n            qualityLimitationReason: v.qualityLimitationReason,\n            qualityLimitationDurations: v.qualityLimitationDurations,\n            qualityLimitationResolutionChanges: v.qualityLimitationResolutionChanges,\n            rid: (_a = v.rid) !== null && _a !== void 0 ? _a : v.id,\n            retransmittedPacketsSent: v.retransmittedPacketsSent,\n            targetBitrate: v.targetBitrate,\n            timestamp: v.timestamp\n          };\n          // locate the appropriate remote-inbound-rtp item\n          const r = stats.get(v.remoteId);\n          if (r) {\n            vs.jitter = r.jitter;\n            vs.packetsLost = r.packetsLost;\n            vs.roundTripTime = r.roundTripTime;\n          }\n          items.push(vs);\n        }\n      });\n      // make sure highest res layer is always first\n      items.sort((a, b) => {\n        var _a, _b;\n        return ((_a = b.frameWidth) !== null && _a !== void 0 ? _a : 0) - ((_b = a.frameWidth) !== null && _b !== void 0 ? _b : 0);\n      });\n      return items;\n    });\n  }\n  setPublishingQuality(maxQuality) {\n    const qualities = [];\n    for (let q = VideoQuality.LOW; q <= VideoQuality.HIGH; q += 1) {\n      qualities.push(new SubscribedQuality({\n        quality: q,\n        enabled: q <= maxQuality\n      }));\n    }\n    this.log.debug(\"setting publishing quality. max quality \".concat(maxQuality), this.logContext);\n    this.setPublishingLayers(qualities);\n  }\n  setDeviceId(deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._constraints.deviceId === deviceId && this._mediaStreamTrack.getSettings().deviceId === unwrapConstraint(deviceId)) {\n        return true;\n      }\n      this._constraints.deviceId = deviceId;\n      // when video is muted, underlying media stream track is stopped and\n      // will be restarted later\n      if (!this.isMuted) {\n        yield this.restartTrack();\n      }\n      return this.isMuted || unwrapConstraint(deviceId) === this._mediaStreamTrack.getSettings().deviceId;\n    });\n  }\n  restartTrack(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, e_3, _b, _c;\n      let constraints;\n      if (options) {\n        const streamConstraints = constraintsForOptions({\n          video: options\n        });\n        if (typeof streamConstraints.video !== 'boolean') {\n          constraints = streamConstraints.video;\n        }\n      }\n      yield this.restart(constraints);\n      try {\n        for (var _d = true, _e = __asyncValues(this.simulcastCodecs.values()), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n          _c = _f.value;\n          _d = false;\n          const sc = _c;\n          if (sc.sender) {\n            sc.mediaStreamTrack = this.mediaStreamTrack.clone();\n            yield sc.sender.replaceTrack(sc.mediaStreamTrack);\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    });\n  }\n  setProcessor(processor_1) {\n    const _super = Object.create(null, {\n      setProcessor: {\n        get: () => super.setProcessor\n      }\n    });\n    return __awaiter(this, arguments, void 0, function (processor) {\n      var _this = this;\n      let showProcessedStreamLocally = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return function* () {\n        var _a, e_4, _b, _c;\n        var _d, _e;\n        yield _super.setProcessor.call(_this, processor, showProcessedStreamLocally);\n        if ((_d = _this.processor) === null || _d === void 0 ? void 0 : _d.processedTrack) {\n          try {\n            for (var _f = true, _g = __asyncValues(_this.simulcastCodecs.values()), _h; _h = yield _g.next(), _a = _h.done, !_a; _f = true) {\n              _c = _h.value;\n              _f = false;\n              const sc = _c;\n              yield (_e = sc.sender) === null || _e === void 0 ? void 0 : _e.replaceTrack(_this.processor.processedTrack);\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (!_f && !_a && (_b = _g.return)) yield _b.call(_g);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n      }();\n    });\n  }\n  setDegradationPreference(preference) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.degradationPreference = preference;\n      if (this.sender) {\n        try {\n          this.log.debug(\"setting degradationPreference to \".concat(preference), this.logContext);\n          const params = this.sender.getParameters();\n          params.degradationPreference = preference;\n          this.sender.setParameters(params);\n        } catch (e) {\n          this.log.warn(\"failed to set degradationPreference\", Object.assign({\n            error: e\n          }, this.logContext));\n        }\n      }\n    });\n  }\n  addSimulcastTrack(codec, encodings) {\n    if (this.simulcastCodecs.has(codec)) {\n      this.log.error(\"\".concat(codec, \" already added, skipping adding simulcast codec\"), this.logContext);\n      return;\n    }\n    const simulcastCodecInfo = {\n      codec,\n      mediaStreamTrack: this.mediaStreamTrack.clone(),\n      sender: undefined,\n      encodings\n    };\n    this.simulcastCodecs.set(codec, simulcastCodecInfo);\n    return simulcastCodecInfo;\n  }\n  setSimulcastTrackSender(codec, sender) {\n    const simulcastCodecInfo = this.simulcastCodecs.get(codec);\n    if (!simulcastCodecInfo) {\n      return;\n    }\n    simulcastCodecInfo.sender = sender;\n    // browser will reenable disabled codec/layers after new codec has been published,\n    // so refresh subscribedCodecs after publish a new codec\n    setTimeout(() => {\n      if (this.subscribedCodecs) {\n        this.setPublishingCodecs(this.subscribedCodecs);\n      }\n    }, refreshSubscribedCodecAfterNewCodec);\n  }\n  /**\n   * @internal\n   * Sets codecs that should be publishing, returns new codecs that have not yet\n   * been published\n   */\n  setPublishingCodecs(codecs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, codecs_1, codecs_1_1;\n      var _b, e_5, _c, _d;\n      this.log.debug('setting publishing codecs', Object.assign(Object.assign({}, this.logContext), {\n        codecs,\n        currentCodec: this.codec\n      }));\n      // only enable simulcast codec for preference codec setted\n      if (!this.codec && codecs.length > 0) {\n        yield this.setPublishingLayers(codecs[0].qualities);\n        return [];\n      }\n      this.subscribedCodecs = codecs;\n      const newCodecs = [];\n      try {\n        for (_a = true, codecs_1 = __asyncValues(codecs); codecs_1_1 = yield codecs_1.next(), _b = codecs_1_1.done, !_b; _a = true) {\n          _d = codecs_1_1.value;\n          _a = false;\n          const codec = _d;\n          if (!this.codec || this.codec === codec.codec) {\n            yield this.setPublishingLayers(codec.qualities);\n          } else {\n            const simulcastCodecInfo = this.simulcastCodecs.get(codec.codec);\n            this.log.debug(\"try setPublishingCodec for \".concat(codec.codec), Object.assign(Object.assign({}, this.logContext), {\n              simulcastCodecInfo\n            }));\n            if (!simulcastCodecInfo || !simulcastCodecInfo.sender) {\n              for (const q of codec.qualities) {\n                if (q.enabled) {\n                  newCodecs.push(codec.codec);\n                  break;\n                }\n              }\n            } else if (simulcastCodecInfo.encodings) {\n              this.log.debug(\"try setPublishingLayersForSender \".concat(codec.codec), this.logContext);\n              yield setPublishingLayersForSender(simulcastCodecInfo.sender, simulcastCodecInfo.encodings, codec.qualities, this.senderLock, this.log, this.logContext);\n            }\n          }\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (!_a && !_b && (_c = codecs_1.return)) yield _c.call(codecs_1);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n      return newCodecs;\n    });\n  }\n  /**\n   * @internal\n   * Sets layers that should be publishing\n   */\n  setPublishingLayers(qualities) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.log.debug('setting publishing layers', Object.assign(Object.assign({}, this.logContext), {\n        qualities\n      }));\n      if (!this.sender || !this.encodings) {\n        return;\n      }\n      yield setPublishingLayersForSender(this.sender, this.encodings, qualities, this.senderLock, this.log, this.logContext);\n    });\n  }\n  handleAppVisibilityChanged() {\n    const _super = Object.create(null, {\n      handleAppVisibilityChanged: {\n        get: () => super.handleAppVisibilityChanged\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      yield _super.handleAppVisibilityChanged.call(this);\n      if (!isMobile()) return;\n      if (this.isInBackground && this.source === Track.Source.Camera) {\n        this._mediaStreamTrack.enabled = false;\n      }\n    });\n  }\n}\nfunction setPublishingLayersForSender(sender, senderEncodings, qualities, senderLock, log, logContext) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const unlock = yield senderLock.lock();\n    log.debug('setPublishingLayersForSender', Object.assign(Object.assign({}, logContext), {\n      sender,\n      qualities,\n      senderEncodings\n    }));\n    try {\n      const params = sender.getParameters();\n      const {\n        encodings\n      } = params;\n      if (!encodings) {\n        return;\n      }\n      if (encodings.length !== senderEncodings.length) {\n        log.warn('cannot set publishing layers, encodings mismatch', Object.assign(Object.assign({}, logContext), {\n          encodings,\n          senderEncodings\n        }));\n        return;\n      }\n      let hasChanged = false;\n      /* disable closable spatial layer as it has video blur / frozen issue with current server / client\n      1. chrome 113: when switching to up layer with scalability Mode change, it will generate a\n            low resolution frame and recover very quickly, but noticable\n      2. livekit sfu: additional pli request cause video frozen for a few frames, also noticable */\n      const closableSpatial = false;\n      /* @ts-ignore */\n      if (closableSpatial && encodings[0].scalabilityMode) ; else {\n        // simulcast dynacast encodings\n        encodings.forEach((encoding, idx) => {\n          var _a;\n          let rid = (_a = encoding.rid) !== null && _a !== void 0 ? _a : '';\n          if (rid === '') {\n            rid = 'q';\n          }\n          const quality = videoQualityForRid(rid);\n          const subscribedQuality = qualities.find(q => q.quality === quality);\n          if (!subscribedQuality) {\n            return;\n          }\n          if (encoding.active !== subscribedQuality.enabled) {\n            hasChanged = true;\n            encoding.active = subscribedQuality.enabled;\n            log.debug(\"setting layer \".concat(subscribedQuality.quality, \" to \").concat(encoding.active ? 'enabled' : 'disabled'), logContext);\n            // FireFox does not support setting encoding.active to false, so we\n            // have a workaround of lowering its bitrate and resolution to the min.\n            if (isFireFox()) {\n              if (subscribedQuality.enabled) {\n                encoding.scaleResolutionDownBy = senderEncodings[idx].scaleResolutionDownBy;\n                encoding.maxBitrate = senderEncodings[idx].maxBitrate;\n                /* @ts-ignore */\n                encoding.maxFrameRate = senderEncodings[idx].maxFrameRate;\n              } else {\n                encoding.scaleResolutionDownBy = 4;\n                encoding.maxBitrate = 10;\n                /* @ts-ignore */\n                encoding.maxFrameRate = 2;\n              }\n            }\n          }\n        });\n      }\n      if (hasChanged) {\n        params.encodings = encodings;\n        log.debug(\"setting encodings\", Object.assign(Object.assign({}, logContext), {\n          encodings: params.encodings\n        }));\n        yield sender.setParameters(params);\n      }\n    } finally {\n      unlock();\n    }\n  });\n}\nfunction videoQualityForRid(rid) {\n  switch (rid) {\n    case 'f':\n      return VideoQuality.HIGH;\n    case 'h':\n      return VideoQuality.MEDIUM;\n    case 'q':\n      return VideoQuality.LOW;\n    default:\n      return VideoQuality.HIGH;\n  }\n}\nfunction videoLayersFromEncodings(width, height, encodings, svc) {\n  // default to a single layer, HQ\n  if (!encodings) {\n    return [new VideoLayer({\n      quality: VideoQuality.HIGH,\n      width,\n      height,\n      bitrate: 0,\n      ssrc: 0\n    })];\n  }\n  if (svc) {\n    // svc layers\n    /* @ts-ignore */\n    const encodingSM = encodings[0].scalabilityMode;\n    const sm = new ScalabilityMode(encodingSM);\n    const layers = [];\n    const resRatio = sm.suffix == 'h' ? 1.5 : 2;\n    const bitratesRatio = sm.suffix == 'h' ? 2 : 3;\n    for (let i = 0; i < sm.spatial; i += 1) {\n      layers.push(new VideoLayer({\n        quality: VideoQuality.HIGH - i,\n        width: Math.ceil(width / Math.pow(resRatio, i)),\n        height: Math.ceil(height / Math.pow(resRatio, i)),\n        bitrate: encodings[0].maxBitrate ? Math.ceil(encodings[0].maxBitrate / Math.pow(bitratesRatio, i)) : 0,\n        ssrc: 0\n      }));\n    }\n    return layers;\n  }\n  return encodings.map(encoding => {\n    var _a, _b, _c;\n    const scale = (_a = encoding.scaleResolutionDownBy) !== null && _a !== void 0 ? _a : 1;\n    let quality = videoQualityForRid((_b = encoding.rid) !== null && _b !== void 0 ? _b : '');\n    return new VideoLayer({\n      quality,\n      width: Math.ceil(width / scale),\n      height: Math.ceil(height / scale),\n      bitrate: (_c = encoding.maxBitrate) !== null && _c !== void 0 ? _c : 0,\n      ssrc: 0\n    });\n  });\n}\n\nconst lossyDataChannel = '_lossy';\nconst reliableDataChannel = '_reliable';\nconst minReconnectWait = 2 * 1000;\nconst leaveReconnect = 'leave-reconnect';\nvar PCState;\n(function (PCState) {\n  PCState[PCState[\"New\"] = 0] = \"New\";\n  PCState[PCState[\"Connected\"] = 1] = \"Connected\";\n  PCState[PCState[\"Disconnected\"] = 2] = \"Disconnected\";\n  PCState[PCState[\"Reconnecting\"] = 3] = \"Reconnecting\";\n  PCState[PCState[\"Closed\"] = 4] = \"Closed\";\n})(PCState || (PCState = {}));\n/** @internal */\nclass RTCEngine extends eventsExports.EventEmitter {\n  get isClosed() {\n    return this._isClosed;\n  }\n  get pendingReconnect() {\n    return !!this.reconnectTimeout;\n  }\n  constructor(options) {\n    var _a;\n    super();\n    this.options = options;\n    this.rtcConfig = {};\n    this.peerConnectionTimeout = roomConnectOptionDefaults.peerConnectionTimeout;\n    this.fullReconnectOnNext = false;\n    this.subscriberPrimary = false;\n    this.pcState = PCState.New;\n    this._isClosed = true;\n    this.pendingTrackResolvers = {};\n    this.reconnectAttempts = 0;\n    this.reconnectStart = 0;\n    this.attemptingReconnect = false;\n    /** keeps track of how often an initial join connection has been tried */\n    this.joinAttempts = 0;\n    /** specifies how often an initial join connection is allowed to retry */\n    this.maxJoinAttempts = 1;\n    this.shouldFailNext = false;\n    this.log = livekitLogger;\n    this.handleDataChannel = _a => __awaiter(this, [_a], void 0, function (_ref) {\n      var _this = this;\n      let {\n        channel\n      } = _ref;\n      return function* () {\n        if (!channel) {\n          return;\n        }\n        if (channel.label === reliableDataChannel) {\n          _this.reliableDCSub = channel;\n        } else if (channel.label === lossyDataChannel) {\n          _this.lossyDCSub = channel;\n        } else {\n          return;\n        }\n        _this.log.debug(\"on data channel \".concat(channel.id, \", \").concat(channel.label), _this.logContext);\n        channel.onmessage = _this.handleDataMessage;\n      }();\n    });\n    this.handleDataMessage = message => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      // make sure to respect incoming data message order by processing message events one after the other\n      const unlock = yield this.dataProcessLock.lock();\n      try {\n        // decode\n        let buffer;\n        if (message.data instanceof ArrayBuffer) {\n          buffer = message.data;\n        } else if (message.data instanceof Blob) {\n          buffer = yield message.data.arrayBuffer();\n        } else {\n          this.log.error('unsupported data type', Object.assign(Object.assign({}, this.logContext), {\n            data: message.data\n          }));\n          return;\n        }\n        const dp = DataPacket.fromBinary(new Uint8Array(buffer));\n        if (((_a = dp.value) === null || _a === void 0 ? void 0 : _a.case) === 'speaker') {\n          // dispatch speaker updates\n          this.emit(EngineEvent.ActiveSpeakersUpdate, dp.value.value.speakers);\n        } else {\n          if (((_b = dp.value) === null || _b === void 0 ? void 0 : _b.case) === 'user') {\n            // compatibility\n            applyUserDataCompat(dp, dp.value.value);\n          }\n          this.emit(EngineEvent.DataPacketReceived, dp);\n        }\n      } finally {\n        unlock();\n      }\n    });\n    this.handleDataError = event => {\n      const channel = event.currentTarget;\n      const channelKind = channel.maxRetransmits === 0 ? 'lossy' : 'reliable';\n      if (event instanceof ErrorEvent && event.error) {\n        const {\n          error\n        } = event.error;\n        this.log.error(\"DataChannel error on \".concat(channelKind, \": \").concat(event.message), Object.assign(Object.assign({}, this.logContext), {\n          error\n        }));\n      } else {\n        this.log.error(\"Unknown DataChannel error on \".concat(channelKind), Object.assign(Object.assign({}, this.logContext), {\n          event\n        }));\n      }\n    };\n    this.handleBufferedAmountLow = event => {\n      const channel = event.currentTarget;\n      const channelKind = channel.maxRetransmits === 0 ? DataPacket_Kind.LOSSY : DataPacket_Kind.RELIABLE;\n      this.updateAndEmitDCBufferStatus(channelKind);\n    };\n    // websocket reconnect behavior. if websocket is interrupted, and the PeerConnection\n    // continues to work, we can reconnect to websocket to continue the session\n    // after a number of retries, we'll close and give up permanently\n    this.handleDisconnect = (connection, disconnectReason) => {\n      if (this._isClosed) {\n        return;\n      }\n      this.log.warn(\"\".concat(connection, \" disconnected\"), this.logContext);\n      if (this.reconnectAttempts === 0) {\n        // only reset start time on the first try\n        this.reconnectStart = Date.now();\n      }\n      const disconnect = duration => {\n        this.log.warn(\"could not recover connection after \".concat(this.reconnectAttempts, \" attempts, \").concat(duration, \"ms. giving up\"), this.logContext);\n        this.emit(EngineEvent.Disconnected);\n        this.close();\n      };\n      const duration = Date.now() - this.reconnectStart;\n      let delay = this.getNextRetryDelay({\n        elapsedMs: duration,\n        retryCount: this.reconnectAttempts\n      });\n      if (delay === null) {\n        disconnect(duration);\n        return;\n      }\n      if (connection === leaveReconnect) {\n        delay = 0;\n      }\n      this.log.debug(\"reconnecting in \".concat(delay, \"ms\"), this.logContext);\n      this.clearReconnectTimeout();\n      if (this.token && this.regionUrlProvider) {\n        // token may have been refreshed, we do not want to recreate the regionUrlProvider\n        // since the current engine may have inherited a regional url\n        this.regionUrlProvider.updateToken(this.token);\n      }\n      this.reconnectTimeout = CriticalTimers.setTimeout(() => this.attemptReconnect(disconnectReason).finally(() => this.reconnectTimeout = undefined), delay);\n    };\n    this.waitForRestarted = () => {\n      return new Promise((resolve, reject) => {\n        if (this.pcState === PCState.Connected) {\n          resolve();\n        }\n        const onRestarted = () => {\n          this.off(EngineEvent.Disconnected, onDisconnected);\n          resolve();\n        };\n        const onDisconnected = () => {\n          this.off(EngineEvent.Restarted, onRestarted);\n          reject();\n        };\n        this.once(EngineEvent.Restarted, onRestarted);\n        this.once(EngineEvent.Disconnected, onDisconnected);\n      });\n    };\n    this.updateAndEmitDCBufferStatus = kind => {\n      const status = this.isBufferStatusLow(kind);\n      if (typeof status !== 'undefined' && status !== this.dcBufferStatus.get(kind)) {\n        this.dcBufferStatus.set(kind, status);\n        this.emit(EngineEvent.DCBufferStatusChanged, status, kind);\n      }\n    };\n    this.isBufferStatusLow = kind => {\n      const dc = this.dataChannelForKind(kind);\n      if (dc) {\n        return dc.bufferedAmount <= dc.bufferedAmountLowThreshold;\n      }\n    };\n    this.handleBrowserOnLine = () => {\n      // in case the engine is currently reconnecting, attempt a reconnect immediately after the browser state has changed to 'onLine'\n      if (this.client.currentState === SignalConnectionState.RECONNECTING) {\n        this.clearReconnectTimeout();\n        this.attemptReconnect(ReconnectReason.RR_SIGNAL_DISCONNECTED);\n      }\n    };\n    this.log = getLogger((_a = options.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Engine);\n    this.loggerOptions = {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.logContext\n    };\n    this.client = new SignalClient(undefined, this.loggerOptions);\n    this.client.signalLatency = this.options.expSignalLatency;\n    this.reconnectPolicy = this.options.reconnectPolicy;\n    this.registerOnLineListener();\n    this.closingLock = new Mutex();\n    this.dataProcessLock = new Mutex();\n    this.dcBufferStatus = new Map([[DataPacket_Kind.LOSSY, true], [DataPacket_Kind.RELIABLE, true]]);\n    this.client.onParticipantUpdate = updates => this.emit(EngineEvent.ParticipantUpdate, updates);\n    this.client.onConnectionQuality = update => this.emit(EngineEvent.ConnectionQualityUpdate, update);\n    this.client.onRoomUpdate = update => this.emit(EngineEvent.RoomUpdate, update);\n    this.client.onSubscriptionError = resp => this.emit(EngineEvent.SubscriptionError, resp);\n    this.client.onSubscriptionPermissionUpdate = update => this.emit(EngineEvent.SubscriptionPermissionUpdate, update);\n    this.client.onSpeakersChanged = update => this.emit(EngineEvent.SpeakersChanged, update);\n    this.client.onStreamStateUpdate = update => this.emit(EngineEvent.StreamStateChanged, update);\n    this.client.onRequestResponse = response => this.emit(EngineEvent.SignalRequestResponse, response);\n  }\n  /** @internal */\n  get logContext() {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    return {\n      room: (_b = (_a = this.latestJoinResponse) === null || _a === void 0 ? void 0 : _a.room) === null || _b === void 0 ? void 0 : _b.name,\n      roomID: (_d = (_c = this.latestJoinResponse) === null || _c === void 0 ? void 0 : _c.room) === null || _d === void 0 ? void 0 : _d.sid,\n      participant: (_f = (_e = this.latestJoinResponse) === null || _e === void 0 ? void 0 : _e.participant) === null || _f === void 0 ? void 0 : _f.identity,\n      pID: (_h = (_g = this.latestJoinResponse) === null || _g === void 0 ? void 0 : _g.participant) === null || _h === void 0 ? void 0 : _h.sid\n    };\n  }\n  join(url, token, opts, abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.url = url;\n      this.token = token;\n      this.signalOpts = opts;\n      this.maxJoinAttempts = opts.maxRetries;\n      try {\n        this.joinAttempts += 1;\n        this.setupSignalClientCallbacks();\n        const joinResponse = yield this.client.join(url, token, opts, abortSignal);\n        this._isClosed = false;\n        this.latestJoinResponse = joinResponse;\n        this.subscriberPrimary = joinResponse.subscriberPrimary;\n        if (!this.pcManager) {\n          yield this.configure(joinResponse);\n        }\n        // create offer\n        if (!this.subscriberPrimary) {\n          this.negotiate();\n        }\n        this.clientConfiguration = joinResponse.clientConfiguration;\n        return joinResponse;\n      } catch (e) {\n        if (e instanceof ConnectionError) {\n          if (e.reason === 1 /* ConnectionErrorReason.ServerUnreachable */) {\n            this.log.warn(\"Couldn't connect to server, attempt \".concat(this.joinAttempts, \" of \").concat(this.maxJoinAttempts), this.logContext);\n            if (this.joinAttempts < this.maxJoinAttempts) {\n              return this.join(url, token, opts, abortSignal);\n            }\n          }\n        }\n        throw e;\n      }\n    });\n  }\n  close() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const unlock = yield this.closingLock.lock();\n      if (this.isClosed) {\n        unlock();\n        return;\n      }\n      try {\n        this._isClosed = true;\n        this.emit(EngineEvent.Closing);\n        this.removeAllListeners();\n        this.deregisterOnLineListener();\n        this.clearPendingReconnect();\n        yield this.cleanupPeerConnections();\n        yield this.cleanupClient();\n      } finally {\n        unlock();\n      }\n    });\n  }\n  cleanupPeerConnections() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      yield (_a = this.pcManager) === null || _a === void 0 ? void 0 : _a.close();\n      this.pcManager = undefined;\n      const dcCleanup = dc => {\n        if (!dc) return;\n        dc.close();\n        dc.onbufferedamountlow = null;\n        dc.onclose = null;\n        dc.onclosing = null;\n        dc.onerror = null;\n        dc.onmessage = null;\n        dc.onopen = null;\n      };\n      dcCleanup(this.lossyDC);\n      dcCleanup(this.lossyDCSub);\n      dcCleanup(this.reliableDC);\n      dcCleanup(this.reliableDCSub);\n      this.lossyDC = undefined;\n      this.lossyDCSub = undefined;\n      this.reliableDC = undefined;\n      this.reliableDCSub = undefined;\n    });\n  }\n  cleanupClient() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.client.close();\n      this.client.resetCallbacks();\n    });\n  }\n  addTrack(req) {\n    if (this.pendingTrackResolvers[req.cid]) {\n      throw new TrackInvalidError('a track with the same ID has already been published');\n    }\n    return new Promise((resolve, reject) => {\n      const publicationTimeout = setTimeout(() => {\n        delete this.pendingTrackResolvers[req.cid];\n        reject(new ConnectionError('publication of local track timed out, no response from server'));\n      }, 10000);\n      this.pendingTrackResolvers[req.cid] = {\n        resolve: info => {\n          clearTimeout(publicationTimeout);\n          resolve(info);\n        },\n        reject: () => {\n          clearTimeout(publicationTimeout);\n          reject(new Error('Cancelled publication by calling unpublish'));\n        }\n      };\n      this.client.sendAddTrack(req);\n    });\n  }\n  /**\n   * Removes sender from PeerConnection, returning true if it was removed successfully\n   * and a negotiation is necessary\n   * @param sender\n   * @returns\n   */\n  removeTrack(sender) {\n    if (sender.track && this.pendingTrackResolvers[sender.track.id]) {\n      const {\n        reject\n      } = this.pendingTrackResolvers[sender.track.id];\n      if (reject) {\n        reject();\n      }\n      delete this.pendingTrackResolvers[sender.track.id];\n    }\n    try {\n      this.pcManager.removeTrack(sender);\n      return true;\n    } catch (e) {\n      this.log.warn('failed to remove track', Object.assign(Object.assign({}, this.logContext), {\n        error: e\n      }));\n    }\n    return false;\n  }\n  updateMuteStatus(trackSid, muted) {\n    this.client.sendMuteTrack(trackSid, muted);\n  }\n  get dataSubscriberReadyState() {\n    var _a;\n    return (_a = this.reliableDCSub) === null || _a === void 0 ? void 0 : _a.readyState;\n  }\n  getConnectedServerAddress() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      return (_a = this.pcManager) === null || _a === void 0 ? void 0 : _a.getConnectedAddress();\n    });\n  }\n  /* @internal */\n  setRegionUrlProvider(provider) {\n    this.regionUrlProvider = provider;\n  }\n  configure(joinResponse) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      // already configured\n      if (this.pcManager && this.pcManager.currentState !== PCTransportState.NEW) {\n        return;\n      }\n      this.participantSid = (_a = joinResponse.participant) === null || _a === void 0 ? void 0 : _a.sid;\n      const rtcConfig = this.makeRTCConfiguration(joinResponse);\n      this.pcManager = new PCTransportManager(rtcConfig, joinResponse.subscriberPrimary, this.loggerOptions);\n      this.emit(EngineEvent.TransportsCreated, this.pcManager.publisher, this.pcManager.subscriber);\n      this.pcManager.onIceCandidate = (candidate, target) => {\n        this.client.sendIceCandidate(candidate, target);\n      };\n      this.pcManager.onPublisherOffer = offer => {\n        this.client.sendOffer(offer);\n      };\n      this.pcManager.onDataChannel = this.handleDataChannel;\n      this.pcManager.onStateChange = (connectionState, publisherState, subscriberState) => __awaiter(this, void 0, void 0, function* () {\n        this.log.debug(\"primary PC state changed \".concat(connectionState), this.logContext);\n        if (['closed', 'disconnected', 'failed'].includes(publisherState)) {\n          // reset publisher connection promise\n          this.publisherConnectionPromise = undefined;\n        }\n        if (connectionState === PCTransportState.CONNECTED) {\n          const shouldEmit = this.pcState === PCState.New;\n          this.pcState = PCState.Connected;\n          if (shouldEmit) {\n            this.emit(EngineEvent.Connected, joinResponse);\n          }\n        } else if (connectionState === PCTransportState.FAILED) {\n          // on Safari, PeerConnection will switch to 'disconnected' during renegotiation\n          if (this.pcState === PCState.Connected) {\n            this.pcState = PCState.Disconnected;\n            this.handleDisconnect('peerconnection failed', subscriberState === 'failed' ? ReconnectReason.RR_SUBSCRIBER_FAILED : ReconnectReason.RR_PUBLISHER_FAILED);\n          }\n        }\n        // detect cases where both signal client and peer connection are severed and assume that user has lost network connection\n        const isSignalSevered = this.client.isDisconnected || this.client.currentState === SignalConnectionState.RECONNECTING;\n        const isPCSevered = [PCTransportState.FAILED, PCTransportState.CLOSING, PCTransportState.CLOSED].includes(connectionState);\n        if (isSignalSevered && isPCSevered && !this._isClosed) {\n          this.emit(EngineEvent.Offline);\n        }\n      });\n      this.pcManager.onTrack = ev => {\n        this.emit(EngineEvent.MediaTrackAdded, ev.track, ev.streams[0], ev.receiver);\n      };\n      if (!supportOptionalDatachannel((_b = joinResponse.serverInfo) === null || _b === void 0 ? void 0 : _b.protocol)) {\n        this.createDataChannels();\n      }\n    });\n  }\n  setupSignalClientCallbacks() {\n    // configure signaling client\n    this.client.onAnswer = sd => __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.debug('received server answer', Object.assign(Object.assign({}, this.logContext), {\n        RTCSdpType: sd.type\n      }));\n      yield this.pcManager.setPublisherAnswer(sd);\n    });\n    // add candidate on trickle\n    this.client.onTrickle = (candidate, target) => {\n      if (!this.pcManager) {\n        return;\n      }\n      this.log.trace('got ICE candidate from peer', Object.assign(Object.assign({}, this.logContext), {\n        candidate,\n        target\n      }));\n      this.pcManager.addIceCandidate(candidate, target);\n    };\n    // when server creates an offer for the client\n    this.client.onOffer = sd => __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        return;\n      }\n      const answer = yield this.pcManager.createSubscriberAnswerFromOffer(sd);\n      this.client.sendAnswer(answer);\n    });\n    this.client.onLocalTrackPublished = res => {\n      var _a;\n      this.log.debug('received trackPublishedResponse', Object.assign(Object.assign({}, this.logContext), {\n        cid: res.cid,\n        track: (_a = res.track) === null || _a === void 0 ? void 0 : _a.sid\n      }));\n      if (!this.pendingTrackResolvers[res.cid]) {\n        this.log.error(\"missing track resolver for \".concat(res.cid), Object.assign(Object.assign({}, this.logContext), {\n          cid: res.cid\n        }));\n        return;\n      }\n      const {\n        resolve\n      } = this.pendingTrackResolvers[res.cid];\n      delete this.pendingTrackResolvers[res.cid];\n      resolve(res.track);\n    };\n    this.client.onLocalTrackUnpublished = response => {\n      this.emit(EngineEvent.LocalTrackUnpublished, response);\n    };\n    this.client.onLocalTrackSubscribed = trackSid => {\n      this.emit(EngineEvent.LocalTrackSubscribed, trackSid);\n    };\n    this.client.onTokenRefresh = token => {\n      this.token = token;\n    };\n    this.client.onRemoteMuteChanged = (trackSid, muted) => {\n      this.emit(EngineEvent.RemoteMute, trackSid, muted);\n    };\n    this.client.onSubscribedQualityUpdate = update => {\n      this.emit(EngineEvent.SubscribedQualityUpdate, update);\n    };\n    this.client.onClose = () => {\n      this.handleDisconnect('signal', ReconnectReason.RR_SIGNAL_DISCONNECTED);\n    };\n    this.client.onLeave = leave => {\n      this.log.debug('client leave request', Object.assign(Object.assign({}, this.logContext), {\n        reason: leave === null || leave === void 0 ? void 0 : leave.reason\n      }));\n      if (leave.regions && this.regionUrlProvider) {\n        this.log.debug('updating regions', this.logContext);\n        this.regionUrlProvider.setServerReportedRegions(leave.regions);\n      }\n      switch (leave.action) {\n        case LeaveRequest_Action.DISCONNECT:\n          this.emit(EngineEvent.Disconnected, leave === null || leave === void 0 ? void 0 : leave.reason);\n          this.close();\n          break;\n        case LeaveRequest_Action.RECONNECT:\n          this.fullReconnectOnNext = true;\n          // reconnect immediately instead of waiting for next attempt\n          this.handleDisconnect(leaveReconnect);\n          break;\n        case LeaveRequest_Action.RESUME:\n          // reconnect immediately instead of waiting for next attempt\n          this.handleDisconnect(leaveReconnect);\n      }\n    };\n  }\n  makeRTCConfiguration(serverResponse) {\n    var _a;\n    const rtcConfig = Object.assign({}, this.rtcConfig);\n    if ((_a = this.signalOpts) === null || _a === void 0 ? void 0 : _a.e2eeEnabled) {\n      this.log.debug('E2EE - setting up transports with insertable streams', this.logContext);\n      //  this makes sure that no data is sent before the transforms are ready\n      // @ts-ignore\n      rtcConfig.encodedInsertableStreams = true;\n    }\n    // update ICE servers before creating PeerConnection\n    if (serverResponse.iceServers && !rtcConfig.iceServers) {\n      const rtcIceServers = [];\n      serverResponse.iceServers.forEach(iceServer => {\n        const rtcIceServer = {\n          urls: iceServer.urls\n        };\n        if (iceServer.username) rtcIceServer.username = iceServer.username;\n        if (iceServer.credential) {\n          rtcIceServer.credential = iceServer.credential;\n        }\n        rtcIceServers.push(rtcIceServer);\n      });\n      rtcConfig.iceServers = rtcIceServers;\n    }\n    if (serverResponse.clientConfiguration && serverResponse.clientConfiguration.forceRelay === ClientConfigSetting.ENABLED) {\n      rtcConfig.iceTransportPolicy = 'relay';\n    }\n    // @ts-ignore\n    rtcConfig.sdpSemantics = 'unified-plan';\n    // @ts-ignore\n    rtcConfig.continualGatheringPolicy = 'gather_continually';\n    return rtcConfig;\n  }\n  createDataChannels() {\n    if (!this.pcManager) {\n      return;\n    }\n    // clear old data channel callbacks if recreate\n    if (this.lossyDC) {\n      this.lossyDC.onmessage = null;\n      this.lossyDC.onerror = null;\n    }\n    if (this.reliableDC) {\n      this.reliableDC.onmessage = null;\n      this.reliableDC.onerror = null;\n    }\n    // create data channels\n    this.lossyDC = this.pcManager.createPublisherDataChannel(lossyDataChannel, {\n      // will drop older packets that arrive\n      ordered: true,\n      maxRetransmits: 0\n    });\n    this.reliableDC = this.pcManager.createPublisherDataChannel(reliableDataChannel, {\n      ordered: true\n    });\n    // also handle messages over the pub channel, for backwards compatibility\n    this.lossyDC.onmessage = this.handleDataMessage;\n    this.reliableDC.onmessage = this.handleDataMessage;\n    // handle datachannel errors\n    this.lossyDC.onerror = this.handleDataError;\n    this.reliableDC.onerror = this.handleDataError;\n    // set up dc buffer threshold, set to 64kB (otherwise 0 by default)\n    this.lossyDC.bufferedAmountLowThreshold = 65535;\n    this.reliableDC.bufferedAmountLowThreshold = 65535;\n    // handle buffer amount low events\n    this.lossyDC.onbufferedamountlow = this.handleBufferedAmountLow;\n    this.reliableDC.onbufferedamountlow = this.handleBufferedAmountLow;\n  }\n  createSender(track, opts, encodings) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (supportsTransceiver()) {\n        const sender = yield this.createTransceiverRTCRtpSender(track, opts, encodings);\n        return sender;\n      }\n      if (supportsAddTrack()) {\n        this.log.warn('using add-track fallback', this.logContext);\n        const sender = yield this.createRTCRtpSender(track.mediaStreamTrack);\n        return sender;\n      }\n      throw new UnexpectedConnectionState('Required webRTC APIs not supported on this device');\n    });\n  }\n  createSimulcastSender(track, simulcastTrack, opts, encodings) {\n    return __awaiter(this, void 0, void 0, function* () {\n      // store RTCRtpSender\n      if (supportsTransceiver()) {\n        return this.createSimulcastTransceiverSender(track, simulcastTrack, opts, encodings);\n      }\n      if (supportsAddTrack()) {\n        this.log.debug('using add-track fallback', this.logContext);\n        return this.createRTCRtpSender(track.mediaStreamTrack);\n      }\n      throw new UnexpectedConnectionState('Cannot stream on this device');\n    });\n  }\n  createTransceiverRTCRtpSender(track, opts, encodings) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('publisher is closed');\n      }\n      const streams = [];\n      if (track.mediaStream) {\n        streams.push(track.mediaStream);\n      }\n      if (track instanceof LocalVideoTrack) {\n        track.codec = opts.videoCodec;\n      }\n      const transceiverInit = {\n        direction: 'sendonly',\n        streams\n      };\n      if (encodings) {\n        transceiverInit.sendEncodings = encodings;\n      }\n      // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n      const transceiver = yield this.pcManager.addPublisherTransceiver(track.mediaStreamTrack, transceiverInit);\n      return transceiver.sender;\n    });\n  }\n  createSimulcastTransceiverSender(track, simulcastTrack, opts, encodings) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('publisher is closed');\n      }\n      const transceiverInit = {\n        direction: 'sendonly'\n      };\n      if (encodings) {\n        transceiverInit.sendEncodings = encodings;\n      }\n      // addTransceiver for react-native is async. web is synchronous, but await won't effect it.\n      const transceiver = yield this.pcManager.addPublisherTransceiver(simulcastTrack.mediaStreamTrack, transceiverInit);\n      if (!opts.videoCodec) {\n        return;\n      }\n      track.setSimulcastTrackSender(opts.videoCodec, transceiver.sender);\n      return transceiver.sender;\n    });\n  }\n  createRTCRtpSender(track) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('publisher is closed');\n      }\n      return this.pcManager.addPublisherTrack(track);\n    });\n  }\n  attemptReconnect(reason) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n      if (this._isClosed) {\n        return;\n      }\n      // guard for attempting reconnection multiple times while one attempt is still not finished\n      if (this.attemptingReconnect) {\n        livekitLogger.warn('already attempting reconnect, returning early', this.logContext);\n        return;\n      }\n      if (((_a = this.clientConfiguration) === null || _a === void 0 ? void 0 : _a.resumeConnection) === ClientConfigSetting.DISABLED ||\n      // signaling state could change to closed due to hardware sleep\n      // those connections cannot be resumed\n      ((_c = (_b = this.pcManager) === null || _b === void 0 ? void 0 : _b.currentState) !== null && _c !== void 0 ? _c : PCTransportState.NEW) === PCTransportState.NEW) {\n        this.fullReconnectOnNext = true;\n      }\n      try {\n        this.attemptingReconnect = true;\n        if (this.fullReconnectOnNext) {\n          yield this.restartConnection();\n        } else {\n          yield this.resumeConnection(reason);\n        }\n        this.clearPendingReconnect();\n        this.fullReconnectOnNext = false;\n      } catch (e) {\n        this.reconnectAttempts += 1;\n        let recoverable = true;\n        if (e instanceof UnexpectedConnectionState) {\n          this.log.debug('received unrecoverable error', Object.assign(Object.assign({}, this.logContext), {\n            error: e\n          }));\n          // unrecoverable\n          recoverable = false;\n        } else if (!(e instanceof SignalReconnectError)) {\n          // cannot resume\n          this.fullReconnectOnNext = true;\n        }\n        if (recoverable) {\n          this.handleDisconnect('reconnect', ReconnectReason.RR_UNKNOWN);\n        } else {\n          this.log.info(\"could not recover connection after \".concat(this.reconnectAttempts, \" attempts, \").concat(Date.now() - this.reconnectStart, \"ms. giving up\"), this.logContext);\n          this.emit(EngineEvent.Disconnected);\n          yield this.close();\n        }\n      } finally {\n        this.attemptingReconnect = false;\n      }\n    });\n  }\n  getNextRetryDelay(context) {\n    try {\n      return this.reconnectPolicy.nextRetryDelayInMs(context);\n    } catch (e) {\n      this.log.warn('encountered error in reconnect policy', Object.assign(Object.assign({}, this.logContext), {\n        error: e\n      }));\n    }\n    // error in user code with provided reconnect policy, stop reconnecting\n    return null;\n  }\n  restartConnection(regionUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n      try {\n        if (!this.url || !this.token) {\n          // permanent failure, don't attempt reconnection\n          throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n        }\n        this.log.info(\"reconnecting, attempt: \".concat(this.reconnectAttempts), this.logContext);\n        this.emit(EngineEvent.Restarting);\n        if (!this.client.isDisconnected) {\n          yield this.client.sendLeave();\n        }\n        yield this.cleanupPeerConnections();\n        yield this.cleanupClient();\n        let joinResponse;\n        try {\n          if (!this.signalOpts) {\n            this.log.warn('attempted connection restart, without signal options present', this.logContext);\n            throw new SignalReconnectError();\n          }\n          // in case a regionUrl is passed, the region URL takes precedence\n          joinResponse = yield this.join(regionUrl !== null && regionUrl !== void 0 ? regionUrl : this.url, this.token, this.signalOpts);\n        } catch (e) {\n          if (e instanceof ConnectionError && e.reason === 0 /* ConnectionErrorReason.NotAllowed */) {\n            throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n          }\n          throw new SignalReconnectError();\n        }\n        if (this.shouldFailNext) {\n          this.shouldFailNext = false;\n          throw new Error('simulated failure');\n        }\n        this.client.setReconnected();\n        this.emit(EngineEvent.SignalRestarted, joinResponse);\n        yield this.waitForPCReconnected();\n        // re-check signal connection state before setting engine as resumed\n        if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n          throw new SignalReconnectError('Signal connection got severed during reconnect');\n        }\n        (_a = this.regionUrlProvider) === null || _a === void 0 ? void 0 : _a.resetAttempts();\n        // reconnect success\n        this.emit(EngineEvent.Restarted);\n      } catch (error) {\n        const nextRegionUrl = yield (_b = this.regionUrlProvider) === null || _b === void 0 ? void 0 : _b.getNextBestRegionUrl();\n        if (nextRegionUrl) {\n          yield this.restartConnection(nextRegionUrl);\n          return;\n        } else {\n          // no more regions to try (or we're not on cloud)\n          (_c = this.regionUrlProvider) === null || _c === void 0 ? void 0 : _c.resetAttempts();\n          throw error;\n        }\n      }\n    });\n  }\n  resumeConnection(reason) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!this.url || !this.token) {\n        // permanent failure, don't attempt reconnection\n        throw new UnexpectedConnectionState('could not reconnect, url or token not saved');\n      }\n      // trigger publisher reconnect\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('publisher and subscriber connections unset');\n      }\n      this.log.info(\"resuming signal connection, attempt \".concat(this.reconnectAttempts), this.logContext);\n      this.emit(EngineEvent.Resuming);\n      let res;\n      try {\n        this.setupSignalClientCallbacks();\n        res = yield this.client.reconnect(this.url, this.token, this.participantSid, reason);\n      } catch (error) {\n        let message = '';\n        if (error instanceof Error) {\n          message = error.message;\n          this.log.error(error.message, Object.assign(Object.assign({}, this.logContext), {\n            error\n          }));\n        }\n        if (error instanceof ConnectionError && error.reason === 0 /* ConnectionErrorReason.NotAllowed */) {\n          throw new UnexpectedConnectionState('could not reconnect, token might be expired');\n        }\n        if (error instanceof ConnectionError && error.reason === 4 /* ConnectionErrorReason.LeaveRequest */) {\n          throw error;\n        }\n        throw new SignalReconnectError(message);\n      }\n      this.emit(EngineEvent.SignalResumed);\n      if (res) {\n        const rtcConfig = this.makeRTCConfiguration(res);\n        this.pcManager.updateConfiguration(rtcConfig);\n      } else {\n        this.log.warn('Did not receive reconnect response', this.logContext);\n      }\n      if (this.shouldFailNext) {\n        this.shouldFailNext = false;\n        throw new Error('simulated failure');\n      }\n      yield this.pcManager.triggerIceRestart();\n      yield this.waitForPCReconnected();\n      // re-check signal connection state before setting engine as resumed\n      if (this.client.currentState !== SignalConnectionState.CONNECTED) {\n        throw new SignalReconnectError('Signal connection got severed during reconnect');\n      }\n      this.client.setReconnected();\n      // recreate publish datachannel if it's id is null\n      // (for safari https://bugs.webkit.org/show_bug.cgi?id=184688)\n      if (((_a = this.reliableDC) === null || _a === void 0 ? void 0 : _a.readyState) === 'open' && this.reliableDC.id === null) {\n        this.createDataChannels();\n      }\n      // resume success\n      this.emit(EngineEvent.Resumed);\n    });\n  }\n  waitForPCInitialConnection(timeout, abortController) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.pcManager) {\n        throw new UnexpectedConnectionState('PC manager is closed');\n      }\n      yield this.pcManager.ensurePCTransportConnection(abortController, timeout);\n    });\n  }\n  waitForPCReconnected() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.pcState = PCState.Reconnecting;\n      this.log.debug('waiting for peer connection to reconnect', this.logContext);\n      try {\n        yield sleep(minReconnectWait); // FIXME setTimeout again not ideal for a connection critical path\n        if (!this.pcManager) {\n          throw new UnexpectedConnectionState('PC manager is closed');\n        }\n        yield this.pcManager.ensurePCTransportConnection(undefined, this.peerConnectionTimeout);\n        this.pcState = PCState.Connected;\n      } catch (e) {\n        // TODO do we need a `failed` state here for the PC?\n        this.pcState = PCState.Disconnected;\n        throw new ConnectionError(\"could not establish PC connection, \".concat(e.message));\n      }\n    });\n  }\n  /* @internal */\n  sendDataPacket(packet, kind) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const msg = packet.toBinary();\n      // make sure we do have a data connection\n      yield this.ensurePublisherConnected(kind);\n      const dc = this.dataChannelForKind(kind);\n      if (dc) {\n        dc.send(msg);\n      }\n      this.updateAndEmitDCBufferStatus(kind);\n    });\n  }\n  /**\n   * @internal\n   */\n  ensureDataTransportConnected(kind_1) {\n    return __awaiter(this, arguments, void 0, function (kind) {\n      var _this2 = this;\n      let subscriber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.subscriberPrimary;\n      return function* () {\n        var _a;\n        if (!_this2.pcManager) {\n          throw new UnexpectedConnectionState('PC manager is closed');\n        }\n        const transport = subscriber ? _this2.pcManager.subscriber : _this2.pcManager.publisher;\n        const transportName = subscriber ? 'Subscriber' : 'Publisher';\n        if (!transport) {\n          throw new ConnectionError(\"\".concat(transportName, \" connection not set\"));\n        }\n        let needNegotiation = false;\n        if (!subscriber && !_this2.dataChannelForKind(kind, subscriber)) {\n          _this2.createDataChannels();\n          needNegotiation = true;\n        }\n        if (!needNegotiation && !subscriber && !_this2.pcManager.publisher.isICEConnected && _this2.pcManager.publisher.getICEConnectionState() !== 'checking') {\n          needNegotiation = true;\n        }\n        if (needNegotiation) {\n          // start negotiation\n          _this2.negotiate();\n        }\n        const targetChannel = _this2.dataChannelForKind(kind, subscriber);\n        if ((targetChannel === null || targetChannel === void 0 ? void 0 : targetChannel.readyState) === 'open') {\n          return;\n        }\n        // wait until ICE connected\n        const endTime = new Date().getTime() + _this2.peerConnectionTimeout;\n        while (new Date().getTime() < endTime) {\n          if (transport.isICEConnected && ((_a = _this2.dataChannelForKind(kind, subscriber)) === null || _a === void 0 ? void 0 : _a.readyState) === 'open') {\n            return;\n          }\n          yield sleep(50);\n        }\n        throw new ConnectionError(\"could not establish \".concat(transportName, \" connection, state: \").concat(transport.getICEConnectionState()));\n      }();\n    });\n  }\n  ensurePublisherConnected(kind) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.publisherConnectionPromise) {\n        this.publisherConnectionPromise = this.ensureDataTransportConnected(kind, false);\n      }\n      yield this.publisherConnectionPromise;\n    });\n  }\n  /* @internal */\n  verifyTransport() {\n    if (!this.pcManager) {\n      return false;\n    }\n    // primary connection\n    if (this.pcManager.currentState !== PCTransportState.CONNECTED) {\n      return false;\n    }\n    // ensure signal is connected\n    if (!this.client.ws || this.client.ws.readyState === WebSocket.CLOSED) {\n      return false;\n    }\n    return true;\n  }\n  /** @internal */\n  negotiate() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // observe signal state\n      return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n        if (!this.pcManager) {\n          reject(new NegotiationError('PC manager is closed'));\n          return;\n        }\n        this.pcManager.requirePublisher();\n        // don't negotiate without any transceivers or data channel, it will generate sdp without ice frag then negotiate failed\n        if (this.pcManager.publisher.getTransceivers().length == 0 && !this.lossyDC && !this.reliableDC) {\n          this.createDataChannels();\n        }\n        const abortController = new AbortController();\n        const handleClosed = () => {\n          abortController.abort();\n          this.log.debug('engine disconnected while negotiation was ongoing', this.logContext);\n          resolve();\n          return;\n        };\n        if (this.isClosed) {\n          reject('cannot negotiate on closed engine');\n        }\n        this.on(EngineEvent.Closing, handleClosed);\n        this.pcManager.publisher.once(PCEvents.RTPVideoPayloadTypes, rtpTypes => {\n          const rtpMap = new Map();\n          rtpTypes.forEach(rtp => {\n            const codec = rtp.codec.toLowerCase();\n            if (isVideoCodec(codec)) {\n              rtpMap.set(rtp.payload, codec);\n            }\n          });\n          this.emit(EngineEvent.RTPVideoMapUpdate, rtpMap);\n        });\n        try {\n          yield this.pcManager.negotiate(abortController);\n          resolve();\n        } catch (e) {\n          if (e instanceof NegotiationError) {\n            this.fullReconnectOnNext = true;\n          }\n          this.handleDisconnect('negotiation', ReconnectReason.RR_UNKNOWN);\n          reject(e);\n        } finally {\n          this.off(EngineEvent.Closing, handleClosed);\n        }\n      }));\n    });\n  }\n  dataChannelForKind(kind, sub) {\n    if (!sub) {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDC;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDC;\n      }\n    } else {\n      if (kind === DataPacket_Kind.LOSSY) {\n        return this.lossyDCSub;\n      }\n      if (kind === DataPacket_Kind.RELIABLE) {\n        return this.reliableDCSub;\n      }\n    }\n  }\n  /** @internal */\n  sendSyncState(remoteTracks, localTracks) {\n    var _a, _b;\n    if (!this.pcManager) {\n      this.log.warn('sync state cannot be sent without peer connection setup', this.logContext);\n      return;\n    }\n    const previousAnswer = this.pcManager.subscriber.getLocalDescription();\n    const previousOffer = this.pcManager.subscriber.getRemoteDescription();\n    /* 1. autosubscribe on, so subscribed tracks = all tracks - unsub tracks,\n          in this case, we send unsub tracks, so server add all tracks to this\n          subscribe pc and unsub special tracks from it.\n       2. autosubscribe off, we send subscribed tracks.\n    */\n    const autoSubscribe = (_b = (_a = this.signalOpts) === null || _a === void 0 ? void 0 : _a.autoSubscribe) !== null && _b !== void 0 ? _b : true;\n    const trackSids = new Array();\n    const trackSidsDisabled = new Array();\n    remoteTracks.forEach(track => {\n      if (track.isDesired !== autoSubscribe) {\n        trackSids.push(track.trackSid);\n      }\n      if (!track.isEnabled) {\n        trackSidsDisabled.push(track.trackSid);\n      }\n    });\n    this.client.sendSyncState(new SyncState({\n      answer: previousAnswer ? toProtoSessionDescription({\n        sdp: previousAnswer.sdp,\n        type: previousAnswer.type\n      }) : undefined,\n      offer: previousOffer ? toProtoSessionDescription({\n        sdp: previousOffer.sdp,\n        type: previousOffer.type\n      }) : undefined,\n      subscription: new UpdateSubscription({\n        trackSids,\n        subscribe: !autoSubscribe,\n        participantTracks: []\n      }),\n      publishTracks: getTrackPublicationInfo(localTracks),\n      dataChannels: this.dataChannelsInfo(),\n      trackSidsDisabled\n    }));\n  }\n  /* @internal */\n  failNext() {\n    // debugging method to fail the next reconnect/resume attempt\n    this.shouldFailNext = true;\n  }\n  dataChannelsInfo() {\n    const infos = [];\n    const getInfo = (dc, target) => {\n      if ((dc === null || dc === void 0 ? void 0 : dc.id) !== undefined && dc.id !== null) {\n        infos.push(new DataChannelInfo({\n          label: dc.label,\n          id: dc.id,\n          target\n        }));\n      }\n    };\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE), SignalTarget.PUBLISHER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.LOSSY, true), SignalTarget.SUBSCRIBER);\n    getInfo(this.dataChannelForKind(DataPacket_Kind.RELIABLE, true), SignalTarget.SUBSCRIBER);\n    return infos;\n  }\n  clearReconnectTimeout() {\n    if (this.reconnectTimeout) {\n      CriticalTimers.clearTimeout(this.reconnectTimeout);\n    }\n  }\n  clearPendingReconnect() {\n    this.clearReconnectTimeout();\n    this.reconnectAttempts = 0;\n  }\n  registerOnLineListener() {\n    if (isWeb()) {\n      window.addEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n  deregisterOnLineListener() {\n    if (isWeb()) {\n      window.removeEventListener('online', this.handleBrowserOnLine);\n    }\n  }\n}\nclass SignalReconnectError extends Error {}\nfunction supportOptionalDatachannel(protocol) {\n  return protocol !== undefined && protocol > 13;\n}\nfunction applyUserDataCompat(newObj, oldObj) {\n  const participantIdentity = newObj.participantIdentity ? newObj.participantIdentity : oldObj.participantIdentity;\n  newObj.participantIdentity = participantIdentity;\n  oldObj.participantIdentity = participantIdentity;\n  const destinationIdentities = newObj.destinationIdentities.length !== 0 ? newObj.destinationIdentities : oldObj.destinationIdentities;\n  newObj.destinationIdentities = destinationIdentities;\n  oldObj.destinationIdentities = destinationIdentities;\n}\n\nclass RegionUrlProvider {\n  constructor(url, token) {\n    this.lastUpdateAt = 0;\n    this.settingsCacheTime = 3000;\n    this.attemptedRegions = [];\n    this.serverUrl = new URL(url);\n    this.token = token;\n  }\n  updateToken(token) {\n    this.token = token;\n  }\n  isCloud() {\n    return isCloud(this.serverUrl);\n  }\n  getServerUrl() {\n    return this.serverUrl;\n  }\n  getNextBestRegionUrl(abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.isCloud()) {\n        throw Error('region availability is only supported for LiveKit Cloud domains');\n      }\n      if (!this.regionSettings || Date.now() - this.lastUpdateAt > this.settingsCacheTime) {\n        this.regionSettings = yield this.fetchRegionSettings(abortSignal);\n      }\n      const regionsLeft = this.regionSettings.regions.filter(region => !this.attemptedRegions.find(attempted => attempted.url === region.url));\n      if (regionsLeft.length > 0) {\n        const nextRegion = regionsLeft[0];\n        this.attemptedRegions.push(nextRegion);\n        livekitLogger.debug(\"next region: \".concat(nextRegion.region));\n        return nextRegion.url;\n      } else {\n        return null;\n      }\n    });\n  }\n  resetAttempts() {\n    this.attemptedRegions = [];\n  }\n  /* @internal */\n  fetchRegionSettings(signal) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const regionSettingsResponse = yield fetch(\"\".concat(getCloudConfigUrl(this.serverUrl), \"/regions\"), {\n        headers: {\n          authorization: \"Bearer \".concat(this.token)\n        },\n        signal\n      });\n      if (regionSettingsResponse.ok) {\n        const regionSettings = yield regionSettingsResponse.json();\n        this.lastUpdateAt = Date.now();\n        return regionSettings;\n      } else {\n        throw new ConnectionError(\"Could not fetch region settings: \".concat(regionSettingsResponse.statusText), regionSettingsResponse.status === 401 ? 0 /* ConnectionErrorReason.NotAllowed */ : undefined, regionSettingsResponse.status);\n      }\n    });\n  }\n  setServerReportedRegions(regions) {\n    this.regionSettings = regions;\n    this.lastUpdateAt = Date.now();\n  }\n}\nfunction getCloudConfigUrl(serverUrl) {\n  return \"\".concat(serverUrl.protocol.replace('ws', 'http'), \"//\").concat(serverUrl.host, \"/settings\");\n}\n\nclass RemoteTrack extends Track {\n  constructor(mediaTrack, sid, kind, receiver, loggerOptions) {\n    super(mediaTrack, kind, loggerOptions);\n    this.sid = sid;\n    this.receiver = receiver;\n  }\n  /** @internal */\n  setMuted(muted) {\n    if (this.isMuted !== muted) {\n      this.isMuted = muted;\n      this._mediaStreamTrack.enabled = !muted;\n      this.emit(muted ? TrackEvent.Muted : TrackEvent.Unmuted, this);\n    }\n  }\n  /** @internal */\n  setMediaStream(stream) {\n    // this is needed to determine when the track is finished\n    this.mediaStream = stream;\n    const onRemoveTrack = event => {\n      if (event.track === this._mediaStreamTrack) {\n        stream.removeEventListener('removetrack', onRemoveTrack);\n        if (this.receiver && 'playoutDelayHint' in this.receiver) {\n          this.receiver.playoutDelayHint = undefined;\n        }\n        this.receiver = undefined;\n        this._currentBitrate = 0;\n        this.emit(TrackEvent.Ended, this);\n      }\n    };\n    stream.addEventListener('removetrack', onRemoveTrack);\n  }\n  start() {\n    this.startMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.enable();\n  }\n  stop() {\n    this.stopMonitor();\n    // use `enabled` of track to enable re-use of transceiver\n    super.disable();\n  }\n  /**\n   * Gets the RTCStatsReport for the RemoteTrack's underlying RTCRtpReceiver\n   * See https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport\n   *\n   * @returns Promise<RTCStatsReport> | undefined\n   */\n  getRTCStatsReport() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!((_a = this.receiver) === null || _a === void 0 ? void 0 : _a.getStats)) {\n        return;\n      }\n      const statsReport = yield this.receiver.getStats();\n      return statsReport;\n    });\n  }\n  /**\n   * Allows to set a playout delay (in seconds) for this track.\n   * A higher value allows for more buffering of the track in the browser\n   * and will result in a delay of media being played back of `delayInSeconds`\n   */\n  setPlayoutDelay(delayInSeconds) {\n    if (this.receiver) {\n      if ('playoutDelayHint' in this.receiver) {\n        this.receiver.playoutDelayHint = delayInSeconds;\n      } else {\n        this.log.warn('Playout delay not supported in this browser');\n      }\n    } else {\n      this.log.warn('Cannot set playout delay, track already ended');\n    }\n  }\n  /**\n   * Returns the current playout delay (in seconds) of this track.\n   */\n  getPlayoutDelay() {\n    if (this.receiver) {\n      if ('playoutDelayHint' in this.receiver) {\n        return this.receiver.playoutDelayHint;\n      } else {\n        this.log.warn('Playout delay not supported in this browser');\n      }\n    } else {\n      this.log.warn('Cannot get playout delay, track already ended');\n    }\n    return 0;\n  }\n  /* @internal */\n  startMonitor() {\n    if (!this.monitorInterval) {\n      this.monitorInterval = setInterval(() => this.monitorReceiver(), monitorFrequency);\n    }\n    if (supportsSynchronizationSources()) {\n      this.registerTimeSyncUpdate();\n    }\n  }\n  registerTimeSyncUpdate() {\n    const loop = () => {\n      var _a;\n      this.timeSyncHandle = requestAnimationFrame(() => loop());\n      const sources = (_a = this.receiver) === null || _a === void 0 ? void 0 : _a.getSynchronizationSources()[0];\n      if (sources) {\n        const {\n          timestamp,\n          rtpTimestamp\n        } = sources;\n        if (rtpTimestamp && this.rtpTimestamp !== rtpTimestamp) {\n          this.emit(TrackEvent.TimeSyncUpdate, {\n            timestamp,\n            rtpTimestamp\n          });\n          this.rtpTimestamp = rtpTimestamp;\n        }\n      }\n    };\n    loop();\n  }\n}\n\nclass RemoteAudioTrack extends RemoteTrack {\n  constructor(mediaTrack, sid, receiver, audioContext, audioOutput, loggerOptions) {\n    super(mediaTrack, sid, Track.Kind.Audio, receiver, loggerOptions);\n    this.monitorReceiver = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.receiver) {\n        this._currentBitrate = 0;\n        return;\n      }\n      const stats = yield this.getReceiverStats();\n      if (stats && this.prevStats && this.receiver) {\n        this._currentBitrate = computeBitrate(stats, this.prevStats);\n      }\n      this.prevStats = stats;\n    });\n    this.audioContext = audioContext;\n    this.webAudioPluginNodes = [];\n    if (audioOutput) {\n      this.sinkId = audioOutput.deviceId;\n    }\n  }\n  /**\n   * sets the volume for all attached audio elements\n   */\n  setVolume(volume) {\n    var _a;\n    for (const el of this.attachedElements) {\n      if (this.audioContext) {\n        (_a = this.gainNode) === null || _a === void 0 ? void 0 : _a.gain.setTargetAtTime(volume, 0, 0.1);\n      } else {\n        el.volume = volume;\n      }\n    }\n    if (isReactNative()) {\n      // @ts-ignore\n      this._mediaStreamTrack._setVolume(volume);\n    }\n    this.elementVolume = volume;\n  }\n  /**\n   * gets the volume of attached audio elements (loudest)\n   */\n  getVolume() {\n    if (this.elementVolume) {\n      return this.elementVolume;\n    }\n    if (isReactNative()) {\n      // RN volume value defaults to 1.0 if hasn't been changed.\n      return 1.0;\n    }\n    let highestVolume = 0;\n    this.attachedElements.forEach(element => {\n      if (element.volume > highestVolume) {\n        highestVolume = element.volume;\n      }\n    });\n    return highestVolume;\n  }\n  /**\n   * calls setSinkId on all attached elements, if supported\n   * @param deviceId audio output device\n   */\n  setSinkId(deviceId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.sinkId = deviceId;\n      yield Promise.all(this.attachedElements.map(elm => {\n        if (!supportsSetSinkId(elm)) {\n          return;\n        }\n        /* @ts-ignore */\n        return elm.setSinkId(deviceId);\n      }));\n    });\n  }\n  attach(element) {\n    const needsNewWebAudioConnection = this.attachedElements.length === 0;\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n    if (this.sinkId && supportsSetSinkId(element)) {\n      /* @ts-ignore */\n      element.setSinkId(this.sinkId);\n    }\n    if (this.audioContext && needsNewWebAudioConnection) {\n      this.log.debug('using audio context mapping', this.logContext);\n      this.connectWebAudio(this.audioContext, element);\n      element.volume = 0;\n      element.muted = true;\n    }\n    if (this.elementVolume) {\n      // make sure volume setting is being applied to the newly attached element\n      this.setVolume(this.elementVolume);\n    }\n    return element;\n  }\n  detach(element) {\n    let detached;\n    if (!element) {\n      detached = super.detach();\n      this.disconnectWebAudio();\n    } else {\n      detached = super.detach(element);\n      // if there are still any attached elements after detaching, connect webaudio to the first element that's left\n      // disconnect webaudio otherwise\n      if (this.audioContext) {\n        if (this.attachedElements.length > 0) {\n          this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n        } else {\n          this.disconnectWebAudio();\n        }\n      }\n    }\n    return detached;\n  }\n  /**\n   * @internal\n   * @experimental\n   */\n  setAudioContext(audioContext) {\n    this.audioContext = audioContext;\n    if (audioContext && this.attachedElements.length > 0) {\n      this.connectWebAudio(audioContext, this.attachedElements[0]);\n    } else if (!audioContext) {\n      this.disconnectWebAudio();\n    }\n  }\n  /**\n   * @internal\n   * @experimental\n   * @param {AudioNode[]} nodes - An array of WebAudio nodes. These nodes should not be connected to each other when passed, as the sdk will take care of connecting them in the order of the array.\n   */\n  setWebAudioPlugins(nodes) {\n    this.webAudioPluginNodes = nodes;\n    if (this.attachedElements.length > 0 && this.audioContext) {\n      this.connectWebAudio(this.audioContext, this.attachedElements[0]);\n    }\n  }\n  connectWebAudio(context, element) {\n    this.disconnectWebAudio();\n    // @ts-ignore attached elements always have a srcObject set\n    this.sourceNode = context.createMediaStreamSource(element.srcObject);\n    let lastNode = this.sourceNode;\n    this.webAudioPluginNodes.forEach(node => {\n      lastNode.connect(node);\n      lastNode = node;\n    });\n    this.gainNode = context.createGain();\n    lastNode.connect(this.gainNode);\n    this.gainNode.connect(context.destination);\n    if (this.elementVolume) {\n      this.gainNode.gain.setTargetAtTime(this.elementVolume, 0, 0.1);\n    }\n    // try to resume the context if it isn't running already\n    if (context.state !== 'running') {\n      context.resume().then(() => {\n        if (context.state !== 'running') {\n          this.emit(TrackEvent.AudioPlaybackFailed, new Error(\"Audio Context couldn't be started automatically\"));\n        }\n      }).catch(e => {\n        this.emit(TrackEvent.AudioPlaybackFailed, e);\n      });\n    }\n  }\n  disconnectWebAudio() {\n    var _a, _b;\n    (_a = this.gainNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n    (_b = this.sourceNode) === null || _b === void 0 ? void 0 : _b.disconnect();\n    this.gainNode = undefined;\n    this.sourceNode = undefined;\n  }\n  getReceiverStats() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.receiver || !this.receiver.getStats) {\n        return;\n      }\n      const stats = yield this.receiver.getStats();\n      let receiverStats;\n      stats.forEach(v => {\n        if (v.type === 'inbound-rtp') {\n          receiverStats = {\n            type: 'audio',\n            timestamp: v.timestamp,\n            jitter: v.jitter,\n            bytesReceived: v.bytesReceived,\n            concealedSamples: v.concealedSamples,\n            concealmentEvents: v.concealmentEvents,\n            silentConcealedSamples: v.silentConcealedSamples,\n            silentConcealmentEvents: v.silentConcealmentEvents,\n            totalAudioEnergy: v.totalAudioEnergy,\n            totalSamplesDuration: v.totalSamplesDuration\n          };\n        }\n      });\n      return receiverStats;\n    });\n  }\n}\n\nconst REACTION_DELAY = 100;\nclass RemoteVideoTrack extends RemoteTrack {\n  constructor(mediaTrack, sid, receiver, adaptiveStreamSettings, loggerOptions) {\n    super(mediaTrack, sid, Track.Kind.Video, receiver, loggerOptions);\n    this.elementInfos = [];\n    this.monitorReceiver = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.receiver) {\n        this._currentBitrate = 0;\n        return;\n      }\n      const stats = yield this.getReceiverStats();\n      if (stats && this.prevStats && this.receiver) {\n        this._currentBitrate = computeBitrate(stats, this.prevStats);\n      }\n      this.prevStats = stats;\n    });\n    this.debouncedHandleResize = r(() => {\n      this.updateDimensions();\n    }, REACTION_DELAY);\n    this.adaptiveStreamSettings = adaptiveStreamSettings;\n  }\n  get isAdaptiveStream() {\n    return this.adaptiveStreamSettings !== undefined;\n  }\n  /**\n   * Note: When using adaptiveStream, you need to use remoteVideoTrack.attach() to add the track to a HTMLVideoElement, otherwise your video tracks might never start\n   */\n  get mediaStreamTrack() {\n    return this._mediaStreamTrack;\n  }\n  /** @internal */\n  setMuted(muted) {\n    super.setMuted(muted);\n    this.attachedElements.forEach(element => {\n      // detach or attach\n      if (muted) {\n        detachTrack(this._mediaStreamTrack, element);\n      } else {\n        attachToElement(this._mediaStreamTrack, element);\n      }\n    });\n  }\n  attach(element) {\n    if (!element) {\n      element = super.attach();\n    } else {\n      super.attach(element);\n    }\n    // It's possible attach is called multiple times on an element. When that's\n    // the case, we'd want to avoid adding duplicate elementInfos\n    if (this.adaptiveStreamSettings && this.elementInfos.find(info => info.element === element) === undefined) {\n      const elementInfo = new HTMLElementInfo(element);\n      this.observeElementInfo(elementInfo);\n    }\n    return element;\n  }\n  /**\n   * Observe an ElementInfo for changes when adaptive streaming.\n   * @param elementInfo\n   * @internal\n   */\n  observeElementInfo(elementInfo) {\n    if (this.adaptiveStreamSettings && this.elementInfos.find(info => info === elementInfo) === undefined) {\n      elementInfo.handleResize = () => {\n        this.debouncedHandleResize();\n      };\n      elementInfo.handleVisibilityChanged = () => {\n        this.updateVisibility();\n      };\n      this.elementInfos.push(elementInfo);\n      elementInfo.observe();\n      // trigger the first resize update cycle\n      // if the tab is backgrounded, the initial resize event does not fire until\n      // the tab comes into focus for the first time.\n      this.debouncedHandleResize();\n      this.updateVisibility();\n    } else {\n      this.log.warn('visibility resize observer not triggered', this.logContext);\n    }\n  }\n  /**\n   * Stop observing an ElementInfo for changes.\n   * @param elementInfo\n   * @internal\n   */\n  stopObservingElementInfo(elementInfo) {\n    if (!this.isAdaptiveStream) {\n      this.log.warn('stopObservingElementInfo ignored', this.logContext);\n      return;\n    }\n    const stopElementInfos = this.elementInfos.filter(info => info === elementInfo);\n    for (const info of stopElementInfos) {\n      info.stopObserving();\n    }\n    this.elementInfos = this.elementInfos.filter(info => info !== elementInfo);\n    this.updateVisibility();\n    this.debouncedHandleResize();\n  }\n  detach(element) {\n    let detachedElements = [];\n    if (element) {\n      this.stopObservingElement(element);\n      return super.detach(element);\n    }\n    detachedElements = super.detach();\n    for (const e of detachedElements) {\n      this.stopObservingElement(e);\n    }\n    return detachedElements;\n  }\n  /** @internal */\n  getDecoderImplementation() {\n    var _a;\n    return (_a = this.prevStats) === null || _a === void 0 ? void 0 : _a.decoderImplementation;\n  }\n  getReceiverStats() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.receiver || !this.receiver.getStats) {\n        return;\n      }\n      const stats = yield this.receiver.getStats();\n      let receiverStats;\n      let codecID = '';\n      let codecs = new Map();\n      stats.forEach(v => {\n        if (v.type === 'inbound-rtp') {\n          codecID = v.codecId;\n          receiverStats = {\n            type: 'video',\n            framesDecoded: v.framesDecoded,\n            framesDropped: v.framesDropped,\n            framesReceived: v.framesReceived,\n            packetsReceived: v.packetsReceived,\n            packetsLost: v.packetsLost,\n            frameWidth: v.frameWidth,\n            frameHeight: v.frameHeight,\n            pliCount: v.pliCount,\n            firCount: v.firCount,\n            nackCount: v.nackCount,\n            jitter: v.jitter,\n            timestamp: v.timestamp,\n            bytesReceived: v.bytesReceived,\n            decoderImplementation: v.decoderImplementation\n          };\n        } else if (v.type === 'codec') {\n          codecs.set(v.id, v);\n        }\n      });\n      if (receiverStats && codecID !== '' && codecs.get(codecID)) {\n        receiverStats.mimeType = codecs.get(codecID).mimeType;\n      }\n      return receiverStats;\n    });\n  }\n  stopObservingElement(element) {\n    const stopElementInfos = this.elementInfos.filter(info => info.element === element);\n    for (const info of stopElementInfos) {\n      this.stopObservingElementInfo(info);\n    }\n  }\n  handleAppVisibilityChanged() {\n    const _super = Object.create(null, {\n      handleAppVisibilityChanged: {\n        get: () => super.handleAppVisibilityChanged\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      yield _super.handleAppVisibilityChanged.call(this);\n      if (!this.isAdaptiveStream) return;\n      this.updateVisibility();\n    });\n  }\n  updateVisibility() {\n    var _a, _b;\n    const lastVisibilityChange = this.elementInfos.reduce((prev, info) => Math.max(prev, info.visibilityChangedAt || 0), 0);\n    const backgroundPause = ((_b = (_a = this.adaptiveStreamSettings) === null || _a === void 0 ? void 0 : _a.pauseVideoInBackground) !== null && _b !== void 0 ? _b : true // default to true\n    ) ? this.isInBackground : false;\n    const isPiPMode = this.elementInfos.some(info => info.pictureInPicture);\n    const isVisible = this.elementInfos.some(info => info.visible) && !backgroundPause || isPiPMode;\n    if (this.lastVisible === isVisible) {\n      return;\n    }\n    if (!isVisible && Date.now() - lastVisibilityChange < REACTION_DELAY) {\n      // delay hidden events\n      CriticalTimers.setTimeout(() => {\n        this.updateVisibility();\n      }, REACTION_DELAY);\n      return;\n    }\n    this.lastVisible = isVisible;\n    this.emit(TrackEvent.VisibilityChanged, isVisible, this);\n  }\n  updateDimensions() {\n    var _a, _b;\n    let maxWidth = 0;\n    let maxHeight = 0;\n    const pixelDensity = this.getPixelDensity();\n    for (const info of this.elementInfos) {\n      const currentElementWidth = info.width() * pixelDensity;\n      const currentElementHeight = info.height() * pixelDensity;\n      if (currentElementWidth + currentElementHeight > maxWidth + maxHeight) {\n        maxWidth = currentElementWidth;\n        maxHeight = currentElementHeight;\n      }\n    }\n    if (((_a = this.lastDimensions) === null || _a === void 0 ? void 0 : _a.width) === maxWidth && ((_b = this.lastDimensions) === null || _b === void 0 ? void 0 : _b.height) === maxHeight) {\n      return;\n    }\n    this.lastDimensions = {\n      width: maxWidth,\n      height: maxHeight\n    };\n    this.emit(TrackEvent.VideoDimensionsChanged, this.lastDimensions, this);\n  }\n  getPixelDensity() {\n    var _a;\n    const pixelDensity = (_a = this.adaptiveStreamSettings) === null || _a === void 0 ? void 0 : _a.pixelDensity;\n    if (pixelDensity === 'screen') {\n      return getDevicePixelRatio();\n    } else if (!pixelDensity) {\n      // when unset, we'll pick a sane default here.\n      // for higher pixel density devices (mobile phones, etc), we'll use 2\n      // otherwise it defaults to 1\n      const devicePixelRatio = getDevicePixelRatio();\n      if (devicePixelRatio > 2) {\n        return 2;\n      } else {\n        return 1;\n      }\n    }\n    return pixelDensity;\n  }\n}\nclass HTMLElementInfo {\n  get visible() {\n    return this.isPiP || this.isIntersecting;\n  }\n  get pictureInPicture() {\n    return this.isPiP;\n  }\n  constructor(element, visible) {\n    this.onVisibilityChanged = entry => {\n      var _a;\n      const {\n        target,\n        isIntersecting\n      } = entry;\n      if (target === this.element) {\n        this.isIntersecting = isIntersecting;\n        this.visibilityChangedAt = Date.now();\n        (_a = this.handleVisibilityChanged) === null || _a === void 0 ? void 0 : _a.call(this);\n      }\n    };\n    this.onEnterPiP = () => {\n      var _a;\n      this.isPiP = true;\n      (_a = this.handleVisibilityChanged) === null || _a === void 0 ? void 0 : _a.call(this);\n    };\n    this.onLeavePiP = () => {\n      var _a;\n      this.isPiP = false;\n      (_a = this.handleVisibilityChanged) === null || _a === void 0 ? void 0 : _a.call(this);\n    };\n    this.element = element;\n    this.isIntersecting = visible !== null && visible !== void 0 ? visible : isElementInViewport(element);\n    this.isPiP = isWeb() && document.pictureInPictureElement === element;\n    this.visibilityChangedAt = 0;\n  }\n  width() {\n    return this.element.clientWidth;\n  }\n  height() {\n    return this.element.clientHeight;\n  }\n  observe() {\n    // make sure we update the current visible state once we start to observe\n    this.isIntersecting = isElementInViewport(this.element);\n    this.isPiP = document.pictureInPictureElement === this.element;\n    this.element.handleResize = () => {\n      var _a;\n      (_a = this.handleResize) === null || _a === void 0 ? void 0 : _a.call(this);\n    };\n    this.element.handleVisibilityChanged = this.onVisibilityChanged;\n    getIntersectionObserver().observe(this.element);\n    getResizeObserver().observe(this.element);\n    this.element.addEventListener('enterpictureinpicture', this.onEnterPiP);\n    this.element.addEventListener('leavepictureinpicture', this.onLeavePiP);\n  }\n  stopObserving() {\n    var _a, _b;\n    (_a = getIntersectionObserver()) === null || _a === void 0 ? void 0 : _a.unobserve(this.element);\n    (_b = getResizeObserver()) === null || _b === void 0 ? void 0 : _b.unobserve(this.element);\n    this.element.removeEventListener('enterpictureinpicture', this.onEnterPiP);\n    this.element.removeEventListener('leavepictureinpicture', this.onLeavePiP);\n  }\n}\n// does not account for occlusion by other elements\nfunction isElementInViewport(el) {\n  let top = el.offsetTop;\n  let left = el.offsetLeft;\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  const {\n    hidden\n  } = el;\n  const {\n    opacity,\n    display\n  } = getComputedStyle(el);\n  while (el.offsetParent) {\n    el = el.offsetParent;\n    top += el.offsetTop;\n    left += el.offsetLeft;\n  }\n  return top < window.pageYOffset + window.innerHeight && left < window.pageXOffset + window.innerWidth && top + height > window.pageYOffset && left + width > window.pageXOffset && !hidden && (opacity !== '' ? parseFloat(opacity) > 0 : true) && display !== 'none';\n}\n\nclass TrackPublication extends eventsExports.EventEmitter {\n  constructor(kind, id, name, loggerOptions) {\n    var _a;\n    super();\n    this.metadataMuted = false;\n    this.encryption = Encryption_Type.NONE;\n    this.log = livekitLogger;\n    this.handleMuted = () => {\n      this.emit(TrackEvent.Muted);\n    };\n    this.handleUnmuted = () => {\n      this.emit(TrackEvent.Unmuted);\n    };\n    this.log = getLogger((_a = loggerOptions === null || loggerOptions === void 0 ? void 0 : loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Publication);\n    this.loggerContextCb = this.loggerContextCb;\n    this.setMaxListeners(100);\n    this.kind = kind;\n    this.trackSid = id;\n    this.trackName = name;\n    this.source = Track.Source.Unknown;\n  }\n  /** @internal */\n  setTrack(track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Muted, this.handleMuted);\n      this.track.off(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n    this.track = track;\n    if (track) {\n      // forward events\n      track.on(TrackEvent.Muted, this.handleMuted);\n      track.on(TrackEvent.Unmuted, this.handleUnmuted);\n    }\n  }\n  get logContext() {\n    var _a;\n    return Object.assign(Object.assign({}, (_a = this.loggerContextCb) === null || _a === void 0 ? void 0 : _a.call(this)), getLogContextFromTrack(this));\n  }\n  get isMuted() {\n    return this.metadataMuted;\n  }\n  get isEnabled() {\n    return true;\n  }\n  get isSubscribed() {\n    return this.track !== undefined;\n  }\n  get isEncrypted() {\n    return this.encryption !== Encryption_Type.NONE;\n  }\n  /**\n   * an [AudioTrack] if this publication holds an audio track\n   */\n  get audioTrack() {\n    if (this.track instanceof LocalAudioTrack || this.track instanceof RemoteAudioTrack) {\n      return this.track;\n    }\n  }\n  /**\n   * an [VideoTrack] if this publication holds a video track\n   */\n  get videoTrack() {\n    if (this.track instanceof LocalVideoTrack || this.track instanceof RemoteVideoTrack) {\n      return this.track;\n    }\n  }\n  /** @internal */\n  updateInfo(info) {\n    this.trackSid = info.sid;\n    this.trackName = info.name;\n    this.source = Track.sourceFromProto(info.source);\n    this.mimeType = info.mimeType;\n    if (this.kind === Track.Kind.Video && info.width > 0) {\n      this.dimensions = {\n        width: info.width,\n        height: info.height\n      };\n      this.simulcasted = info.simulcast;\n    }\n    this.encryption = info.encryption;\n    this.trackInfo = info;\n    this.log.debug('update publication info', Object.assign(Object.assign({}, this.logContext), {\n      info\n    }));\n  }\n}\n(function (TrackPublication) {\n  (function (SubscriptionStatus) {\n    SubscriptionStatus[\"Desired\"] = \"desired\";\n    SubscriptionStatus[\"Subscribed\"] = \"subscribed\";\n    SubscriptionStatus[\"Unsubscribed\"] = \"unsubscribed\";\n  })(TrackPublication.SubscriptionStatus || (TrackPublication.SubscriptionStatus = {}));\n  (function (PermissionStatus) {\n    PermissionStatus[\"Allowed\"] = \"allowed\";\n    PermissionStatus[\"NotAllowed\"] = \"not_allowed\";\n  })(TrackPublication.PermissionStatus || (TrackPublication.PermissionStatus = {}));\n})(TrackPublication || (TrackPublication = {}));\n\nclass LocalTrackPublication extends TrackPublication {\n  get isUpstreamPaused() {\n    var _a;\n    return (_a = this.track) === null || _a === void 0 ? void 0 : _a.isUpstreamPaused;\n  }\n  constructor(kind, ti, track, loggerOptions) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n    this.track = undefined;\n    this.handleTrackEnded = () => {\n      this.emit(TrackEvent.Ended);\n    };\n    this.updateInfo(ti);\n    this.setTrack(track);\n  }\n  setTrack(track) {\n    if (this.track) {\n      this.track.off(TrackEvent.Ended, this.handleTrackEnded);\n    }\n    super.setTrack(track);\n    if (track) {\n      track.on(TrackEvent.Ended, this.handleTrackEnded);\n    }\n  }\n  get isMuted() {\n    if (this.track) {\n      return this.track.isMuted;\n    }\n    return super.isMuted;\n  }\n  get audioTrack() {\n    return super.audioTrack;\n  }\n  get videoTrack() {\n    return super.videoTrack;\n  }\n  /**\n   * Mute the track associated with this publication\n   */\n  mute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      return (_a = this.track) === null || _a === void 0 ? void 0 : _a.mute();\n    });\n  }\n  /**\n   * Unmute track associated with this publication\n   */\n  unmute() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      return (_a = this.track) === null || _a === void 0 ? void 0 : _a.unmute();\n    });\n  }\n  /**\n   * Pauses the media stream track associated with this publication from being sent to the server\n   * and signals \"muted\" event to other participants\n   * Useful if you want to pause the stream without pausing the local media stream track\n   */\n  pauseUpstream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      yield (_a = this.track) === null || _a === void 0 ? void 0 : _a.pauseUpstream();\n    });\n  }\n  /**\n   * Resumes sending the media stream track associated with this publication to the server after a call to [[pauseUpstream()]]\n   * and signals \"unmuted\" event to other participants (unless the track is explicitly muted)\n   */\n  resumeUpstream() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      yield (_a = this.track) === null || _a === void 0 ? void 0 : _a.resumeUpstream();\n    });\n  }\n  getTrackFeatures() {\n    var _a;\n    if (this.track instanceof LocalAudioTrack) {\n      const settings = this.track.mediaStreamTrack.getSettings();\n      const features = new Set();\n      if (settings.autoGainControl) {\n        features.add(AudioTrackFeature.TF_AUTO_GAIN_CONTROL);\n      }\n      if (settings.echoCancellation) {\n        features.add(AudioTrackFeature.TF_ECHO_CANCELLATION);\n      }\n      if (settings.noiseSuppression) {\n        features.add(AudioTrackFeature.TF_NOISE_SUPPRESSION);\n      }\n      if (settings.channelCount && settings.channelCount > 1) {\n        features.add(AudioTrackFeature.TF_STEREO);\n      }\n      if (!((_a = this.options) === null || _a === void 0 ? void 0 : _a.dtx)) {\n        features.add(AudioTrackFeature.TF_STEREO);\n      }\n      if (this.track.enhancedNoiseCancellation) {\n        features.add(AudioTrackFeature.TF_ENHANCED_NOISE_CANCELLATION);\n      }\n      return Array.from(features.values());\n    } else return [];\n  }\n}\n\nvar ConnectionQuality;\n(function (ConnectionQuality) {\n  ConnectionQuality[\"Excellent\"] = \"excellent\";\n  ConnectionQuality[\"Good\"] = \"good\";\n  ConnectionQuality[\"Poor\"] = \"poor\";\n  /**\n   * Indicates that a participant has temporarily (or permanently) lost connection to LiveKit.\n   * For permanent disconnection a `ParticipantDisconnected` event will be emitted after a timeout\n   */\n  ConnectionQuality[\"Lost\"] = \"lost\";\n  ConnectionQuality[\"Unknown\"] = \"unknown\";\n})(ConnectionQuality || (ConnectionQuality = {}));\nfunction qualityFromProto(q) {\n  switch (q) {\n    case ConnectionQuality$1.EXCELLENT:\n      return ConnectionQuality.Excellent;\n    case ConnectionQuality$1.GOOD:\n      return ConnectionQuality.Good;\n    case ConnectionQuality$1.POOR:\n      return ConnectionQuality.Poor;\n    case ConnectionQuality$1.LOST:\n      return ConnectionQuality.Lost;\n    default:\n      return ConnectionQuality.Unknown;\n  }\n}\nclass Participant extends eventsExports.EventEmitter {\n  get logContext() {\n    var _a, _b;\n    return Object.assign({}, (_b = (_a = this.loggerOptions) === null || _a === void 0 ? void 0 : _a.loggerContextCb) === null || _b === void 0 ? void 0 : _b.call(_a));\n  }\n  get isEncrypted() {\n    return this.trackPublications.size > 0 && Array.from(this.trackPublications.values()).every(tr => tr.isEncrypted);\n  }\n  get isAgent() {\n    var _a;\n    return ((_a = this.permissions) === null || _a === void 0 ? void 0 : _a.agent) || this.kind === ParticipantInfo_Kind.AGENT;\n  }\n  get kind() {\n    return this._kind;\n  }\n  /** participant attributes, similar to metadata, but as a key/value map */\n  get attributes() {\n    return Object.freeze(Object.assign({}, this._attributes));\n  }\n  /** @internal */\n  constructor(sid, identity, name, metadata, loggerOptions) {\n    let kind = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ParticipantInfo_Kind.STANDARD;\n    var _a;\n    super();\n    /** audio level between 0-1.0, 1 being loudest, 0 being softest */\n    this.audioLevel = 0;\n    /** if participant is currently speaking */\n    this.isSpeaking = false;\n    this._connectionQuality = ConnectionQuality.Unknown;\n    this.log = livekitLogger;\n    this.log = getLogger((_a = loggerOptions === null || loggerOptions === void 0 ? void 0 : loggerOptions.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Participant);\n    this.loggerOptions = loggerOptions;\n    this.setMaxListeners(100);\n    this.sid = sid;\n    this.identity = identity;\n    this.name = name;\n    this.metadata = metadata;\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.trackPublications = new Map();\n    this._kind = kind;\n    this._attributes = {};\n  }\n  getTrackPublications() {\n    return Array.from(this.trackPublications.values());\n  }\n  /**\n   * Finds the first track that matches the source filter, for example, getting\n   * the user's camera track with getTrackBySource(Track.Source.Camera).\n   */\n  getTrackPublication(source) {\n    for (const [, pub] of this.trackPublications) {\n      if (pub.source === source) {\n        return pub;\n      }\n    }\n  }\n  /**\n   * Finds the first track that matches the track's name.\n   */\n  getTrackPublicationByName(name) {\n    for (const [, pub] of this.trackPublications) {\n      if (pub.trackName === name) {\n        return pub;\n      }\n    }\n  }\n  get connectionQuality() {\n    return this._connectionQuality;\n  }\n  get isCameraEnabled() {\n    var _a;\n    const track = this.getTrackPublication(Track.Source.Camera);\n    return !((_a = track === null || track === void 0 ? void 0 : track.isMuted) !== null && _a !== void 0 ? _a : true);\n  }\n  get isMicrophoneEnabled() {\n    var _a;\n    const track = this.getTrackPublication(Track.Source.Microphone);\n    return !((_a = track === null || track === void 0 ? void 0 : track.isMuted) !== null && _a !== void 0 ? _a : true);\n  }\n  get isScreenShareEnabled() {\n    const track = this.getTrackPublication(Track.Source.ScreenShare);\n    return !!track;\n  }\n  get isLocal() {\n    return false;\n  }\n  /** when participant joined the room */\n  get joinedAt() {\n    if (this.participantInfo) {\n      return new Date(Number.parseInt(this.participantInfo.joinedAt.toString()) * 1000);\n    }\n    return new Date();\n  }\n  /** @internal */\n  updateInfo(info) {\n    // it's possible the update could be applied out of order due to await\n    // during reconnect sequences. when that happens, it's possible for server\n    // to have sent more recent version of participant info while JS is waiting\n    // to process the existing payload.\n    // when the participant sid remains the same, and we already have a later version\n    // of the payload, they can be safely skipped\n    if (this.participantInfo && this.participantInfo.sid === info.sid && this.participantInfo.version > info.version) {\n      return false;\n    }\n    this.identity = info.identity;\n    this.sid = info.sid;\n    this._setName(info.name);\n    this._setMetadata(info.metadata);\n    this._setAttributes(info.attributes);\n    if (info.permission) {\n      this.setPermissions(info.permission);\n    }\n    // set this last so setMetadata can detect changes\n    this.participantInfo = info;\n    this.log.trace('update participant info', Object.assign(Object.assign({}, this.logContext), {\n      info\n    }));\n    return true;\n  }\n  /**\n   * Updates metadata from server\n   **/\n  _setMetadata(md) {\n    const changed = this.metadata !== md;\n    const prevMetadata = this.metadata;\n    this.metadata = md;\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantMetadataChanged, prevMetadata);\n    }\n  }\n  _setName(name) {\n    const changed = this.name !== name;\n    this.name = name;\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantNameChanged, name);\n    }\n  }\n  /**\n   * Updates metadata from server\n   **/\n  _setAttributes(attributes) {\n    const diff = diffAttributes(attributes, this.attributes);\n    this._attributes = attributes;\n    if (Object.keys(diff).length > 0) {\n      this.emit(ParticipantEvent.AttributesChanged, diff);\n    }\n  }\n  /** @internal */\n  setPermissions(permissions) {\n    var _a, _b, _c, _d, _e;\n    const prevPermissions = this.permissions;\n    const changed = permissions.canPublish !== ((_a = this.permissions) === null || _a === void 0 ? void 0 : _a.canPublish) || permissions.canSubscribe !== ((_b = this.permissions) === null || _b === void 0 ? void 0 : _b.canSubscribe) || permissions.canPublishData !== ((_c = this.permissions) === null || _c === void 0 ? void 0 : _c.canPublishData) || permissions.hidden !== ((_d = this.permissions) === null || _d === void 0 ? void 0 : _d.hidden) || permissions.recorder !== ((_e = this.permissions) === null || _e === void 0 ? void 0 : _e.recorder) || permissions.canPublishSources.length !== this.permissions.canPublishSources.length || permissions.canPublishSources.some((value, index) => {\n      var _a;\n      return value !== ((_a = this.permissions) === null || _a === void 0 ? void 0 : _a.canPublishSources[index]);\n    });\n    this.permissions = permissions;\n    if (changed) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n  /** @internal */\n  setIsSpeaking(speaking) {\n    if (speaking === this.isSpeaking) {\n      return;\n    }\n    this.isSpeaking = speaking;\n    if (speaking) {\n      this.lastSpokeAt = new Date();\n    }\n    this.emit(ParticipantEvent.IsSpeakingChanged, speaking);\n  }\n  /** @internal */\n  setConnectionQuality(q) {\n    const prevQuality = this._connectionQuality;\n    this._connectionQuality = qualityFromProto(q);\n    if (prevQuality !== this._connectionQuality) {\n      this.emit(ParticipantEvent.ConnectionQualityChanged, this._connectionQuality);\n    }\n  }\n  /**\n   * @internal\n   */\n  setAudioContext(ctx) {\n    this.audioContext = ctx;\n    this.audioTrackPublications.forEach(track => (track.track instanceof RemoteAudioTrack || track.track instanceof LocalAudioTrack) && track.track.setAudioContext(ctx));\n  }\n  addTrackPublication(publication) {\n    // forward publication driven events\n    publication.on(TrackEvent.Muted, () => {\n      this.emit(ParticipantEvent.TrackMuted, publication);\n    });\n    publication.on(TrackEvent.Unmuted, () => {\n      this.emit(ParticipantEvent.TrackUnmuted, publication);\n    });\n    const pub = publication;\n    if (pub.track) {\n      pub.track.sid = publication.trackSid;\n    }\n    this.trackPublications.set(publication.trackSid, publication);\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTrackPublications.set(publication.trackSid, publication);\n        break;\n      case Track.Kind.Video:\n        this.videoTrackPublications.set(publication.trackSid, publication);\n        break;\n    }\n  }\n}\n\nfunction trackPermissionToProto(perms) {\n  var _a, _b, _c;\n  if (!perms.participantSid && !perms.participantIdentity) {\n    throw new Error('Invalid track permission, must provide at least one of participantIdentity and participantSid');\n  }\n  return new TrackPermission({\n    participantIdentity: (_a = perms.participantIdentity) !== null && _a !== void 0 ? _a : '',\n    participantSid: (_b = perms.participantSid) !== null && _b !== void 0 ? _b : '',\n    allTracks: (_c = perms.allowAll) !== null && _c !== void 0 ? _c : false,\n    trackSids: perms.allowedTrackSids || []\n  });\n}\n\nclass LocalParticipant extends Participant {\n  /** @internal */\n  constructor(sid, identity, engine, options) {\n    super(sid, identity, undefined, undefined, {\n      loggerName: options.loggerName,\n      loggerContextCb: () => this.engine.logContext\n    });\n    this.pendingPublishing = new Set();\n    this.pendingPublishPromises = new Map();\n    this.participantTrackPermissions = [];\n    this.allParticipantsAllowedToSubscribe = true;\n    this.encryptionType = Encryption_Type.NONE;\n    this.handleReconnecting = () => {\n      if (!this.reconnectFuture) {\n        this.reconnectFuture = new Future();\n      }\n    };\n    this.handleReconnected = () => {\n      var _a, _b;\n      (_b = (_a = this.reconnectFuture) === null || _a === void 0 ? void 0 : _a.resolve) === null || _b === void 0 ? void 0 : _b.call(_a);\n      this.reconnectFuture = undefined;\n      this.updateTrackSubscriptionPermissions();\n    };\n    this.handleDisconnected = () => {\n      var _a, _b;\n      if (this.reconnectFuture) {\n        this.reconnectFuture.promise.catch(e => this.log.warn(e.message, this.logContext));\n        (_b = (_a = this.reconnectFuture) === null || _a === void 0 ? void 0 : _a.reject) === null || _b === void 0 ? void 0 : _b.call(_a, 'Got disconnected during reconnection attempt');\n        this.reconnectFuture = undefined;\n      }\n    };\n    this.handleSignalRequestResponse = response => {\n      const {\n        requestId,\n        reason,\n        message\n      } = response;\n      const targetRequest = this.pendingSignalRequests.get(requestId);\n      if (targetRequest) {\n        if (reason !== RequestResponse_Reason.OK) {\n          targetRequest.reject(new SignalRequestError(message, reason));\n        }\n        this.pendingSignalRequests.delete(requestId);\n      }\n    };\n    this.updateTrackSubscriptionPermissions = () => {\n      this.log.debug('updating track subscription permissions', Object.assign(Object.assign({}, this.logContext), {\n        allParticipantsAllowed: this.allParticipantsAllowedToSubscribe,\n        participantTrackPermissions: this.participantTrackPermissions\n      }));\n      this.engine.client.sendUpdateSubscriptionPermissions(this.allParticipantsAllowedToSubscribe, this.participantTrackPermissions.map(p => trackPermissionToProto(p)));\n    };\n    /** @internal */\n    this.onTrackUnmuted = track => {\n      this.onTrackMuted(track, track.isUpstreamPaused);\n    };\n    // when the local track changes in mute status, we'll notify server as such\n    /** @internal */\n    this.onTrackMuted = (track, muted) => {\n      if (muted === undefined) {\n        muted = true;\n      }\n      if (!track.sid) {\n        this.log.error('could not update mute status for unpublished track', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n        return;\n      }\n      this.engine.updateMuteStatus(track.sid, muted);\n    };\n    this.onTrackUpstreamPaused = track => {\n      this.log.debug('upstream paused', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n      this.onTrackMuted(track, true);\n    };\n    this.onTrackUpstreamResumed = track => {\n      this.log.debug('upstream resumed', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n      this.onTrackMuted(track, track.isMuted);\n    };\n    this.onTrackFeatureUpdate = track => {\n      const pub = this.audioTrackPublications.get(track.sid);\n      if (!pub) {\n        this.log.warn(\"Could not update local audio track settings, missing publication for track \".concat(track.sid), this.logContext);\n        return;\n      }\n      this.engine.client.sendUpdateLocalAudioTrack(pub.trackSid, pub.getTrackFeatures());\n    };\n    this.handleSubscribedQualityUpdate = update => __awaiter(this, void 0, void 0, function* () {\n      var _a, e_1, _b, _c;\n      var _d, _e;\n      if (!((_d = this.roomOptions) === null || _d === void 0 ? void 0 : _d.dynacast)) {\n        return;\n      }\n      const pub = this.videoTrackPublications.get(update.trackSid);\n      if (!pub) {\n        this.log.warn('received subscribed quality update for unknown track', Object.assign(Object.assign({}, this.logContext), {\n          trackSid: update.trackSid\n        }));\n        return;\n      }\n      if (update.subscribedCodecs.length > 0) {\n        if (!pub.videoTrack) {\n          return;\n        }\n        const newCodecs = yield pub.videoTrack.setPublishingCodecs(update.subscribedCodecs);\n        try {\n          for (var _f = true, newCodecs_1 = __asyncValues(newCodecs), newCodecs_1_1; newCodecs_1_1 = yield newCodecs_1.next(), _a = newCodecs_1_1.done, !_a; _f = true) {\n            _c = newCodecs_1_1.value;\n            _f = false;\n            const codec = _c;\n            if (isBackupCodec(codec)) {\n              this.log.debug(\"publish \".concat(codec, \" for \").concat(pub.videoTrack.sid), Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(pub)));\n              yield this.publishAdditionalCodecForTrack(pub.videoTrack, codec, pub.options);\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (!_f && !_a && (_b = newCodecs_1.return)) yield _b.call(newCodecs_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      } else if (update.subscribedQualities.length > 0) {\n        yield (_e = pub.videoTrack) === null || _e === void 0 ? void 0 : _e.setPublishingLayers(update.subscribedQualities);\n      }\n    });\n    this.handleLocalTrackUnpublished = unpublished => {\n      const track = this.trackPublications.get(unpublished.trackSid);\n      if (!track) {\n        this.log.warn('received unpublished event for unknown track', Object.assign(Object.assign({}, this.logContext), {\n          trackSid: unpublished.trackSid\n        }));\n        return;\n      }\n      this.unpublishTrack(track.track);\n    };\n    this.handleTrackEnded = track => __awaiter(this, void 0, void 0, function* () {\n      if (track.source === Track.Source.ScreenShare || track.source === Track.Source.ScreenShareAudio) {\n        this.log.debug('unpublishing local track due to TrackEnded', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n        this.unpublishTrack(track);\n      } else if (track.isUserProvided) {\n        yield track.mute();\n      } else if (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) {\n        try {\n          if (isWeb()) {\n            try {\n              const currentPermissions = yield navigator === null || navigator === void 0 ? void 0 : navigator.permissions.query({\n                // the permission query for camera and microphone currently not supported in Safari and Firefox\n                // @ts-ignore\n                name: track.source === Track.Source.Camera ? 'camera' : 'microphone'\n              });\n              if (currentPermissions && currentPermissions.state === 'denied') {\n                this.log.warn(\"user has revoked access to \".concat(track.source), Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n                // detect granted change after permissions were denied to try and resume then\n                currentPermissions.onchange = () => {\n                  if (currentPermissions.state !== 'denied') {\n                    if (!track.isMuted) {\n                      track.restartTrack();\n                    }\n                    currentPermissions.onchange = null;\n                  }\n                };\n                throw new Error('GetUserMedia Permission denied');\n              }\n            } catch (e) {\n              // permissions query fails for firefox, we continue and try to restart the track\n            }\n          }\n          if (!track.isMuted) {\n            this.log.debug('track ended, attempting to use a different device', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n            yield track.restartTrack();\n          }\n        } catch (e) {\n          this.log.warn(\"could not restart track, muting instead\", Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n          yield track.mute();\n        }\n      }\n    });\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.trackPublications = new Map();\n    this.engine = engine;\n    this.roomOptions = options;\n    this.setupEngine(engine);\n    this.activeDeviceMap = new Map();\n    this.pendingSignalRequests = new Map();\n  }\n  get lastCameraError() {\n    return this.cameraError;\n  }\n  get lastMicrophoneError() {\n    return this.microphoneError;\n  }\n  get isE2EEEnabled() {\n    return this.encryptionType !== Encryption_Type.NONE;\n  }\n  getTrackPublication(source) {\n    const track = super.getTrackPublication(source);\n    if (track) {\n      return track;\n    }\n  }\n  getTrackPublicationByName(name) {\n    const track = super.getTrackPublicationByName(name);\n    if (track) {\n      return track;\n    }\n  }\n  /**\n   * @internal\n   */\n  setupEngine(engine) {\n    this.engine = engine;\n    this.engine.on(EngineEvent.RemoteMute, (trackSid, muted) => {\n      const pub = this.trackPublications.get(trackSid);\n      if (!pub || !pub.track) {\n        return;\n      }\n      if (muted) {\n        pub.mute();\n      } else {\n        pub.unmute();\n      }\n    });\n    this.engine.on(EngineEvent.Connected, this.handleReconnected).on(EngineEvent.SignalRestarted, this.handleReconnected).on(EngineEvent.SignalResumed, this.handleReconnected).on(EngineEvent.Restarting, this.handleReconnecting).on(EngineEvent.Resuming, this.handleReconnecting).on(EngineEvent.LocalTrackUnpublished, this.handleLocalTrackUnpublished).on(EngineEvent.SubscribedQualityUpdate, this.handleSubscribedQualityUpdate).on(EngineEvent.Disconnected, this.handleDisconnected).on(EngineEvent.SignalRequestResponse, this.handleSignalRequestResponse);\n  }\n  /**\n   * Sets and updates the metadata of the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * method will throw if the user doesn't have the required permissions\n   * @param metadata\n   */\n  setMetadata(metadata) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.requestMetadataUpdate({\n        metadata\n      });\n    });\n  }\n  /**\n   * Sets and updates the name of the local participant.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * method will throw if the user doesn't have the required permissions\n   * @param metadata\n   */\n  setName(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.requestMetadataUpdate({\n        name\n      });\n    });\n  }\n  /**\n   * Set or update participant attributes. It will make updates only to keys that\n   * are present in `attributes`, and will not override others.\n   * Note: this requires `canUpdateOwnMetadata` permission.\n   * @param attributes attributes to update\n   */\n  setAttributes(attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.requestMetadataUpdate({\n        attributes\n      });\n    });\n  }\n  requestMetadataUpdate(_a) {\n    return __awaiter(this, arguments, void 0, function (_ref) {\n      var _this = this;\n      let {\n        metadata,\n        name,\n        attributes\n      } = _ref;\n      return function* () {\n        return new Promise((resolve, reject) => __awaiter(_this, void 0, void 0, function* () {\n          var _a, _b;\n          try {\n            let isRejected = false;\n            const requestId = yield this.engine.client.sendUpdateLocalMetadata((_a = metadata !== null && metadata !== void 0 ? metadata : this.metadata) !== null && _a !== void 0 ? _a : '', (_b = name !== null && name !== void 0 ? name : this.name) !== null && _b !== void 0 ? _b : '', attributes);\n            const startTime = performance.now();\n            this.pendingSignalRequests.set(requestId, {\n              resolve,\n              reject: error => {\n                reject(error);\n                isRejected = true;\n              },\n              values: {\n                name,\n                metadata,\n                attributes\n              }\n            });\n            while (performance.now() - startTime < 5000 && !isRejected) {\n              if ((!name || this.name === name) && (!metadata || this.metadata === metadata) && (!attributes || Object.entries(attributes).every(_ref2 => {\n                let [key, value] = _ref2;\n                return this.attributes[key] === value;\n              }))) {\n                this.pendingSignalRequests.delete(requestId);\n                resolve();\n                return;\n              }\n              yield sleep(50);\n            }\n            reject(new SignalRequestError('Request to update local metadata timed out', 'TimeoutError'));\n          } catch (e) {\n            if (e instanceof Error) reject(e);\n          }\n        }));\n      }();\n    });\n  }\n  /**\n   * Enable or disable a participant's camera track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setCameraEnabled(enabled, options, publishOptions) {\n    return this.setTrackEnabled(Track.Source.Camera, enabled, options, publishOptions);\n  }\n  /**\n   * Enable or disable a participant's microphone track.\n   *\n   * If a track has already published, it'll mute or unmute the track.\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setMicrophoneEnabled(enabled, options, publishOptions) {\n    return this.setTrackEnabled(Track.Source.Microphone, enabled, options, publishOptions);\n  }\n  /**\n   * Start or stop sharing a participant's screen\n   * Resolves with a `LocalTrackPublication` instance if successful and `undefined` otherwise\n   */\n  setScreenShareEnabled(enabled, options, publishOptions) {\n    return this.setTrackEnabled(Track.Source.ScreenShare, enabled, options, publishOptions);\n  }\n  /** @internal */\n  setPermissions(permissions) {\n    const prevPermissions = this.permissions;\n    const changed = super.setPermissions(permissions);\n    if (changed && prevPermissions) {\n      this.emit(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions);\n    }\n    return changed;\n  }\n  /** @internal */\n  setE2EEEnabled(enabled) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.encryptionType = enabled ? Encryption_Type.GCM : Encryption_Type.NONE;\n      yield this.republishAllTracks(undefined, false);\n    });\n  }\n  setTrackEnabled(source, enabled, options, publishOptions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      this.log.debug('setTrackEnabled', Object.assign(Object.assign({}, this.logContext), {\n        source,\n        enabled\n      }));\n      let track = this.getTrackPublication(source);\n      if (enabled) {\n        if (track) {\n          yield track.unmute();\n        } else {\n          let localTracks;\n          if (this.pendingPublishing.has(source)) {\n            this.log.info('skipping duplicate published source', Object.assign(Object.assign({}, this.logContext), {\n              source\n            }));\n            // no-op it's already been requested\n            return;\n          }\n          this.pendingPublishing.add(source);\n          try {\n            switch (source) {\n              case Track.Source.Camera:\n                localTracks = yield this.createTracks({\n                  video: (_a = options) !== null && _a !== void 0 ? _a : true\n                });\n                break;\n              case Track.Source.Microphone:\n                localTracks = yield this.createTracks({\n                  audio: (_b = options) !== null && _b !== void 0 ? _b : true\n                });\n                break;\n              case Track.Source.ScreenShare:\n                localTracks = yield this.createScreenTracks(Object.assign({}, options));\n                break;\n              default:\n                throw new TrackInvalidError(source);\n            }\n            const publishPromises = [];\n            for (const localTrack of localTracks) {\n              this.log.info('publishing track', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(localTrack)));\n              publishPromises.push(this.publishTrack(localTrack, publishOptions));\n            }\n            const publishedTracks = yield Promise.all(publishPromises);\n            // for screen share publications including audio, this will only return the screen share publication, not the screen share audio one\n            // revisit if we want to return an array of tracks instead for v2\n            [track] = publishedTracks;\n          } catch (e) {\n            localTracks === null || localTracks === void 0 ? void 0 : localTracks.forEach(tr => {\n              tr.stop();\n            });\n            if (e instanceof Error && !(e instanceof TrackInvalidError)) {\n              this.emit(ParticipantEvent.MediaDevicesError, e);\n            }\n            throw e;\n          } finally {\n            this.pendingPublishing.delete(source);\n          }\n        }\n      } else if (track && track.track) {\n        // screenshare cannot be muted, unpublish instead\n        if (source === Track.Source.ScreenShare) {\n          track = yield this.unpublishTrack(track.track);\n          const screenAudioTrack = this.getTrackPublication(Track.Source.ScreenShareAudio);\n          if (screenAudioTrack && screenAudioTrack.track) {\n            this.unpublishTrack(screenAudioTrack.track);\n          }\n        } else {\n          yield track.mute();\n        }\n      }\n      return track;\n    });\n  }\n  /**\n   * Publish both camera and microphone at the same time. This is useful for\n   * displaying a single Permission Dialog box to the end user.\n   */\n  enableCameraAndMicrophone() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.pendingPublishing.has(Track.Source.Camera) || this.pendingPublishing.has(Track.Source.Microphone)) {\n        // no-op it's already been requested\n        return;\n      }\n      this.pendingPublishing.add(Track.Source.Camera);\n      this.pendingPublishing.add(Track.Source.Microphone);\n      try {\n        const tracks = yield this.createTracks({\n          audio: true,\n          video: true\n        });\n        yield Promise.all(tracks.map(track => this.publishTrack(track)));\n      } finally {\n        this.pendingPublishing.delete(Track.Source.Camera);\n        this.pendingPublishing.delete(Track.Source.Microphone);\n      }\n    });\n  }\n  /**\n   * Create local camera and/or microphone tracks\n   * @param options\n   * @returns\n   */\n  createTracks(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      const mergedOptions = mergeDefaultOptions(options, (_a = this.roomOptions) === null || _a === void 0 ? void 0 : _a.audioCaptureDefaults, (_b = this.roomOptions) === null || _b === void 0 ? void 0 : _b.videoCaptureDefaults);\n      const constraints = constraintsForOptions(mergedOptions);\n      let stream;\n      try {\n        stream = yield navigator.mediaDevices.getUserMedia(constraints);\n      } catch (err) {\n        if (err instanceof Error) {\n          if (constraints.audio) {\n            this.microphoneError = err;\n          }\n          if (constraints.video) {\n            this.cameraError = err;\n          }\n        }\n        throw err;\n      }\n      if (constraints.audio) {\n        this.microphoneError = undefined;\n        this.emit(ParticipantEvent.AudioStreamAcquired);\n      }\n      if (constraints.video) {\n        this.cameraError = undefined;\n      }\n      return Promise.all(stream.getTracks().map(mediaStreamTrack => __awaiter(this, void 0, void 0, function* () {\n        const isAudio = mediaStreamTrack.kind === 'audio';\n        let trackOptions = isAudio ? mergedOptions.audio : mergedOptions.video;\n        if (typeof trackOptions === 'boolean' || !trackOptions) {\n          trackOptions = {};\n        }\n        let trackConstraints;\n        const conOrBool = isAudio ? constraints.audio : constraints.video;\n        if (typeof conOrBool !== 'boolean') {\n          trackConstraints = conOrBool;\n        }\n        const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints, {\n          loggerName: this.roomOptions.loggerName,\n          loggerContextCb: () => this.logContext\n        });\n        if (track.kind === Track.Kind.Video) {\n          track.source = Track.Source.Camera;\n        } else if (track.kind === Track.Kind.Audio) {\n          track.source = Track.Source.Microphone;\n          track.setAudioContext(this.audioContext);\n        }\n        track.mediaStream = stream;\n        if (trackOptions.processor) {\n          if (track instanceof LocalAudioTrack) {\n            yield track.setProcessor(trackOptions.processor);\n          } else {\n            yield track.setProcessor(trackOptions.processor);\n          }\n        }\n        return track;\n      })));\n    });\n  }\n  /**\n   * Creates a screen capture tracks with getDisplayMedia().\n   * A LocalVideoTrack is always created and returned.\n   * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n   */\n  createScreenTracks(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (options === undefined) {\n        options = {};\n      }\n      if (navigator.mediaDevices.getDisplayMedia === undefined) {\n        throw new DeviceUnsupportedError('getDisplayMedia not supported');\n      }\n      if (options.resolution === undefined && !isSafari17()) {\n        // we need to constrain the dimensions, otherwise it could lead to low bitrate\n        // due to encoding a huge video. Encoding such large surfaces is really expensive\n        // unfortunately Safari 17 has a but and cannot be constrained by default\n        options.resolution = ScreenSharePresets.h1080fps30.resolution;\n      }\n      const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n      const stream = yield navigator.mediaDevices.getDisplayMedia(constraints);\n      const tracks = stream.getVideoTracks();\n      if (tracks.length === 0) {\n        throw new TrackInvalidError('no video track found');\n      }\n      const screenVideo = new LocalVideoTrack(tracks[0], undefined, false, {\n        loggerName: this.roomOptions.loggerName,\n        loggerContextCb: () => this.logContext\n      });\n      screenVideo.source = Track.Source.ScreenShare;\n      if (options.contentHint) {\n        screenVideo.mediaStreamTrack.contentHint = options.contentHint;\n      }\n      const localTracks = [screenVideo];\n      if (stream.getAudioTracks().length > 0) {\n        this.emit(ParticipantEvent.AudioStreamAcquired);\n        const screenAudio = new LocalAudioTrack(stream.getAudioTracks()[0], undefined, false, this.audioContext, {\n          loggerName: this.roomOptions.loggerName,\n          loggerContextCb: () => this.logContext\n        });\n        screenAudio.source = Track.Source.ScreenShareAudio;\n        localTracks.push(screenAudio);\n      }\n      return localTracks;\n    });\n  }\n  /**\n   * Publish a new track to the room\n   * @param track\n   * @param options\n   */\n  publishTrack(track, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c, _d;\n      if (track instanceof LocalAudioTrack) {\n        track.setAudioContext(this.audioContext);\n      }\n      yield (_a = this.reconnectFuture) === null || _a === void 0 ? void 0 : _a.promise;\n      if (track instanceof LocalTrack && this.pendingPublishPromises.has(track)) {\n        yield this.pendingPublishPromises.get(track);\n      }\n      let defaultConstraints;\n      if (track instanceof MediaStreamTrack) {\n        defaultConstraints = track.getConstraints();\n      } else {\n        // we want to access constraints directly as `track.mediaStreamTrack`\n        // might be pointing to a non-device track (e.g. processed track) already\n        defaultConstraints = track.constraints;\n        let deviceKind = undefined;\n        switch (track.source) {\n          case Track.Source.Microphone:\n            deviceKind = 'audioinput';\n            break;\n          case Track.Source.Camera:\n            deviceKind = 'videoinput';\n        }\n        if (deviceKind && this.activeDeviceMap.has(deviceKind)) {\n          defaultConstraints = Object.assign(Object.assign({}, defaultConstraints), {\n            deviceId: this.activeDeviceMap.get(deviceKind)\n          });\n        }\n      }\n      // convert raw media track into audio or video track\n      if (track instanceof MediaStreamTrack) {\n        switch (track.kind) {\n          case 'audio':\n            track = new LocalAudioTrack(track, defaultConstraints, true, this.audioContext, {\n              loggerName: this.roomOptions.loggerName,\n              loggerContextCb: () => this.logContext\n            });\n            break;\n          case 'video':\n            track = new LocalVideoTrack(track, defaultConstraints, true, {\n              loggerName: this.roomOptions.loggerName,\n              loggerContextCb: () => this.logContext\n            });\n            break;\n          default:\n            throw new TrackInvalidError(\"unsupported MediaStreamTrack kind \".concat(track.kind));\n        }\n      } else {\n        track.updateLoggerOptions({\n          loggerName: this.roomOptions.loggerName,\n          loggerContextCb: () => this.logContext\n        });\n      }\n      // is it already published? if so skip\n      let existingPublication;\n      this.trackPublications.forEach(publication => {\n        if (!publication.track) {\n          return;\n        }\n        if (publication.track === track) {\n          existingPublication = publication;\n        }\n      });\n      if (existingPublication) {\n        this.log.warn('track has already been published, skipping', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(existingPublication)));\n        return existingPublication;\n      }\n      const isStereoInput = 'channelCount' in track.mediaStreamTrack.getSettings() &&\n      // @ts-ignore `channelCount` on getSettings() is currently only available for Safari, but is generally the best way to determine a stereo track https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/channelCount\n      track.mediaStreamTrack.getSettings().channelCount === 2 || track.mediaStreamTrack.getConstraints().channelCount === 2;\n      const isStereo = (_b = options === null || options === void 0 ? void 0 : options.forceStereo) !== null && _b !== void 0 ? _b : isStereoInput;\n      // disable dtx for stereo track if not enabled explicitly\n      if (isStereo) {\n        if (!options) {\n          options = {};\n        }\n        if (options.dtx === undefined) {\n          this.log.info(\"Opus DTX will be disabled for stereo tracks by default. Enable them explicitly to make it work.\", Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n        }\n        if (options.red === undefined) {\n          this.log.info(\"Opus RED will be disabled for stereo tracks by default. Enable them explicitly to make it work.\");\n        }\n        (_c = options.dtx) !== null && _c !== void 0 ? _c : options.dtx = false;\n        (_d = options.red) !== null && _d !== void 0 ? _d : options.red = false;\n      }\n      const opts = Object.assign(Object.assign({}, this.roomOptions.publishDefaults), options);\n      if (!isE2EESimulcastSupported() && this.roomOptions.e2ee) {\n        this.log.info(\"End-to-end encryption is set up, simulcast publishing will be disabled on Safari versions and iOS browsers running iOS < v17.2\", Object.assign({}, this.logContext));\n        opts.simulcast = false;\n      }\n      if (opts.source) {\n        track.source = opts.source;\n      }\n      const publishPromise = this.publish(track, opts, isStereo);\n      this.pendingPublishPromises.set(track, publishPromise);\n      try {\n        const publication = yield publishPromise;\n        return publication;\n      } catch (e) {\n        throw e;\n      } finally {\n        this.pendingPublishPromises.delete(track);\n      }\n    });\n  }\n  publish(track, opts, isStereo) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n      const existingTrackOfSource = Array.from(this.trackPublications.values()).find(publishedTrack => track instanceof LocalTrack && publishedTrack.source === track.source);\n      if (existingTrackOfSource && track.source !== Track.Source.Unknown) {\n        this.log.info(\"publishing a second track with the same source: \".concat(track.source), Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n      }\n      if (opts.stopMicTrackOnMute && track instanceof LocalAudioTrack) {\n        track.stopOnMute = true;\n      }\n      if (track.source === Track.Source.ScreenShare && isFireFox()) {\n        // Firefox does not work well with simulcasted screen share\n        // we frequently get no data on layer 0 when enabled\n        opts.simulcast = false;\n      }\n      // require full AV1/VP9 SVC support prior to using it\n      if (opts.videoCodec === 'av1' && !supportsAV1()) {\n        opts.videoCodec = undefined;\n      }\n      if (opts.videoCodec === 'vp9' && !supportsVP9()) {\n        opts.videoCodec = undefined;\n      }\n      if (opts.videoCodec === undefined) {\n        opts.videoCodec = defaultVideoCodec;\n      }\n      const videoCodec = opts.videoCodec;\n      // handle track actions\n      track.on(TrackEvent.Muted, this.onTrackMuted);\n      track.on(TrackEvent.Unmuted, this.onTrackUnmuted);\n      track.on(TrackEvent.Ended, this.handleTrackEnded);\n      track.on(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n      track.on(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n      track.on(TrackEvent.AudioTrackFeatureUpdate, this.onTrackFeatureUpdate);\n      // create track publication from track\n      const req = new AddTrackRequest({\n        // get local track id for use during publishing\n        cid: track.mediaStreamTrack.id,\n        name: opts.name,\n        type: Track.kindToProto(track.kind),\n        muted: track.isMuted,\n        source: Track.sourceToProto(track.source),\n        disableDtx: !((_a = opts.dtx) !== null && _a !== void 0 ? _a : true),\n        encryption: this.encryptionType,\n        stereo: isStereo,\n        disableRed: this.isE2EEEnabled || !((_b = opts.red) !== null && _b !== void 0 ? _b : true),\n        stream: opts === null || opts === void 0 ? void 0 : opts.stream\n      });\n      // compute encodings and layers for video\n      let encodings;\n      if (track.kind === Track.Kind.Video) {\n        let dims = {\n          width: 0,\n          height: 0\n        };\n        try {\n          dims = yield track.waitForDimensions();\n        } catch (e) {\n          // use defaults, it's quite painful for congestion control without simulcast\n          // so using default dims according to publish settings\n          const defaultRes = (_d = (_c = this.roomOptions.videoCaptureDefaults) === null || _c === void 0 ? void 0 : _c.resolution) !== null && _d !== void 0 ? _d : VideoPresets.h720.resolution;\n          dims = {\n            width: defaultRes.width,\n            height: defaultRes.height\n          };\n          // log failure\n          this.log.error('could not determine track dimensions, using defaults', Object.assign(Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)), {\n            dims\n          }));\n        }\n        // width and height should be defined for video\n        req.width = dims.width;\n        req.height = dims.height;\n        // for svc codecs, disable simulcast and use vp8 for backup codec\n        if (track instanceof LocalVideoTrack) {\n          if (isSVCCodec(videoCodec)) {\n            if (track.source === Track.Source.ScreenShare) {\n              // vp9 svc with screenshare cannot encode multiple spatial layers\n              // doing so reduces publish resolution to minimal resolution\n              opts.scalabilityMode = 'L1T3';\n              // Chrome does not allow more than 5 fps with L1T3, and it has encoding bugs with L3T3\n              // It has a different path for screenshare handling and it seems to be untested/buggy\n              // As a workaround, we are setting contentHint to force it to go through the same\n              // path as regular camera video. While this is not optimal, it delivers the performance\n              // that we need\n              if ('contentHint' in track.mediaStreamTrack) {\n                track.mediaStreamTrack.contentHint = 'motion';\n                this.log.info('forcing contentHint to motion for screenshare with SVC codecs', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n              }\n            }\n            // set scalabilityMode to 'L3T3_KEY' by default\n            opts.scalabilityMode = (_e = opts.scalabilityMode) !== null && _e !== void 0 ? _e : 'L3T3_KEY';\n          }\n          req.simulcastCodecs = [new SimulcastCodec({\n            codec: videoCodec,\n            cid: track.mediaStreamTrack.id\n          })];\n          // set up backup\n          if (opts.backupCodec === true) {\n            opts.backupCodec = {\n              codec: defaultVideoCodec\n            };\n          }\n          if (opts.backupCodec && videoCodec !== opts.backupCodec.codec &&\n          // TODO remove this once e2ee is supported for backup codecs\n          req.encryption === Encryption_Type.NONE) {\n            // multi-codec simulcast requires dynacast\n            if (!this.roomOptions.dynacast) {\n              this.roomOptions.dynacast = true;\n            }\n            req.simulcastCodecs.push(new SimulcastCodec({\n              codec: opts.backupCodec.codec,\n              cid: ''\n            }));\n          }\n        }\n        encodings = computeVideoEncodings(track.source === Track.Source.ScreenShare, req.width, req.height, opts);\n        req.layers = videoLayersFromEncodings(req.width, req.height, encodings, isSVCCodec(opts.videoCodec));\n      } else if (track.kind === Track.Kind.Audio) {\n        encodings = [{\n          maxBitrate: (_f = opts.audioPreset) === null || _f === void 0 ? void 0 : _f.maxBitrate,\n          priority: (_h = (_g = opts.audioPreset) === null || _g === void 0 ? void 0 : _g.priority) !== null && _h !== void 0 ? _h : 'high',\n          networkPriority: (_k = (_j = opts.audioPreset) === null || _j === void 0 ? void 0 : _j.priority) !== null && _k !== void 0 ? _k : 'high'\n        }];\n      }\n      if (!this.engine || this.engine.isClosed) {\n        throw new UnexpectedConnectionState('cannot publish track when not connected');\n      }\n      const ti = yield this.engine.addTrack(req);\n      // server might not support the codec the client has requested, in that case, fallback\n      // to a supported codec\n      let primaryCodecMime;\n      ti.codecs.forEach(codec => {\n        if (primaryCodecMime === undefined) {\n          primaryCodecMime = codec.mimeType;\n        }\n      });\n      if (primaryCodecMime && track.kind === Track.Kind.Video) {\n        const updatedCodec = mimeTypeToVideoCodecString(primaryCodecMime);\n        if (updatedCodec !== videoCodec) {\n          this.log.debug('falling back to server selected codec', Object.assign(Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)), {\n            codec: updatedCodec\n          }));\n          opts.videoCodec = updatedCodec;\n          // recompute encodings since bitrates/etc could have changed\n          encodings = computeVideoEncodings(track.source === Track.Source.ScreenShare, req.width, req.height, opts);\n        }\n      }\n      const publication = new LocalTrackPublication(track.kind, ti, track, {\n        loggerName: this.roomOptions.loggerName,\n        loggerContextCb: () => this.logContext\n      });\n      // save options for when it needs to be republished again\n      publication.options = opts;\n      track.sid = ti.sid;\n      if (!this.engine.pcManager) {\n        throw new UnexpectedConnectionState('pcManager is not ready');\n      }\n      this.log.debug(\"publishing \".concat(track.kind, \" with encodings\"), Object.assign(Object.assign({}, this.logContext), {\n        encodings,\n        trackInfo: ti\n      }));\n      track.sender = yield this.engine.createSender(track, opts, encodings);\n      if (track instanceof LocalVideoTrack) {\n        (_l = opts.degradationPreference) !== null && _l !== void 0 ? _l : opts.degradationPreference = getDefaultDegradationPreference(track);\n        track.setDegradationPreference(opts.degradationPreference);\n      }\n      if (encodings) {\n        if (isFireFox() && track.kind === Track.Kind.Audio) {\n          /* Refer to RFC https://datatracker.ietf.org/doc/html/rfc7587#section-6.1,\n             livekit-server uses maxaveragebitrate=510000 in the answer sdp to permit client to\n             publish high quality audio track. But firefox always uses this value as the actual\n             bitrates, causing the audio bitrates to rise to 510Kbps in any stereo case unexpectedly.\n             So the client need to modify maxaverragebitrates in answer sdp to user provided value to\n             fix the issue.\n           */\n          let trackTransceiver = undefined;\n          for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n            if (transceiver.sender === track.sender) {\n              trackTransceiver = transceiver;\n              break;\n            }\n          }\n          if (trackTransceiver) {\n            this.engine.pcManager.publisher.setTrackCodecBitrate({\n              transceiver: trackTransceiver,\n              codec: 'opus',\n              maxbr: ((_m = encodings[0]) === null || _m === void 0 ? void 0 : _m.maxBitrate) ? encodings[0].maxBitrate / 1000 : 0\n            });\n          }\n        } else if (track.codec && isSVCCodec(track.codec) && ((_o = encodings[0]) === null || _o === void 0 ? void 0 : _o.maxBitrate)) {\n          this.engine.pcManager.publisher.setTrackCodecBitrate({\n            cid: req.cid,\n            codec: track.codec,\n            maxbr: encodings[0].maxBitrate / 1000\n          });\n        }\n      }\n      yield this.engine.negotiate();\n      if (track instanceof LocalVideoTrack) {\n        track.startMonitor(this.engine.client);\n      } else if (track instanceof LocalAudioTrack) {\n        track.startMonitor();\n      }\n      this.addTrackPublication(publication);\n      // send event for publication\n      this.emit(ParticipantEvent.LocalTrackPublished, publication);\n      return publication;\n    });\n  }\n  get isLocal() {\n    return true;\n  }\n  /** @internal\n   * publish additional codec to existing track\n   */\n  publishAdditionalCodecForTrack(track, videoCodec, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      // TODO remove once e2ee is supported for backup tracks\n      if (this.encryptionType !== Encryption_Type.NONE) {\n        return;\n      }\n      // is it not published? if so skip\n      let existingPublication;\n      this.trackPublications.forEach(publication => {\n        if (!publication.track) {\n          return;\n        }\n        if (publication.track === track) {\n          existingPublication = publication;\n        }\n      });\n      if (!existingPublication) {\n        throw new TrackInvalidError('track is not published');\n      }\n      if (!(track instanceof LocalVideoTrack)) {\n        throw new TrackInvalidError('track is not a video track');\n      }\n      const opts = Object.assign(Object.assign({}, (_a = this.roomOptions) === null || _a === void 0 ? void 0 : _a.publishDefaults), options);\n      const encodings = computeTrackBackupEncodings(track, videoCodec, opts);\n      if (!encodings) {\n        this.log.info(\"backup codec has been disabled, ignoring request to add additional codec for track\", Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n        return;\n      }\n      const simulcastTrack = track.addSimulcastTrack(videoCodec, encodings);\n      if (!simulcastTrack) {\n        return;\n      }\n      const req = new AddTrackRequest({\n        cid: simulcastTrack.mediaStreamTrack.id,\n        type: Track.kindToProto(track.kind),\n        muted: track.isMuted,\n        source: Track.sourceToProto(track.source),\n        sid: track.sid,\n        simulcastCodecs: [{\n          codec: opts.videoCodec,\n          cid: simulcastTrack.mediaStreamTrack.id\n        }]\n      });\n      req.layers = videoLayersFromEncodings(req.width, req.height, encodings);\n      if (!this.engine || this.engine.isClosed) {\n        throw new UnexpectedConnectionState('cannot publish track when not connected');\n      }\n      const ti = yield this.engine.addTrack(req);\n      yield this.engine.createSimulcastSender(track, simulcastTrack, opts, encodings);\n      yield this.engine.negotiate();\n      this.log.debug(\"published \".concat(videoCodec, \" for track \").concat(track.sid), Object.assign(Object.assign({}, this.logContext), {\n        encodings,\n        trackInfo: ti\n      }));\n    });\n  }\n  unpublishTrack(track, stopOnUnpublish) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      if (track instanceof LocalTrack) {\n        const publishPromise = this.pendingPublishPromises.get(track);\n        if (publishPromise) {\n          this.log.info('awaiting publish promise before attempting to unpublish', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(track)));\n          yield publishPromise;\n        }\n      }\n      // look through all published tracks to find the right ones\n      const publication = this.getPublicationForTrack(track);\n      const pubLogContext = publication ? getLogContextFromTrack(publication) : undefined;\n      this.log.debug('unpublishing track', Object.assign(Object.assign({}, this.logContext), pubLogContext));\n      if (!publication || !publication.track) {\n        this.log.warn('track was not unpublished because no publication was found', Object.assign(Object.assign({}, this.logContext), pubLogContext));\n        return undefined;\n      }\n      track = publication.track;\n      track.off(TrackEvent.Muted, this.onTrackMuted);\n      track.off(TrackEvent.Unmuted, this.onTrackUnmuted);\n      track.off(TrackEvent.Ended, this.handleTrackEnded);\n      track.off(TrackEvent.UpstreamPaused, this.onTrackUpstreamPaused);\n      track.off(TrackEvent.UpstreamResumed, this.onTrackUpstreamResumed);\n      track.off(TrackEvent.AudioTrackFeatureUpdate, this.onTrackFeatureUpdate);\n      if (stopOnUnpublish === undefined) {\n        stopOnUnpublish = (_b = (_a = this.roomOptions) === null || _a === void 0 ? void 0 : _a.stopLocalTrackOnUnpublish) !== null && _b !== void 0 ? _b : true;\n      }\n      if (stopOnUnpublish) {\n        track.stop();\n      }\n      let negotiationNeeded = false;\n      const trackSender = track.sender;\n      track.sender = undefined;\n      if (this.engine.pcManager && this.engine.pcManager.currentState < PCTransportState.FAILED && trackSender) {\n        try {\n          for (const transceiver of this.engine.pcManager.publisher.getTransceivers()) {\n            // if sender is not currently sending (after replaceTrack(null))\n            // removeTrack would have no effect.\n            // to ensure we end up successfully removing the track, manually set\n            // the transceiver to inactive\n            if (transceiver.sender === trackSender) {\n              transceiver.direction = 'inactive';\n              negotiationNeeded = true;\n            }\n          }\n          if (this.engine.removeTrack(trackSender)) {\n            negotiationNeeded = true;\n          }\n          if (track instanceof LocalVideoTrack) {\n            for (const [, trackInfo] of track.simulcastCodecs) {\n              if (trackInfo.sender) {\n                if (this.engine.removeTrack(trackInfo.sender)) {\n                  negotiationNeeded = true;\n                }\n                trackInfo.sender = undefined;\n              }\n            }\n            track.simulcastCodecs.clear();\n          }\n        } catch (e) {\n          this.log.warn('failed to unpublish track', Object.assign(Object.assign(Object.assign({}, this.logContext), pubLogContext), {\n            error: e\n          }));\n        }\n      }\n      // remove from our maps\n      this.trackPublications.delete(publication.trackSid);\n      switch (publication.kind) {\n        case Track.Kind.Audio:\n          this.audioTrackPublications.delete(publication.trackSid);\n          break;\n        case Track.Kind.Video:\n          this.videoTrackPublications.delete(publication.trackSid);\n          break;\n      }\n      this.emit(ParticipantEvent.LocalTrackUnpublished, publication);\n      publication.setTrack(undefined);\n      if (negotiationNeeded) {\n        yield this.engine.negotiate();\n      }\n      return publication;\n    });\n  }\n  unpublishTracks(tracks) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const results = yield Promise.all(tracks.map(track => this.unpublishTrack(track)));\n      return results.filter(track => track instanceof LocalTrackPublication);\n    });\n  }\n  republishAllTracks(options_1) {\n    return __awaiter(this, arguments, void 0, function (options) {\n      var _this2 = this;\n      let restartTracks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return function* () {\n        const localPubs = [];\n        _this2.trackPublications.forEach(pub => {\n          if (pub.track) {\n            if (options) {\n              pub.options = Object.assign(Object.assign({}, pub.options), options);\n            }\n            localPubs.push(pub);\n          }\n        });\n        yield Promise.all(localPubs.map(pub => __awaiter(_this2, void 0, void 0, function* () {\n          const track = pub.track;\n          yield this.unpublishTrack(track, false);\n          if (restartTracks && !track.isMuted && track.source !== Track.Source.ScreenShare && track.source !== Track.Source.ScreenShareAudio && (track instanceof LocalAudioTrack || track instanceof LocalVideoTrack) && !track.isUserProvided) {\n            // generally we need to restart the track before publishing, often a full reconnect\n            // is necessary because computer had gone to sleep.\n            this.log.debug('restarting existing track', Object.assign(Object.assign({}, this.logContext), {\n              track: pub.trackSid\n            }));\n            yield track.restartTrack();\n          }\n          yield this.publishTrack(track, pub.options);\n        })));\n      }();\n    });\n  }\n  /**\n   * Publish a new data payload to the room. Data will be forwarded to each\n   * participant in the room if the destination field in publishOptions is empty\n   *\n   * @param data Uint8Array of the payload. To send string data, use TextEncoder.encode\n   * @param options optionally specify a `reliable`, `topic` and `destination`\n   */\n  publishData(data_1) {\n    return __awaiter(this, arguments, void 0, function (data) {\n      var _this3 = this;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return function* () {\n        const kind = options.reliable ? DataPacket_Kind.RELIABLE : DataPacket_Kind.LOSSY;\n        const destinationIdentities = options.destinationIdentities;\n        const topic = options.topic;\n        const packet = new DataPacket({\n          kind: kind,\n          value: {\n            case: 'user',\n            value: new UserPacket({\n              participantIdentity: _this3.identity,\n              payload: data,\n              destinationIdentities,\n              topic\n            })\n          }\n        });\n        yield _this3.engine.sendDataPacket(packet, kind);\n      }();\n    });\n  }\n  /**\n   * Control who can subscribe to LocalParticipant's published tracks.\n   *\n   * By default, all participants can subscribe. This allows fine-grained control over\n   * who is able to subscribe at a participant and track level.\n   *\n   * Note: if access is given at a track-level (i.e. both [allParticipantsAllowed] and\n   * [ParticipantTrackPermission.allTracksAllowed] are false), any newer published tracks\n   * will not grant permissions to any participants and will require a subsequent\n   * permissions update to allow subscription.\n   *\n   * @param allParticipantsAllowed Allows all participants to subscribe all tracks.\n   *  Takes precedence over [[participantTrackPermissions]] if set to true.\n   *  By default this is set to true.\n   * @param participantTrackPermissions Full list of individual permissions per\n   *  participant/track. Any omitted participants will not receive any permissions.\n   */\n  setTrackSubscriptionPermissions(allParticipantsAllowed) {\n    let participantTrackPermissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this.participantTrackPermissions = participantTrackPermissions;\n    this.allParticipantsAllowedToSubscribe = allParticipantsAllowed;\n    if (!this.engine.client.isDisconnected) {\n      this.updateTrackSubscriptionPermissions();\n    }\n  }\n  /** @internal */\n  updateInfo(info) {\n    if (info.sid !== this.sid) {\n      // drop updates that specify a wrong sid.\n      // the sid for local participant is only explicitly set on join and full reconnect\n      return false;\n    }\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n    // reconcile track mute status.\n    // if server's track mute status doesn't match actual, we'll have to update\n    // the server's copy\n    info.tracks.forEach(ti => {\n      var _a, _b;\n      const pub = this.trackPublications.get(ti.sid);\n      if (pub) {\n        const mutedOnServer = pub.isMuted || ((_b = (_a = pub.track) === null || _a === void 0 ? void 0 : _a.isUpstreamPaused) !== null && _b !== void 0 ? _b : false);\n        if (mutedOnServer !== ti.muted) {\n          this.log.debug('updating server mute state after reconcile', Object.assign(Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(pub)), {\n            mutedOnServer\n          }));\n          this.engine.client.sendMuteTrack(ti.sid, mutedOnServer);\n        }\n      }\n    });\n    return true;\n  }\n  getPublicationForTrack(track) {\n    let publication;\n    this.trackPublications.forEach(pub => {\n      const localTrack = pub.track;\n      if (!localTrack) {\n        return;\n      }\n      // this looks overly complicated due to this object tree\n      if (track instanceof MediaStreamTrack) {\n        if (localTrack instanceof LocalAudioTrack || localTrack instanceof LocalVideoTrack) {\n          if (localTrack.mediaStreamTrack === track) {\n            publication = pub;\n          }\n        }\n      } else if (track === localTrack) {\n        publication = pub;\n      }\n    });\n    return publication;\n  }\n}\n\nclass RemoteTrackPublication extends TrackPublication {\n  constructor(kind, ti, autoSubscribe, loggerOptions) {\n    super(kind, ti.sid, ti.name, loggerOptions);\n    this.track = undefined;\n    /** @internal */\n    this.allowed = true;\n    this.disabled = false;\n    this.currentVideoQuality = VideoQuality.HIGH;\n    this.handleEnded = track => {\n      this.setTrack(undefined);\n      this.emit(TrackEvent.Ended, track);\n    };\n    this.handleVisibilityChange = visible => {\n      this.log.debug(\"adaptivestream video visibility \".concat(this.trackSid, \", visible=\").concat(visible), this.logContext);\n      this.disabled = !visible;\n      this.emitTrackUpdate();\n    };\n    this.handleVideoDimensionsChange = dimensions => {\n      this.log.debug(\"adaptivestream video dimensions \".concat(dimensions.width, \"x\").concat(dimensions.height), this.logContext);\n      this.videoDimensions = dimensions;\n      this.emitTrackUpdate();\n    };\n    this.subscribed = autoSubscribe;\n    this.updateInfo(ti);\n  }\n  /**\n   * Subscribe or unsubscribe to this remote track\n   * @param subscribed true to subscribe to a track, false to unsubscribe\n   */\n  setSubscribed(subscribed) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.subscribed = subscribed;\n    // reset allowed status when desired subscription state changes\n    // server will notify client via signal message if it's not allowed\n    if (subscribed) {\n      this.allowed = true;\n    }\n    const sub = new UpdateSubscription({\n      trackSids: [this.trackSid],\n      subscribe: this.subscribed,\n      participantTracks: [new ParticipantTracks({\n        // sending an empty participant id since TrackPublication doesn't keep it\n        // this is filled in by the participant that receives this message\n        participantSid: '',\n        trackSids: [this.trackSid]\n      })]\n    });\n    this.emit(TrackEvent.UpdateSubscription, sub);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n    this.emitPermissionUpdateIfChanged(prevPermission);\n  }\n  get subscriptionStatus() {\n    if (this.subscribed === false) {\n      return TrackPublication.SubscriptionStatus.Unsubscribed;\n    }\n    if (!super.isSubscribed) {\n      return TrackPublication.SubscriptionStatus.Desired;\n    }\n    return TrackPublication.SubscriptionStatus.Subscribed;\n  }\n  get permissionStatus() {\n    return this.allowed ? TrackPublication.PermissionStatus.Allowed : TrackPublication.PermissionStatus.NotAllowed;\n  }\n  /**\n   * Returns true if track is subscribed, and ready for playback\n   */\n  get isSubscribed() {\n    if (this.subscribed === false) {\n      return false;\n    }\n    return super.isSubscribed;\n  }\n  // returns client's desire to subscribe to a track, also true if autoSubscribe is enabled\n  get isDesired() {\n    return this.subscribed !== false;\n  }\n  get isEnabled() {\n    return !this.disabled;\n  }\n  /**\n   * disable server from sending down data for this track. this is useful when\n   * the participant is off screen, you may disable streaming down their video\n   * to reduce bandwidth requirements\n   * @param enabled\n   */\n  setEnabled(enabled) {\n    if (!this.isManualOperationAllowed() || this.disabled === !enabled) {\n      return;\n    }\n    this.disabled = !enabled;\n    this.emitTrackUpdate();\n  }\n  /**\n   * for tracks that support simulcasting, adjust subscribed quality\n   *\n   * This indicates the highest quality the client can accept. if network\n   * bandwidth does not allow, server will automatically reduce quality to\n   * optimize for uninterrupted video\n   */\n  setVideoQuality(quality) {\n    if (!this.isManualOperationAllowed() || this.currentVideoQuality === quality) {\n      return;\n    }\n    this.currentVideoQuality = quality;\n    this.videoDimensions = undefined;\n    this.emitTrackUpdate();\n  }\n  setVideoDimensions(dimensions) {\n    var _a, _b;\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n    if (((_a = this.videoDimensions) === null || _a === void 0 ? void 0 : _a.width) === dimensions.width && ((_b = this.videoDimensions) === null || _b === void 0 ? void 0 : _b.height) === dimensions.height) {\n      return;\n    }\n    if (this.track instanceof RemoteVideoTrack) {\n      this.videoDimensions = dimensions;\n    }\n    this.currentVideoQuality = undefined;\n    this.emitTrackUpdate();\n  }\n  setVideoFPS(fps) {\n    if (!this.isManualOperationAllowed()) {\n      return;\n    }\n    if (!(this.track instanceof RemoteVideoTrack)) {\n      return;\n    }\n    if (this.fps === fps) {\n      return;\n    }\n    this.fps = fps;\n    this.emitTrackUpdate();\n  }\n  get videoQuality() {\n    return this.currentVideoQuality;\n  }\n  /** @internal */\n  setTrack(track) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    const prevTrack = this.track;\n    if (prevTrack === track) {\n      return;\n    }\n    if (prevTrack) {\n      // unregister listener\n      prevTrack.off(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      prevTrack.off(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      prevTrack.off(TrackEvent.Ended, this.handleEnded);\n      prevTrack.detach();\n      prevTrack.stopMonitor();\n      this.emit(TrackEvent.Unsubscribed, prevTrack);\n    }\n    super.setTrack(track);\n    if (track) {\n      track.sid = this.trackSid;\n      track.on(TrackEvent.VideoDimensionsChanged, this.handleVideoDimensionsChange);\n      track.on(TrackEvent.VisibilityChanged, this.handleVisibilityChange);\n      track.on(TrackEvent.Ended, this.handleEnded);\n      this.emit(TrackEvent.Subscribed, track);\n    }\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n  /** @internal */\n  setAllowed(allowed) {\n    const prevStatus = this.subscriptionStatus;\n    const prevPermission = this.permissionStatus;\n    this.allowed = allowed;\n    this.emitPermissionUpdateIfChanged(prevPermission);\n    this.emitSubscriptionUpdateIfChanged(prevStatus);\n  }\n  /** @internal */\n  setSubscriptionError(error) {\n    this.emit(TrackEvent.SubscriptionFailed, error);\n  }\n  /** @internal */\n  updateInfo(info) {\n    super.updateInfo(info);\n    const prevMetadataMuted = this.metadataMuted;\n    this.metadataMuted = info.muted;\n    if (this.track) {\n      this.track.setMuted(info.muted);\n    } else if (prevMetadataMuted !== info.muted) {\n      this.emit(info.muted ? TrackEvent.Muted : TrackEvent.Unmuted);\n    }\n  }\n  emitSubscriptionUpdateIfChanged(previousStatus) {\n    const currentStatus = this.subscriptionStatus;\n    if (previousStatus === currentStatus) {\n      return;\n    }\n    this.emit(TrackEvent.SubscriptionStatusChanged, currentStatus, previousStatus);\n  }\n  emitPermissionUpdateIfChanged(previousPermissionStatus) {\n    const currentPermissionStatus = this.permissionStatus;\n    if (currentPermissionStatus !== previousPermissionStatus) {\n      this.emit(TrackEvent.SubscriptionPermissionChanged, this.permissionStatus, previousPermissionStatus);\n    }\n  }\n  isManualOperationAllowed() {\n    if (this.kind === Track.Kind.Video && this.isAdaptiveStream) {\n      this.log.warn('adaptive stream is enabled, cannot change video track settings', this.logContext);\n      return false;\n    }\n    if (!this.isDesired) {\n      this.log.warn('cannot update track settings when not subscribed', this.logContext);\n      return false;\n    }\n    return true;\n  }\n  get isAdaptiveStream() {\n    return this.track instanceof RemoteVideoTrack && this.track.isAdaptiveStream;\n  }\n  /* @internal */\n  emitTrackUpdate() {\n    const settings = new UpdateTrackSettings({\n      trackSids: [this.trackSid],\n      disabled: this.disabled,\n      fps: this.fps\n    });\n    if (this.videoDimensions) {\n      settings.width = Math.ceil(this.videoDimensions.width);\n      settings.height = Math.ceil(this.videoDimensions.height);\n    } else if (this.currentVideoQuality !== undefined) {\n      settings.quality = this.currentVideoQuality;\n    } else {\n      // defaults to high quality\n      settings.quality = VideoQuality.HIGH;\n    }\n    this.emit(TrackEvent.UpdateSettings, settings);\n  }\n}\n\nclass RemoteParticipant extends Participant {\n  /** @internal */\n  static fromParticipantInfo(signalClient, pi, loggerOptions) {\n    return new RemoteParticipant(signalClient, pi.sid, pi.identity, pi.name, pi.metadata, loggerOptions, pi.kind);\n  }\n  get logContext() {\n    return Object.assign(Object.assign({}, super.logContext), {\n      rpID: this.sid,\n      remoteParticipant: this.identity\n    });\n  }\n  /** @internal */\n  constructor(signalClient, sid, identity, name, metadata, loggerOptions) {\n    let kind = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : ParticipantInfo_Kind.STANDARD;\n    super(sid, identity || '', name, metadata, loggerOptions, kind);\n    this.signalClient = signalClient;\n    this.trackPublications = new Map();\n    this.audioTrackPublications = new Map();\n    this.videoTrackPublications = new Map();\n    this.volumeMap = new Map();\n  }\n  addTrackPublication(publication) {\n    super.addTrackPublication(publication);\n    // register action events\n    publication.on(TrackEvent.UpdateSettings, settings => {\n      this.log.debug('send update settings', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(publication)));\n      this.signalClient.sendUpdateTrackSettings(settings);\n    });\n    publication.on(TrackEvent.UpdateSubscription, sub => {\n      sub.participantTracks.forEach(pt => {\n        pt.participantSid = this.sid;\n      });\n      this.signalClient.sendUpdateSubscription(sub);\n    });\n    publication.on(TrackEvent.SubscriptionPermissionChanged, status => {\n      this.emit(ParticipantEvent.TrackSubscriptionPermissionChanged, publication, status);\n    });\n    publication.on(TrackEvent.SubscriptionStatusChanged, status => {\n      this.emit(ParticipantEvent.TrackSubscriptionStatusChanged, publication, status);\n    });\n    publication.on(TrackEvent.Subscribed, track => {\n      this.emit(ParticipantEvent.TrackSubscribed, track, publication);\n    });\n    publication.on(TrackEvent.Unsubscribed, previousTrack => {\n      this.emit(ParticipantEvent.TrackUnsubscribed, previousTrack, publication);\n    });\n    publication.on(TrackEvent.SubscriptionFailed, error => {\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, publication.trackSid, error);\n    });\n  }\n  getTrackPublication(source) {\n    const track = super.getTrackPublication(source);\n    if (track) {\n      return track;\n    }\n  }\n  getTrackPublicationByName(name) {\n    const track = super.getTrackPublicationByName(name);\n    if (track) {\n      return track;\n    }\n  }\n  /**\n   * sets the volume on the participant's audio track\n   * by default, this affects the microphone publication\n   * a different source can be passed in as a second argument\n   * if no track exists the volume will be applied when the microphone track is added\n   */\n  setVolume(volume) {\n    let source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Track.Source.Microphone;\n    this.volumeMap.set(source, volume);\n    const audioPublication = this.getTrackPublication(source);\n    if (audioPublication && audioPublication.track) {\n      audioPublication.track.setVolume(volume);\n    }\n  }\n  /**\n   * gets the volume on the participant's microphone track\n   */\n  getVolume() {\n    let source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Track.Source.Microphone;\n    const audioPublication = this.getTrackPublication(source);\n    if (audioPublication && audioPublication.track) {\n      return audioPublication.track.getVolume();\n    }\n    return this.volumeMap.get(source);\n  }\n  /** @internal */\n  addSubscribedMediaTrack(mediaTrack, sid, mediaStream, receiver, adaptiveStreamSettings, triesLeft) {\n    // find the track publication\n    // it's possible for the media track to arrive before participant info\n    let publication = this.getTrackPublicationBySid(sid);\n    // it's also possible that the browser didn't honor our original track id\n    // FireFox would use its own local uuid instead of server track id\n    if (!publication) {\n      if (!sid.startsWith('TR')) {\n        // find the first track that matches type\n        this.trackPublications.forEach(p => {\n          if (!publication && mediaTrack.kind === p.kind.toString()) {\n            publication = p;\n          }\n        });\n      }\n    }\n    // when we couldn't locate the track, it's possible that the metadata hasn't\n    // yet arrived. Wait a bit longer for it to arrive, or fire an error\n    if (!publication) {\n      if (triesLeft === 0) {\n        this.log.error('could not find published track', Object.assign(Object.assign({}, this.logContext), {\n          trackSid: sid\n        }));\n        this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n        return;\n      }\n      if (triesLeft === undefined) triesLeft = 20;\n      setTimeout(() => {\n        this.addSubscribedMediaTrack(mediaTrack, sid, mediaStream, receiver, adaptiveStreamSettings, triesLeft - 1);\n      }, 150);\n      return;\n    }\n    if (mediaTrack.readyState === 'ended') {\n      this.log.error('unable to subscribe because MediaStreamTrack is ended. Do not call MediaStreamTrack.stop()', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(publication)));\n      this.emit(ParticipantEvent.TrackSubscriptionFailed, sid);\n      return;\n    }\n    const isVideo = mediaTrack.kind === 'video';\n    let track;\n    if (isVideo) {\n      track = new RemoteVideoTrack(mediaTrack, sid, receiver, adaptiveStreamSettings);\n    } else {\n      track = new RemoteAudioTrack(mediaTrack, sid, receiver, this.audioContext, this.audioOutput);\n    }\n    // set track info\n    track.source = publication.source;\n    // keep publication's muted status\n    track.isMuted = publication.isMuted;\n    track.setMediaStream(mediaStream);\n    track.start();\n    publication.setTrack(track);\n    // set participant volumes on new audio tracks\n    if (this.volumeMap.has(publication.source) && track instanceof RemoteAudioTrack) {\n      track.setVolume(this.volumeMap.get(publication.source));\n    }\n    return publication;\n  }\n  /** @internal */\n  get hasMetadata() {\n    return !!this.participantInfo;\n  }\n  /**\n   * @internal\n   */\n  getTrackPublicationBySid(sid) {\n    return this.trackPublications.get(sid);\n  }\n  /** @internal */\n  updateInfo(info) {\n    if (!super.updateInfo(info)) {\n      return false;\n    }\n    // we are getting a list of all available tracks, reconcile in here\n    // and send out events for changes\n    // reconcile track publications, publish events only if metadata is already there\n    // i.e. changes since the local participant has joined\n    const validTracks = new Map();\n    const newTracks = new Map();\n    info.tracks.forEach(ti => {\n      var _a, _b;\n      let publication = this.getTrackPublicationBySid(ti.sid);\n      if (!publication) {\n        // new publication\n        const kind = Track.kindFromProto(ti.type);\n        if (!kind) {\n          return;\n        }\n        publication = new RemoteTrackPublication(kind, ti, (_a = this.signalClient.connectOptions) === null || _a === void 0 ? void 0 : _a.autoSubscribe, {\n          loggerContextCb: () => this.logContext,\n          loggerName: (_b = this.loggerOptions) === null || _b === void 0 ? void 0 : _b.loggerName\n        });\n        publication.updateInfo(ti);\n        newTracks.set(ti.sid, publication);\n        const existingTrackOfSource = Array.from(this.trackPublications.values()).find(publishedTrack => publishedTrack.source === (publication === null || publication === void 0 ? void 0 : publication.source));\n        if (existingTrackOfSource && publication.source !== Track.Source.Unknown) {\n          this.log.debug(\"received a second track publication for \".concat(this.identity, \" with the same source: \").concat(publication.source), Object.assign(Object.assign({}, this.logContext), {\n            oldTrack: getLogContextFromTrack(existingTrackOfSource),\n            newTrack: getLogContextFromTrack(publication)\n          }));\n        }\n        this.addTrackPublication(publication);\n      } else {\n        publication.updateInfo(ti);\n      }\n      validTracks.set(ti.sid, publication);\n    });\n    // detect removed tracks\n    this.trackPublications.forEach(publication => {\n      if (!validTracks.has(publication.trackSid)) {\n        this.log.trace('detected removed track on remote participant, unpublishing', Object.assign(Object.assign({}, this.logContext), getLogContextFromTrack(publication)));\n        this.unpublishTrack(publication.trackSid, true);\n      }\n    });\n    // always emit events for new publications, Room will not forward them unless it's ready\n    newTracks.forEach(publication => {\n      this.emit(ParticipantEvent.TrackPublished, publication);\n    });\n    return true;\n  }\n  /** @internal */\n  unpublishTrack(sid, sendUnpublish) {\n    const publication = this.trackPublications.get(sid);\n    if (!publication) {\n      return;\n    }\n    // also send unsubscribe, if track is actively subscribed\n    const {\n      track\n    } = publication;\n    if (track) {\n      track.stop();\n      publication.setTrack(undefined);\n    }\n    // remove track from maps only after unsubscribed has been fired\n    this.trackPublications.delete(sid);\n    // remove from the right type map\n    switch (publication.kind) {\n      case Track.Kind.Audio:\n        this.audioTrackPublications.delete(sid);\n        break;\n      case Track.Kind.Video:\n        this.videoTrackPublications.delete(sid);\n        break;\n    }\n    if (sendUnpublish) {\n      this.emit(ParticipantEvent.TrackUnpublished, publication);\n    }\n  }\n  /**\n   * @internal\n   */\n  setAudioOutput(output) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.audioOutput = output;\n      const promises = [];\n      this.audioTrackPublications.forEach(pub => {\n        var _a;\n        if (pub.track instanceof RemoteAudioTrack) {\n          promises.push(pub.track.setSinkId((_a = output.deviceId) !== null && _a !== void 0 ? _a : 'default'));\n        }\n      });\n      yield Promise.all(promises);\n    });\n  }\n  /** @internal */\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this.log.trace('participant event', Object.assign(Object.assign({}, this.logContext), {\n      event,\n      args\n    }));\n    return super.emit(event, ...args);\n  }\n}\n\nvar ConnectionState;\n(function (ConnectionState) {\n  ConnectionState[\"Disconnected\"] = \"disconnected\";\n  ConnectionState[\"Connecting\"] = \"connecting\";\n  ConnectionState[\"Connected\"] = \"connected\";\n  ConnectionState[\"Reconnecting\"] = \"reconnecting\";\n  ConnectionState[\"SignalReconnecting\"] = \"signalReconnecting\";\n})(ConnectionState || (ConnectionState = {}));\nconst connectionReconcileFrequency = 4 * 1000;\n/**\n * In LiveKit, a room is the logical grouping for a list of participants.\n * Participants in a room can publish tracks, and subscribe to others' tracks.\n *\n * a Room fires [[RoomEvent | RoomEvents]].\n *\n * @noInheritDoc\n */\nclass Room extends eventsExports.EventEmitter {\n  /**\n   * Creates a new Room, the primary construct for a LiveKit session.\n   * @param options\n   */\n  constructor(options) {\n    var _this;\n    var _a, _b;\n    super();\n    _this = this;\n    this.state = ConnectionState.Disconnected;\n    /**\n     * list of participants that are actively speaking. when this changes\n     * a [[RoomEvent.ActiveSpeakersChanged]] event is fired\n     */\n    this.activeSpeakers = [];\n    /** reflects the sender encryption status of the local participant */\n    this.isE2EEEnabled = false;\n    this.audioEnabled = true;\n    this.isVideoPlaybackBlocked = false;\n    this.log = livekitLogger;\n    this.bufferedEvents = [];\n    this.isResuming = false;\n    this.connect = (url, token, opts) => __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!isBrowserSupported()) {\n        if (isReactNative()) {\n          throw Error(\"WebRTC isn't detected, have you called registerGlobals?\");\n        } else {\n          throw Error(\"LiveKit doesn't seem to be supported on this browser. Try to update your browser and make sure no browser extensions are disabling webRTC.\");\n        }\n      }\n      // In case a disconnect called happened right before the connect call, make sure the disconnect is completed first by awaiting its lock\n      const unlockDisconnect = yield this.disconnectLock.lock();\n      if (this.state === ConnectionState.Connected) {\n        // when the state is reconnecting or connected, this function returns immediately\n        this.log.info(\"already connected to room \".concat(this.name), this.logContext);\n        unlockDisconnect();\n        return Promise.resolve();\n      }\n      if (this.connectFuture) {\n        unlockDisconnect();\n        return this.connectFuture.promise;\n      }\n      this.setAndEmitConnectionState(ConnectionState.Connecting);\n      if (((_a = this.regionUrlProvider) === null || _a === void 0 ? void 0 : _a.getServerUrl().toString()) !== url) {\n        this.regionUrl = undefined;\n        this.regionUrlProvider = undefined;\n      }\n      if (isCloud(new URL(url))) {\n        if (this.regionUrlProvider === undefined) {\n          this.regionUrlProvider = new RegionUrlProvider(url, token);\n        } else {\n          this.regionUrlProvider.updateToken(token);\n        }\n        // trigger the first fetch without waiting for a response\n        // if initial connection fails, this will speed up picking regional url\n        // on subsequent runs\n        this.regionUrlProvider.fetchRegionSettings().then(settings => {\n          var _a;\n          (_a = this.regionUrlProvider) === null || _a === void 0 ? void 0 : _a.setServerReportedRegions(settings);\n        }).catch(e => {\n          this.log.warn('could not fetch region settings', Object.assign(Object.assign({}, this.logContext), {\n            error: e\n          }));\n        });\n      }\n      const connectFn = (resolve, reject, regionUrl) => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        if (this.abortController) {\n          this.abortController.abort();\n        }\n        // explicit creation as local var needed to satisfy TS compiler when passing it to `attemptConnection` further down\n        const abortController = new AbortController();\n        this.abortController = abortController;\n        // at this point the intention to connect has been signalled so we can allow cancelling of the connection via disconnect() again\n        unlockDisconnect === null || unlockDisconnect === void 0 ? void 0 : unlockDisconnect();\n        try {\n          yield this.attemptConnection(regionUrl !== null && regionUrl !== void 0 ? regionUrl : url, token, opts, abortController);\n          this.abortController = undefined;\n          resolve();\n        } catch (e) {\n          if (this.regionUrlProvider && e instanceof ConnectionError && e.reason !== 3 /* ConnectionErrorReason.Cancelled */ && e.reason !== 0 /* ConnectionErrorReason.NotAllowed */) {\n            let nextUrl = null;\n            try {\n              nextUrl = yield this.regionUrlProvider.getNextBestRegionUrl((_a = this.abortController) === null || _a === void 0 ? void 0 : _a.signal);\n            } catch (error) {\n              if (error instanceof ConnectionError && (error.status === 401 || error.reason === 3 /* ConnectionErrorReason.Cancelled */)) {\n                this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n                reject(error);\n                return;\n              }\n            }\n            if (nextUrl && !((_b = this.abortController) === null || _b === void 0 ? void 0 : _b.signal.aborted)) {\n              this.log.info(\"Initial connection failed with ConnectionError: \".concat(e.message, \". Retrying with another region: \").concat(nextUrl), this.logContext);\n              this.recreateEngine();\n              yield connectFn(resolve, reject, nextUrl);\n            } else {\n              this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n              reject(e);\n            }\n          } else {\n            this.handleDisconnect(this.options.stopLocalTrackOnUnpublish);\n            reject(e);\n          }\n        }\n      });\n      const regionUrl = this.regionUrl;\n      this.regionUrl = undefined;\n      this.connectFuture = new Future((resolve, reject) => {\n        connectFn(resolve, reject, regionUrl);\n      }, () => {\n        this.clearConnectionFutures();\n      });\n      return this.connectFuture.promise;\n    });\n    this.connectSignal = (url, token, engine, connectOptions, roomOptions, abortController) => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n      const joinResponse = yield engine.join(url, token, {\n        autoSubscribe: connectOptions.autoSubscribe,\n        adaptiveStream: typeof roomOptions.adaptiveStream === 'object' ? true : roomOptions.adaptiveStream,\n        maxRetries: connectOptions.maxRetries,\n        e2eeEnabled: !!this.e2eeManager,\n        websocketTimeout: connectOptions.websocketTimeout\n      }, abortController.signal);\n      let serverInfo = joinResponse.serverInfo;\n      if (!serverInfo) {\n        serverInfo = {\n          version: joinResponse.serverVersion,\n          region: joinResponse.serverRegion\n        };\n      }\n      this.log.debug(\"connected to Livekit Server \".concat(Object.entries(serverInfo).map(_ref => {\n        let [key, value] = _ref;\n        return \"\".concat(key, \": \").concat(value);\n      }).join(', ')), {\n        room: (_a = joinResponse.room) === null || _a === void 0 ? void 0 : _a.name,\n        roomSid: (_b = joinResponse.room) === null || _b === void 0 ? void 0 : _b.sid,\n        identity: (_c = joinResponse.participant) === null || _c === void 0 ? void 0 : _c.identity\n      });\n      if (!joinResponse.serverVersion) {\n        throw new UnsupportedServer('unknown server version');\n      }\n      if (joinResponse.serverVersion === '0.15.1' && this.options.dynacast) {\n        this.log.debug('disabling dynacast due to server version', this.logContext);\n        // dynacast has a bug in 0.15.1, so we cannot use it then\n        roomOptions.dynacast = false;\n      }\n      return joinResponse;\n    });\n    this.applyJoinResponse = joinResponse => {\n      const pi = joinResponse.participant;\n      this.localParticipant.sid = pi.sid;\n      this.localParticipant.identity = pi.identity;\n      if (this.options.e2ee && this.e2eeManager) {\n        try {\n          this.e2eeManager.setSifTrailer(joinResponse.sifTrailer);\n        } catch (e) {\n          this.log.error(e instanceof Error ? e.message : 'Could not set SifTrailer', Object.assign(Object.assign({}, this.logContext), {\n            error: e\n          }));\n        }\n      }\n      // populate remote participants, these should not trigger new events\n      this.handleParticipantUpdates([pi, ...joinResponse.otherParticipants]);\n      if (joinResponse.room) {\n        this.handleRoomUpdate(joinResponse.room);\n      }\n    };\n    this.attemptConnection = (url, token, opts, abortController) => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n      if (this.state === ConnectionState.Reconnecting || this.isResuming || ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.pendingReconnect)) {\n        this.log.info('Reconnection attempt replaced by new connection attempt', this.logContext);\n        // make sure we close and recreate the existing engine in order to get rid of any potentially ongoing reconnection attempts\n        this.recreateEngine();\n      } else {\n        // create engine if previously disconnected\n        this.maybeCreateEngine();\n      }\n      if ((_b = this.regionUrlProvider) === null || _b === void 0 ? void 0 : _b.isCloud()) {\n        this.engine.setRegionUrlProvider(this.regionUrlProvider);\n      }\n      this.acquireAudioContext();\n      this.connOptions = Object.assign(Object.assign({}, roomConnectOptionDefaults), opts);\n      if (this.connOptions.rtcConfig) {\n        this.engine.rtcConfig = this.connOptions.rtcConfig;\n      }\n      if (this.connOptions.peerConnectionTimeout) {\n        this.engine.peerConnectionTimeout = this.connOptions.peerConnectionTimeout;\n      }\n      try {\n        const joinResponse = yield this.connectSignal(url, token, this.engine, this.connOptions, this.options, abortController);\n        this.applyJoinResponse(joinResponse);\n        // forward metadata changed for the local participant\n        this.setupLocalParticipantEvents();\n        this.emit(RoomEvent.SignalConnected);\n      } catch (err) {\n        yield this.engine.close();\n        this.recreateEngine();\n        const resultingError = new ConnectionError(\"could not establish signal connection\");\n        if (err instanceof Error) {\n          resultingError.message = \"\".concat(resultingError.message, \": \").concat(err.message);\n        }\n        if (err instanceof ConnectionError) {\n          resultingError.reason = err.reason;\n          resultingError.status = err.status;\n        }\n        this.log.debug(\"error trying to establish signal connection\", Object.assign(Object.assign({}, this.logContext), {\n          error: err\n        }));\n        throw resultingError;\n      }\n      if (abortController.signal.aborted) {\n        yield this.engine.close();\n        this.recreateEngine();\n        throw new ConnectionError(\"Connection attempt aborted\");\n      }\n      try {\n        yield this.engine.waitForPCInitialConnection(this.connOptions.peerConnectionTimeout, abortController);\n      } catch (e) {\n        yield this.engine.close();\n        this.recreateEngine();\n        throw e;\n      }\n      // also hook unload event\n      if (isWeb() && this.options.disconnectOnPageLeave) {\n        // capturing both 'pagehide' and 'beforeunload' to capture broadest set of browser behaviors\n        window.addEventListener('pagehide', this.onPageLeave);\n        window.addEventListener('beforeunload', this.onPageLeave);\n      }\n      if (isWeb()) {\n        document.addEventListener('freeze', this.onPageLeave);\n        (_c = navigator.mediaDevices) === null || _c === void 0 ? void 0 : _c.addEventListener('devicechange', this.handleDeviceChange);\n      }\n      this.setAndEmitConnectionState(ConnectionState.Connected);\n      this.emit(RoomEvent.Connected);\n      this.registerConnectionReconcile();\n    });\n    /**\n     * disconnects the room, emits [[RoomEvent.Disconnected]]\n     */\n    this.disconnect = function () {\n      for (var _len = arguments.length, args_1 = new Array(_len), _key = 0; _key < _len; _key++) {\n        args_1[_key] = arguments[_key];\n      }\n      return __awaiter(_this, [...args_1], void 0, function () {\n        var _this2 = this;\n        let stopTracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        return function* () {\n          var _a, _b, _c, _d;\n          const unlock = yield _this2.disconnectLock.lock();\n          try {\n            if (_this2.state === ConnectionState.Disconnected) {\n              _this2.log.debug('already disconnected', _this2.logContext);\n              return;\n            }\n            _this2.log.info('disconnect from room', Object.assign({}, _this2.logContext));\n            if (_this2.state === ConnectionState.Connecting || _this2.state === ConnectionState.Reconnecting || _this2.isResuming) {\n              // try aborting pending connection attempt\n              _this2.log.warn('abort connection attempt', _this2.logContext);\n              (_a = _this2.abortController) === null || _a === void 0 ? void 0 : _a.abort();\n              // in case the abort controller didn't manage to cancel the connection attempt, reject the connect promise explicitly\n              (_c = (_b = _this2.connectFuture) === null || _b === void 0 ? void 0 : _b.reject) === null || _c === void 0 ? void 0 : _c.call(_b, new ConnectionError('Client initiated disconnect'));\n              _this2.connectFuture = undefined;\n            }\n            // send leave\n            if (!((_d = _this2.engine) === null || _d === void 0 ? void 0 : _d.client.isDisconnected)) {\n              yield _this2.engine.client.sendLeave();\n            }\n            // close engine (also closes client)\n            if (_this2.engine) {\n              yield _this2.engine.close();\n            }\n            _this2.handleDisconnect(stopTracks, DisconnectReason.CLIENT_INITIATED);\n            /* @ts-ignore */\n            _this2.engine = undefined;\n          } finally {\n            unlock();\n          }\n        }();\n      });\n    };\n    this.onPageLeave = () => __awaiter(this, void 0, void 0, function* () {\n      this.log.info('Page leave detected, disconnecting', this.logContext);\n      yield this.disconnect();\n    });\n    /**\n     * Browsers have different policies regarding audio playback. Most requiring\n     * some form of user interaction (click/tap/etc).\n     * In those cases, audio will be silent until a click/tap triggering one of the following\n     * - `startAudio`\n     * - `getUserMedia`\n     */\n    this.startAudio = () => __awaiter(this, void 0, void 0, function* () {\n      const elements = [];\n      const browser = getBrowser();\n      if (browser && browser.os === 'iOS') {\n        /**\n         * iOS blocks audio element playback if\n         * - user is not publishing audio themselves and\n         * - no other audio source is playing\n         *\n         * as a workaround, we create an audio element with an empty track, so that\n         * silent audio is always playing\n         */\n        const audioId = 'livekit-dummy-audio-el';\n        let dummyAudioEl = document.getElementById(audioId);\n        if (!dummyAudioEl) {\n          dummyAudioEl = document.createElement('audio');\n          dummyAudioEl.id = audioId;\n          dummyAudioEl.autoplay = true;\n          dummyAudioEl.hidden = true;\n          const track = getEmptyAudioStreamTrack();\n          track.enabled = true;\n          const stream = new MediaStream([track]);\n          dummyAudioEl.srcObject = stream;\n          document.addEventListener('visibilitychange', () => {\n            if (!dummyAudioEl) {\n              return;\n            }\n            // set the srcObject to null on page hide in order to prevent lock screen controls to show up for it\n            dummyAudioEl.srcObject = document.hidden ? null : stream;\n            if (!document.hidden) {\n              this.log.debug('page visible again, triggering startAudio to resume playback and update playback status', this.logContext);\n              this.startAudio();\n            }\n          });\n          document.body.append(dummyAudioEl);\n          this.once(RoomEvent.Disconnected, () => {\n            dummyAudioEl === null || dummyAudioEl === void 0 ? void 0 : dummyAudioEl.remove();\n            dummyAudioEl = null;\n          });\n        }\n        elements.push(dummyAudioEl);\n      }\n      this.remoteParticipants.forEach(p => {\n        p.audioTrackPublications.forEach(t => {\n          if (t.track) {\n            t.track.attachedElements.forEach(e => {\n              elements.push(e);\n            });\n          }\n        });\n      });\n      try {\n        yield Promise.all([this.acquireAudioContext(), ...elements.map(e => {\n          e.muted = false;\n          return e.play();\n        })]);\n        this.handleAudioPlaybackStarted();\n      } catch (err) {\n        this.handleAudioPlaybackFailed(err);\n        throw err;\n      }\n    });\n    this.startVideo = () => __awaiter(this, void 0, void 0, function* () {\n      const elements = [];\n      for (const p of this.remoteParticipants.values()) {\n        p.videoTrackPublications.forEach(tr => {\n          var _a;\n          (_a = tr.track) === null || _a === void 0 ? void 0 : _a.attachedElements.forEach(el => {\n            if (!elements.includes(el)) {\n              elements.push(el);\n            }\n          });\n        });\n      }\n      yield Promise.all(elements.map(el => el.play())).then(() => {\n        this.handleVideoPlaybackStarted();\n      }).catch(e => {\n        if (e.name === 'NotAllowedError') {\n          this.handleVideoPlaybackFailed();\n        } else {\n          this.log.warn('Resuming video playback failed, make sure you call `startVideo` directly in a user gesture handler', this.logContext);\n        }\n      });\n    });\n    this.handleRestarting = () => {\n      this.clearConnectionReconcile();\n      // in case we went from resuming to full-reconnect, make sure to reflect it on the isResuming flag\n      this.isResuming = false;\n      // also unwind existing participants & existing subscriptions\n      for (const p of this.remoteParticipants.values()) {\n        this.handleParticipantDisconnected(p.identity, p);\n      }\n      if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n        this.emit(RoomEvent.Reconnecting);\n      }\n    };\n    this.handleSignalRestarted = joinResponse => __awaiter(this, void 0, void 0, function* () {\n      this.log.debug(\"signal reconnected to server, region \".concat(joinResponse.serverRegion), Object.assign(Object.assign({}, this.logContext), {\n        region: joinResponse.serverRegion\n      }));\n      this.bufferedEvents = [];\n      this.applyJoinResponse(joinResponse);\n      try {\n        // unpublish & republish tracks\n        yield this.localParticipant.republishAllTracks(undefined, true);\n      } catch (error) {\n        this.log.error('error trying to re-publish tracks after reconnection', Object.assign(Object.assign({}, this.logContext), {\n          error\n        }));\n      }\n      try {\n        yield this.engine.waitForRestarted();\n        this.log.debug(\"fully reconnected to server\", Object.assign(Object.assign({}, this.logContext), {\n          region: joinResponse.serverRegion\n        }));\n      } catch (_a) {\n        // reconnection failed, handleDisconnect is being invoked already, just return here\n        return;\n      }\n      this.setAndEmitConnectionState(ConnectionState.Connected);\n      this.emit(RoomEvent.Reconnected);\n      this.registerConnectionReconcile();\n      this.emitBufferedEvents();\n    });\n    this.handleParticipantUpdates = participantInfos => {\n      // handle changes to participant state, and send events\n      participantInfos.forEach(info => {\n        var _a;\n        if (info.identity === this.localParticipant.identity) {\n          this.localParticipant.updateInfo(info);\n          return;\n        }\n        // LiveKit server doesn't send identity info prior to version 1.5.2 in disconnect updates\n        // so we try to map an empty identity to an already known sID manually\n        if (info.identity === '') {\n          info.identity = (_a = this.sidToIdentity.get(info.sid)) !== null && _a !== void 0 ? _a : '';\n        }\n        let remoteParticipant = this.remoteParticipants.get(info.identity);\n        // when it's disconnected, send updates\n        if (info.state === ParticipantInfo_State.DISCONNECTED) {\n          this.handleParticipantDisconnected(info.identity, remoteParticipant);\n        } else {\n          // create participant if doesn't exist\n          remoteParticipant = this.getOrCreateParticipant(info.identity, info);\n        }\n      });\n    };\n    // updates are sent only when there's a change to speaker ordering\n    this.handleActiveSpeakersUpdate = speakers => {\n      const activeSpeakers = [];\n      const seenSids = {};\n      speakers.forEach(speaker => {\n        seenSids[speaker.sid] = true;\n        if (speaker.sid === this.localParticipant.sid) {\n          this.localParticipant.audioLevel = speaker.level;\n          this.localParticipant.setIsSpeaking(true);\n          activeSpeakers.push(this.localParticipant);\n        } else {\n          const p = this.getRemoteParticipantBySid(speaker.sid);\n          if (p) {\n            p.audioLevel = speaker.level;\n            p.setIsSpeaking(true);\n            activeSpeakers.push(p);\n          }\n        }\n      });\n      if (!seenSids[this.localParticipant.sid]) {\n        this.localParticipant.audioLevel = 0;\n        this.localParticipant.setIsSpeaking(false);\n      }\n      this.remoteParticipants.forEach(p => {\n        if (!seenSids[p.sid]) {\n          p.audioLevel = 0;\n          p.setIsSpeaking(false);\n        }\n      });\n      this.activeSpeakers = activeSpeakers;\n      this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n    };\n    // process list of changed speakers\n    this.handleSpeakersChanged = speakerUpdates => {\n      const lastSpeakers = new Map();\n      this.activeSpeakers.forEach(p => {\n        const remoteParticipant = this.remoteParticipants.get(p.identity);\n        if (remoteParticipant && remoteParticipant.sid !== p.sid) {\n          return;\n        }\n        lastSpeakers.set(p.sid, p);\n      });\n      speakerUpdates.forEach(speaker => {\n        let p = this.getRemoteParticipantBySid(speaker.sid);\n        if (speaker.sid === this.localParticipant.sid) {\n          p = this.localParticipant;\n        }\n        if (!p) {\n          return;\n        }\n        p.audioLevel = speaker.level;\n        p.setIsSpeaking(speaker.active);\n        if (speaker.active) {\n          lastSpeakers.set(speaker.sid, p);\n        } else {\n          lastSpeakers.delete(speaker.sid);\n        }\n      });\n      const activeSpeakers = Array.from(lastSpeakers.values());\n      activeSpeakers.sort((a, b) => b.audioLevel - a.audioLevel);\n      this.activeSpeakers = activeSpeakers;\n      this.emitWhenConnected(RoomEvent.ActiveSpeakersChanged, activeSpeakers);\n    };\n    this.handleStreamStateUpdate = streamStateUpdate => {\n      streamStateUpdate.streamStates.forEach(streamState => {\n        const participant = this.getRemoteParticipantBySid(streamState.participantSid);\n        if (!participant) {\n          return;\n        }\n        const pub = participant.getTrackPublicationBySid(streamState.trackSid);\n        if (!pub || !pub.track) {\n          return;\n        }\n        pub.track.streamState = Track.streamStateFromProto(streamState.state);\n        participant.emit(ParticipantEvent.TrackStreamStateChanged, pub, pub.track.streamState);\n        this.emitWhenConnected(RoomEvent.TrackStreamStateChanged, pub, pub.track.streamState, participant);\n      });\n    };\n    this.handleSubscriptionPermissionUpdate = update => {\n      const participant = this.getRemoteParticipantBySid(update.participantSid);\n      if (!participant) {\n        return;\n      }\n      const pub = participant.getTrackPublicationBySid(update.trackSid);\n      if (!pub) {\n        return;\n      }\n      pub.setAllowed(update.allowed);\n    };\n    this.handleSubscriptionError = update => {\n      const participant = Array.from(this.remoteParticipants.values()).find(p => p.trackPublications.has(update.trackSid));\n      if (!participant) {\n        return;\n      }\n      const pub = participant.getTrackPublicationBySid(update.trackSid);\n      if (!pub) {\n        return;\n      }\n      pub.setSubscriptionError(update.err);\n    };\n    this.handleDataPacket = packet => {\n      // find the participant\n      const participant = this.remoteParticipants.get(packet.participantIdentity);\n      if (packet.value.case === 'user') {\n        this.handleUserPacket(participant, packet.value.value, packet.kind);\n      } else if (packet.value.case === 'transcription') {\n        this.handleTranscription(participant, packet.value.value);\n      } else if (packet.value.case === 'sipDtmf') {\n        this.handleSipDtmf(participant, packet.value.value);\n      }\n    };\n    this.handleUserPacket = (participant, userPacket, kind) => {\n      this.emit(RoomEvent.DataReceived, userPacket.payload, participant, kind, userPacket.topic);\n      // also emit on the participant\n      participant === null || participant === void 0 ? void 0 : participant.emit(ParticipantEvent.DataReceived, userPacket.payload, kind);\n    };\n    this.handleSipDtmf = (participant, dtmf) => {\n      this.emit(RoomEvent.SipDTMFReceived, dtmf, participant);\n      // also emit on the participant\n      participant === null || participant === void 0 ? void 0 : participant.emit(ParticipantEvent.SipDTMFReceived, dtmf);\n    };\n    this.bufferedSegments = new Map();\n    this.handleTranscription = (_remoteParticipant, transcription) => {\n      // find the participant\n      const participant = transcription.transcribedParticipantIdentity === this.localParticipant.identity ? this.localParticipant : this.getParticipantByIdentity(transcription.transcribedParticipantIdentity);\n      const publication = participant === null || participant === void 0 ? void 0 : participant.trackPublications.get(transcription.trackId);\n      const segments = extractTranscriptionSegments(transcription);\n      publication === null || publication === void 0 ? void 0 : publication.emit(TrackEvent.TranscriptionReceived, segments);\n      participant === null || participant === void 0 ? void 0 : participant.emit(ParticipantEvent.TranscriptionReceived, segments, publication);\n      this.emit(RoomEvent.TranscriptionReceived, segments, participant, publication);\n    };\n    this.handleAudioPlaybackStarted = () => {\n      if (this.canPlaybackAudio) {\n        return;\n      }\n      this.audioEnabled = true;\n      this.emit(RoomEvent.AudioPlaybackStatusChanged, true);\n    };\n    this.handleAudioPlaybackFailed = e => {\n      this.log.warn('could not playback audio', Object.assign(Object.assign({}, this.logContext), {\n        error: e\n      }));\n      if (!this.canPlaybackAudio) {\n        return;\n      }\n      this.audioEnabled = false;\n      this.emit(RoomEvent.AudioPlaybackStatusChanged, false);\n    };\n    this.handleVideoPlaybackStarted = () => {\n      if (this.isVideoPlaybackBlocked) {\n        this.isVideoPlaybackBlocked = false;\n        this.emit(RoomEvent.VideoPlaybackStatusChanged, true);\n      }\n    };\n    this.handleVideoPlaybackFailed = () => {\n      if (!this.isVideoPlaybackBlocked) {\n        this.isVideoPlaybackBlocked = true;\n        this.emit(RoomEvent.VideoPlaybackStatusChanged, false);\n      }\n    };\n    this.handleDeviceChange = () => __awaiter(this, void 0, void 0, function* () {\n      this.emit(RoomEvent.MediaDevicesChanged);\n    });\n    this.handleRoomUpdate = room => {\n      const oldRoom = this.roomInfo;\n      this.roomInfo = room;\n      if (oldRoom && oldRoom.metadata !== room.metadata) {\n        this.emitWhenConnected(RoomEvent.RoomMetadataChanged, room.metadata);\n      }\n      if ((oldRoom === null || oldRoom === void 0 ? void 0 : oldRoom.activeRecording) !== room.activeRecording) {\n        this.emitWhenConnected(RoomEvent.RecordingStatusChanged, room.activeRecording);\n      }\n    };\n    this.handleConnectionQualityUpdate = update => {\n      update.updates.forEach(info => {\n        if (info.participantSid === this.localParticipant.sid) {\n          this.localParticipant.setConnectionQuality(info.quality);\n          return;\n        }\n        const participant = this.getRemoteParticipantBySid(info.participantSid);\n        if (participant) {\n          participant.setConnectionQuality(info.quality);\n        }\n      });\n    };\n    this.onLocalParticipantMetadataChanged = metadata => {\n      this.emit(RoomEvent.ParticipantMetadataChanged, metadata, this.localParticipant);\n    };\n    this.onLocalParticipantNameChanged = name => {\n      this.emit(RoomEvent.ParticipantNameChanged, name, this.localParticipant);\n    };\n    this.onLocalAttributesChanged = changedAttributes => {\n      this.emit(RoomEvent.ParticipantAttributesChanged, changedAttributes, this.localParticipant);\n    };\n    this.onLocalTrackMuted = pub => {\n      this.emit(RoomEvent.TrackMuted, pub, this.localParticipant);\n    };\n    this.onLocalTrackUnmuted = pub => {\n      this.emit(RoomEvent.TrackUnmuted, pub, this.localParticipant);\n    };\n    this.onTrackProcessorUpdate = processor => {\n      var _a;\n      (_a = processor === null || processor === void 0 ? void 0 : processor.onPublish) === null || _a === void 0 ? void 0 : _a.call(processor, this);\n    };\n    this.onLocalTrackPublished = pub => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c, _d, _e;\n      (_a = pub.track) === null || _a === void 0 ? void 0 : _a.on(TrackEvent.TrackProcessorUpdate, this.onTrackProcessorUpdate);\n      (_d = (_c = (_b = pub.track) === null || _b === void 0 ? void 0 : _b.getProcessor()) === null || _c === void 0 ? void 0 : _c.onPublish) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n      this.emit(RoomEvent.LocalTrackPublished, pub, this.localParticipant);\n      if (pub.track instanceof LocalAudioTrack) {\n        const trackIsSilent = yield pub.track.checkForSilence();\n        if (trackIsSilent) {\n          this.emit(RoomEvent.LocalAudioSilenceDetected, pub);\n        }\n      }\n      const deviceId = yield (_e = pub.track) === null || _e === void 0 ? void 0 : _e.getDeviceId();\n      const deviceKind = sourceToKind(pub.source);\n      if (deviceKind && deviceId && deviceId !== this.localParticipant.activeDeviceMap.get(deviceKind)) {\n        this.localParticipant.activeDeviceMap.set(deviceKind, deviceId);\n        this.emit(RoomEvent.ActiveDeviceChanged, deviceKind, deviceId);\n      }\n    });\n    this.onLocalTrackUnpublished = pub => {\n      var _a;\n      (_a = pub.track) === null || _a === void 0 ? void 0 : _a.off(TrackEvent.TrackProcessorUpdate, this.onTrackProcessorUpdate);\n      this.emit(RoomEvent.LocalTrackUnpublished, pub, this.localParticipant);\n    };\n    this.onLocalConnectionQualityChanged = quality => {\n      this.emit(RoomEvent.ConnectionQualityChanged, quality, this.localParticipant);\n    };\n    this.onMediaDevicesError = e => {\n      this.emit(RoomEvent.MediaDevicesError, e);\n    };\n    this.onLocalParticipantPermissionsChanged = prevPermissions => {\n      this.emit(RoomEvent.ParticipantPermissionsChanged, prevPermissions, this.localParticipant);\n    };\n    this.setMaxListeners(100);\n    this.remoteParticipants = new Map();\n    this.sidToIdentity = new Map();\n    this.options = Object.assign(Object.assign({}, roomOptionDefaults), options);\n    this.log = getLogger((_a = this.options.loggerName) !== null && _a !== void 0 ? _a : LoggerNames.Room);\n    this.options.audioCaptureDefaults = Object.assign(Object.assign({}, audioDefaults), options === null || options === void 0 ? void 0 : options.audioCaptureDefaults);\n    this.options.videoCaptureDefaults = Object.assign(Object.assign({}, videoDefaults), options === null || options === void 0 ? void 0 : options.videoCaptureDefaults);\n    this.options.publishDefaults = Object.assign(Object.assign({}, publishDefaults), options === null || options === void 0 ? void 0 : options.publishDefaults);\n    this.maybeCreateEngine();\n    this.disconnectLock = new Mutex();\n    this.localParticipant = new LocalParticipant('', '', this.engine, this.options);\n    if (this.options.videoCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set('videoinput', unwrapConstraint(this.options.videoCaptureDefaults.deviceId));\n    }\n    if (this.options.audioCaptureDefaults.deviceId) {\n      this.localParticipant.activeDeviceMap.set('audioinput', unwrapConstraint(this.options.audioCaptureDefaults.deviceId));\n    }\n    if ((_b = this.options.audioOutput) === null || _b === void 0 ? void 0 : _b.deviceId) {\n      this.switchActiveDevice('audiooutput', unwrapConstraint(this.options.audioOutput.deviceId)).catch(e => this.log.warn(\"Could not set audio output: \".concat(e.message), this.logContext));\n    }\n    if (this.options.e2ee) {\n      this.setupE2EE();\n    }\n  }\n  /**\n   * @experimental\n   */\n  setE2EEEnabled(enabled) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.e2eeManager) {\n        yield Promise.all([this.localParticipant.setE2EEEnabled(enabled)]);\n        if (this.localParticipant.identity !== '') {\n          this.e2eeManager.setParticipantCryptorEnabled(enabled, this.localParticipant.identity);\n        }\n      } else {\n        throw Error('e2ee not configured, please set e2ee settings within the room options');\n      }\n    });\n  }\n  setupE2EE() {\n    var _a;\n    if (this.options.e2ee) {\n      this.e2eeManager = new E2EEManager(this.options.e2ee);\n      this.e2eeManager.on(EncryptionEvent.ParticipantEncryptionStatusChanged, (enabled, participant) => {\n        if (participant instanceof LocalParticipant) {\n          this.isE2EEEnabled = enabled;\n        }\n        this.emit(RoomEvent.ParticipantEncryptionStatusChanged, enabled, participant);\n      });\n      this.e2eeManager.on(EncryptionEvent.EncryptionError, error => this.emit(RoomEvent.EncryptionError, error));\n      (_a = this.e2eeManager) === null || _a === void 0 ? void 0 : _a.setup(this);\n    }\n  }\n  get logContext() {\n    var _a;\n    return {\n      room: this.name,\n      roomID: (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.sid,\n      participant: this.localParticipant.identity,\n      pID: this.localParticipant.sid\n    };\n  }\n  /**\n   * if the current room has a participant with `recorder: true` in its JWT grant\n   **/\n  get isRecording() {\n    var _a, _b;\n    return (_b = (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.activeRecording) !== null && _b !== void 0 ? _b : false;\n  }\n  /**\n   * server assigned unique room id.\n   * returns once a sid has been issued by the server.\n   */\n  getSid() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === ConnectionState.Disconnected) {\n        return '';\n      }\n      if (this.roomInfo && this.roomInfo.sid !== '') {\n        return this.roomInfo.sid;\n      }\n      return new Promise((resolve, reject) => {\n        const handleRoomUpdate = roomInfo => {\n          if (roomInfo.sid !== '') {\n            this.engine.off(EngineEvent.RoomUpdate, handleRoomUpdate);\n            resolve(roomInfo.sid);\n          }\n        };\n        this.engine.on(EngineEvent.RoomUpdate, handleRoomUpdate);\n        this.once(RoomEvent.Disconnected, () => {\n          this.engine.off(EngineEvent.RoomUpdate, handleRoomUpdate);\n          reject('Room disconnected before room server id was available');\n        });\n      });\n    });\n  }\n  /** user assigned name, derived from JWT token */\n  get name() {\n    var _a, _b;\n    return (_b = (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : '';\n  }\n  /** room metadata */\n  get metadata() {\n    var _a;\n    return (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.metadata;\n  }\n  get numParticipants() {\n    var _a, _b;\n    return (_b = (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.numParticipants) !== null && _b !== void 0 ? _b : 0;\n  }\n  get numPublishers() {\n    var _a, _b;\n    return (_b = (_a = this.roomInfo) === null || _a === void 0 ? void 0 : _a.numPublishers) !== null && _b !== void 0 ? _b : 0;\n  }\n  maybeCreateEngine() {\n    if (this.engine && !this.engine.isClosed) {\n      return;\n    }\n    this.engine = new RTCEngine(this.options);\n    this.engine.on(EngineEvent.ParticipantUpdate, this.handleParticipantUpdates).on(EngineEvent.RoomUpdate, this.handleRoomUpdate).on(EngineEvent.SpeakersChanged, this.handleSpeakersChanged).on(EngineEvent.StreamStateChanged, this.handleStreamStateUpdate).on(EngineEvent.ConnectionQualityUpdate, this.handleConnectionQualityUpdate).on(EngineEvent.SubscriptionError, this.handleSubscriptionError).on(EngineEvent.SubscriptionPermissionUpdate, this.handleSubscriptionPermissionUpdate).on(EngineEvent.MediaTrackAdded, (mediaTrack, stream, receiver) => {\n      this.onTrackAdded(mediaTrack, stream, receiver);\n    }).on(EngineEvent.Disconnected, reason => {\n      this.handleDisconnect(this.options.stopLocalTrackOnUnpublish, reason);\n    }).on(EngineEvent.ActiveSpeakersUpdate, this.handleActiveSpeakersUpdate).on(EngineEvent.DataPacketReceived, this.handleDataPacket).on(EngineEvent.Resuming, () => {\n      this.clearConnectionReconcile();\n      this.isResuming = true;\n      this.log.info('Resuming signal connection', this.logContext);\n      if (this.setAndEmitConnectionState(ConnectionState.SignalReconnecting)) {\n        this.emit(RoomEvent.SignalReconnecting);\n      }\n    }).on(EngineEvent.Resumed, () => {\n      this.registerConnectionReconcile();\n      this.isResuming = false;\n      this.log.info('Resumed signal connection', this.logContext);\n      this.updateSubscriptions();\n      this.emitBufferedEvents();\n      if (this.setAndEmitConnectionState(ConnectionState.Connected)) {\n        this.emit(RoomEvent.Reconnected);\n      }\n    }).on(EngineEvent.SignalResumed, () => {\n      this.bufferedEvents = [];\n      if (this.state === ConnectionState.Reconnecting || this.isResuming) {\n        this.sendSyncState();\n      }\n    }).on(EngineEvent.Restarting, this.handleRestarting).on(EngineEvent.SignalRestarted, this.handleSignalRestarted).on(EngineEvent.Offline, () => {\n      if (this.setAndEmitConnectionState(ConnectionState.Reconnecting)) {\n        this.emit(RoomEvent.Reconnecting);\n      }\n    }).on(EngineEvent.DCBufferStatusChanged, (status, kind) => {\n      this.emit(RoomEvent.DCBufferStatusChanged, status, kind);\n    });\n    if (this.localParticipant) {\n      this.localParticipant.setupEngine(this.engine);\n    }\n    if (this.e2eeManager) {\n      this.e2eeManager.setupEngine(this.engine);\n    }\n  }\n  /**\n   * getLocalDevices abstracts navigator.mediaDevices.enumerateDevices.\n   * In particular, it handles Chrome's unique behavior of creating `default`\n   * devices. When encountered, it'll be removed from the list of devices.\n   * The actual default device will be placed at top.\n   * @param kind\n   * @returns a list of available local devices\n   */\n  static getLocalDevices(kind) {\n    let requestPermissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return DeviceManager.getInstance().getDevices(kind, requestPermissions);\n  }\n  /**\n   * prepareConnection should be called as soon as the page is loaded, in order\n   * to speed up the connection attempt. This function will\n   * - perform DNS resolution and pre-warm the DNS cache\n   * - establish TLS connection and cache TLS keys\n   *\n   * With LiveKit Cloud, it will also determine the best edge data center for\n   * the current client to connect to if a token is provided.\n   */\n  prepareConnection(url, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state !== ConnectionState.Disconnected) {\n        return;\n      }\n      this.log.debug(\"prepareConnection to \".concat(url), this.logContext);\n      try {\n        if (isCloud(new URL(url)) && token) {\n          this.regionUrlProvider = new RegionUrlProvider(url, token);\n          const regionUrl = yield this.regionUrlProvider.getNextBestRegionUrl();\n          // we will not replace the regionUrl if an attempt had already started\n          // to avoid overriding regionUrl after a new connection attempt had started\n          if (regionUrl && this.state === ConnectionState.Disconnected) {\n            this.regionUrl = regionUrl;\n            yield fetch(toHttpUrl(regionUrl), {\n              method: 'HEAD'\n            });\n            this.log.debug(\"prepared connection to \".concat(regionUrl), this.logContext);\n          }\n        } else {\n          yield fetch(toHttpUrl(url), {\n            method: 'HEAD'\n          });\n        }\n      } catch (e) {\n        this.log.warn('could not prepare connection', Object.assign(Object.assign({}, this.logContext), {\n          error: e\n        }));\n      }\n    });\n  }\n  /**\n   * retrieves a participant by identity\n   * @param identity\n   * @returns\n   */\n  getParticipantByIdentity(identity) {\n    if (this.localParticipant.identity === identity) {\n      return this.localParticipant;\n    }\n    return this.remoteParticipants.get(identity);\n  }\n  clearConnectionFutures() {\n    this.connectFuture = undefined;\n  }\n  /**\n   * @internal for testing\n   */\n  simulateScenario(scenario, arg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let postAction = () => {};\n      let req;\n      switch (scenario) {\n        case 'signal-reconnect':\n          // @ts-expect-error function is private\n          yield this.engine.client.handleOnClose('simulate disconnect');\n          break;\n        case 'speaker':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'speakerUpdate',\n              value: 3\n            }\n          });\n          break;\n        case 'node-failure':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'nodeFailure',\n              value: true\n            }\n          });\n          break;\n        case 'server-leave':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'serverLeave',\n              value: true\n            }\n          });\n          break;\n        case 'migration':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'migration',\n              value: true\n            }\n          });\n          break;\n        case 'resume-reconnect':\n          this.engine.failNext();\n          // @ts-expect-error function is private\n          yield this.engine.client.handleOnClose('simulate resume-disconnect');\n          break;\n        case 'disconnect-signal-on-resume':\n          postAction = () => __awaiter(this, void 0, void 0, function* () {\n            // @ts-expect-error function is private\n            yield this.engine.client.handleOnClose('simulate resume-disconnect');\n          });\n          req = new SimulateScenario({\n            scenario: {\n              case: 'disconnectSignalOnResume',\n              value: true\n            }\n          });\n          break;\n        case 'disconnect-signal-on-resume-no-messages':\n          postAction = () => __awaiter(this, void 0, void 0, function* () {\n            // @ts-expect-error function is private\n            yield this.engine.client.handleOnClose('simulate resume-disconnect');\n          });\n          req = new SimulateScenario({\n            scenario: {\n              case: 'disconnectSignalOnResumeNoMessages',\n              value: true\n            }\n          });\n          break;\n        case 'full-reconnect':\n          this.engine.fullReconnectOnNext = true;\n          // @ts-expect-error function is private\n          yield this.engine.client.handleOnClose('simulate full-reconnect');\n          break;\n        case 'force-tcp':\n        case 'force-tls':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'switchCandidateProtocol',\n              value: scenario === 'force-tls' ? 2 : 1\n            }\n          });\n          postAction = () => __awaiter(this, void 0, void 0, function* () {\n            const onLeave = this.engine.client.onLeave;\n            if (onLeave) {\n              onLeave(new LeaveRequest({\n                reason: DisconnectReason.CLIENT_INITIATED,\n                action: LeaveRequest_Action.RECONNECT\n              }));\n            }\n          });\n          break;\n        case 'subscriber-bandwidth':\n          if (arg === undefined || typeof arg !== 'number') {\n            throw new Error('subscriber-bandwidth requires a number as argument');\n          }\n          req = new SimulateScenario({\n            scenario: {\n              case: 'subscriberBandwidth',\n              value: BigInt(arg)\n            }\n          });\n          break;\n        case 'leave-full-reconnect':\n          req = new SimulateScenario({\n            scenario: {\n              case: 'leaveRequestFullReconnect',\n              value: true\n            }\n          });\n      }\n      if (req) {\n        yield this.engine.client.sendSimulateScenario(req);\n        yield postAction();\n      }\n    });\n  }\n  /**\n   * Returns true if audio playback is enabled\n   */\n  get canPlaybackAudio() {\n    return this.audioEnabled;\n  }\n  /**\n   * Returns true if video playback is enabled\n   */\n  get canPlaybackVideo() {\n    return !this.isVideoPlaybackBlocked;\n  }\n  getActiveDevice(kind) {\n    return this.localParticipant.activeDeviceMap.get(kind);\n  }\n  /**\n   * Switches all active devices used in this room to the given device.\n   *\n   * Note: setting AudioOutput is not supported on some browsers. See [setSinkId](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId#browser_compatibility)\n   *\n   * @param kind use `videoinput` for camera track,\n   *  `audioinput` for microphone track,\n   *  `audiooutput` to set speaker for all incoming audio tracks\n   * @param deviceId\n   */\n  switchActiveDevice(kind_1, deviceId_1) {\n    return __awaiter(this, arguments, void 0, function (kind, deviceId) {\n      var _this3 = this;\n      let exact = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return function* () {\n        var _a, _b, _c;\n        var _d;\n        let deviceHasChanged = false;\n        let success = true;\n        const deviceConstraint = exact ? {\n          exact: deviceId\n        } : deviceId;\n        if (kind === 'audioinput') {\n          const prevDeviceId = _this3.options.audioCaptureDefaults.deviceId;\n          _this3.options.audioCaptureDefaults.deviceId = deviceConstraint;\n          deviceHasChanged = prevDeviceId !== deviceConstraint;\n          const tracks = Array.from(_this3.localParticipant.audioTrackPublications.values()).filter(track => track.source === Track.Source.Microphone);\n          try {\n            success = (yield Promise.all(tracks.map(t => {\n              var _a;\n              return (_a = t.audioTrack) === null || _a === void 0 ? void 0 : _a.setDeviceId(deviceConstraint);\n            }))).every(val => val === true);\n          } catch (e) {\n            _this3.options.audioCaptureDefaults.deviceId = prevDeviceId;\n            throw e;\n          }\n        } else if (kind === 'videoinput') {\n          const prevDeviceId = _this3.options.videoCaptureDefaults.deviceId;\n          _this3.options.videoCaptureDefaults.deviceId = deviceConstraint;\n          deviceHasChanged = prevDeviceId !== deviceConstraint;\n          const tracks = Array.from(_this3.localParticipant.videoTrackPublications.values()).filter(track => track.source === Track.Source.Camera);\n          try {\n            success = (yield Promise.all(tracks.map(t => {\n              var _a;\n              return (_a = t.videoTrack) === null || _a === void 0 ? void 0 : _a.setDeviceId(deviceConstraint);\n            }))).every(val => val === true);\n          } catch (e) {\n            _this3.options.videoCaptureDefaults.deviceId = prevDeviceId;\n            throw e;\n          }\n        } else if (kind === 'audiooutput') {\n          if (!supportsSetSinkId() && !_this3.options.webAudioMix || _this3.options.webAudioMix && _this3.audioContext && !('setSinkId' in _this3.audioContext)) {\n            throw new Error('cannot switch audio output, setSinkId not supported');\n          }\n          if (_this3.options.webAudioMix) {\n            // setting `default` for web audio output doesn't work, so we need to normalize the id before\n            deviceId = (_a = yield DeviceManager.getInstance().normalizeDeviceId('audiooutput', deviceId)) !== null && _a !== void 0 ? _a : '';\n          }\n          (_b = (_d = _this3.options).audioOutput) !== null && _b !== void 0 ? _b : _d.audioOutput = {};\n          const prevDeviceId = _this3.options.audioOutput.deviceId;\n          _this3.options.audioOutput.deviceId = deviceId;\n          deviceHasChanged = prevDeviceId !== deviceConstraint;\n          try {\n            if (_this3.options.webAudioMix) {\n              // @ts-expect-error setSinkId is not yet in the typescript type of AudioContext\n              (_c = _this3.audioContext) === null || _c === void 0 ? void 0 : _c.setSinkId(deviceId);\n            }\n            // also set audio output on all audio elements, even if webAudioMix is enabled in order to workaround echo cancellation not working on chrome with non-default output devices\n            // see https://issues.chromium.org/issues/40252911#comment7\n            yield Promise.all(Array.from(_this3.remoteParticipants.values()).map(p => p.setAudioOutput({\n              deviceId\n            })));\n          } catch (e) {\n            _this3.options.audioOutput.deviceId = prevDeviceId;\n            throw e;\n          }\n        }\n        if (deviceHasChanged && success) {\n          _this3.localParticipant.activeDeviceMap.set(kind, deviceId);\n          _this3.emit(RoomEvent.ActiveDeviceChanged, kind, deviceId);\n        }\n        return success;\n      }();\n    });\n  }\n  setupLocalParticipantEvents() {\n    this.localParticipant.on(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged).on(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged).on(ParticipantEvent.AttributesChanged, this.onLocalAttributesChanged).on(ParticipantEvent.TrackMuted, this.onLocalTrackMuted).on(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted).on(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished).on(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished).on(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged).on(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError).on(ParticipantEvent.AudioStreamAcquired, this.startAudio).on(ParticipantEvent.ParticipantPermissionsChanged, this.onLocalParticipantPermissionsChanged);\n  }\n  recreateEngine() {\n    var _a;\n    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n    /* @ts-ignore */\n    this.engine = undefined;\n    this.isResuming = false;\n    // clear out existing remote participants, since they may have attached\n    // the old engine\n    this.remoteParticipants.clear();\n    this.sidToIdentity.clear();\n    this.bufferedEvents = [];\n    this.maybeCreateEngine();\n  }\n  onTrackAdded(mediaTrack, stream, receiver) {\n    // don't fire onSubscribed when connecting\n    // WebRTC fires onTrack as soon as setRemoteDescription is called on the offer\n    // at that time, ICE connectivity has not been established so the track is not\n    // technically subscribed.\n    // We'll defer these events until when the room is connected or eventually disconnected.\n    if (this.state === ConnectionState.Connecting || this.state === ConnectionState.Reconnecting) {\n      const reconnectedHandler = () => {\n        this.onTrackAdded(mediaTrack, stream, receiver);\n        cleanup();\n      };\n      const cleanup = () => {\n        this.off(RoomEvent.Reconnected, reconnectedHandler);\n        this.off(RoomEvent.Connected, reconnectedHandler);\n        this.off(RoomEvent.Disconnected, cleanup);\n      };\n      this.once(RoomEvent.Reconnected, reconnectedHandler);\n      this.once(RoomEvent.Connected, reconnectedHandler);\n      this.once(RoomEvent.Disconnected, cleanup);\n      return;\n    }\n    if (this.state === ConnectionState.Disconnected) {\n      this.log.warn('skipping incoming track after Room disconnected', this.logContext);\n      return;\n    }\n    const parts = unpackStreamId(stream.id);\n    const participantSid = parts[0];\n    let streamId = parts[1];\n    let trackId = mediaTrack.id;\n    // firefox will get streamId (pID|trackId) instead of (pID|streamId) as it doesn't support sync tracks by stream\n    // and generates its own track id instead of infer from sdp track id.\n    if (streamId && streamId.startsWith('TR')) trackId = streamId;\n    if (participantSid === this.localParticipant.sid) {\n      this.log.warn('tried to create RemoteParticipant for local participant', this.logContext);\n      return;\n    }\n    const participant = Array.from(this.remoteParticipants.values()).find(p => p.sid === participantSid);\n    if (!participant) {\n      this.log.error(\"Tried to add a track for a participant, that's not present. Sid: \".concat(participantSid), this.logContext);\n      return;\n    }\n    let adaptiveStreamSettings;\n    if (this.options.adaptiveStream) {\n      if (typeof this.options.adaptiveStream === 'object') {\n        adaptiveStreamSettings = this.options.adaptiveStream;\n      } else {\n        adaptiveStreamSettings = {};\n      }\n    }\n    participant.addSubscribedMediaTrack(mediaTrack, trackId, stream, receiver, adaptiveStreamSettings);\n  }\n  handleDisconnect() {\n    let shouldStopTracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let reason = arguments.length > 1 ? arguments[1] : undefined;\n    var _a;\n    this.clearConnectionReconcile();\n    this.isResuming = false;\n    this.bufferedEvents = [];\n    if (this.state === ConnectionState.Disconnected) {\n      return;\n    }\n    this.regionUrl = undefined;\n    try {\n      this.remoteParticipants.forEach(p => {\n        p.trackPublications.forEach(pub => {\n          p.unpublishTrack(pub.trackSid);\n        });\n      });\n      this.localParticipant.trackPublications.forEach(pub => {\n        var _a, _b;\n        if (pub.track) {\n          this.localParticipant.unpublishTrack(pub.track, shouldStopTracks);\n        }\n        if (shouldStopTracks) {\n          (_a = pub.track) === null || _a === void 0 ? void 0 : _a.detach();\n          (_b = pub.track) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n      });\n      this.localParticipant.off(ParticipantEvent.ParticipantMetadataChanged, this.onLocalParticipantMetadataChanged).off(ParticipantEvent.ParticipantNameChanged, this.onLocalParticipantNameChanged).off(ParticipantEvent.AttributesChanged, this.onLocalAttributesChanged).off(ParticipantEvent.TrackMuted, this.onLocalTrackMuted).off(ParticipantEvent.TrackUnmuted, this.onLocalTrackUnmuted).off(ParticipantEvent.LocalTrackPublished, this.onLocalTrackPublished).off(ParticipantEvent.LocalTrackUnpublished, this.onLocalTrackUnpublished).off(ParticipantEvent.ConnectionQualityChanged, this.onLocalConnectionQualityChanged).off(ParticipantEvent.MediaDevicesError, this.onMediaDevicesError).off(ParticipantEvent.AudioStreamAcquired, this.startAudio).off(ParticipantEvent.ParticipantPermissionsChanged, this.onLocalParticipantPermissionsChanged);\n      this.localParticipant.trackPublications.clear();\n      this.localParticipant.videoTrackPublications.clear();\n      this.localParticipant.audioTrackPublications.clear();\n      this.remoteParticipants.clear();\n      this.sidToIdentity.clear();\n      this.activeSpeakers = [];\n      if (this.audioContext && typeof this.options.webAudioMix === 'boolean') {\n        this.audioContext.close();\n        this.audioContext = undefined;\n      }\n      if (isWeb()) {\n        window.removeEventListener('beforeunload', this.onPageLeave);\n        window.removeEventListener('pagehide', this.onPageLeave);\n        window.removeEventListener('freeze', this.onPageLeave);\n        (_a = navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.removeEventListener('devicechange', this.handleDeviceChange);\n      }\n    } finally {\n      this.setAndEmitConnectionState(ConnectionState.Disconnected);\n      this.emit(RoomEvent.Disconnected, reason);\n    }\n  }\n  handleParticipantDisconnected(identity, participant) {\n    // remove and send event\n    this.remoteParticipants.delete(identity);\n    if (!participant) {\n      return;\n    }\n    participant.trackPublications.forEach(publication => {\n      participant.unpublishTrack(publication.trackSid, true);\n    });\n    this.emit(RoomEvent.ParticipantDisconnected, participant);\n  }\n  acquireAudioContext() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      if (typeof this.options.webAudioMix !== 'boolean' && this.options.webAudioMix.audioContext) {\n        // override audio context with custom audio context if supplied by user\n        this.audioContext = this.options.webAudioMix.audioContext;\n      } else if (!this.audioContext || this.audioContext.state === 'closed') {\n        // by using an AudioContext, it reduces lag on audio elements\n        // https://stackoverflow.com/questions/9811429/html5-audio-tag-on-safari-has-a-delay/54119854#54119854\n        this.audioContext = (_a = getNewAudioContext()) !== null && _a !== void 0 ? _a : undefined;\n      }\n      if (this.audioContext && this.audioContext.state === 'suspended') {\n        // for iOS a newly created AudioContext is always in `suspended` state.\n        // we try our best to resume the context here, if that doesn't work, we just continue with regular processing\n        try {\n          yield this.audioContext.resume();\n        } catch (e) {\n          this.log.warn('Could not resume audio context', Object.assign(Object.assign({}, this.logContext), {\n            error: e\n          }));\n        }\n      }\n      if (this.options.webAudioMix) {\n        this.remoteParticipants.forEach(participant => participant.setAudioContext(this.audioContext));\n      }\n      this.localParticipant.setAudioContext(this.audioContext);\n      const newContextIsRunning = ((_b = this.audioContext) === null || _b === void 0 ? void 0 : _b.state) === 'running';\n      if (newContextIsRunning !== this.canPlaybackAudio) {\n        this.audioEnabled = newContextIsRunning;\n        this.emit(RoomEvent.AudioPlaybackStatusChanged, newContextIsRunning);\n      }\n    });\n  }\n  createParticipant(identity, info) {\n    var _a;\n    let participant;\n    if (info) {\n      participant = RemoteParticipant.fromParticipantInfo(this.engine.client, info, {\n        loggerContextCb: () => this.logContext,\n        loggerName: this.options.loggerName\n      });\n    } else {\n      participant = new RemoteParticipant(this.engine.client, '', identity, undefined, undefined, {\n        loggerContextCb: () => this.logContext,\n        loggerName: this.options.loggerName\n      });\n    }\n    if (this.options.webAudioMix) {\n      participant.setAudioContext(this.audioContext);\n    }\n    if ((_a = this.options.audioOutput) === null || _a === void 0 ? void 0 : _a.deviceId) {\n      participant.setAudioOutput(this.options.audioOutput).catch(e => this.log.warn(\"Could not set audio output: \".concat(e.message), this.logContext));\n    }\n    return participant;\n  }\n  getOrCreateParticipant(identity, info) {\n    if (this.remoteParticipants.has(identity)) {\n      const existingParticipant = this.remoteParticipants.get(identity);\n      if (info) {\n        const wasUpdated = existingParticipant.updateInfo(info);\n        if (wasUpdated) {\n          this.sidToIdentity.set(info.sid, info.identity);\n        }\n      }\n      return existingParticipant;\n    }\n    const participant = this.createParticipant(identity, info);\n    this.remoteParticipants.set(identity, participant);\n    this.sidToIdentity.set(info.sid, info.identity);\n    // if we have valid info and the participant wasn't in the map before, we can assume the participant is new\n    // firing here to make sure that `ParticipantConnected` fires before the initial track events\n    this.emitWhenConnected(RoomEvent.ParticipantConnected, participant);\n    // also forward events\n    // trackPublished is only fired for tracks added after both local participant\n    // and remote participant joined the room\n    participant.on(ParticipantEvent.TrackPublished, trackPublication => {\n      this.emitWhenConnected(RoomEvent.TrackPublished, trackPublication, participant);\n    }).on(ParticipantEvent.TrackSubscribed, (track, publication) => {\n      // monitor playback status\n      if (track.kind === Track.Kind.Audio) {\n        track.on(TrackEvent.AudioPlaybackStarted, this.handleAudioPlaybackStarted);\n        track.on(TrackEvent.AudioPlaybackFailed, this.handleAudioPlaybackFailed);\n      } else if (track.kind === Track.Kind.Video) {\n        track.on(TrackEvent.VideoPlaybackFailed, this.handleVideoPlaybackFailed);\n        track.on(TrackEvent.VideoPlaybackStarted, this.handleVideoPlaybackStarted);\n      }\n      this.emit(RoomEvent.TrackSubscribed, track, publication, participant);\n    }).on(ParticipantEvent.TrackUnpublished, publication => {\n      this.emit(RoomEvent.TrackUnpublished, publication, participant);\n    }).on(ParticipantEvent.TrackUnsubscribed, (track, publication) => {\n      this.emit(RoomEvent.TrackUnsubscribed, track, publication, participant);\n    }).on(ParticipantEvent.TrackSubscriptionFailed, sid => {\n      this.emit(RoomEvent.TrackSubscriptionFailed, sid, participant);\n    }).on(ParticipantEvent.TrackMuted, pub => {\n      this.emitWhenConnected(RoomEvent.TrackMuted, pub, participant);\n    }).on(ParticipantEvent.TrackUnmuted, pub => {\n      this.emitWhenConnected(RoomEvent.TrackUnmuted, pub, participant);\n    }).on(ParticipantEvent.ParticipantMetadataChanged, metadata => {\n      this.emitWhenConnected(RoomEvent.ParticipantMetadataChanged, metadata, participant);\n    }).on(ParticipantEvent.ParticipantNameChanged, name => {\n      this.emitWhenConnected(RoomEvent.ParticipantNameChanged, name, participant);\n    }).on(ParticipantEvent.AttributesChanged, changedAttributes => {\n      this.emitWhenConnected(RoomEvent.ParticipantAttributesChanged, changedAttributes, participant);\n    }).on(ParticipantEvent.ConnectionQualityChanged, quality => {\n      this.emitWhenConnected(RoomEvent.ConnectionQualityChanged, quality, participant);\n    }).on(ParticipantEvent.ParticipantPermissionsChanged, prevPermissions => {\n      this.emitWhenConnected(RoomEvent.ParticipantPermissionsChanged, prevPermissions, participant);\n    }).on(ParticipantEvent.TrackSubscriptionStatusChanged, (pub, status) => {\n      this.emitWhenConnected(RoomEvent.TrackSubscriptionStatusChanged, pub, status, participant);\n    }).on(ParticipantEvent.TrackSubscriptionFailed, (trackSid, error) => {\n      this.emit(RoomEvent.TrackSubscriptionFailed, trackSid, participant, error);\n    }).on(ParticipantEvent.TrackSubscriptionPermissionChanged, (pub, status) => {\n      this.emitWhenConnected(RoomEvent.TrackSubscriptionPermissionChanged, pub, status, participant);\n    });\n    // update info at the end after callbacks have been set up\n    if (info) {\n      participant.updateInfo(info);\n    }\n    return participant;\n  }\n  sendSyncState() {\n    const remoteTracks = Array.from(this.remoteParticipants.values()).reduce((acc, participant) => {\n      acc.push(...participant.getTrackPublications()); // FIXME would be nice to have this return RemoteTrackPublications directly instead of the type cast\n      return acc;\n    }, []);\n    const localTracks = this.localParticipant.getTrackPublications(); // FIXME would be nice to have this return LocalTrackPublications directly instead of the type cast\n    this.engine.sendSyncState(remoteTracks, localTracks);\n  }\n  /**\n   * After resuming, we'll need to notify the server of the current\n   * subscription settings.\n   */\n  updateSubscriptions() {\n    for (const p of this.remoteParticipants.values()) {\n      for (const pub of p.videoTrackPublications.values()) {\n        if (pub.isSubscribed && pub instanceof RemoteTrackPublication) {\n          pub.emitTrackUpdate();\n        }\n      }\n    }\n  }\n  getRemoteParticipantBySid(sid) {\n    const identity = this.sidToIdentity.get(sid);\n    if (identity) {\n      return this.remoteParticipants.get(identity);\n    }\n  }\n  registerConnectionReconcile() {\n    this.clearConnectionReconcile();\n    let consecutiveFailures = 0;\n    this.connectionReconcileInterval = CriticalTimers.setInterval(() => {\n      if (\n      // ensure we didn't tear it down\n      !this.engine ||\n      // engine detected close, but Room missed it\n      this.engine.isClosed ||\n      // transports failed without notifying engine\n      !this.engine.verifyTransport()) {\n        consecutiveFailures++;\n        this.log.warn('detected connection state mismatch', Object.assign(Object.assign({}, this.logContext), {\n          numFailures: consecutiveFailures,\n          engine: {\n            closed: this.engine.isClosed,\n            transportsConnected: this.engine.verifyTransport()\n          }\n        }));\n        if (consecutiveFailures >= 3) {\n          this.recreateEngine();\n          this.handleDisconnect(this.options.stopLocalTrackOnUnpublish, DisconnectReason.STATE_MISMATCH);\n        }\n      } else {\n        consecutiveFailures = 0;\n      }\n    }, connectionReconcileFrequency);\n  }\n  clearConnectionReconcile() {\n    if (this.connectionReconcileInterval) {\n      CriticalTimers.clearInterval(this.connectionReconcileInterval);\n    }\n  }\n  setAndEmitConnectionState(state) {\n    if (state === this.state) {\n      // unchanged\n      return false;\n    }\n    this.state = state;\n    this.emit(RoomEvent.ConnectionStateChanged, this.state);\n    return true;\n  }\n  emitBufferedEvents() {\n    this.bufferedEvents.forEach(_ref2 => {\n      let [ev, args] = _ref2;\n      this.emit(ev, ...args);\n    });\n    this.bufferedEvents = [];\n  }\n  emitWhenConnected(event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    if (this.state === ConnectionState.Reconnecting || this.isResuming || !this.engine || this.engine.pendingReconnect) {\n      // in case the room is reconnecting, buffer the events by firing them later after emitting RoomEvent.Reconnected\n      this.bufferedEvents.push([event, args]);\n    } else if (this.state === ConnectionState.Connected) {\n      return this.emit(event, ...args);\n    }\n    return false;\n  }\n  /**\n   * Allows to populate a room with simulated participants.\n   * No actual connection to a server will be established, all state is\n   * @experimental\n   */\n  simulateParticipants(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      const publishOptions = Object.assign({\n        audio: true,\n        video: true,\n        useRealTracks: false\n      }, options.publish);\n      const participantOptions = Object.assign({\n        count: 9,\n        audio: false,\n        video: true,\n        aspectRatios: [1.66, 1.7, 1.3]\n      }, options.participants);\n      this.handleDisconnect();\n      this.roomInfo = new Room$1({\n        sid: 'RM_SIMULATED',\n        name: 'simulated-room',\n        emptyTimeout: 0,\n        maxParticipants: 0,\n        creationTime: protoInt64.parse(new Date().getTime()),\n        metadata: '',\n        numParticipants: 1,\n        numPublishers: 1,\n        turnPassword: '',\n        enabledCodecs: [],\n        activeRecording: false\n      });\n      this.localParticipant.updateInfo(new ParticipantInfo({\n        identity: 'simulated-local',\n        name: 'local-name'\n      }));\n      this.setupLocalParticipantEvents();\n      this.emit(RoomEvent.SignalConnected);\n      this.emit(RoomEvent.Connected);\n      this.setAndEmitConnectionState(ConnectionState.Connected);\n      if (publishOptions.video) {\n        const camPub = new LocalTrackPublication(Track.Kind.Video, new TrackInfo({\n          source: TrackSource.CAMERA,\n          sid: Math.floor(Math.random() * 10000).toString(),\n          type: TrackType.AUDIO,\n          name: 'video-dummy'\n        }), new LocalVideoTrack(publishOptions.useRealTracks ? (yield window.navigator.mediaDevices.getUserMedia({\n          video: true\n        })).getVideoTracks()[0] : createDummyVideoStreamTrack(160 * ((_a = participantOptions.aspectRatios[0]) !== null && _a !== void 0 ? _a : 1), 160, true, true), undefined, false, {\n          loggerName: this.options.loggerName,\n          loggerContextCb: () => this.logContext\n        }), {\n          loggerName: this.options.loggerName,\n          loggerContextCb: () => this.logContext\n        });\n        // @ts-ignore\n        this.localParticipant.addTrackPublication(camPub);\n        this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, camPub);\n      }\n      if (publishOptions.audio) {\n        const audioPub = new LocalTrackPublication(Track.Kind.Audio, new TrackInfo({\n          source: TrackSource.MICROPHONE,\n          sid: Math.floor(Math.random() * 10000).toString(),\n          type: TrackType.AUDIO\n        }), new LocalAudioTrack(publishOptions.useRealTracks ? (yield navigator.mediaDevices.getUserMedia({\n          audio: true\n        })).getAudioTracks()[0] : getEmptyAudioStreamTrack(), undefined, false, this.audioContext, {\n          loggerName: this.options.loggerName,\n          loggerContextCb: () => this.logContext\n        }), {\n          loggerName: this.options.loggerName,\n          loggerContextCb: () => this.logContext\n        });\n        // @ts-ignore\n        this.localParticipant.addTrackPublication(audioPub);\n        this.localParticipant.emit(ParticipantEvent.LocalTrackPublished, audioPub);\n      }\n      for (let i = 0; i < participantOptions.count - 1; i += 1) {\n        let info = new ParticipantInfo({\n          sid: Math.floor(Math.random() * 10000).toString(),\n          identity: \"simulated-\".concat(i),\n          state: ParticipantInfo_State.ACTIVE,\n          tracks: [],\n          joinedAt: protoInt64.parse(Date.now())\n        });\n        const p = this.getOrCreateParticipant(info.identity, info);\n        if (participantOptions.video) {\n          const dummyVideo = createDummyVideoStreamTrack(160 * ((_b = participantOptions.aspectRatios[i % participantOptions.aspectRatios.length]) !== null && _b !== void 0 ? _b : 1), 160, false, true);\n          const videoTrack = new TrackInfo({\n            source: TrackSource.CAMERA,\n            sid: Math.floor(Math.random() * 10000).toString(),\n            type: TrackType.AUDIO\n          });\n          p.addSubscribedMediaTrack(dummyVideo, videoTrack.sid, new MediaStream([dummyVideo]), new RTCRtpReceiver());\n          info.tracks = [...info.tracks, videoTrack];\n        }\n        if (participantOptions.audio) {\n          const dummyTrack = getEmptyAudioStreamTrack();\n          const audioTrack = new TrackInfo({\n            source: TrackSource.MICROPHONE,\n            sid: Math.floor(Math.random() * 10000).toString(),\n            type: TrackType.AUDIO\n          });\n          p.addSubscribedMediaTrack(dummyTrack, audioTrack.sid, new MediaStream([dummyTrack]), new RTCRtpReceiver());\n          info.tracks = [...info.tracks, audioTrack];\n        }\n        p.updateInfo(info);\n      }\n    });\n  }\n  // /** @internal */\n  emit(event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    // active speaker updates are too spammy\n    if (event !== RoomEvent.ActiveSpeakersChanged) {\n      // only extract logContext from arguments in order to avoid logging the whole object tree\n      const minimizedArgs = mapArgs(args).filter(arg => arg !== undefined);\n      this.log.debug(\"room event \".concat(event), Object.assign(Object.assign({}, this.logContext), {\n        event,\n        args: minimizedArgs\n      }));\n    }\n    return super.emit(event, ...args);\n  }\n}\nfunction mapArgs(args) {\n  return args.map(arg => {\n    if (!arg) {\n      return;\n    }\n    if (Array.isArray(arg)) {\n      return mapArgs(arg);\n    }\n    if (typeof arg === 'object') {\n      return 'logContext' in arg && arg.logContext;\n    }\n    return arg;\n  });\n}\n\nvar CheckStatus;\n(function (CheckStatus) {\n  CheckStatus[CheckStatus[\"IDLE\"] = 0] = \"IDLE\";\n  CheckStatus[CheckStatus[\"RUNNING\"] = 1] = \"RUNNING\";\n  CheckStatus[CheckStatus[\"SKIPPED\"] = 2] = \"SKIPPED\";\n  CheckStatus[CheckStatus[\"SUCCESS\"] = 3] = \"SUCCESS\";\n  CheckStatus[CheckStatus[\"FAILED\"] = 4] = \"FAILED\";\n})(CheckStatus || (CheckStatus = {}));\nclass Checker extends eventsExports.EventEmitter {\n  constructor(url, token) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super();\n    this.status = CheckStatus.IDLE;\n    this.logs = [];\n    this.errorsAsWarnings = false;\n    this.url = url;\n    this.token = token;\n    this.name = this.constructor.name;\n    this.room = new Room(options.roomOptions);\n    this.connectOptions = options.connectOptions;\n    if (options.errorsAsWarnings) {\n      this.errorsAsWarnings = options.errorsAsWarnings;\n    }\n  }\n  run(onComplete) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.status !== CheckStatus.IDLE) {\n        throw Error('check is running already');\n      }\n      this.setStatus(CheckStatus.RUNNING);\n      try {\n        yield this.perform();\n      } catch (err) {\n        if (err instanceof Error) {\n          if (this.errorsAsWarnings) {\n            this.appendWarning(err.message);\n          } else {\n            this.appendError(err.message);\n          }\n        }\n      }\n      yield this.disconnect();\n      // sleep for a bit to ensure disconnect\n      yield new Promise(resolve => setTimeout(resolve, 500));\n      // @ts-ignore\n      if (this.status !== CheckStatus.SKIPPED) {\n        this.setStatus(this.isSuccess() ? CheckStatus.SUCCESS : CheckStatus.FAILED);\n      }\n      if (onComplete) {\n        onComplete();\n      }\n      return this.getInfo();\n    });\n  }\n  isSuccess() {\n    return !this.logs.some(l => l.level === 'error');\n  }\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.room.state === ConnectionState.Connected) {\n        return this.room;\n      }\n      yield this.room.connect(this.url, this.token);\n      return this.room;\n    });\n  }\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.room && this.room.state !== ConnectionState.Disconnected) {\n        yield this.room.disconnect();\n        // wait for it to go through\n        yield new Promise(resolve => setTimeout(resolve, 500));\n      }\n    });\n  }\n  skip() {\n    this.setStatus(CheckStatus.SKIPPED);\n  }\n  appendMessage(message) {\n    this.logs.push({\n      level: 'info',\n      message\n    });\n    this.emit('update', this.getInfo());\n  }\n  appendWarning(message) {\n    this.logs.push({\n      level: 'warning',\n      message\n    });\n    this.emit('update', this.getInfo());\n  }\n  appendError(message) {\n    this.logs.push({\n      level: 'error',\n      message\n    });\n    this.emit('update', this.getInfo());\n  }\n  setStatus(status) {\n    this.status = status;\n    this.emit('update', this.getInfo());\n  }\n  get engine() {\n    var _a;\n    return (_a = this.room) === null || _a === void 0 ? void 0 : _a.engine;\n  }\n  getInfo() {\n    return {\n      logs: this.logs,\n      name: this.name,\n      status: this.status,\n      description: this.description\n    };\n  }\n}\n\n/**\n * Creates a local video and audio track at the same time. When acquiring both\n * audio and video tracks together, it'll display a single permission prompt to\n * the user instead of two separate ones.\n * @param options\n */\nfunction createLocalTracks(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    var _a, _b;\n    // set default options to true\n    options !== null && options !== void 0 ? options : options = {};\n    (_a = options.audio) !== null && _a !== void 0 ? _a : options.audio = true;\n    (_b = options.video) !== null && _b !== void 0 ? _b : options.video = true;\n    const opts = mergeDefaultOptions(options, audioDefaults, videoDefaults);\n    const constraints = constraintsForOptions(opts);\n    // Keep a reference to the promise on DeviceManager and await it in getLocalDevices()\n    // works around iOS Safari Bug https://bugs.webkit.org/show_bug.cgi?id=179363\n    const mediaPromise = navigator.mediaDevices.getUserMedia(constraints);\n    if (options.audio) {\n      DeviceManager.userMediaPromiseMap.set('audioinput', mediaPromise);\n      mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('audioinput'));\n    }\n    if (options.video) {\n      DeviceManager.userMediaPromiseMap.set('videoinput', mediaPromise);\n      mediaPromise.catch(() => DeviceManager.userMediaPromiseMap.delete('videoinput'));\n    }\n    const stream = yield mediaPromise;\n    return Promise.all(stream.getTracks().map(mediaStreamTrack => __awaiter(this, void 0, void 0, function* () {\n      const isAudio = mediaStreamTrack.kind === 'audio';\n      let trackOptions = isAudio ? options.audio : options.video;\n      if (typeof trackOptions === 'boolean' || !trackOptions) {\n        trackOptions = {};\n      }\n      let trackConstraints;\n      const conOrBool = isAudio ? constraints.audio : constraints.video;\n      if (typeof conOrBool !== 'boolean') {\n        trackConstraints = conOrBool;\n      }\n      // update the constraints with the device id the user gave permissions to in the permission prompt\n      // otherwise each track restart (e.g. mute - unmute) will try to initialize the device again -> causing additional permission prompts\n      if (trackConstraints) {\n        trackConstraints.deviceId = mediaStreamTrack.getSettings().deviceId;\n      } else {\n        trackConstraints = {\n          deviceId: mediaStreamTrack.getSettings().deviceId\n        };\n      }\n      const track = mediaTrackToLocalTrack(mediaStreamTrack, trackConstraints);\n      if (track.kind === Track.Kind.Video) {\n        track.source = Track.Source.Camera;\n      } else if (track.kind === Track.Kind.Audio) {\n        track.source = Track.Source.Microphone;\n      }\n      track.mediaStream = stream;\n      if (trackOptions.processor) {\n        if (track instanceof LocalAudioTrack) {\n          yield track.setProcessor(trackOptions.processor);\n        } else if (track instanceof LocalVideoTrack) {\n          yield track.setProcessor(trackOptions.processor);\n        }\n      }\n      return track;\n    })));\n  });\n}\n/**\n * Creates a [[LocalVideoTrack]] with getUserMedia()\n * @param options\n */\nfunction createLocalVideoTrack(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const tracks = yield createLocalTracks({\n      audio: false,\n      video: options\n    });\n    return tracks[0];\n  });\n}\nfunction createLocalAudioTrack(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const tracks = yield createLocalTracks({\n      audio: options,\n      video: false\n    });\n    return tracks[0];\n  });\n}\n/**\n * Creates a screen capture tracks with getDisplayMedia().\n * A LocalVideoTrack is always created and returned.\n * If { audio: true }, and the browser supports audio capture, a LocalAudioTrack is also created.\n */\nfunction createLocalScreenTracks(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options === undefined) {\n      options = {};\n    }\n    if (options.resolution === undefined && !isSafari17()) {\n      options.resolution = ScreenSharePresets.h1080fps30.resolution;\n    }\n    if (navigator.mediaDevices.getDisplayMedia === undefined) {\n      throw new DeviceUnsupportedError('getDisplayMedia not supported');\n    }\n    const constraints = screenCaptureToDisplayMediaStreamOptions(options);\n    const stream = yield navigator.mediaDevices.getDisplayMedia(constraints);\n    const tracks = stream.getVideoTracks();\n    if (tracks.length === 0) {\n      throw new TrackInvalidError('no video track found');\n    }\n    const screenVideo = new LocalVideoTrack(tracks[0], undefined, false);\n    screenVideo.source = Track.Source.ScreenShare;\n    const localTracks = [screenVideo];\n    if (stream.getAudioTracks().length > 0) {\n      const screenAudio = new LocalAudioTrack(stream.getAudioTracks()[0], undefined, false);\n      screenAudio.source = Track.Source.ScreenShareAudio;\n      localTracks.push(screenAudio);\n    }\n    return localTracks;\n  });\n}\n\nclass PublishAudioCheck extends Checker {\n  get description() {\n    return 'Can publish audio';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const room = yield this.connect();\n      const track = yield createLocalAudioTrack();\n      room.localParticipant.publishTrack(track);\n      // wait for a few seconds to publish\n      yield new Promise(resolve => setTimeout(resolve, 3000));\n      // verify RTC stats that it's publishing\n      const stats = yield (_a = track.sender) === null || _a === void 0 ? void 0 : _a.getStats();\n      if (!stats) {\n        throw new Error('Could not get RTCStats');\n      }\n      let numPackets = 0;\n      stats.forEach(stat => {\n        if (stat.type === 'outbound-rtp' && (stat.kind === 'audio' || !stat.kind && stat.mediaType === 'audio')) {\n          numPackets = stat.packetsSent;\n        }\n      });\n      if (numPackets === 0) {\n        throw new Error('Could not determine packets are sent');\n      }\n      this.appendMessage(\"published \".concat(numPackets, \" audio packets\"));\n    });\n  }\n}\n\nclass PublishVideoCheck extends Checker {\n  get description() {\n    return 'Can publish video';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const room = yield this.connect();\n      const track = yield createLocalVideoTrack();\n      room.localParticipant.publishTrack(track);\n      // wait for a few seconds to publish\n      yield new Promise(resolve => setTimeout(resolve, 5000));\n      // verify RTC stats that it's publishing\n      const stats = yield (_a = track.sender) === null || _a === void 0 ? void 0 : _a.getStats();\n      if (!stats) {\n        throw new Error('Could not get RTCStats');\n      }\n      let numPackets = 0;\n      stats.forEach(stat => {\n        if (stat.type === 'outbound-rtp' && (stat.kind === 'video' || !stat.kind && stat.mediaType === 'video')) {\n          numPackets += stat.packetsSent;\n        }\n      });\n      if (numPackets === 0) {\n        throw new Error('Could not determine packets are sent');\n      }\n      this.appendMessage(\"published \".concat(numPackets, \" video packets\"));\n    });\n  }\n}\n\nclass ReconnectCheck extends Checker {\n  get description() {\n    return 'Resuming connection after interruption';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const room = yield this.connect();\n      let reconnectingTriggered = false;\n      let reconnected = false;\n      let reconnectResolver;\n      const reconnectTimeout = new Promise(resolve => {\n        setTimeout(resolve, 5000);\n        reconnectResolver = resolve;\n      });\n      const handleReconnecting = () => {\n        reconnectingTriggered = true;\n      };\n      room.on(RoomEvent.SignalReconnecting, handleReconnecting).on(RoomEvent.Reconnecting, handleReconnecting).on(RoomEvent.Reconnected, () => {\n        reconnected = true;\n        reconnectResolver(true);\n      });\n      (_a = room.engine.client.ws) === null || _a === void 0 ? void 0 : _a.close();\n      const onClose = room.engine.client.onClose;\n      if (onClose) {\n        onClose('');\n      }\n      yield reconnectTimeout;\n      if (!reconnectingTriggered) {\n        throw new Error('Did not attempt to reconnect');\n      } else if (!reconnected || room.state !== ConnectionState.Connected) {\n        this.appendWarning('reconnection is only possible in Redis-based configurations');\n        throw new Error('Not able to reconnect');\n      }\n    });\n  }\n}\n\nclass TURNCheck extends Checker {\n  get description() {\n    return 'Can connect via TURN';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n      const signalClient = new SignalClient();\n      const joinRes = yield signalClient.join(this.url, this.token, {\n        autoSubscribe: true,\n        maxRetries: 0,\n        e2eeEnabled: false,\n        websocketTimeout: 15000\n      });\n      let hasTLS = false;\n      let hasTURN = false;\n      let hasSTUN = false;\n      for (let iceServer of joinRes.iceServers) {\n        for (let url of iceServer.urls) {\n          if (url.startsWith('turn:')) {\n            hasTURN = true;\n            hasSTUN = true;\n          } else if (url.startsWith('turns:')) {\n            hasTURN = true;\n            hasSTUN = true;\n            hasTLS = true;\n          }\n          if (url.startsWith('stun:')) {\n            hasSTUN = true;\n          }\n        }\n      }\n      if (!hasSTUN) {\n        this.appendWarning('No STUN servers configured on server side.');\n      } else if (hasTURN && !hasTLS) {\n        this.appendWarning('TURN is configured server side, but TURN/TLS is unavailable.');\n      }\n      yield signalClient.close();\n      if (((_b = (_a = this.connectOptions) === null || _a === void 0 ? void 0 : _a.rtcConfig) === null || _b === void 0 ? void 0 : _b.iceServers) || hasTURN) {\n        yield this.room.connect(this.url, this.token, {\n          rtcConfig: {\n            iceTransportPolicy: 'relay'\n          }\n        });\n      } else {\n        this.appendWarning('No TURN servers configured.');\n        this.skip();\n        yield new Promise(resolve => setTimeout(resolve, 0));\n      }\n    });\n  }\n}\n\nclass WebRTCCheck extends Checker {\n  get description() {\n    return 'Establishing WebRTC connection';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      let hasTcp = false;\n      let hasIpv4Udp = false;\n      this.room.on(RoomEvent.SignalConnected, () => {\n        const prevTrickle = this.room.engine.client.onTrickle;\n        this.room.engine.client.onTrickle = (sd, target) => {\n          if (sd.candidate) {\n            const candidate = new RTCIceCandidate(sd);\n            let str = \"\".concat(candidate.protocol, \" \").concat(candidate.address, \":\").concat(candidate.port, \" \").concat(candidate.type);\n            if (candidate.address) {\n              if (isIPPrivate(candidate.address)) {\n                str += ' (private)';\n              } else {\n                if (candidate.protocol === 'tcp' && candidate.tcpType === 'passive') {\n                  hasTcp = true;\n                  str += ' (passive)';\n                } else if (candidate.protocol === 'udp') {\n                  hasIpv4Udp = true;\n                }\n              }\n            }\n            this.appendMessage(str);\n          }\n          if (prevTrickle) {\n            prevTrickle(sd, target);\n          }\n        };\n        if (this.room.engine.pcManager) {\n          this.room.engine.pcManager.subscriber.onIceCandidateError = ev => {\n            if (ev instanceof RTCPeerConnectionIceErrorEvent) {\n              this.appendWarning(\"error with ICE candidate: \".concat(ev.errorCode, \" \").concat(ev.errorText, \" \").concat(ev.url));\n            }\n          };\n        }\n      });\n      try {\n        yield this.connect();\n        livekitLogger.info('now the room is connected');\n      } catch (err) {\n        this.appendWarning('ports need to be open on firewall in order to connect.');\n        throw err;\n      }\n      if (!hasTcp) {\n        this.appendWarning('Server is not configured for ICE/TCP');\n      }\n      if (!hasIpv4Udp) {\n        this.appendWarning('No public IPv4 UDP candidates were found. Your server is likely not configured correctly');\n      }\n    });\n  }\n}\nfunction isIPPrivate(address) {\n  const parts = address.split('.');\n  if (parts.length === 4) {\n    if (parts[0] === '10') {\n      return true;\n    } else if (parts[0] === '192' && parts[1] === '168') {\n      return true;\n    } else if (parts[0] === '172') {\n      const second = parseInt(parts[1], 10);\n      if (second >= 16 && second <= 31) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nclass WebSocketCheck extends Checker {\n  get description() {\n    return 'Connecting to signal connection via WebSocket';\n  }\n  perform() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n      if (this.url.startsWith('ws:') || this.url.startsWith('http:')) {\n        this.appendWarning('Server is insecure, clients may block connections to it');\n      }\n      let signalClient = new SignalClient();\n      const joinRes = yield signalClient.join(this.url, this.token, {\n        autoSubscribe: true,\n        maxRetries: 0,\n        e2eeEnabled: false,\n        websocketTimeout: 15000\n      });\n      this.appendMessage(\"Connected to server, version \".concat(joinRes.serverVersion, \".\"));\n      if (((_a = joinRes.serverInfo) === null || _a === void 0 ? void 0 : _a.edition) === ServerInfo_Edition.Cloud && ((_b = joinRes.serverInfo) === null || _b === void 0 ? void 0 : _b.region)) {\n        this.appendMessage(\"LiveKit Cloud: \".concat((_c = joinRes.serverInfo) === null || _c === void 0 ? void 0 : _c.region));\n      }\n      yield signalClient.close();\n    });\n  }\n}\n\nclass ConnectionCheck extends eventsExports.EventEmitter {\n  constructor(url, token) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super();\n    this.options = {};\n    this.checkResults = new Map();\n    this.url = url;\n    this.token = token;\n    this.options = options;\n  }\n  getNextCheckId() {\n    const nextId = this.checkResults.size;\n    this.checkResults.set(nextId, {\n      logs: [],\n      status: CheckStatus.IDLE,\n      name: '',\n      description: ''\n    });\n    return nextId;\n  }\n  updateCheck(checkId, info) {\n    this.checkResults.set(checkId, info);\n    this.emit('checkUpdate', checkId, info);\n  }\n  isSuccess() {\n    return Array.from(this.checkResults.values()).every(r => r.status !== CheckStatus.FAILED);\n  }\n  getResults() {\n    return Array.from(this.checkResults.values());\n  }\n  createAndRunCheck(check) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const checkId = this.getNextCheckId();\n      const test = new check(this.url, this.token, this.options);\n      const handleUpdate = info => {\n        this.updateCheck(checkId, info);\n      };\n      test.on('update', handleUpdate);\n      const result = yield test.run();\n      test.off('update', handleUpdate);\n      return result;\n    });\n  }\n  checkWebsocket() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(WebSocketCheck);\n    });\n  }\n  checkWebRTC() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(WebRTCCheck);\n    });\n  }\n  checkTURN() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(TURNCheck);\n    });\n  }\n  checkReconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(ReconnectCheck);\n    });\n  }\n  checkPublishAudio() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(PublishAudioCheck);\n    });\n  }\n  checkPublishVideo() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.createAndRunCheck(PublishVideoCheck);\n    });\n  }\n}\n\n/**\n * Try to analyze the local track to determine the facing mode of a track.\n *\n * @remarks\n * There is no property supported by all browsers to detect whether a video track originated from a user- or environment-facing camera device.\n * For this reason, we use the `facingMode` property when available, but will fall back on a string-based analysis of the device label to determine the facing mode.\n * If both methods fail, the default facing mode will be used.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode | MDN docs on facingMode}\n * @experimental\n */\nfunction facingModeFromLocalTrack(localTrack) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _a;\n  const track = localTrack instanceof LocalTrack ? localTrack.mediaStreamTrack : localTrack;\n  const trackSettings = track.getSettings();\n  let result = {\n    facingMode: (_a = options.defaultFacingMode) !== null && _a !== void 0 ? _a : 'user',\n    confidence: 'low'\n  };\n  // 1. Try to get facingMode from track settings.\n  if ('facingMode' in trackSettings) {\n    const rawFacingMode = trackSettings.facingMode;\n    livekitLogger.trace('rawFacingMode', {\n      rawFacingMode\n    });\n    if (rawFacingMode && typeof rawFacingMode === 'string' && isFacingModeValue(rawFacingMode)) {\n      result = {\n        facingMode: rawFacingMode,\n        confidence: 'high'\n      };\n    }\n  }\n  // 2. If we don't have a high confidence we try to get the facing mode from the device label.\n  if (['low', 'medium'].includes(result.confidence)) {\n    livekitLogger.trace(\"Try to get facing mode from device label: (\".concat(track.label, \")\"));\n    const labelAnalysisResult = facingModeFromDeviceLabel(track.label);\n    if (labelAnalysisResult !== undefined) {\n      result = labelAnalysisResult;\n    }\n  }\n  return result;\n}\nconst knownDeviceLabels = new Map([['obs virtual camera', {\n  facingMode: 'environment',\n  confidence: 'medium'\n}]]);\nconst knownDeviceLabelSections = new Map([['iphone', {\n  facingMode: 'environment',\n  confidence: 'medium'\n}], ['ipad', {\n  facingMode: 'environment',\n  confidence: 'medium'\n}]]);\n/**\n * Attempt to analyze the device label to determine the facing mode.\n *\n * @experimental\n */\nfunction facingModeFromDeviceLabel(deviceLabel) {\n  var _a;\n  const label = deviceLabel.trim().toLowerCase();\n  // Empty string is a valid device label but we can't infer anything from it.\n  if (label === '') {\n    return undefined;\n  }\n  // Can we match against widely known device labels.\n  if (knownDeviceLabels.has(label)) {\n    return knownDeviceLabels.get(label);\n  }\n  // Can we match against sections of the device label.\n  return (_a = Array.from(knownDeviceLabelSections.entries()).find(_ref => {\n    let [section] = _ref;\n    return label.includes(section);\n  })) === null || _a === void 0 ? void 0 : _a[1];\n}\nfunction isFacingModeValue(item) {\n  const allowedValues = ['user', 'environment', 'left', 'right'];\n  return item === undefined || allowedValues.includes(item);\n}\n\nexport { AudioPresets, BaseKeyProvider, CheckStatus, Checker, ConnectionCheck, ConnectionError, ConnectionQuality, ConnectionState, CriticalTimers, CryptorError, CryptorErrorReason, CryptorEvent, DataPacket_Kind, DefaultReconnectPolicy, DeviceUnsupportedError, DisconnectReason, EncryptionEvent, EngineEvent, ExternalE2EEKeyProvider, KeyHandlerEvent, KeyProviderEvent, LivekitError, LocalAudioTrack, LocalParticipant, LocalTrack, LocalTrackPublication, LocalVideoTrack, LogLevel, LoggerNames, MediaDeviceFailure, Mutex, NegotiationError, Participant, ParticipantEvent, ParticipantInfo_Kind as ParticipantKind, PublishDataError, RemoteAudioTrack, RemoteParticipant, RemoteTrack, RemoteTrackPublication, RemoteVideoTrack, Room, RoomEvent, ScreenSharePresets, SignalRequestError, SubscriptionError, Track, TrackEvent, TrackInvalidError, TrackPublication, UnexpectedConnectionState, UnsupportedServer, VideoPreset, VideoPresets, VideoPresets43, VideoQuality, attachToElement, createAudioAnalyser, createE2EEKey, createKeyMaterialFromBuffer, createKeyMaterialFromString, createLocalAudioTrack, createLocalScreenTracks, createLocalTracks, createLocalVideoTrack, deriveKeys, detachTrack, facingModeFromDeviceLabel, facingModeFromLocalTrack, getBrowser, getEmptyAudioStreamTrack, getEmptyVideoStreamTrack, getLogger, importKey, isBackupCodec, isBrowserSupported, isE2EESupported, isInsertableStreamSupported, isScriptTransformSupported, isVideoFrame, needsRbspUnescaping, parseRbsp, protocolVersion, ratchet, setLogExtension, setLogLevel, supportsAV1, supportsAdaptiveStream, supportsDynacast, supportsVP9, version, videoCodecs, writeRbsp };\n//# sourceMappingURL=livekit-client.esm.mjs.map\n","/**\n * Based over: https://mavlink.io/en/messages/common.html and https://mavlink.io/en/messages/ardupilotmega.html\n *\n */\n/* eslint-disable max-len */\n/**\n * Micro air vehicle / autopilot classes. This identifies the individual model.\n */\nexport enum MavAutopilot {\n  // Generic autopilot, full support for everything\n  MAV_AUTOPILOT_GENERIC = 'MAV_AUTOPILOT_GENERIC',\n  // Reserved for future use.\n  MAV_AUTOPILOT_RESERVED = 'MAV_AUTOPILOT_RESERVED',\n  // SLUGS autopilot, http://slugsuav.soe.ucsc.edu\n  MAV_AUTOPILOT_SLUGS = 'MAV_AUTOPILOT_SLUGS',\n  // ArduPilot - Plane/Copter/Rover/Sub/Tracker, https://ardupilot.org\n  MAV_AUTOPILOT_ARDUPILOTMEGA = 'MAV_AUTOPILOT_ARDUPILOTMEGA',\n  // OpenPilot, http://openpilot.org\n  MAV_AUTOPILOT_OPENPILOT = 'MAV_AUTOPILOT_OPENPILOT',\n  // Generic autopilot only supporting simple waypoints\n  MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY = 'MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY',\n  // Generic autopilot supporting waypoints and other simple navigation commands\n  MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY = 'MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY',\n  // Generic autopilot supporting the full mission command set\n  MAV_AUTOPILOT_GENERIC_MISSION_FULL = 'MAV_AUTOPILOT_GENERIC_MISSION_FULL',\n  // No valid autopilot, e.g. a GCS or other MAVLink component\n  MAV_AUTOPILOT_INVALID = 'MAV_AUTOPILOT_INVALID',\n  // PPZ UAV - http://nongnu.org/paparazzi\n  MAV_AUTOPILOT_PPZ = 'MAV_AUTOPILOT_PPZ',\n  // UAV Dev Board\n  MAV_AUTOPILOT_UDB = 'MAV_AUTOPILOT_UDB',\n  // FlexiPilot\n  MAV_AUTOPILOT_FP = 'MAV_AUTOPILOT_FP',\n  // PX4 Autopilot - http://px4.io/\n  MAV_AUTOPILOT_PX4 = 'MAV_AUTOPILOT_PX4',\n  // SMACCMPilot - http://smaccmpilot.org\n  MAV_AUTOPILOT_SMACCMPILOT = 'MAV_AUTOPILOT_SMACCMPILOT',\n  // AutoQuad -- http://autoquad.org\n  MAV_AUTOPILOT_AUTOQUAD = 'MAV_AUTOPILOT_AUTOQUAD',\n  // Armazila -- http://armazila.com\n  MAV_AUTOPILOT_ARMAZILA = 'MAV_AUTOPILOT_ARMAZILA',\n  // Aerob -- http://aerob.ru\n  MAV_AUTOPILOT_AEROB = 'MAV_AUTOPILOT_AEROB',\n  // ASLUAV autopilot -- http://www.asl.ethz.ch\n  MAV_AUTOPILOT_ASLUAV = 'MAV_AUTOPILOT_ASLUAV',\n  // SmartAP Autopilot - http://sky-drones.com\n  MAV_AUTOPILOT_SMARTAP = 'MAV_AUTOPILOT_SMARTAP',\n  // AirRails - http://uaventure.com\n  MAV_AUTOPILOT_AIRRAILS = 'MAV_AUTOPILOT_AIRRAILS',\n}\n\n/**\n * MAVLINK component type reported in HEARTBEAT message.\n * Flight controllers must report the type of the vehicle on which they are mounted (e.g. MAV_TYPE_OCTOROTOR).\n * All other components must report a value appropriate for their type (e.g. a camera must use MAV_TYPE_CAMERA).\n */\nexport enum MavType {\n  // Generic micro air vehicle\n  MAV_TYPE_GENERIC = 'MAV_TYPE_GENERIC',\n  // Fixed wing aircraft.\n  MAV_TYPE_FIXED_WING = 'MAV_TYPE_FIXED_WING',\n  // Quadrotor\n  MAV_TYPE_QUADROTOR = 'MAV_TYPE_QUADROTOR',\n  // Coaxial helicopter\n  MAV_TYPE_COAXIAL = 'MAV_TYPE_COAXIAL',\n  // Normal helicopter with tail rotor.\n  MAV_TYPE_HELICOPTER = 'MAV_TYPE_HELICOPTER',\n  // Ground installation\n  MAV_TYPE_ANTENNA_TRACKER = 'MAV_TYPE_ANTENNA_TRACKER',\n  // Operator control unit / ground control station\n  MAV_TYPE_GCS = 'MAV_TYPE_GCS',\n  // Airship, controlled\n  MAV_TYPE_AIRSHIP = 'MAV_TYPE_AIRSHIP',\n  // Free balloon, uncontrolled\n  MAV_TYPE_FREE_BALLOON = 'MAV_TYPE_FREE_BALLOON',\n  // Rocket\n  MAV_TYPE_ROCKET = 'MAV_TYPE_ROCKET',\n  // Ground rover\n  MAV_TYPE_GROUND_ROVER = 'MAV_TYPE_GROUND_ROVER',\n  // Surface vessel, boat, ship\n  MAV_TYPE_SURFACE_BOAT = 'MAV_TYPE_SURFACE_BOAT',\n  // Submarine\n  MAV_TYPE_SUBMARINE = 'MAV_TYPE_SUBMARINE',\n  // Hexarotor\n  MAV_TYPE_HEXAROTOR = 'MAV_TYPE_HEXAROTOR',\n  // Octorotor\n  MAV_TYPE_OCTOROTOR = 'MAV_TYPE_OCTOROTOR',\n  // Tricopter\n  MAV_TYPE_TRICOPTER = 'MAV_TYPE_TRICOPTER',\n  // Flapping wing\n  MAV_TYPE_FLAPPING_WING = 'MAV_TYPE_FLAPPING_WING',\n  // Kite\n  MAV_TYPE_KITE = 'MAV_TYPE_KITE',\n  // Onboard companion controller\n  MAV_TYPE_ONBOARD_CONTROLLER = 'MAV_TYPE_ONBOARD_CONTROLLER',\n  // Two-rotor VTOL using control surfaces in vertical operation in addition. Tailsitter.\n  MAV_TYPE_VTOL_DUOROTOR = 'MAV_TYPE_VTOL_DUOROTOR',\n  // Quad-rotor VTOL using a V-shaped quad config in vertical operation. Tailsitter.\n  MAV_TYPE_VTOL_QUADROTOR = 'MAV_TYPE_VTOL_QUADROTOR',\n  // Tiltrotor VTOL\n  MAV_TYPE_VTOL_TILTROTOR = 'MAV_TYPE_VTOL_TILTROTOR',\n  // VTOL reserved 2\n  MAV_TYPE_VTOL_RESERVED2 = 'MAV_TYPE_VTOL_RESERVED2',\n  // VTOL reserved 3\n  MAV_TYPE_VTOL_RESERVED3 = 'MAV_TYPE_VTOL_RESERVED3',\n  // VTOL reserved 4\n  MAV_TYPE_VTOL_RESERVED4 = 'MAV_TYPE_VTOL_RESERVED4',\n  // VTOL reserved 5\n  MAV_TYPE_VTOL_RESERVED5 = 'MAV_TYPE_VTOL_RESERVED5',\n  // Gimbal\n  MAV_TYPE_GIMBAL = 'MAV_TYPE_GIMBAL',\n  // ADSB system\n  MAV_TYPE_ADSB = 'MAV_TYPE_ADSB',\n  // Steerable, nonrigid airfoil\n  MAV_TYPE_PARAFOIL = 'MAV_TYPE_PARAFOIL',\n  // Dodecarotor\n  MAV_TYPE_DODECAROTOR = 'MAV_TYPE_DODECAROTOR',\n  // Camera\n  MAV_TYPE_CAMERA = 'MAV_TYPE_CAMERA',\n  // Charging station\n  MAV_TYPE_CHARGING_STATION = 'MAV_TYPE_CHARGING_STATION',\n  // FLARM collision avoidance system\n  MAV_TYPE_FLARM = 'MAV_TYPE_FLARM',\n  // Servo\n  MAV_TYPE_SERVO = 'MAV_TYPE_SERVO',\n  // Open Drone ID. See https://mavlink.io/en/services/opendroneid.html.\n  MAV_TYPE_ODID = 'MAV_TYPE_ODID',\n}\n\n/**\n * These values define the type of firmware release.\n * These values indicate the first version or release of this type.\n * For example the first alpha release would be 64, the second would be 65.\n */\nexport enum FirmwareVersionType {\n  // development release\n  FIRMWARE_VERSION_TYPE_DEV = 'FIRMWARE_VERSION_TYPE_DEV',\n  // alpha release\n  FIRMWARE_VERSION_TYPE_ALPHA = 'FIRMWARE_VERSION_TYPE_ALPHA',\n  // beta release\n  FIRMWARE_VERSION_TYPE_BETA = 'FIRMWARE_VERSION_TYPE_BETA',\n  // release candidate\n  FIRMWARE_VERSION_TYPE_RC = 'FIRMWARE_VERSION_TYPE_RC',\n  // official stable release\n  FIRMWARE_VERSION_TYPE_OFFICIAL = 'FIRMWARE_VERSION_TYPE_OFFICIAL',\n}\n\n/**\n * These values encode the bit positions of the decode position.\n * These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value.\n * The result will be either 0 or 1, depending on if the flag is set or not.\n */\nexport enum MavModeFlagDecodePosition {\n  // First bit:  10000000\n  MAV_MODE_FLAG_DECODE_POSITION_SAFETY = 0b10000000,\n  // Second bit: 01000000\n  MAV_MODE_FLAG_DECODE_POSITION_MANUAL = 0b01000000,\n  // Third bit:  00100000\n  MAV_MODE_FLAG_DECODE_POSITION_HIL = 0b00100000,\n  // Fourth bit: 00010000\n  MAV_MODE_FLAG_DECODE_POSITION_STABILIZE = 0b00010000,\n  // Fifth bit:  00001000\n  MAV_MODE_FLAG_DECODE_POSITION_GUIDED = 0b00001000,\n  // Sixth bit:   00000100\n  MAV_MODE_FLAG_DECODE_POSITION_AUTO = 0b00000100,\n  // Seventh bit: 00000010\n  MAV_MODE_FLAG_DECODE_POSITION_TEST = 0b00000010,\n  // Eighth bit: 00000001\n  MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE = 0b00000001,\n}\n\n/**\n * Actions that may be specified in MAV_CMD_OVERRIDE_GOTO to override mission execution.\n */\nexport enum MavGoto {\n  // Hold at the current position.\n  MAV_GOTO_DO_HOLD = 'MAV_GOTO_DO_HOLD',\n  // Continue with the next item in mission execution.\n  MAV_GOTO_DO_CONTINUE = 'MAV_GOTO_DO_CONTINUE',\n  // Hold at the current position of the system\n  MAV_GOTO_HOLD_AT_CURRENT_POSITION = 'MAV_GOTO_HOLD_AT_CURRENT_POSITION',\n  // Hold at the position specified in the parameters of the DO_HOLD action\n  MAV_GOTO_HOLD_AT_SPECIFIED_POSITION = 'MAV_GOTO_HOLD_AT_SPECIFIED_POSITION',\n}\n\nexport enum LimitModule {\n  // Pre-initialization.\n  LIMIT_GPSLOCK = 1,\n  // Disabled.\n  LIMIT_GEOFENCE = 2,\n  // Checking limits.\n  LIMIT_ALTITUDE = 4,\n}\n\nexport enum RallyFlags {\n  // Flag set when requiring favorable winds for landing.\n  FAVORABLE_WIND = 1,\n  // Flag set when plane is to immediately descend to break altitude and land without GCS intervention. Flag not set when plane is to loiter at Rally point until commanded to land.\n  LAND_IMMEDIATELY = 2,\n}\n\n/**\n * Flags in EKF_STATUS message.\n */\nexport enum EkfStatusFlags {\n  // Set if EKF's attitude estimate is good.\n  EKF_ATTITUDE = 1,\n  // Set if EKF's horizontal velocity estimate is good.\n  EKF_VELOCITY_HORIZ = 2,\n  // Set if EKF's vertical velocity estimate is good.\n  EKF_VELOCITY_VERT = 4,\n  // Set if EKF's horizontal position (relative) estimate is good.\n  EKF_POS_HORIZ_REL = 8,\n  // Set if EKF's horizontal position (absolute) estimate is good.\n  EKF_POS_HORIZ_ABS = 16,\n  // Set if EKF's vertical position (absolute) estimate is good.\n  EKF_POS_VERT_ABS = 32,\n  // Set if EKF's vertical position (above ground) estimate is good.\n  EKF_POS_VERT_AGL = 64,\n  // EKF is in constant position mode and does not know it's absolute or relative position.\n  EKF_CONST_POS_MODE = 128,\n  // Set if EKF's predicted horizontal position (relative) estimate is good.\n  EKF_PRED_POS_HORIZ_REL = 256,\n  // Set if EKF's predicted horizontal position (absolute) estimate is good.\n  EKF_PRED_POS_HORIZ_ABS = 512,\n  // Set if EKF has never been healthy.\n  EKF_UNINITIALIZED = 1024,\n}\n\nexport enum GoproHeartbeatFlags {\n  // GoPro is currently recording.\n  GOPRO_FLAG_RECORDING = 1\n}\n\n/**\n * These encode the sensors whose status is sent as part of the SYS_STATUS message.\n */\nexport enum MavSysStatusSensor {\n  // 3D gyro\n  MAV_SYS_STATUS_SENSOR_3D_GYRO = 0x01,\n  // 3D accelerometer\n  MAV_SYS_STATUS_SENSOR_3D_ACCEL = 0x02,\n  // 3D magnetometer\n  MAV_SYS_STATUS_SENSOR_3D_MAG = 0x04,\n  // Absolute pressure\n  MAV_SYS_STATUS_SENSOR_ABSOLUTE_PRESSURE = 0x08,\n  // Differential pressure\n  MAV_SYS_STATUS_SENSOR_DIFFERENTIAL_PRESSURE = 0x10,\n  // GPS\n  MAV_SYS_STATUS_SENSOR_GPS = 0x20,\n  // Optical flow\n  MAV_SYS_STATUS_SENSOR_OPTICAL_FLOW = 0x40,\n  // Computer vision position\n  MAV_SYS_STATUS_SENSOR_VISION_POSITION = 0x80,\n  // Laser based position\n  MAV_SYS_STATUS_SENSOR_LASER_POSITION = 0x100,\n  // External ground truth (Vicon or Leica)\n  MAV_SYS_STATUS_SENSOR_EXTERNAL_GROUND_TRUTH = 0x200,\n  // 3D angular rate control\n  MAV_SYS_STATUS_SENSOR_ANGULAR_RATE_CONTROL = 0x400,\n  // Attitude stabilization\n  MAV_SYS_STATUS_SENSOR_ATTITUDE_STABILIZATION = 0x800,\n  // Yaw position\n  MAV_SYS_STATUS_SENSOR_YAW_POSITION = 0x1000,\n  // Z/altitude control\n  MAV_SYS_STATUS_SENSOR_Z_ALTITUDE_CONTROL = 0x2000,\n  // x/y position control\n  MAV_SYS_STATUS_SENSOR_XY_POSITION_CONTROL = 0x4000,\n  // Motor outputs / control\n  MAV_SYS_STATUS_SENSOR_MOTOR_OUTPUTS = 0x8000,\n  // Rc receiver\n  MAV_SYS_STATUS_SENSOR_RC_RECEIVER = 0x10000,\n  // 2nd 3D gyro\n  MAV_SYS_STATUS_SENSOR_3D_GYRO2 = 0x20000,\n  // 2nd 3D accelerometer\n  MAV_SYS_STATUS_SENSOR_3D_ACCEL2 = 0x40000,\n  // 2nd 3D magnetometer\n  MAV_SYS_STATUS_SENSOR_3D_MAG2 = 0x80000,\n  // Geofence\n  MAV_SYS_STATUS_GEOFENCE = 0x100000,\n  // AHRS subsystem health\n  MAV_SYS_STATUS_AHRS = 0x200000,\n  // Terrain subsystem health\n  MAV_SYS_STATUS_TERRAIN = 0x400000,\n  // Motors are reversed\n  MAV_SYS_STATUS_REVERSE_MOTOR = 0x800000,\n  // Logging\n  MAV_SYS_STATUS_LOGGING = 0x1000000,\n  // Battery\n  MAV_SYS_STATUS_SENSOR_BATTERY = 0x2000000,\n  // Proximity\n  MAV_SYS_STATUS_SENSOR_PROXIMITY = 0x4000000,\n  // Satellite Communication\n  MAV_SYS_STATUS_SENSOR_SATCOM = 0x8000000,\n  // Pre-arm check status. Always healthy when armed\n  MAV_SYS_STATUS_PREARM_CHECK = 0x10000000,\n  // Avoidance/collision prevention\n  MAV_SYS_STATUS_OBSTACLE_AVOIDANCE = 0x20000000,\n  // Propulsion (actuator, esc, motor or propellor)\n  MAV_SYS_STATUS_SENSOR_PROPULSION = 0x40000000,\n  // Extended bit-field are used for further sensor status bits (needs to be set in onboard_control_sensors_present only)\n  MAV_SYS_STATUS_EXTENSION_USED = 0x80000000,\n}\n\n/**\n * These flags encode the MAV mode.\n */\nexport enum MavModeFlag {\n  //  MAV safety set to armed. Motors are enabled / running / can start. Ready to fly. Additional note: this flag is to be ignore when sent in the command MAV_CMD_DO_SET_MODE and MAV_CMD_COMPONENT_ARM_DISARM shall be used instead. The flag can still be used to report the armed state.\n  MAV_MODE_FLAG_SAFETY_ARMED = 0b10000000,\n  //  Remote control input is enabled.\n  MAV_MODE_FLAG_MANUAL_INPUT_ENABLED = 0b01000000,\n  //  Hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.\n  MAV_MODE_FLAG_HIL_ENABLED = 0b00100000,\n  //  System stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.\n  MAV_MODE_FLAG_STABILIZE_ENABLED = 0b00010000,\n  //  Guided mode enabled, system flies waypoints / mission items.\n  MAV_MODE_FLAG_GUIDED_ENABLED = 0b00001000,\n  //  Autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.\n  MAV_MODE_FLAG_AUTO_ENABLED = 0b00000100,\n  //  System has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.\n  MAV_MODE_FLAG_TEST_ENABLED = 0b00000010,\n  //  Reserved for future use.\n  MAV_MODE_FLAG_CUSTOM_MODE_ENABLED = 0b00000001,\n}\n\n/**\n * These defines are predefined OR-combined mode flags.\n * There is no need to use values from this enum, but it simplifies the use of the mode flags.\n * Note that manual input is enabled in all modes as a safety override.\n */\nexport enum MavMode {\n  // System is not ready to fly, booting, calibrating, etc. No flag is set.\n  MAV_MODE_PREFLIGHT = 'MAV_MODE_PREFLIGHT',\n  // System is allowed to be active, under assisted RC control.\n  MAV_MODE_STABILIZE_DISARMED = 'MAV_MODE_STABILIZE_DISARMED',\n  // System is allowed to be active, under assisted RC control.\n  MAV_MODE_STABILIZE_ARMED = 'MAV_MODE_STABILIZE_ARMED',\n  // System is allowed to be active, under manual (RC) control, no stabilization\n  MAV_MODE_MANUAL_DISARMED = 'MAV_MODE_MANUAL_DISARMED',\n  // System is allowed to be active, under manual (RC) control, no stabilization\n  MAV_MODE_MANUAL_ARMED = 'MAV_MODE_MANUAL_ARMED',\n  // System is allowed to be active, under autonomous control, manual setpoint\n  MAV_MODE_GUIDED_DISARMED = 'MAV_MODE_GUIDED_DISARMED',\n  // System is allowed to be active, under autonomous control, manual setpoint\n  MAV_MODE_GUIDED_ARMED = 'MAV_MODE_GUIDED_ARMED',\n  // System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by waypoints)\n  MAV_MODE_AUTO_DISARMED = 'MAV_MODE_AUTO_DISARMED',\n  // System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by waypoints)\n  MAV_MODE_AUTO_ARMED = 'MAV_MODE_AUTO_ARMED',\n  // UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.\n  MAV_MODE_TEST_DISARMED = 'MAV_MODE_TEST_DISARMED',\n  // UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.\n  MAV_MODE_TEST_ARMED = 'MAV_MODE_TEST_ARMED',\n}\n\n/**\n * State of the vehicle\n */\nexport enum MavState {\n  // Uninitialized system, state is unknown.\n  MAV_STATE_UNINIT = 'MAV_STATE_UNINIT',\n  // System is booting up.\n  MAV_STATE_BOOT = 'MAV_STATE_BOOT',\n  // System is calibrating and not flight-ready.\n  MAV_STATE_CALIBRATING = 'MAV_STATE_CALIBRATING',\n  // System is grounded and on standby. It can be launched any time.\n  MAV_STATE_STANDBY = 'MAV_STATE_STANDBY',\n  // System is active and might be already airborne. Motors are engaged.\n  MAV_STATE_ACTIVE = 'MAV_STATE_ACTIVE',\n  // System is in a non-normal flight mode. It can however still navigate.\n  MAV_STATE_CRITICAL = 'MAV_STATE_CRITICAL',\n  // System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.\n  MAV_STATE_EMERGENCY = 'MAV_STATE_EMERGENCY',\n  // System just initialized its power-down sequence, will shut down now.\n  MAV_STATE_POWEROFF = 'MAV_STATE_POWEROFF',\n  // System is terminating itself.\n  MAV_STATE_FLIGHT_TERMINATION = 'MAV_STATE_FLIGHT_TERMINATION',\n}\n\n/**\n * Component ids (values) for the different types and instances of onboard hardware/software that might make up a MAVLink system (autopilot, cameras, servos, GPS systems, avoidance systems etc.).\n * Components must use the appropriate ID in their source address when sending messages.\n * Components can also use IDs to determine if they are the intended recipient of an incoming message.\n * The MAV_COMP_ID_ALL value is used to indicate messages that must be processed by all components.\n * When creating new entries, components that can have multiple instances (e.g. cameras, servos etc.)\n * should be allocated sequential values. An appropriate number of values should be left free after these components to allow the number of instances to be expanded.\n */\nexport enum MavComponent {\n  // Target id (target_component) used to broadcast messages to all components of the receiving system. Components should attempt to process messages with this component ID and forward to components on any other interfaces. Note: This is not a valid *source* component id for a message.\n  MAV_COMP_ID_ALL = 0,\n  // System flight controller component (\"autopilot\"). Only one autopilot is expected in a particular system.\n  MAV_COMP_ID_AUTOPILOT1 = 1,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER1 = 25,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER2 = 26,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER3 = 27,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER4 = 28,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER5 = 29,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER6 = 30,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER7 = 31,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER8 = 32,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER9 = 33,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER10 = 34,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER11 = 35,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER12 = 36,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER13 = 37,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER14 = 38,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER15 = 39,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER16 = 40,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER17 = 41,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER18 = 42,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER19 = 43,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER20 = 44,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER21 = 45,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER22 = 46,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER23 = 47,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER24 = 48,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER25 = 49,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER26 = 50,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER27 = 51,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER28 = 52,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER29 = 53,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER30 = 54,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER31 = 55,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER32 = 56,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER33 = 57,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER34 = 58,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER35 = 59,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER36 = 60,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER37 = 61,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER38 = 62,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER39 = 63,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER40 = 64,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER41 = 65,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER42 = 66,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER43 = 67,\n  // Telemetry radio (e.g. SiK radio, or other component that emits RADIO_STATUS messages).\n  MAV_COMP_ID_TELEMETRY_RADIO = 68,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER45 = 69,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER46 = 70,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER47 = 71,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER48 = 72,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER49 = 73,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER50 = 74,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER51 = 75,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER52 = 76,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER53 = 77,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER54 = 78,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER55 = 79,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER56 = 80,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER57 = 81,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER58 = 82,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER59 = 83,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER60 = 84,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER61 = 85,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER62 = 86,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER63 = 87,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER64 = 88,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER65 = 89,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER66 = 90,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER67 = 91,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER68 = 92,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER69 = 93,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER70 = 94,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER71 = 95,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER72 = 96,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER73 = 97,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER74 = 98,\n  // Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.\n  MAV_COMP_ID_USER75 = 99,\n  // Camera #1.\n  MAV_COMP_ID_CAMERA = 100,\n  // Camera #2.\n  MAV_COMP_ID_CAMERA2 = 101,\n  // Camera #3.\n  MAV_COMP_ID_CAMERA3 = 102,\n  // Camera #4.\n  MAV_COMP_ID_CAMERA4 = 103,\n  // Camera #5.\n  MAV_COMP_ID_CAMERA5 = 104,\n  // Camera #6.\n  MAV_COMP_ID_CAMERA6 = 105,\n  // Servo #1.\n  MAV_COMP_ID_SERVO1 = 140,\n  // Servo #2.\n  MAV_COMP_ID_SERVO2 = 141,\n  // Servo #3.\n  MAV_COMP_ID_SERVO3 = 142,\n  // Servo #4.\n  MAV_COMP_ID_SERVO4 = 143,\n  // Servo #5.\n  MAV_COMP_ID_SERVO5 = 144,\n  // Servo #6.\n  MAV_COMP_ID_SERVO6 = 145,\n  // Servo #7.\n  MAV_COMP_ID_SERVO7 = 146,\n  // Servo #8.\n  MAV_COMP_ID_SERVO8 = 147,\n  // Servo #9.\n  MAV_COMP_ID_SERVO9 = 148,\n  // Servo #10.\n  MAV_COMP_ID_SERVO10 = 149,\n  // Servo #11.\n  MAV_COMP_ID_SERVO11 = 150,\n  // Servo #12.\n  MAV_COMP_ID_SERVO12 = 151,\n  // Servo #13.\n  MAV_COMP_ID_SERVO13 = 152,\n  // Servo #14.\n  MAV_COMP_ID_SERVO14 = 153,\n  // Gimbal #1.\n  MAV_COMP_ID_GIMBAL = 154,\n  // Logging component.\n  MAV_COMP_ID_LOG = 155,\n  // Automatic Dependent Surveillance-Broadcast (ADS-B) component.\n  MAV_COMP_ID_ADSB = 156,\n  // On Screen Display (OSD) devices for video links.\n  MAV_COMP_ID_OSD = 157,\n  // Generic autopilot peripheral component ID. Meant for devices that do not implement the parameter microservice.\n  MAV_COMP_ID_PERIPHERAL = 158,\n  // DEPRECATED: Replaced by MAV_COMP_ID_GIMBAL (2018-11). All gimbals should use MAV_COMP_ID_GIMBAL. Gimbal ID for QX1.\n  MAV_COMP_ID_QX1_GIMBAL = 159,\n  // FLARM collision alert component.\n  MAV_COMP_ID_FLARM = 160,\n  // Parachute component.\n  MAV_COMP_ID_PARACHUTE = 161,\n  // Winch component.\n  MAV_COMP_ID_WINCH = 169,\n  // Gimbal #2.\n  MAV_COMP_ID_GIMBAL2 = 171,\n  // Gimbal #3.\n  MAV_COMP_ID_GIMBAL3 = 172,\n  // Gimbal #4\n  MAV_COMP_ID_GIMBAL4 = 173,\n  // Gimbal #5.\n  MAV_COMP_ID_GIMBAL5 = 174,\n  // Gimbal #6.\n  MAV_COMP_ID_GIMBAL6 = 175,\n  // Battery #1.\n  MAV_COMP_ID_BATTERY = 180,\n  // Battery #2.\n  MAV_COMP_ID_BATTERY2 = 181,\n  // CAN over MAVLink client.\n  MAV_COMP_ID_MAVCAN = 189,\n  // Component that can generate/supply a mission flight plan (e.g. GCS or developer API).\n  MAV_COMP_ID_MISSIONPLANNER = 190,\n  // Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.\n  MAV_COMP_ID_ONBOARD_COMPUTER = 191,\n  // Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.\n  MAV_COMP_ID_ONBOARD_COMPUTER2 = 192,\n  // Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.\n  MAV_COMP_ID_ONBOARD_COMPUTER3 = 193,\n  // Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.\n  MAV_COMP_ID_ONBOARD_COMPUTER4 = 194,\n  // Component that finds an optimal path between points based on a certain constraint (e.g. minimum snap, shortest path, cost, etc.).\n  MAV_COMP_ID_PATHPLANNER = 195,\n  // Component that plans a collision free path between two points.\n  MAV_COMP_ID_OBSTACLE_AVOIDANCE = 196,\n  // Component that provides position estimates using VIO techniques.\n  MAV_COMP_ID_VISUAL_INERTIAL_ODOMETRY = 197,\n  // Component that manages pairing of vehicle and GCS.\n  MAV_COMP_ID_PAIRING_MANAGER = 198,\n  // Inertial Measurement Unit (IMU) #1.\n  MAV_COMP_ID_IMU = 200,\n  // Inertial Measurement Unit (IMU) #2.\n  MAV_COMP_ID_IMU_2 = 201,\n  // Inertial Measurement Unit (IMU) #3.\n  MAV_COMP_ID_IMU_3 = 202,\n  // GPS #1.\n  MAV_COMP_ID_GPS = 220,\n  // GPS #2.\n  MAV_COMP_ID_GPS2 = 221,\n  // Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).\n  MAV_COMP_ID_ODID_TXRX_1 = 236,\n  // Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).\n  MAV_COMP_ID_ODID_TXRX_2 = 237,\n  // Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).\n  MAV_COMP_ID_ODID_TXRX_3 = 238,\n  // Component to bridge MAVLink to UDP (i.e. from a UART).\n  MAV_COMP_ID_UDP_BRIDGE = 240,\n  // Component to bridge to UART (i.e. from UDP).\n  MAV_COMP_ID_UART_BRIDGE = 241,\n  // Component handling TUNNEL messages (e.g. vendor specific GUI of a component).\n  MAV_COMP_ID_TUNNEL_NODE = 242,\n  // DEPRECATED: Replaced by MAV_COMP_ID_ALL (2018-11). System control does not require a separate component ID. Instead, system commands should be sent with target_component=MAV_COMP_ID_ALL allowing the target component to use any appropriate component id. Don't use. Component for handling system messages (e.g. to ARM, takeoff, etc.).\n  MAV_COMP_ID_SYSTEM_CONTROL = 250,\n}\n\n/**\n * Vehicle frame\n */\nexport enum MavFrame {\n  // Global (WGS84) coordinate frame + MSL altitude. First value / x: latitude, second value / y: longitude, third value / z: positive altitude over mean sea level (MSL).\n  MAV_FRAME_GLOBAL = 'MAV_FRAME_GLOBAL',\n  // Local coordinate frame, Z-down (x: North, y: East, z: Down).\n  MAV_FRAME_LOCAL_NED = 'MAV_FRAME_LOCAL_NED',\n  // NOT a coordinate frame, indicates a mission command.\n  MAV_FRAME_MISSION = 'MAV_FRAME_MISSION',\n  // Global (WGS84) coordinate frame + altitude relative to the home position. First value / x: latitude, second value / y: longitude, third value / z: positive altitude with 0 being at the altitude of the home location.\n  MAV_FRAME_GLOBAL_RELATIVE_ALT = 'MAV_FRAME_GLOBAL_RELATIVE_ALT',\n  // Local coordinate frame, Z-up (x: East, y: North, z: Up).\n  MAV_FRAME_LOCAL_ENU = 'MAV_FRAME_LOCAL_ENU',\n  // Global (WGS84) coordinate frame (scaled) + MSL altitude. First value / x: latitude in degrees*1.0e-7, second value / y: longitude in degrees*1.0e-7, third value / z: positive altitude over mean sea level (MSL).\n  MAV_FRAME_GLOBAL_INT = 'MAV_FRAME_GLOBAL_INT',\n  // Global (WGS84) coordinate frame (scaled) + altitude relative to the home position. First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude with 0 being at the altitude of the home location.\n  MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 'MAV_FRAME_GLOBAL_RELATIVE_ALT_INT',\n  // Offset to the current local frame. Anything expressed in this frame should be added to the current local frame position.\n  MAV_FRAME_LOCAL_OFFSET_NED = 'MAV_FRAME_LOCAL_OFFSET_NED',\n  // Setpoint in body NED frame. This makes sense if all position control is externalized - e.g. useful to command 2 m/s^2 acceleration to the right.\n  MAV_FRAME_BODY_NED = 'MAV_FRAME_BODY_NED',\n  // Offset in body NED frame. This makes sense if adding setpoints to the current flight path, to avoid an obstacle - e.g. useful to command 2 m/s^2 acceleration to the east.\n  MAV_FRAME_BODY_OFFSET_NED = 'MAV_FRAME_BODY_OFFSET_NED',\n  // Global (WGS84) coordinate frame with AGL altitude (at the waypoint coordinate). First value / x: latitude in degrees, second value / y: longitude in degrees, third value / z: positive altitude in meters with 0 being at ground level in terrain model.\n  MAV_FRAME_GLOBAL_TERRAIN_ALT = 'MAV_FRAME_GLOBAL_TERRAIN_ALT',\n  // Global (WGS84) coordinate frame (scaled) with AGL altitude (at the waypoint coordinate). First value / x: latitude in degrees*10e-7, second value / y: longitude in degrees*10e-7, third value / z: positive altitude in meters with 0 being at ground level in terrain model.\n  MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 'MAV_FRAME_GLOBAL_TERRAIN_ALT_INT',\n  // Body fixed frame of reference, Z-down (x: Forward, y: Right, z: Down).\n  MAV_FRAME_BODY_FRD = 'MAV_FRAME_BODY_FRD',\n  // MAV_FRAME_BODY_FLU - Body fixed frame of reference, Z-up (x: Forward, y: Left, z: Up).\n  MAV_FRAME_RESERVED_13 = 'MAV_FRAME_RESERVED_13',\n  // MAV_FRAME_MOCAP_NED - Odometry local coordinate frame of data given by a motion capture system, Z-down (x: North, y: East, z: Down).\n  MAV_FRAME_RESERVED_14 = 'MAV_FRAME_RESERVED_14',\n  // MAV_FRAME_MOCAP_ENU - Odometry local coordinate frame of data given by a motion capture system, Z-up (x: East, y: North, z: Up).\n  MAV_FRAME_RESERVED_15 = 'MAV_FRAME_RESERVED_15',\n  // MAV_FRAME_VISION_NED - Odometry local coordinate frame of data given by a vision estimation system, Z-down (x: North, y: East, z: Down).\n  MAV_FRAME_RESERVED_16 = 'MAV_FRAME_RESERVED_16',\n  // MAV_FRAME_VISION_ENU - Odometry local coordinate frame of data given by a vision estimation system, Z-up (x: East, y: North, z: Up).\n  MAV_FRAME_RESERVED_17 = 'MAV_FRAME_RESERVED_17',\n  // MAV_FRAME_ESTIM_NED - Odometry local coordinate frame of data given by an estimator running onboard the vehicle, Z-down (x: North, y: East, z: Down).\n  MAV_FRAME_RESERVED_18 = 'MAV_FRAME_RESERVED_18',\n  // MAV_FRAME_ESTIM_ENU - Odometry local coordinate frame of data given by an estimator running onboard the vehicle, Z-up (x: East, y: North, z: Up).\n  MAV_FRAME_RESERVED_19 = 'MAV_FRAME_RESERVED_19',\n  // Forward, Right, Down coordinate frame. This is a local frame with Z-down and arbitrary F/R alignment (i.e. not aligned with NED/earth frame).\n  MAV_FRAME_LOCAL_FRD = 'MAV_FRAME_LOCAL_FRD',\n  // Forward, Left, Up coordinate frame. This is a local frame with Z-up and arbitrary F/L alignment (i.e. not aligned with ENU/earth frame).\n  MAV_FRAME_LOCAL_FLU = 'MAV_FRAME_LOCAL_FLU',\n}\n\n/**\n * Data stream type\n */\nexport enum MavlinkDataStreamType {\n  MAVLINK_DATA_STREAM_IMG_JPEG = 'MAVLINK_DATA_STREAM_IMG_JPEG',\n  MAVLINK_DATA_STREAM_IMG_BMP = 'MAVLINK_DATA_STREAM_IMG_BMP',\n  MAVLINK_DATA_STREAM_IMG_RAW8U = 'MAVLINK_DATA_STREAM_IMG_RAW8U',\n  MAVLINK_DATA_STREAM_IMG_RAW32U = 'MAVLINK_DATA_STREAM_IMG_RAW32U',\n  MAVLINK_DATA_STREAM_IMG_PGM = 'MAVLINK_DATA_STREAM_IMG_PGM',\n  MAVLINK_DATA_STREAM_IMG_PNG = 'MAVLINK_DATA_STREAM_IMG_PNG',\n}\n\n/**\n * Fence action\n */\nexport enum FenceAction {\n  // Disable fenced mode\n  FENCE_ACTION_NONE = 'FENCE_ACTION_NONE',\n  // Switched to guided mode to return point (fence point 0)\n  FENCE_ACTION_GUIDED = 'FENCE_ACTION_GUIDED',\n  // Report fence breach, but don't take action\n  FENCE_ACTION_REPORT = 'FENCE_ACTION_REPORT',\n  // Switched to guided mode to return point (fence point 0) with manual throttle control\n  FENCE_ACTION_GUIDED_THR_PASS = 'FENCE_ACTION_GUIDED_THR_PASS',\n  // Switch to RTL (return to launch) mode and head for the return point.\n  FENCE_ACTION_RTL = 'FENCE_ACTION_RTL',\n}\n\n/**\n * Fence breach\n */\nexport enum FenceBreach {\n  // No last fence breach\n  FENCE_BREACH_NONE = 'FENCE_BREACH_NONE',\n  // Breached minimum altitude\n  FENCE_BREACH_MINALT = 'FENCE_BREACH_MINALT',\n  // Breached maximum altitude\n  FENCE_BREACH_MAXALT = 'FENCE_BREACH_MAXALT',\n  // Breached fence boundary\n  FENCE_BREACH_BOUNDARY = 'FENCE_BREACH_BOUNDARY',\n}\n\n/**\n * Actions being taken to mitigate/prevent fence breach\n */\nexport enum FenceMitigate {\n  // Unknown\n  FENCE_MITIGATE_UNKNOWN = 'FENCE_MITIGATE_UNKNOWN',\n  // No actions being taken\n  FENCE_MITIGATE_NONE = 'FENCE_MITIGATE_NONE',\n  // Velocity limiting active to prevent breach\n  FENCE_MITIGATE_VEL_LIMIT = 'FENCE_MITIGATE_VEL_LIMIT',\n}\n\n/**\n * Enumeration of possible mount operation modes. This message is used by obsolete/deprecated gimbal messages.\n */\nexport enum MavMountMode {\n  // Load and keep safe position (Roll,Pitch,Yaw) from permant memory and stop stabilization\n  MAV_MOUNT_MODE_RETRACT = 'MAV_MOUNT_MODE_RETRACT',\n  // Load and keep neutral position (Roll,Pitch,Yaw) from permanent memory.\n  MAV_MOUNT_MODE_NEUTRAL = 'MAV_MOUNT_MODE_NEUTRAL',\n  // Load neutral position and start MAVLink Roll,Pitch,Yaw control with stabilization\n  MAV_MOUNT_MODE_MAVLINK_TARGETING = 'MAV_MOUNT_MODE_MAVLINK_TARGETING',\n  // Load neutral position and start RC Roll,Pitch,Yaw control with stabilization\n  MAV_MOUNT_MODE_RC_TARGETING = 'MAV_MOUNT_MODE_RC_TARGETING',\n  // Load neutral position and start to point to Lat,Lon,Alt\n  MAV_MOUNT_MODE_GPS_POINT = 'MAV_MOUNT_MODE_GPS_POINT',\n  // Gimbal tracks system with specified system ID\n  MAV_MOUNT_MODE_SYSID_TARGET = 'MAV_MOUNT_MODE_SYSID_TARGET',\n}\n\n/**\n * Flags for gimbal device (lower level) operation.\n */\nexport enum GimbalDeviceFlags {\n  // Set to retracted safe position (no stabilization), takes presedence over all other flags.\n  GIMBAL_DEVICE_FLAGS_RETRACT = 1,\n  // Set to neutral position (horizontal, forward looking, with stabiliziation), takes presedence over all other flags except RETRACT.\n  GIMBAL_DEVICE_FLAGS_NEUTRAL = 2,\n  // Lock roll angle to absolute angle relative to horizon (not relative to drone). This is generally the default with a stabilizing gimbal.\n  GIMBAL_DEVICE_FLAGS_ROLL_LOCK = 4,\n  // Lock pitch angle to absolute angle relative to horizon (not relative to drone). This is generally the default.\n  GIMBAL_DEVICE_FLAGS_PITCH_LOCK = 8,\n  // Lock yaw angle to absolute angle relative to North (not relative to drone). If this flag is set, the quaternion is in the Earth frame with the x-axis pointing North (yaw absolute). If this flag is not set, the quaternion frame is in the Earth frame rotated so that the x-axis is pointing forward (yaw relative to vehicle).\n  GIMBAL_DEVICE_FLAGS_YAW_LOCK = 16,\n}\n\n/**\n * Flags for high level gimbal manager operation The first 16 bytes are identical to the GIMBAL_DEVICE_FLAGS.\n */\nexport enum GimbalManagerFlags {\n  // Based on GIMBAL_DEVICE_FLAGS_RETRACT\n  GIMBAL_MANAGER_FLAGS_RETRACT = 1,\n  // Based on GIMBAL_DEVICE_FLAGS_NEUTRAL\n  GIMBAL_MANAGER_FLAGS_NEUTRAL = 2,\n  // Based on GIMBAL_DEVICE_FLAGS_ROLL_LOCK\n  GIMBAL_MANAGER_FLAGS_ROLL_LOCK = 4,\n  // Based on GIMBAL_DEVICE_FLAGS_PITCH_LOCK\n  GIMBAL_MANAGER_FLAGS_PITCH_LOCK = 8,\n  // Based on GIMBAL_DEVICE_FLAGS_YAW_LOCK\n  GIMBAL_MANAGER_FLAGS_YAW_LOCK = 16,\n  // Scale angular velocity relative to focal length. This means the gimbal moves slower if it is zoomed in.\n  GIMBAL_MANAGER_FLAGS_ANGULAR_VELOCITY_RELATIVE_TO_FOCAL_LENGTH = 1048576,\n  // Interpret attitude control on top of pointing to a location or tracking. If this flag is set, the quaternion is relative to the existing tracking angle.\n  GIMBAL_MANAGER_FLAGS_NUDGE = 2097152,\n  // Completely override pointing to a location or tracking. If this flag is set, the quaternion is (as usual) according to GIMBAL_MANAGER_FLAGS_YAW_LOCK.\n  GIMBAL_MANAGER_FLAGS_OVERRIDE = 4194304,\n  // This flag can be set to give up control previously set using MAV_CMD_DO_GIMBAL_MANAGER_ATTITUDE. This flag must not be combined with other flags.\n  GIMBAL_MANAGER_FLAGS_NONE = 8388608,\n}\n\n/**\n * Generalized UAVCAN node health\n */\nexport enum UavcanNodeHealth {\n  // The node is functioning properly.\n  UAVCAN_NODE_HEALTH_OK = 'UAVCAN_NODE_HEALTH_OK',\n  // A critical parameter went out of range or the node has encountered a minor failure.\n  UAVCAN_NODE_HEALTH_WARNING = 'UAVCAN_NODE_HEALTH_WARNING',\n  // The node has encountered a major failure.\n  UAVCAN_NODE_HEALTH_ERROR = 'UAVCAN_NODE_HEALTH_ERROR',\n  // The node has suffered a fatal malfunction.\n  UAVCAN_NODE_HEALTH_CRITICAL = 'UAVCAN_NODE_HEALTH_CRITICAL',\n}\n\n/**\n * Generalized UAVCAN node mode\n */\nexport enum UavcanNodeMode {\n  // The node is performing its primary functions.\n  UAVCAN_NODE_MODE_OPERATIONAL = 'UAVCAN_NODE_MODE_OPERATIONAL',\n  // The node is initializing; this mode is entered immediately after startup.\n  UAVCAN_NODE_MODE_INITIALIZATION = 'UAVCAN_NODE_MODE_INITIALIZATION',\n  // The node is under maintenance.\n  UAVCAN_NODE_MODE_MAINTENANCE = 'UAVCAN_NODE_MODE_MAINTENANCE',\n  // The node is in the process of updating its software.\n  UAVCAN_NODE_MODE_SOFTWARE_UPDATE = 'UAVCAN_NODE_MODE_SOFTWARE_UPDATE',\n  // The node is no longer available online.\n  UAVCAN_NODE_MODE_OFFLINE = 'UAVCAN_NODE_MODE_OFFLINE',\n}\n\n/**\n * Flags to indicate the status of camera storage.\n */\nexport enum StorageStatus {\n  // Storage is missing (no microSD card loaded for example.)\n  STORAGE_STATUS_EMPTY = 'STORAGE_STATUS_EMPTY',\n  // Storage present but unformatted.\n  STORAGE_STATUS_UNFORMATTED = 'STORAGE_STATUS_UNFORMATTED',\n  // Storage present and ready.\n  STORAGE_STATUS_READY = 'STORAGE_STATUS_READY',\n  // Camera does not supply storage status information. Capacity information in STORAGE_INFORMATION fields will be ignored.\n  STORAGE_STATUS_NOT_SUPPORTED = 'STORAGE_STATUS_NOT_SUPPORTED',\n}\n\n/**\n * Yaw behaviour during orbit flight.\n */\nexport enum OrbitYawBehaviour {\n  // Vehicle front points to the center (default).\n  ORBIT_YAW_BEHAVIOUR_HOLD_FRONT_TO_CIRCLE_CENTER = 'ORBIT_YAW_BEHAVIOUR_HOLD_FRONT_TO_CIRCLE_CENTER',\n  // Vehicle front holds heading when message received.\n  ORBIT_YAW_BEHAVIOUR_HOLD_INITIAL_HEADING = 'ORBIT_YAW_BEHAVIOUR_HOLD_INITIAL_HEADING',\n  // Yaw uncontrolled.\n  ORBIT_YAW_BEHAVIOUR_UNCONTROLLED = 'ORBIT_YAW_BEHAVIOUR_UNCONTROLLED',\n  // Vehicle front follows flight path (tangential to circle).\n  ORBIT_YAW_BEHAVIOUR_HOLD_FRONT_TANGENT_TO_CIRCLE = 'ORBIT_YAW_BEHAVIOUR_HOLD_FRONT_TANGENT_TO_CIRCLE',\n  // Yaw controlled by RC input.\n  ORBIT_YAW_BEHAVIOUR_RC_CONTROLLED = 'ORBIT_YAW_BEHAVIOUR_RC_CONTROLLED',\n}\n\n/**\n * Possible responses from a WIFI_CONFIG_AP message.\n */\nexport enum WifiConfigApResponse {\n  // Undefined response. Likely an indicative of a system that doesn't support this request.\n  WIFI_CONFIG_AP_RESPONSE_UNDEFINED = 'WIFI_CONFIG_AP_RESPONSE_UNDEFINED',\n  // Changes accepted.\n  WIFI_CONFIG_AP_RESPONSE_ACCEPTED = 'WIFI_CONFIG_AP_RESPONSE_ACCEPTED',\n  // Changes rejected.\n  WIFI_CONFIG_AP_RESPONSE_REJECTED = 'WIFI_CONFIG_AP_RESPONSE_REJECTED',\n  // Invalid Mode.\n  WIFI_CONFIG_AP_RESPONSE_MODE_ERROR = 'WIFI_CONFIG_AP_RESPONSE_MODE_ERROR',\n  // Invalid SSID.\n  WIFI_CONFIG_AP_RESPONSE_SSID_ERROR = 'WIFI_CONFIG_AP_RESPONSE_SSID_ERROR',\n  // Invalid Password.\n  WIFI_CONFIG_AP_RESPONSE_PASSWORD_ERROR = 'WIFI_CONFIG_AP_RESPONSE_PASSWORD_ERROR',\n}\n\n/**\n * Possible responses from a CELLULAR_CONFIG message.\n */\nexport enum CellularConfigResponse {\n  // Changes accepted.\n  CELLULAR_CONFIG_RESPONSE_ACCEPTED = 'CELLULAR_CONFIG_RESPONSE_ACCEPTED',\n  // Invalid APN.\n  CELLULAR_CONFIG_RESPONSE_APN_ERROR = 'CELLULAR_CONFIG_RESPONSE_APN_ERROR',\n  // Invalid PIN.\n  CELLULAR_CONFIG_RESPONSE_PIN_ERROR = 'CELLULAR_CONFIG_RESPONSE_PIN_ERROR',\n  // Changes rejected.\n  CELLULAR_CONFIG_RESPONSE_REJECTED = 'CELLULAR_CONFIG_RESPONSE_REJECTED',\n}\n\n/**\n * WiFi Mode.\n */\nexport enum WifiConfigApMode {\n  // WiFi mode is undefined.\n  WIFI_CONFIG_AP_MODE_UNDEFINED = 'WIFI_CONFIG_AP_MODE_UNDEFINED',\n  // WiFi configured as an access point.\n  WIFI_CONFIG_AP_MODE_AP = 'WIFI_CONFIG_AP_MODE_AP',\n  // WiFi configured as a station connected to an existing local WiFi network.\n  WIFI_CONFIG_AP_MODE_STATION = 'WIFI_CONFIG_AP_MODE_STATION',\n  // WiFi disabled.\n  WIFI_CONFIG_AP_MODE_DISABLED = 'WIFI_CONFIG_AP_MODE_DISABLED',\n}\n\n/**\n * Possible values for COMPONENT_INFORMATION.comp_metadata_type.\n */\nexport enum CompMetadataType {\n  // Version information which also includes information on other optional supported COMP_METADATA_TYPE's. Must be supported. Only downloadable from vehicle.\n  COMP_METADATA_TYPE_VERSION = 'COMP_METADATA_TYPE_VERSION',\n  // Parameter meta data.\n  COMP_METADATA_TYPE_PARAMETER = 'COMP_METADATA_TYPE_PARAMETER',\n}\n\n/**\n * Commands to be executed by the MAV. They can be executed on user request, or as part of a mission script. If the action is used in a mission, the parameter mapping to the waypoint/mission message is as follows: Param 1, Param 2, Param 3, Param 4, X: Param 5, Y:Param 6, Z:Param 7. This command list is similar what ARINC 424 is for commercial aircraft: A data format how to interpret waypoint/mission data. NaN and INT32_MAX may be used in float/integer params (respectively) to indicate optional/default values (e.g. to use the component's current yaw or latitude rather than a specific value). See https://mavlink.io/en/guide/xml_schema.html#MAV_CMD for information about the structure of the MAV_CMD entries\n */\nexport enum MavCmd {\n  // Navigate to waypoint.\n  MAV_CMD_NAV_WAYPOINT = 'MAV_CMD_NAV_WAYPOINT',\n  // Loiter around this waypoint an unlimited amount of time\n  MAV_CMD_NAV_LOITER_UNLIM = 'MAV_CMD_NAV_LOITER_UNLIM',\n  // Loiter around this waypoint for X turns\n  MAV_CMD_NAV_LOITER_TURNS = 'MAV_CMD_NAV_LOITER_TURNS',\n  // Loiter at the specified latitude, longitude and altitude for a certain amount of time. Multicopter vehicles stop at the point (within a vehicle-specific acceptance radius). Forward-only moving vehicles (e.g. fixed-wing) circle the point with the specified radius/direction. If the Heading Required parameter (2) is non-zero forward moving aircraft will only leave the loiter circle once heading towards the next waypoint.\n  MAV_CMD_NAV_LOITER_TIME = 'MAV_CMD_NAV_LOITER_TIME',\n  // Return to launch location\n  MAV_CMD_NAV_RETURN_TO_LAUNCH = 'MAV_CMD_NAV_RETURN_TO_LAUNCH',\n  // Land at location.\n  MAV_CMD_NAV_LAND = 'MAV_CMD_NAV_LAND',\n  // Takeoff from ground / hand. Vehicles that support multiple takeoff modes (e.g. VTOL quadplane) should take off using the currently configured mode.\n  MAV_CMD_NAV_TAKEOFF = 'MAV_CMD_NAV_TAKEOFF',\n  // Land at local position (local frame only)\n  MAV_CMD_NAV_LAND_LOCAL = 'MAV_CMD_NAV_LAND_LOCAL',\n  // Takeoff from local position (local frame only)\n  MAV_CMD_NAV_TAKEOFF_LOCAL = 'MAV_CMD_NAV_TAKEOFF_LOCAL',\n  // Vehicle following, i.e. this waypoint represents the position of a moving vehicle\n  MAV_CMD_NAV_FOLLOW = 'MAV_CMD_NAV_FOLLOW',\n  // Continue on the current course and climb/descend to specified altitude.  When the altitude is reached continue to the next command (i.e., don't proceed to the next command until the desired altitude is reached.\n  MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT = 'MAV_CMD_NAV_CONTINUE_AND_CHANGE_ALT',\n  // Begin loiter at the specified Latitude and Longitude.  If Lat=Lon=0, then loiter at the current position.  Don't consider the navigation command complete (don't leave loiter) until the altitude has been reached. Additionally, if the Heading Required parameter is non-zero the aircraft will not leave the loiter until heading toward the next waypoint.\n  MAV_CMD_NAV_LOITER_TO_ALT = 'MAV_CMD_NAV_LOITER_TO_ALT',\n  // Begin following a target\n  MAV_CMD_DO_FOLLOW = 'MAV_CMD_DO_FOLLOW',\n  // Reposition the MAV after a follow target command has been sent\n  MAV_CMD_DO_FOLLOW_REPOSITION = 'MAV_CMD_DO_FOLLOW_REPOSITION',\n  // Start orbiting on the circumference of a circle defined by the parameters. Setting any value NaN results in using defaults.\n  MAV_CMD_DO_ORBIT = 'MAV_CMD_DO_ORBIT',\n  // Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras.\n  MAV_CMD_NAV_ROI = 'MAV_CMD_NAV_ROI',\n  // Control autonomous path planning on the MAV.\n  MAV_CMD_NAV_PATHPLANNING = 'MAV_CMD_NAV_PATHPLANNING',\n  // Navigate to waypoint using a spline path.\n  MAV_CMD_NAV_SPLINE_WAYPOINT = 'MAV_CMD_NAV_SPLINE_WAYPOINT',\n  // Takeoff from ground using VTOL mode, and transition to forward flight with specified heading. The command should be ignored by vehicles that dont support both VTOL and fixed-wing flight (multicopters, boats,etc.).\n  MAV_CMD_NAV_VTOL_TAKEOFF = 'MAV_CMD_NAV_VTOL_TAKEOFF',\n  // Land using VTOL mode\n  MAV_CMD_NAV_VTOL_LAND = 'MAV_CMD_NAV_VTOL_LAND',\n  // hand control over to an external controller\n  MAV_CMD_NAV_GUIDED_ENABLE = 'MAV_CMD_NAV_GUIDED_ENABLE',\n  // Delay the next navigation command a number of seconds or until a specified time\n  MAV_CMD_NAV_DELAY = 'MAV_CMD_NAV_DELAY',\n  // Descend and place payload. Vehicle moves to specified location, descends until it detects a hanging payload has reached the ground, and then releases the payload. If ground is not detected before the reaching the maximum descent value (param1), the command will complete without releasing the payload.\n  MAV_CMD_NAV_PAYLOAD_PLACE = 'MAV_CMD_NAV_PAYLOAD_PLACE',\n  // NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration\n  MAV_CMD_NAV_LAST = 'MAV_CMD_NAV_LAST',\n  // Delay mission state machine.\n  MAV_CMD_CONDITION_DELAY = 'MAV_CMD_CONDITION_DELAY',\n  // Ascend/descend to target altitude at specified rate. Delay mission state machine until desired altitude reached.\n  MAV_CMD_CONDITION_CHANGE_ALT = 'MAV_CMD_CONDITION_CHANGE_ALT',\n  // Delay mission state machine until within desired distance of next NAV point.\n  MAV_CMD_CONDITION_DISTANCE = 'MAV_CMD_CONDITION_DISTANCE',\n  // Reach a certain target angle.\n  MAV_CMD_CONDITION_YAW = 'MAV_CMD_CONDITION_YAW',\n  // NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration\n  MAV_CMD_CONDITION_LAST = 'MAV_CMD_CONDITION_LAST',\n  // Set system mode.\n  MAV_CMD_DO_SET_MODE = 'MAV_CMD_DO_SET_MODE',\n  // Jump to the desired command in the mission list.  Repeat this action only the specified number of times\n  MAV_CMD_DO_JUMP = 'MAV_CMD_DO_JUMP',\n  // Change speed and/or throttle set points.\n  MAV_CMD_DO_CHANGE_SPEED = 'MAV_CMD_DO_CHANGE_SPEED',\n  // Changes the home location either to the current location or a specified location.\n  MAV_CMD_DO_SET_HOME = 'MAV_CMD_DO_SET_HOME',\n  // Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter.\n  MAV_CMD_DO_SET_PARAMETER = 'MAV_CMD_DO_SET_PARAMETER',\n  // Set a relay to a condition.\n  MAV_CMD_DO_SET_RELAY = 'MAV_CMD_DO_SET_RELAY',\n  // Cycle a relay on and off for a desired number of cycles with a desired period.\n  MAV_CMD_DO_REPEAT_RELAY = 'MAV_CMD_DO_REPEAT_RELAY',\n  // Set a servo to a desired PWM value.\n  MAV_CMD_DO_SET_SERVO = 'MAV_CMD_DO_SET_SERVO',\n  // Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.\n  MAV_CMD_DO_REPEAT_SERVO = 'MAV_CMD_DO_REPEAT_SERVO',\n  // Terminate flight immediately\n  MAV_CMD_DO_FLIGHTTERMINATION = 'MAV_CMD_DO_FLIGHTTERMINATION',\n  // Change altitude set point.\n  MAV_CMD_DO_CHANGE_ALTITUDE = 'MAV_CMD_DO_CHANGE_ALTITUDE',\n  // Sets actuators (e.g. servos) to a desired value. The actuator numbers are mapped to specific outputs (e.g. on any MAIN or AUX PWM or UAVCAN) using a flight-stack specific mechanism (i.e. a parameter).\n  MAV_CMD_DO_SET_ACTUATOR = 'MAV_CMD_DO_SET_ACTUATOR',\n  // Mission command to perform a landing. This is used as a marker in a mission to tell the autopilot where a sequence of mission items that represents a landing starts. It may also be sent via a COMMAND_LONG to trigger a landing, in which case the nearest (geographically) landing sequence in the mission will be used. The Latitude/Longitude is optional, and may be set to 0 if not needed. If specified then it will be used to help find the closest landing sequence.\n  MAV_CMD_DO_LAND_START = 'MAV_CMD_DO_LAND_START',\n  // Mission command to perform a landing from a rally point.\n  MAV_CMD_DO_RALLY_LAND = 'MAV_CMD_DO_RALLY_LAND',\n  // Mission command to safely abort an autonomous landing.\n  MAV_CMD_DO_GO_AROUND = 'MAV_CMD_DO_GO_AROUND',\n  // Reposition the vehicle to a specific WGS84 global position.\n  MAV_CMD_DO_REPOSITION = 'MAV_CMD_DO_REPOSITION',\n  // If in a GPS controlled position mode, hold the current position or continue.\n  MAV_CMD_DO_PAUSE_CONTINUE = 'MAV_CMD_DO_PAUSE_CONTINUE',\n  // Set moving direction to forward or reverse.\n  MAV_CMD_DO_SET_REVERSE = 'MAV_CMD_DO_SET_REVERSE',\n  // Sets the region of interest (ROI) to a location. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal is not to react to this message.\n  MAV_CMD_DO_SET_ROI_LOCATION = 'MAV_CMD_DO_SET_ROI_LOCATION',\n  // Sets the region of interest (ROI) to be toward next waypoint, with optional pitch/roll/yaw offset. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message.\n  MAV_CMD_DO_SET_ROI_WPNEXT_OFFSET = 'MAV_CMD_DO_SET_ROI_WPNEXT_OFFSET',\n  // Cancels any previous ROI command returning the vehicle/sensors to default flight characteristics. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message. After this command the gimbal manager should go back to manual input if available, and otherwise assume a neutral position.\n  MAV_CMD_DO_SET_ROI_NONE = 'MAV_CMD_DO_SET_ROI_NONE',\n  // Mount tracks system with specified system ID. Determination of target vehicle position may be done with GLOBAL_POSITION_INT or any other means. This command can be sent to a gimbal manager but not to a gimbal device. A gimbal device is not to react to this message.\n  MAV_CMD_DO_SET_ROI_SYSID = 'MAV_CMD_DO_SET_ROI_SYSID',\n  // Control onboard camera system.\n  MAV_CMD_DO_CONTROL_VIDEO = 'MAV_CMD_DO_CONTROL_VIDEO',\n  // Sets the region of interest (ROI) for a sensor set or the vehicle itself. This can then be used by the vehicle's control system to control the vehicle attitude and the attitude of various sensors such as cameras.\n  MAV_CMD_DO_SET_ROI = 'MAV_CMD_DO_SET_ROI',\n  // Configure digital camera. This is a fallback message for systems that have not yet implemented PARAM_EXT_XXX messages and camera definition files (see https://mavlink.io/en/services/camera_def.html ).\n  MAV_CMD_DO_DIGICAM_CONFIGURE = 'MAV_CMD_DO_DIGICAM_CONFIGURE',\n  // Control digital camera. This is a fallback message for systems that have not yet implemented PARAM_EXT_XXX messages and camera definition files (see https://mavlink.io/en/services/camera_def.html ).\n  MAV_CMD_DO_DIGICAM_CONTROL = 'MAV_CMD_DO_DIGICAM_CONTROL',\n  // Mission command to configure a camera or antenna mount\n  MAV_CMD_DO_MOUNT_CONFIGURE = 'MAV_CMD_DO_MOUNT_CONFIGURE',\n  // Mission command to control a camera or antenna mount\n  MAV_CMD_DO_MOUNT_CONTROL = 'MAV_CMD_DO_MOUNT_CONTROL',\n  // Mission command to set camera trigger distance for this flight. The camera is triggered each time this distance is exceeded. This command can also be used to set the shutter integration time for the camera.\n  MAV_CMD_DO_SET_CAM_TRIGG_DIST = 'MAV_CMD_DO_SET_CAM_TRIGG_DIST',\n  // Mission command to enable the geofence\n  MAV_CMD_DO_FENCE_ENABLE = 'MAV_CMD_DO_FENCE_ENABLE',\n  // Mission item/command to release a parachute or enable/disable auto release.\n  MAV_CMD_DO_PARACHUTE = 'MAV_CMD_DO_PARACHUTE',\n  // Mission command to perform motor test.\n  MAV_CMD_DO_MOTOR_TEST = 'MAV_CMD_DO_MOTOR_TEST',\n  // Change to/from inverted flight.\n  MAV_CMD_DO_INVERTED_FLIGHT = 'MAV_CMD_DO_INVERTED_FLIGHT',\n  // Sets a desired vehicle turn angle and speed change.\n  MAV_CMD_NAV_SET_YAW_SPEED = 'MAV_CMD_NAV_SET_YAW_SPEED',\n  // Mission command to set camera trigger interval for this flight. If triggering is enabled, the camera is triggered each time this interval expires. This command can also be used to set the shutter integration time for the camera.\n  MAV_CMD_DO_SET_CAM_TRIGG_INTERVAL = 'MAV_CMD_DO_SET_CAM_TRIGG_INTERVAL',\n  // Mission command to control a camera or antenna mount, using a quaternion as reference.\n  MAV_CMD_DO_MOUNT_CONTROL_QUAT = 'MAV_CMD_DO_MOUNT_CONTROL_QUAT',\n  // set id of master controller\n  MAV_CMD_DO_GUIDED_MASTER = 'MAV_CMD_DO_GUIDED_MASTER',\n  // Set limits for external control\n  MAV_CMD_DO_GUIDED_LIMITS = 'MAV_CMD_DO_GUIDED_LIMITS',\n  // Control vehicle engine. This is interpreted by the vehicles engine controller to change the target engine state. It is intended for vehicles with internal combustion engines\n  MAV_CMD_DO_ENGINE_CONTROL = 'MAV_CMD_DO_ENGINE_CONTROL',\n  // Set the mission item with sequence number seq as current item. This means that the MAV will continue to this mission item on the shortest path (not following the mission items in-between).\n  MAV_CMD_DO_SET_MISSION_CURRENT = 'MAV_CMD_DO_SET_MISSION_CURRENT',\n  // NOP - This command is only used to mark the upper limit of the DO commands in the enumeration\n  MAV_CMD_DO_LAST = 'MAV_CMD_DO_LAST',\n  // Trigger calibration. This command will be only accepted if in pre-flight mode. Except for Temperature Calibration, only one sensor should be set in a single message and all others should be zero.\n  MAV_CMD_PREFLIGHT_CALIBRATION = 'MAV_CMD_PREFLIGHT_CALIBRATION',\n  // Set sensor offsets. This command will be only accepted if in pre-flight mode.\n  MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS = 'MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS',\n  // Trigger UAVCAN config. This command will be only accepted if in pre-flight mode.\n  MAV_CMD_PREFLIGHT_UAVCAN = 'MAV_CMD_PREFLIGHT_UAVCAN',\n  // Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.\n  MAV_CMD_PREFLIGHT_STORAGE = 'MAV_CMD_PREFLIGHT_STORAGE',\n  // Request the reboot or shutdown of system components.\n  MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN = 'MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN',\n  // Request a target system to start an upgrade of one (or all) of its components. For example, the command might be sent to a companion computer to cause it to upgrade a connected flight controller. The system doing the upgrade will report progress using the normal command protocol sequence for a long running operation. Command protocol information: https://mavlink.io/en/services/command.html.\n  MAV_CMD_DO_UPGRADE = 'MAV_CMD_DO_UPGRADE',\n  // Override current mission with command to pause mission, pause mission and move to position, continue/resume mission. When param 1 indicates that the mission is paused (MAV_GOTO_DO_HOLD), param 2 defines whether it holds in place or moves to another position.\n  MAV_CMD_OVERRIDE_GOTO = 'MAV_CMD_OVERRIDE_GOTO',\n  // start running a mission\n  MAV_CMD_MISSION_START = 'MAV_CMD_MISSION_START',\n  // Arms / Disarms a component\n  MAV_CMD_COMPONENT_ARM_DISARM = 'MAV_CMD_COMPONENT_ARM_DISARM',\n  // Turns illuminators ON/OFF. An illuminator is a light source that is used for lighting up dark areas external to the sytstem: e.g. a torch or searchlight (as opposed to a light source for illuminating the system itself, e.g. an indicator light).\n  MAV_CMD_ILLUMINATOR_ON_OFF = 'MAV_CMD_ILLUMINATOR_ON_OFF',\n  // Request the home position from the vehicle.\n  MAV_CMD_GET_HOME_POSITION = 'MAV_CMD_GET_HOME_POSITION',\n  // Inject artificial failure for testing purposes. Note that autopilots should implement an additional protection before accepting this command such as a specific param setting.\n  MAV_CMD_INJECT_FAILURE = 'MAV_CMD_INJECT_FAILURE',\n  // Starts receiver pairing.\n  MAV_CMD_START_RX_PAIR = 'MAV_CMD_START_RX_PAIR',\n  // Request the interval between messages for a particular MAVLink message ID. The receiver should ACK the command and then emit its response in a MESSAGE_INTERVAL message.\n  MAV_CMD_GET_MESSAGE_INTERVAL = 'MAV_CMD_GET_MESSAGE_INTERVAL',\n  // Set the interval between messages for a particular MAVLink message ID. This interface replaces REQUEST_DATA_STREAM.\n  MAV_CMD_SET_MESSAGE_INTERVAL = 'MAV_CMD_SET_MESSAGE_INTERVAL',\n  // Request the target system(s) emit a single instance of a specified message (i.e. a \"one-shot\" version of MAV_CMD_SET_MESSAGE_INTERVAL).\n  MAV_CMD_REQUEST_MESSAGE = 'MAV_CMD_REQUEST_MESSAGE',\n  // Request MAVLink protocol version compatibility. All receivers should ACK the command and then emit their capabilities in an PROTOCOL_VERSION message\n  MAV_CMD_REQUEST_PROTOCOL_VERSION = 'MAV_CMD_REQUEST_PROTOCOL_VERSION',\n  // Request autopilot capabilities. The receiver should ACK the command and then emit its capabilities in an AUTOPILOT_VERSION message\n  MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES = 'MAV_CMD_REQUEST_AUTOPILOT_CAPABILITIES',\n  // Request camera information (CAMERA_INFORMATION).\n  MAV_CMD_REQUEST_CAMERA_INFORMATION = 'MAV_CMD_REQUEST_CAMERA_INFORMATION',\n  // Request camera settings (CAMERA_SETTINGS).\n  MAV_CMD_REQUEST_CAMERA_SETTINGS = 'MAV_CMD_REQUEST_CAMERA_SETTINGS',\n  // Request storage information (STORAGE_INFORMATION). Use the command's target_component to target a specific component's storage.\n  MAV_CMD_REQUEST_STORAGE_INFORMATION = 'MAV_CMD_REQUEST_STORAGE_INFORMATION',\n  // Format a storage medium. Once format is complete, a STORAGE_INFORMATION message is sent. Use the command's target_component to target a specific component's storage.\n  MAV_CMD_STORAGE_FORMAT = 'MAV_CMD_STORAGE_FORMAT',\n  // Request camera capture status (CAMERA_CAPTURE_STATUS)\n  MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS = 'MAV_CMD_REQUEST_CAMERA_CAPTURE_STATUS',\n  // Request flight information (FLIGHT_INFORMATION)\n  MAV_CMD_REQUEST_FLIGHT_INFORMATION = 'MAV_CMD_REQUEST_FLIGHT_INFORMATION',\n  // Reset all camera settings to Factory Default\n  MAV_CMD_RESET_CAMERA_SETTINGS = 'MAV_CMD_RESET_CAMERA_SETTINGS',\n  // Set camera running mode. Use NaN for reserved values. GCS will send a MAV_CMD_REQUEST_VIDEO_STREAM_STATUS command after a mode change if the camera supports video streaming.\n  MAV_CMD_SET_CAMERA_MODE = 'MAV_CMD_SET_CAMERA_MODE',\n  // Set camera zoom. Camera must respond with a CAMERA_SETTINGS message (on success).\n  MAV_CMD_SET_CAMERA_ZOOM = 'MAV_CMD_SET_CAMERA_ZOOM',\n  // Set camera focus. Camera must respond with a CAMERA_SETTINGS message (on success).\n  MAV_CMD_SET_CAMERA_FOCUS = 'MAV_CMD_SET_CAMERA_FOCUS',\n  // Tagged jump target. Can be jumped to with MAV_CMD_DO_JUMP_TAG.\n  MAV_CMD_JUMP_TAG = 'MAV_CMD_JUMP_TAG',\n  // Jump to the matching tag in the mission list. Repeat this action for the specified number of times. A mission should contain a single matching tag for each jump. If this is not the case then a jump to a missing tag should complete the mission, and a jump where there are multiple matching tags should always select the one with the lowest mission sequence number.\n  MAV_CMD_DO_JUMP_TAG = 'MAV_CMD_DO_JUMP_TAG',\n  // High level setpoint to be sent to a gimbal manager to set a gimbal attitude. It is possible to set combinations of the values below. E.g. an angle as well as a desired angular rate can be used to get to this angle at a certain angular rate, or an angular rate only will result in continuous turning. NaN is to be used to signal unset. Note: a gimbal is never to react to this command but only the gimbal manager.\n  MAV_CMD_DO_GIMBAL_MANAGER_TILTPAN = 'MAV_CMD_DO_GIMBAL_MANAGER_TILTPAN',\n  // If the gimbal manager supports visual tracking (GIMBAL_MANAGER_CAP_FLAGS_HAS_TRACKING_POINT is set), this command allows to initiate the tracking. Such a tracking gimbal manager would usually be an integrated camera/gimbal, or alternatively a companion computer connected to a camera.\n  MAV_CMD_DO_GIMBAL_MANAGER_TRACK_POINT = 'MAV_CMD_DO_GIMBAL_MANAGER_TRACK_POINT',\n  // If the gimbal supports visual tracking (GIMBAL_MANAGER_CAP_FLAGS_HAS_TRACKING_RECTANGLE is set), this command allows to initiate the tracking. Such a tracking gimbal manager would usually be an integrated camera/gimbal, or alternatively a companion computer connected to a camera.\n  MAV_CMD_DO_GIMBAL_MANAGER_TRACK_RECTANGLE = 'MAV_CMD_DO_GIMBAL_MANAGER_TRACK_RECTANGLE',\n  // Start image capture sequence. Sends CAMERA_IMAGE_CAPTURED after each capture. Use NaN for reserved values.\n  MAV_CMD_IMAGE_START_CAPTURE = 'MAV_CMD_IMAGE_START_CAPTURE',\n  // Stop image capture sequence Use NaN for reserved values.\n  MAV_CMD_IMAGE_STOP_CAPTURE = 'MAV_CMD_IMAGE_STOP_CAPTURE',\n  // Re-request a CAMERA_IMAGE_CAPTURED message.\n  MAV_CMD_REQUEST_CAMERA_IMAGE_CAPTURE = 'MAV_CMD_REQUEST_CAMERA_IMAGE_CAPTURE',\n  // Enable or disable on-board camera triggering system.\n  MAV_CMD_DO_TRIGGER_CONTROL = 'MAV_CMD_DO_TRIGGER_CONTROL',\n  // Starts video capture (recording).\n  MAV_CMD_VIDEO_START_CAPTURE = 'MAV_CMD_VIDEO_START_CAPTURE',\n  // Stop the current video capture (recording).\n  MAV_CMD_VIDEO_STOP_CAPTURE = 'MAV_CMD_VIDEO_STOP_CAPTURE',\n  // Start video streaming\n  MAV_CMD_VIDEO_START_STREAMING = 'MAV_CMD_VIDEO_START_STREAMING',\n  // Stop the given video stream\n  MAV_CMD_VIDEO_STOP_STREAMING = 'MAV_CMD_VIDEO_STOP_STREAMING',\n  // Request video stream information (VIDEO_STREAM_INFORMATION)\n  MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION = 'MAV_CMD_REQUEST_VIDEO_STREAM_INFORMATION',\n  // Request video stream status (VIDEO_STREAM_STATUS)\n  MAV_CMD_REQUEST_VIDEO_STREAM_STATUS = 'MAV_CMD_REQUEST_VIDEO_STREAM_STATUS',\n  // Request to start streaming logging data over MAVLink (see also LOGGING_DATA message)\n  MAV_CMD_LOGGING_START = 'MAV_CMD_LOGGING_START',\n  // Request to stop streaming log data over MAVLink\n  MAV_CMD_LOGGING_STOP = 'MAV_CMD_LOGGING_STOP',\n  MAV_CMD_AIRFRAME_CONFIGURATION = 'MAV_CMD_AIRFRAME_CONFIGURATION',\n  // Request to start/stop transmitting over the high latency telemetry\n  MAV_CMD_CONTROL_HIGH_LATENCY = 'MAV_CMD_CONTROL_HIGH_LATENCY',\n  // Create a panorama at the current position\n  MAV_CMD_PANORAMA_CREATE = 'MAV_CMD_PANORAMA_CREATE',\n  // Request VTOL transition\n  MAV_CMD_DO_VTOL_TRANSITION = 'MAV_CMD_DO_VTOL_TRANSITION',\n  // Request authorization to arm the vehicle to a external entity, the arm authorizer is responsible to request all data that is needs from the vehicle before authorize or deny the request. If approved the progress of command_ack message should be set with period of time that this authorization is valid in seconds or in case it was denied it should be set with one of the reasons in ARM_AUTH_DENIED_REASON.\n  MAV_CMD_ARM_AUTHORIZATION_REQUEST = 'MAV_CMD_ARM_AUTHORIZATION_REQUEST',\n  // This command sets the submode to standard guided when vehicle is in guided mode. The vehicle holds position and altitude and the user can input the desired velocities along all three axes.\n  MAV_CMD_SET_GUIDED_SUBMODE_STANDARD = 'MAV_CMD_SET_GUIDED_SUBMODE_STANDARD',\n  // This command sets submode circle when vehicle is in guided mode. Vehicle flies along a circle facing the center of the circle. The user can input the velocity along the circle and change the radius. If no input is given the vehicle will hold position.\n  MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE = 'MAV_CMD_SET_GUIDED_SUBMODE_CIRCLE',\n  // Delay mission state machine until gate has been reached.\n  MAV_CMD_CONDITION_GATE = 'MAV_CMD_CONDITION_GATE',\n  // Fence return point. There can only be one fence return point.\n  MAV_CMD_NAV_FENCE_RETURN_POINT = 'MAV_CMD_NAV_FENCE_RETURN_POINT',\n  // Fence vertex for an inclusion polygon (the polygon must not be self-intersecting). The vehicle must stay within this area. Minimum of 3 vertices required.\n  MAV_CMD_NAV_FENCE_POLYGON_VERTEX_INCLUSION = 'MAV_CMD_NAV_FENCE_POLYGON_VERTEX_INCLUSION',\n  // Fence vertex for an exclusion polygon (the polygon must not be self-intersecting). The vehicle must stay outside this area. Minimum of 3 vertices required.\n  MAV_CMD_NAV_FENCE_POLYGON_VERTEX_EXCLUSION = 'MAV_CMD_NAV_FENCE_POLYGON_VERTEX_EXCLUSION',\n  // Circular fence area. The vehicle must stay inside this area.\n  MAV_CMD_NAV_FENCE_CIRCLE_INCLUSION = 'MAV_CMD_NAV_FENCE_CIRCLE_INCLUSION',\n  // Circular fence area. The vehicle must stay outside this area.\n  MAV_CMD_NAV_FENCE_CIRCLE_EXCLUSION = 'MAV_CMD_NAV_FENCE_CIRCLE_EXCLUSION',\n  // Rally point. You can have multiple rally points defined.\n  MAV_CMD_NAV_RALLY_POINT = 'MAV_CMD_NAV_RALLY_POINT',\n  // Commands the vehicle to respond with a sequence of messages UAVCAN_NODE_INFO, one message per every UAVCAN node that is online. Note that some of the response messages can be lost, which the receiver can detect easily by checking whether every received UAVCAN_NODE_STATUS has a matching message UAVCAN_NODE_INFO received earlier; if not, this command should be sent again in order to request re-transmission of the node information messages.\n  MAV_CMD_UAVCAN_GET_NODE_INFO = 'MAV_CMD_UAVCAN_GET_NODE_INFO',\n  // Deploy payload on a Lat / Lon / Alt position. This includes the navigation to reach the required release position and velocity.\n  MAV_CMD_PAYLOAD_PREPARE_DEPLOY = 'MAV_CMD_PAYLOAD_PREPARE_DEPLOY',\n  // Control the payload deployment.\n  MAV_CMD_PAYLOAD_CONTROL_DEPLOY = 'MAV_CMD_PAYLOAD_CONTROL_DEPLOY',\n  // User defined waypoint item. Ground Station will show the Vehicle as flying through this item.\n  MAV_CMD_WAYPOINT_USER_1 = 'MAV_CMD_WAYPOINT_USER_1',\n  // User defined waypoint item. Ground Station will show the Vehicle as flying through this item.\n  MAV_CMD_WAYPOINT_USER_2 = 'MAV_CMD_WAYPOINT_USER_2',\n  // User defined waypoint item. Ground Station will show the Vehicle as flying through this item.\n  MAV_CMD_WAYPOINT_USER_3 = 'MAV_CMD_WAYPOINT_USER_3',\n  // User defined waypoint item. Ground Station will show the Vehicle as flying through this item.\n  MAV_CMD_WAYPOINT_USER_4 = 'MAV_CMD_WAYPOINT_USER_4',\n  // User defined waypoint item. Ground Station will show the Vehicle as flying through this item.\n  MAV_CMD_WAYPOINT_USER_5 = 'MAV_CMD_WAYPOINT_USER_5',\n  // User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.\n  MAV_CMD_SPATIAL_USER_1 = 'MAV_CMD_SPATIAL_USER_1',\n  // User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.\n  MAV_CMD_SPATIAL_USER_2 = 'MAV_CMD_SPATIAL_USER_2',\n  // User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.\n  MAV_CMD_SPATIAL_USER_3 = 'MAV_CMD_SPATIAL_USER_3',\n  // User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.\n  MAV_CMD_SPATIAL_USER_4 = 'MAV_CMD_SPATIAL_USER_4',\n  // User defined spatial item. Ground Station will not show the Vehicle as flying through this item. Example: ROI item.\n  MAV_CMD_SPATIAL_USER_5 = 'MAV_CMD_SPATIAL_USER_5',\n  // User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.\n  MAV_CMD_USER_1 = 'MAV_CMD_USER_1',\n  // User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.\n  MAV_CMD_USER_2 = 'MAV_CMD_USER_2',\n  // User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.\n  MAV_CMD_USER_3 = 'MAV_CMD_USER_3',\n  // User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.\n  MAV_CMD_USER_4 = 'MAV_CMD_USER_4',\n  // User defined command. Ground Station will not show the Vehicle as flying through this item. Example: MAV_CMD_DO_SET_PARAMETER item.\n  MAV_CMD_USER_5 = 'MAV_CMD_USER_5',\n  // From ArduPilotMega\n  // Mission command to operate EPM gripper.\n  MAV_CMD_DO_GRIPPER = 'MAV_CMD_DO_GRIPPER',\n  // Enable/disable autotune.\n  MAV_CMD_DO_AUTOTUNE_ENABLE = 'MAV_CMD_DO_AUTOTUNE_ENABLE',\n  // Set the distance to be repeated on mission resume\n  MAV_CMD_DO_SET_RESUME_REPEAT_DIST = 'MAV_CMD_DO_SET_RESUME_REPEAT_DIST',\n  // Mission command to wait for an altitude or downwards vertical speed. This is meant for high altitude balloon launches, allowing the aircraft to be idle until either an altitude is reached or a negative vertical speed is reached (indicating early balloon burst). The wiggle time is how often to wiggle the control surfaces to prevent them seizing up.\n  MAV_CMD_NAV_ALTITUDE_WAIT = 'MAV_CMD_NAV_ALTITUDE_WAIT',\n  // A system wide power-off event has been initiated.\n  MAV_CMD_POWER_OFF_INITIATED = 'MAV_CMD_POWER_OFF_INITIATED',\n  // FLY button has been clicked.\n  MAV_CMD_SOLO_BTN_FLY_CLICK = 'MAV_CMD_SOLO_BTN_FLY_CLICK',\n  // FLY button has been held for 1.5 seconds.\n  MAV_CMD_SOLO_BTN_FLY_HOLD = 'MAV_CMD_SOLO_BTN_FLY_HOLD',\n  // PAUSE button has been clicked.\n  MAV_CMD_SOLO_BTN_PAUSE_CLICK = 'MAV_CMD_SOLO_BTN_PAUSE_CLICK',\n  // Magnetometer calibration based on fixed position         in earth field given by inclination, declination and intensity.\n  MAV_CMD_FIXED_MAG_CAL = 'MAV_CMD_FIXED_MAG_CAL',\n  // Magnetometer calibration based on fixed expected field values in milliGauss.\n  MAV_CMD_FIXED_MAG_CAL_FIELD = 'MAV_CMD_FIXED_MAG_CAL_FIELD',\n  // Magnetometer calibration based on provided known yaw. This allows for fast calibration using WMM field tables in the vehicle, given only the known yaw of the vehicle. If Latitude and longitude are both zero then use the current vehicle location.\n  MAV_CMD_FIXED_MAG_CAL_YAW = 'MAV_CMD_FIXED_MAG_CAL_YAW',\n  // Initiate a magnetometer calibration.\n  MAV_CMD_DO_START_MAG_CAL = 'MAV_CMD_DO_START_MAG_CAL',\n  // Initiate a magnetometer calibration.\n  MAV_CMD_DO_ACCEPT_MAG_CAL = 'MAV_CMD_DO_ACCEPT_MAG_CAL',\n  // Cancel a running magnetometer calibration.\n  MAV_CMD_DO_CANCEL_MAG_CAL = 'MAV_CMD_DO_CANCEL_MAG_CAL',\n  // Used when doing accelerometer calibration. When sent to the GCS tells it what position to put the vehicle in. When sent to the vehicle says what position the vehicle is in.\n  MAV_CMD_ACCELCAL_VEHICLE_POS = 'MAV_CMD_ACCELCAL_VEHICLE_POS',\n  // Reply with the version banner.\n  MAV_CMD_DO_SEND_BANNER = 'MAV_CMD_DO_SEND_BANNER',\n  // Command autopilot to get into factory test/diagnostic mode.\n  MAV_CMD_SET_FACTORY_TEST_MODE = 'MAV_CMD_SET_FACTORY_TEST_MODE',\n  // Causes the gimbal to reset and boot as if it was just powered on.\n  MAV_CMD_GIMBAL_RESET = 'MAV_CMD_GIMBAL_RESET',\n  // Reports progress and success or failure of gimbal axis calibration procedure.\n  MAV_CMD_GIMBAL_AXIS_CALIBRATION_STATUS = 'MAV_CMD_GIMBAL_AXIS_CALIBRATION_STATUS',\n  // Starts commutation calibration on the gimbal.\n  MAV_CMD_GIMBAL_REQUEST_AXIS_CALIBRATION = 'MAV_CMD_GIMBAL_REQUEST_AXIS_CALIBRATION',\n  // Erases gimbal application and parameters.\n  MAV_CMD_GIMBAL_FULL_RESET = 'MAV_CMD_GIMBAL_FULL_RESET',\n  // Command to operate winch.\n  MAV_CMD_DO_WINCH = 'MAV_CMD_DO_WINCH',\n  // Update the bootloader\n  MAV_CMD_FLASH_BOOTLOADER = 'MAV_CMD_FLASH_BOOTLOADER',\n  // Reset battery capacity for batteries that accumulate consumed battery via integration.\n  MAV_CMD_BATTERY_RESET = 'MAV_CMD_BATTERY_RESET',\n  // Issue a trap signal to the autopilot process, presumably to enter the debugger.\n  MAV_CMD_DEBUG_TRAP = 'MAV_CMD_DEBUG_TRAP',\n  // Control onboard scripting.\n  MAV_CMD_SCRIPTING = 'MAV_CMD_SCRIPTING',\n}\n\n/**\n *\n */\nexport enum MavDataStream {\n  // Enable all data streams\n  MAV_DATA_STREAM_ALL = 'MAV_DATA_STREAM_ALL',\n  // Enable IMU_RAW, GPS_RAW, GPS_STATUS packets.\n  MAV_DATA_STREAM_RAW_SENSORS = 'MAV_DATA_STREAM_RAW_SENSORS',\n  // Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS\n  MAV_DATA_STREAM_EXTENDED_STATUS = 'MAV_DATA_STREAM_EXTENDED_STATUS',\n  // Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW\n  MAV_DATA_STREAM_RC_CHANNELS = 'MAV_DATA_STREAM_RC_CHANNELS',\n  // Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT.\n  MAV_DATA_STREAM_RAW_CONTROLLER = 'MAV_DATA_STREAM_RAW_CONTROLLER',\n  // Enable LOCAL_POSITION, GLOBAL_POSITION/GLOBAL_POSITION_INT messages.\n  MAV_DATA_STREAM_POSITION = 'MAV_DATA_STREAM_POSITION',\n  // Dependent on the autopilot\n  MAV_DATA_STREAM_EXTRA1 = 'MAV_DATA_STREAM_EXTRA1',\n  // Dependent on the autopilot\n  MAV_DATA_STREAM_EXTRA2 = 'MAV_DATA_STREAM_EXTRA2',\n  // Dependent on the autopilot\n  MAV_DATA_STREAM_EXTRA3 = 'MAV_DATA_STREAM_EXTRA3',\n}\n\n/**\n * A data stream is not a fixed set of messages, but rather a      recommendation to the autopilot software. Individual autopilots may or may not obey      the recommended messages.\n */\nexport enum MavRoi {\n  // No region of interest.\n  MAV_ROI_NONE = 'MAV_ROI_NONE',\n  // Point toward next waypoint, with optional pitch/roll/yaw offset.\n  MAV_ROI_WPNEXT = 'MAV_ROI_WPNEXT',\n  // Point toward given waypoint.\n  MAV_ROI_WPINDEX = 'MAV_ROI_WPINDEX',\n  // Point toward fixed location.\n  MAV_ROI_LOCATION = 'MAV_ROI_LOCATION',\n  // Point toward of given id.\n  MAV_ROI_TARGET = 'MAV_ROI_TARGET',\n}\n\n/**\n * ACK / NACK / ERROR values as a result of MAV_CMDs and for mission item transmission.\n */\nexport enum MavCmdAck {\n  // Command / mission item is ok.\n  MAV_CMD_ACK_OK = 'MAV_CMD_ACK_OK',\n  // Generic error message if none of the other reasons fails or if no detailed error reporting is implemented.\n  MAV_CMD_ACK_ERR_FAIL = 'MAV_CMD_ACK_ERR_FAIL',\n  // The system is refusing to accept this command from this source / communication partner.\n  MAV_CMD_ACK_ERR_ACCESS_DENIED = 'MAV_CMD_ACK_ERR_ACCESS_DENIED',\n  // Command or mission item is not supported, other commands would be accepted.\n  MAV_CMD_ACK_ERR_NOT_SUPPORTED = 'MAV_CMD_ACK_ERR_NOT_SUPPORTED',\n  // The coordinate frame of this command / mission item is not supported.\n  MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED = 'MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED',\n  // The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible.\n  MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE = 'MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE',\n  // The X or latitude value is out of range.\n  MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE = 'MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE',\n  // The Y or longitude value is out of range.\n  MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE = 'MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE',\n  // The Z or altitude value is out of range.\n  MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE = 'MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE',\n}\n\n/**\n * Specifies the datatype of a MAVLink parameter.\n */\nexport enum MavParamType {\n  // 8-bit unsigned integer\n  MAV_PARAM_TYPE_UINT8 = 'MAV_PARAM_TYPE_UINT8',\n  // 8-bit signed integer\n  MAV_PARAM_TYPE_INT8 = 'MAV_PARAM_TYPE_INT8',\n  // 16-bit unsigned integer\n  MAV_PARAM_TYPE_UINT16 = 'MAV_PARAM_TYPE_UINT16',\n  // 16-bit signed integer\n  MAV_PARAM_TYPE_INT16 = 'MAV_PARAM_TYPE_INT16',\n  // 32-bit unsigned integer\n  MAV_PARAM_TYPE_UINT32 = 'MAV_PARAM_TYPE_UINT32',\n  // 32-bit signed integer\n  MAV_PARAM_TYPE_INT32 = 'MAV_PARAM_TYPE_INT32',\n  // 64-bit unsigned integer\n  MAV_PARAM_TYPE_UINT64 = 'MAV_PARAM_TYPE_UINT64',\n  // 64-bit signed integer\n  MAV_PARAM_TYPE_INT64 = 'MAV_PARAM_TYPE_INT64',\n  // 32-bit floating-point\n  MAV_PARAM_TYPE_REAL32 = 'MAV_PARAM_TYPE_REAL32',\n  // 64-bit floating-point\n  MAV_PARAM_TYPE_REAL64 = 'MAV_PARAM_TYPE_REAL64',\n}\n\n/**\n * Specifies the datatype of a MAVLink extended parameter.\n */\nexport enum MavParamExtType {\n  // 8-bit unsigned integer\n  MAV_PARAM_EXT_TYPE_UINT8 = 'MAV_PARAM_EXT_TYPE_UINT8',\n  // 8-bit signed integer\n  MAV_PARAM_EXT_TYPE_INT8 = 'MAV_PARAM_EXT_TYPE_INT8',\n  // 16-bit unsigned integer\n  MAV_PARAM_EXT_TYPE_UINT16 = 'MAV_PARAM_EXT_TYPE_UINT16',\n  // 16-bit signed integer\n  MAV_PARAM_EXT_TYPE_INT16 = 'MAV_PARAM_EXT_TYPE_INT16',\n  // 32-bit unsigned integer\n  MAV_PARAM_EXT_TYPE_UINT32 = 'MAV_PARAM_EXT_TYPE_UINT32',\n  // 32-bit signed integer\n  MAV_PARAM_EXT_TYPE_INT32 = 'MAV_PARAM_EXT_TYPE_INT32',\n  // 64-bit unsigned integer\n  MAV_PARAM_EXT_TYPE_UINT64 = 'MAV_PARAM_EXT_TYPE_UINT64',\n  // 64-bit signed integer\n  MAV_PARAM_EXT_TYPE_INT64 = 'MAV_PARAM_EXT_TYPE_INT64',\n  // 32-bit floating-point\n  MAV_PARAM_EXT_TYPE_REAL32 = 'MAV_PARAM_EXT_TYPE_REAL32',\n  // 64-bit floating-point\n  MAV_PARAM_EXT_TYPE_REAL64 = 'MAV_PARAM_EXT_TYPE_REAL64',\n  // Custom Type\n  MAV_PARAM_EXT_TYPE_CUSTOM = 'MAV_PARAM_EXT_TYPE_CUSTOM',\n}\n\n/**\n * Result from a MAVLink command (MAV_CMD)\n */\nexport enum MavResult {\n  // Command is valid (is supported and has valid parameters), and was executed.\n  MAV_RESULT_ACCEPTED = 'MAV_RESULT_ACCEPTED',\n  // Command is valid, but cannot be executed at this time. This is used to indicate a problem that should be fixed just by waiting (e.g. a state machine is busy, can't arm because have not got GPS lock, etc.). Retrying later should work.\n  MAV_RESULT_TEMPORARILY_REJECTED = 'MAV_RESULT_TEMPORARILY_REJECTED',\n  // Command is invalid (is supported but has invalid parameters). Retrying same command and parameters will not work.\n  MAV_RESULT_DENIED = 'MAV_RESULT_DENIED',\n  // Command is not supported (unknown).\n  MAV_RESULT_UNSUPPORTED = 'MAV_RESULT_UNSUPPORTED',\n  // Command is valid, but execution has failed. This is used to indicate any non-temporary or unexpected problem, i.e. any problem that must be fixed before the command can succeed/be retried. For example, attempting to write a file when out of memory, attempting to arm when sensors are not calibrated, etc.\n  MAV_RESULT_FAILED = 'MAV_RESULT_FAILED',\n  // Command is valid and is being executed. This will be followed by further progress updates, i.e. the component may send further COMMAND_ACK messages with result MAV_RESULT_IN_PROGRESS (at a rate decided by the implementation), and must terminate by sending a COMMAND_ACK message with final result of the operation. The COMMAND_ACK.progress field can be used to indicate the progress of the operation.\n  MAV_RESULT_IN_PROGRESS = 'MAV_RESULT_IN_PROGRESS',\n  // Command has been cancelled (as a result of receiving a COMMAND_CANCEL message).\n  MAV_RESULT_CANCELLED = 'MAV_RESULT_CANCELLED',\n}\n\n/**\n * Result of mission operation (in a MISSION_ACK message).\n */\nexport enum MavMissionResult {\n  // mission accepted OK\n  MAV_MISSION_ACCEPTED = 'MAV_MISSION_ACCEPTED',\n  // Generic error / not accepting mission commands at all right now.\n  MAV_MISSION_ERROR = 'MAV_MISSION_ERROR',\n  // Coordinate frame is not supported.\n  MAV_MISSION_UNSUPPORTED_FRAME = 'MAV_MISSION_UNSUPPORTED_FRAME',\n  // Command is not supported.\n  MAV_MISSION_UNSUPPORTED = 'MAV_MISSION_UNSUPPORTED',\n  // Mission items exceed storage space.\n  MAV_MISSION_NO_SPACE = 'MAV_MISSION_NO_SPACE',\n  // One of the parameters has an invalid value.\n  MAV_MISSION_INVALID = 'MAV_MISSION_INVALID',\n  // param1 has an invalid value.\n  MAV_MISSION_INVALID_PARAM1 = 'MAV_MISSION_INVALID_PARAM1',\n  // param2 has an invalid value.\n  MAV_MISSION_INVALID_PARAM2 = 'MAV_MISSION_INVALID_PARAM2',\n  // param3 has an invalid value.\n  MAV_MISSION_INVALID_PARAM3 = 'MAV_MISSION_INVALID_PARAM3',\n  // param4 has an invalid value.\n  MAV_MISSION_INVALID_PARAM4 = 'MAV_MISSION_INVALID_PARAM4',\n  // x / param5 has an invalid value.\n  MAV_MISSION_INVALID_PARAM5_X = 'MAV_MISSION_INVALID_PARAM5_X',\n  // y / param6 has an invalid value.\n  MAV_MISSION_INVALID_PARAM6_Y = 'MAV_MISSION_INVALID_PARAM6_Y',\n  // z / param7 has an invalid value.\n  MAV_MISSION_INVALID_PARAM7 = 'MAV_MISSION_INVALID_PARAM7',\n  // Mission item received out of sequence\n  MAV_MISSION_INVALID_SEQUENCE = 'MAV_MISSION_INVALID_SEQUENCE',\n  // Not accepting any mission commands from this communication partner.\n  MAV_MISSION_DENIED = 'MAV_MISSION_DENIED',\n  // Current mission operation cancelled (e.g. mission upload, mission download).\n  MAV_MISSION_OPERATION_CANCELLED = 'MAV_MISSION_OPERATION_CANCELLED',\n}\n\n/**\n * Indicates the severity level, generally used for status messages to indicate their relative urgency. Based on RFC-5424 using expanded definitions at: http://www.kiwisyslog.com/kb/info:-syslog-message-levels/.\n */\nexport enum MavSeverity {\n  // System is unusable. This is a \"panic\" condition.\n  MAV_SEVERITY_EMERGENCY = 'MAV_SEVERITY_EMERGENCY',\n  // Action should be taken immediately. Indicates error in non-critical systems.\n  MAV_SEVERITY_ALERT = 'MAV_SEVERITY_ALERT',\n  // Action must be taken immediately. Indicates failure in a primary system.\n  MAV_SEVERITY_CRITICAL = 'MAV_SEVERITY_CRITICAL',\n  // Indicates an error in secondary/redundant systems.\n  MAV_SEVERITY_ERROR = 'MAV_SEVERITY_ERROR',\n  // Indicates about a possible future error if this is not resolved within a given timeframe. Example would be a low battery warning.\n  MAV_SEVERITY_WARNING = 'MAV_SEVERITY_WARNING',\n  // An unusual event has occurred, though not an error condition. This should be investigated for the root cause.\n  MAV_SEVERITY_NOTICE = 'MAV_SEVERITY_NOTICE',\n  // Normal operational messages. Useful for logging. No action is required for these messages.\n  MAV_SEVERITY_INFO = 'MAV_SEVERITY_INFO',\n  // Useful non-operational messages that can assist in debugging. These should not occur during normal operation.\n  MAV_SEVERITY_DEBUG = 'MAV_SEVERITY_DEBUG',\n}\n\n/**\n * SERIAL_CONTROL device types\n */\nexport enum SerialControlDev {\n  // First telemetry port\n  SERIAL_CONTROL_DEV_TELEM1 = 'SERIAL_CONTROL_DEV_TELEM1',\n  // Second telemetry port\n  SERIAL_CONTROL_DEV_TELEM2 = 'SERIAL_CONTROL_DEV_TELEM2',\n  // First GPS port\n  SERIAL_CONTROL_DEV_GPS1 = 'SERIAL_CONTROL_DEV_GPS1',\n  // Second GPS port\n  SERIAL_CONTROL_DEV_GPS2 = 'SERIAL_CONTROL_DEV_GPS2',\n  // system shell\n  SERIAL_CONTROL_DEV_SHELL = 'SERIAL_CONTROL_DEV_SHELL',\n  // SERIAL0\n  SERIAL_CONTROL_SERIAL0 = 'SERIAL_CONTROL_SERIAL0',\n  // SERIAL1\n  SERIAL_CONTROL_SERIAL1 = 'SERIAL_CONTROL_SERIAL1',\n  // SERIAL2\n  SERIAL_CONTROL_SERIAL2 = 'SERIAL_CONTROL_SERIAL2',\n  // SERIAL3\n  SERIAL_CONTROL_SERIAL3 = 'SERIAL_CONTROL_SERIAL3',\n  // SERIAL4\n  SERIAL_CONTROL_SERIAL4 = 'SERIAL_CONTROL_SERIAL4',\n  // SERIAL5\n  SERIAL_CONTROL_SERIAL5 = 'SERIAL_CONTROL_SERIAL5',\n  // SERIAL6\n  SERIAL_CONTROL_SERIAL6 = 'SERIAL_CONTROL_SERIAL6',\n  // SERIAL7\n  SERIAL_CONTROL_SERIAL7 = 'SERIAL_CONTROL_SERIAL7',\n  // SERIAL8\n  SERIAL_CONTROL_SERIAL8 = 'SERIAL_CONTROL_SERIAL8',\n  // SERIAL9\n  SERIAL_CONTROL_SERIAL9 = 'SERIAL_CONTROL_SERIAL9',\n}\n\n/**\n * Enumeration of distance sensor types\n */\nexport enum MavDistanceSensor {\n  // Laser rangefinder, e.g. LightWare SF02/F or PulsedLight units\n  MAV_DISTANCE_SENSOR_LASER = 'MAV_DISTANCE_SENSOR_LASER',\n  // Ultrasound rangefinder, e.g. MaxBotix units\n  MAV_DISTANCE_SENSOR_ULTRASOUND = 'MAV_DISTANCE_SENSOR_ULTRASOUND',\n  // Infrared rangefinder, e.g. Sharp units\n  MAV_DISTANCE_SENSOR_INFRARED = 'MAV_DISTANCE_SENSOR_INFRARED',\n  // Radar type, e.g. uLanding units\n  MAV_DISTANCE_SENSOR_RADAR = 'MAV_DISTANCE_SENSOR_RADAR',\n  // Broken or unknown type, e.g. analog units\n  MAV_DISTANCE_SENSOR_UNKNOWN = 'MAV_DISTANCE_SENSOR_UNKNOWN',\n}\n\n/**\n * Enumeration of sensor orientation, according to its rotations\n */\nexport enum MavSensorOrientation {\n  // Roll: 0, Pitch: 0, Yaw: 0\n  MAV_SENSOR_ROTATION_NONE = 'MAV_SENSOR_ROTATION_NONE',\n  // Roll: 0, Pitch: 0, Yaw: 45\n  MAV_SENSOR_ROTATION_YAW_45 = 'MAV_SENSOR_ROTATION_YAW_45',\n  // Roll: 0, Pitch: 0, Yaw: 90\n  MAV_SENSOR_ROTATION_YAW_90 = 'MAV_SENSOR_ROTATION_YAW_90',\n  // Roll: 0, Pitch: 0, Yaw: 135\n  MAV_SENSOR_ROTATION_YAW_135 = 'MAV_SENSOR_ROTATION_YAW_135',\n  // Roll: 0, Pitch: 0, Yaw: 180\n  MAV_SENSOR_ROTATION_YAW_180 = 'MAV_SENSOR_ROTATION_YAW_180',\n  // Roll: 0, Pitch: 0, Yaw: 225\n  MAV_SENSOR_ROTATION_YAW_225 = 'MAV_SENSOR_ROTATION_YAW_225',\n  // Roll: 0, Pitch: 0, Yaw: 270\n  MAV_SENSOR_ROTATION_YAW_270 = 'MAV_SENSOR_ROTATION_YAW_270',\n  // Roll: 0, Pitch: 0, Yaw: 315\n  MAV_SENSOR_ROTATION_YAW_315 = 'MAV_SENSOR_ROTATION_YAW_315',\n  // Roll: 180, Pitch: 0, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_180 = 'MAV_SENSOR_ROTATION_ROLL_180',\n  // Roll: 180, Pitch: 0, Yaw: 45\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_45 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_45',\n  // Roll: 180, Pitch: 0, Yaw: 90\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_90 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_90',\n  // Roll: 180, Pitch: 0, Yaw: 135\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_135 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_135',\n  // Roll: 0, Pitch: 180, Yaw: 0\n  MAV_SENSOR_ROTATION_PITCH_180 = 'MAV_SENSOR_ROTATION_PITCH_180',\n  // Roll: 180, Pitch: 0, Yaw: 225\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_225 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_225',\n  // Roll: 180, Pitch: 0, Yaw: 270\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_270 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_270',\n  // Roll: 180, Pitch: 0, Yaw: 315\n  MAV_SENSOR_ROTATION_ROLL_180_YAW_315 = 'MAV_SENSOR_ROTATION_ROLL_180_YAW_315',\n  // Roll: 90, Pitch: 0, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_90 = 'MAV_SENSOR_ROTATION_ROLL_90',\n  // Roll: 90, Pitch: 0, Yaw: 45\n  MAV_SENSOR_ROTATION_ROLL_90_YAW_45 = 'MAV_SENSOR_ROTATION_ROLL_90_YAW_45',\n  // Roll: 90, Pitch: 0, Yaw: 90\n  MAV_SENSOR_ROTATION_ROLL_90_YAW_90 = 'MAV_SENSOR_ROTATION_ROLL_90_YAW_90',\n  // Roll: 90, Pitch: 0, Yaw: 135\n  MAV_SENSOR_ROTATION_ROLL_90_YAW_135 = 'MAV_SENSOR_ROTATION_ROLL_90_YAW_135',\n  // Roll: 270, Pitch: 0, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_270 = 'MAV_SENSOR_ROTATION_ROLL_270',\n  // Roll: 270, Pitch: 0, Yaw: 45\n  MAV_SENSOR_ROTATION_ROLL_270_YAW_45 = 'MAV_SENSOR_ROTATION_ROLL_270_YAW_45',\n  // Roll: 270, Pitch: 0, Yaw: 90\n  MAV_SENSOR_ROTATION_ROLL_270_YAW_90 = 'MAV_SENSOR_ROTATION_ROLL_270_YAW_90',\n  // Roll: 270, Pitch: 0, Yaw: 135\n  MAV_SENSOR_ROTATION_ROLL_270_YAW_135 = 'MAV_SENSOR_ROTATION_ROLL_270_YAW_135',\n  // Roll: 0, Pitch: 90, Yaw: 0\n  MAV_SENSOR_ROTATION_PITCH_90 = 'MAV_SENSOR_ROTATION_PITCH_90',\n  // Roll: 0, Pitch: 270, Yaw: 0\n  MAV_SENSOR_ROTATION_PITCH_270 = 'MAV_SENSOR_ROTATION_PITCH_270',\n  // Roll: 0, Pitch: 180, Yaw: 90\n  MAV_SENSOR_ROTATION_PITCH_180_YAW_90 = 'MAV_SENSOR_ROTATION_PITCH_180_YAW_90',\n  // Roll: 0, Pitch: 180, Yaw: 270\n  MAV_SENSOR_ROTATION_PITCH_180_YAW_270 = 'MAV_SENSOR_ROTATION_PITCH_180_YAW_270',\n  // Roll: 90, Pitch: 90, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_90 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_90',\n  // Roll: 180, Pitch: 90, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_180_PITCH_90 = 'MAV_SENSOR_ROTATION_ROLL_180_PITCH_90',\n  // Roll: 270, Pitch: 90, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_270_PITCH_90 = 'MAV_SENSOR_ROTATION_ROLL_270_PITCH_90',\n  // Roll: 90, Pitch: 180, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_180 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_180',\n  // Roll: 270, Pitch: 180, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_270_PITCH_180 = 'MAV_SENSOR_ROTATION_ROLL_270_PITCH_180',\n  // Roll: 90, Pitch: 270, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_270 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_270',\n  // Roll: 180, Pitch: 270, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_180_PITCH_270 = 'MAV_SENSOR_ROTATION_ROLL_180_PITCH_270',\n  // Roll: 270, Pitch: 270, Yaw: 0\n  MAV_SENSOR_ROTATION_ROLL_270_PITCH_270 = 'MAV_SENSOR_ROTATION_ROLL_270_PITCH_270',\n  // Roll: 90, Pitch: 180, Yaw: 90\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_180_YAW_90',\n  // Roll: 90, Pitch: 0, Yaw: 270\n  MAV_SENSOR_ROTATION_ROLL_90_YAW_270 = 'MAV_SENSOR_ROTATION_ROLL_90_YAW_270',\n  // Roll: 90, Pitch: 68, Yaw: 293\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_68_YAW_293 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_68_YAW_293',\n  // Pitch: 315\n  MAV_SENSOR_ROTATION_PITCH_315 = 'MAV_SENSOR_ROTATION_PITCH_315',\n  // Roll: 90, Pitch: 315\n  MAV_SENSOR_ROTATION_ROLL_90_PITCH_315 = 'MAV_SENSOR_ROTATION_ROLL_90_PITCH_315',\n  // Roll: 270, Yaw: 180\n  MAV_SENSOR_ROTATION_ROLL_270_YAW_180 = 'MAV_SENSOR_ROTATION_ROLL_270_YAW_180',\n  // Custom orientation\n  MAV_SENSOR_ROTATION_CUSTOM = 'MAV_SENSOR_ROTATION_CUSTOM',\n}\n\n/**\n * Type of mission items being requested/sent in mission protocol.\n */\nexport enum MavMissionType {\n  // Items are mission commands for main mission.\n  MAV_MISSION_TYPE_MISSION = 'MAV_MISSION_TYPE_MISSION',\n  // Specifies GeoFence area(s). Items are MAV_CMD_NAV_FENCE_ GeoFence items.\n  MAV_MISSION_TYPE_FENCE = 'MAV_MISSION_TYPE_FENCE',\n  // Specifies the rally points for the vehicle. Rally points are alternative RTL points. Items are MAV_CMD_NAV_RALLY_POINT rally point items.\n  MAV_MISSION_TYPE_RALLY = 'MAV_MISSION_TYPE_RALLY',\n  // Only used in MISSION_CLEAR_ALL to clear all mission types.\n  MAV_MISSION_TYPE_ALL = 'MAV_MISSION_TYPE_ALL',\n}\n\n/**\n * Enumeration of estimator types\n */\nexport enum MavEstimatorType {\n  // Unknown type of the estimator.\n  MAV_ESTIMATOR_TYPE_UNKNOWN = 'MAV_ESTIMATOR_TYPE_UNKNOWN',\n  // This is a naive estimator without any real covariance feedback.\n  MAV_ESTIMATOR_TYPE_NAIVE = 'MAV_ESTIMATOR_TYPE_NAIVE',\n  // Computer vision based estimate. Might be up to scale.\n  MAV_ESTIMATOR_TYPE_VISION = 'MAV_ESTIMATOR_TYPE_VISION',\n  // Visual-inertial estimate.\n  MAV_ESTIMATOR_TYPE_VIO = 'MAV_ESTIMATOR_TYPE_VIO',\n  // Plain GPS estimate.\n  MAV_ESTIMATOR_TYPE_GPS = 'MAV_ESTIMATOR_TYPE_GPS',\n  // Estimator integrating GPS and inertial sensing.\n  MAV_ESTIMATOR_TYPE_GPS_INS = 'MAV_ESTIMATOR_TYPE_GPS_INS',\n  // Estimate from external motion capturing system.\n  MAV_ESTIMATOR_TYPE_MOCAP = 'MAV_ESTIMATOR_TYPE_MOCAP',\n  // Estimator based on lidar sensor input.\n  MAV_ESTIMATOR_TYPE_LIDAR = 'MAV_ESTIMATOR_TYPE_LIDAR',\n  // Estimator on autopilot.\n  MAV_ESTIMATOR_TYPE_AUTOPILOT = 'MAV_ESTIMATOR_TYPE_AUTOPILOT',\n}\n\n/**\n * Enumeration of battery types\n */\nexport enum MavBatteryType {\n  // Not specified.\n  MAV_BATTERY_TYPE_UNKNOWN = 'MAV_BATTERY_TYPE_UNKNOWN',\n  // Lithium polymer battery\n  MAV_BATTERY_TYPE_LIPO = 'MAV_BATTERY_TYPE_LIPO',\n  // Lithium-iron-phosphate battery\n  MAV_BATTERY_TYPE_LIFE = 'MAV_BATTERY_TYPE_LIFE',\n  // Lithium-ION battery\n  MAV_BATTERY_TYPE_LION = 'MAV_BATTERY_TYPE_LION',\n  // Nickel metal hydride battery\n  MAV_BATTERY_TYPE_NIMH = 'MAV_BATTERY_TYPE_NIMH',\n}\n\n/**\n * Enumeration of battery functions\n */\nexport enum MavBatteryFunction {\n  // Battery function is unknown\n  MAV_BATTERY_FUNCTION_UNKNOWN = 'MAV_BATTERY_FUNCTION_UNKNOWN',\n  // Battery supports all flight systems\n  MAV_BATTERY_FUNCTION_ALL = 'MAV_BATTERY_FUNCTION_ALL',\n  // Battery for the propulsion system\n  MAV_BATTERY_FUNCTION_PROPULSION = 'MAV_BATTERY_FUNCTION_PROPULSION',\n  // Avionics battery\n  MAV_BATTERY_FUNCTION_AVIONICS = 'MAV_BATTERY_FUNCTION_AVIONICS',\n  // Payload battery\n  MAV_BATTERY_TYPE_PAYLOAD = 'MAV_BATTERY_TYPE_PAYLOAD',\n}\n\n/**\n * Enumeration for battery charge states.\n */\nexport enum MavBatteryChargeState {\n  // Low battery state is not provided\n  MAV_BATTERY_CHARGE_STATE_UNDEFINED = 'MAV_BATTERY_CHARGE_STATE_UNDEFINED',\n  // Battery is not in low state. Normal operation.\n  MAV_BATTERY_CHARGE_STATE_OK = 'MAV_BATTERY_CHARGE_STATE_OK',\n  // Battery state is low, warn and monitor close.\n  MAV_BATTERY_CHARGE_STATE_LOW = 'MAV_BATTERY_CHARGE_STATE_LOW',\n  // Battery state is critical, return or abort immediately.\n  MAV_BATTERY_CHARGE_STATE_CRITICAL = 'MAV_BATTERY_CHARGE_STATE_CRITICAL',\n  // Battery state is too low for ordinary abort sequence. Perform fastest possible emergency stop to prevent damage.\n  MAV_BATTERY_CHARGE_STATE_EMERGENCY = 'MAV_BATTERY_CHARGE_STATE_EMERGENCY',\n  // Battery failed, damage unavoidable.\n  MAV_BATTERY_CHARGE_STATE_FAILED = 'MAV_BATTERY_CHARGE_STATE_FAILED',\n  // Battery is diagnosed to be defective or an error occurred, usage is discouraged / prohibited.\n  MAV_BATTERY_CHARGE_STATE_UNHEALTHY = 'MAV_BATTERY_CHARGE_STATE_UNHEALTHY',\n  // Battery is charging.\n  MAV_BATTERY_CHARGE_STATE_CHARGING = 'MAV_BATTERY_CHARGE_STATE_CHARGING',\n}\n\n/**\n * Enumeration of VTOL states\n */\nexport enum MavVtolState {\n  // MAV is not configured as VTOL\n  MAV_VTOL_STATE_UNDEFINED = 'MAV_VTOL_STATE_UNDEFINED',\n  // VTOL is in transition from multicopter to fixed-wing\n  MAV_VTOL_STATE_TRANSITION_TO_FW = 'MAV_VTOL_STATE_TRANSITION_TO_FW',\n  // VTOL is in transition from fixed-wing to multicopter\n  MAV_VTOL_STATE_TRANSITION_TO_MC = 'MAV_VTOL_STATE_TRANSITION_TO_MC',\n  // VTOL is in multicopter state\n  MAV_VTOL_STATE_MC = 'MAV_VTOL_STATE_MC',\n  // VTOL is in fixed-wing state\n  MAV_VTOL_STATE_FW = 'MAV_VTOL_STATE_FW',\n}\n\n/**\n *\n */\nexport enum MavLandedState {\n  // MAV landed state is unknown\n  MAV_LANDED_STATE_UNDEFINED = 'MAV_LANDED_STATE_UNDEFINED',\n  // MAV is landed (on ground)\n  MAV_LANDED_STATE_ON_GROUND = 'MAV_LANDED_STATE_ON_GROUND',\n  // MAV is in air\n  MAV_LANDED_STATE_IN_AIR = 'MAV_LANDED_STATE_IN_AIR',\n  // MAV currently taking off\n  MAV_LANDED_STATE_TAKEOFF = 'MAV_LANDED_STATE_TAKEOFF',\n  // MAV currently landing\n  MAV_LANDED_STATE_LANDING = 'MAV_LANDED_STATE_LANDING',\n}\n\n/**\n * Enumeration of landed detector states\n */\nexport enum AdsbAltitudeType {\n  // Altitude reported from a Baro source using QNH reference\n  ADSB_ALTITUDE_TYPE_PRESSURE_QNH = 'ADSB_ALTITUDE_TYPE_PRESSURE_QNH',\n  // Altitude reported from a GNSS source\n  ADSB_ALTITUDE_TYPE_GEOMETRIC = 'ADSB_ALTITUDE_TYPE_GEOMETRIC',\n}\n\n/**\n * ADSB classification for the type of vehicle emitting the transponder signal\n */\nexport enum AdsbEmitterType {\n  ADSB_EMITTER_TYPE_NO_INFO = 'ADSB_EMITTER_TYPE_NO_INFO',\n  ADSB_EMITTER_TYPE_LIGHT = 'ADSB_EMITTER_TYPE_LIGHT',\n  ADSB_EMITTER_TYPE_SMALL = 'ADSB_EMITTER_TYPE_SMALL',\n  ADSB_EMITTER_TYPE_LARGE = 'ADSB_EMITTER_TYPE_LARGE',\n  ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE = 'ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE',\n  ADSB_EMITTER_TYPE_HEAVY = 'ADSB_EMITTER_TYPE_HEAVY',\n  ADSB_EMITTER_TYPE_HIGHLY_MANUV = 'ADSB_EMITTER_TYPE_HIGHLY_MANUV',\n  ADSB_EMITTER_TYPE_ROTOCRAFT = 'ADSB_EMITTER_TYPE_ROTOCRAFT',\n  ADSB_EMITTER_TYPE_UNASSIGNED = 'ADSB_EMITTER_TYPE_UNASSIGNED',\n  ADSB_EMITTER_TYPE_GLIDER = 'ADSB_EMITTER_TYPE_GLIDER',\n  ADSB_EMITTER_TYPE_LIGHTER_AIR = 'ADSB_EMITTER_TYPE_LIGHTER_AIR',\n  ADSB_EMITTER_TYPE_PARACHUTE = 'ADSB_EMITTER_TYPE_PARACHUTE',\n  ADSB_EMITTER_TYPE_ULTRA_LIGHT = 'ADSB_EMITTER_TYPE_ULTRA_LIGHT',\n  ADSB_EMITTER_TYPE_UNASSIGNED2 = 'ADSB_EMITTER_TYPE_UNASSIGNED2',\n  ADSB_EMITTER_TYPE_UAV = 'ADSB_EMITTER_TYPE_UAV',\n  ADSB_EMITTER_TYPE_SPACE = 'ADSB_EMITTER_TYPE_SPACE',\n  ADSB_EMITTER_TYPE_UNASSGINED3 = 'ADSB_EMITTER_TYPE_UNASSGINED3',\n  ADSB_EMITTER_TYPE_EMERGENCY_SURFACE = 'ADSB_EMITTER_TYPE_EMERGENCY_SURFACE',\n  ADSB_EMITTER_TYPE_SERVICE_SURFACE = 'ADSB_EMITTER_TYPE_SERVICE_SURFACE',\n  ADSB_EMITTER_TYPE_POINT_OBSTACLE = 'ADSB_EMITTER_TYPE_POINT_OBSTACLE',\n}\n\n/**\n * Bitmap of options for the MAV_CMD_DO_REPOSITION\n */\nexport enum MavDoRepositionFlags {\n  // The aircraft should immediately transition into guided. This should not be set for follow me applications\n  MAV_DO_REPOSITION_FLAGS_CHANGE_MODE = 1,\n}\n\n/**\n * Motor test order flag\n */\nexport enum MotorTestOrder {\n  // default autopilot motor test method\n  MOTOR_TEST_ORDER_DEFAULT = 'MOTOR_TEST_ORDER_DEFAULT',\n  // motor numbers are specified as their index in a predefined vehicle-specific sequence\n  MOTOR_TEST_ORDER_SEQUENCE = 'MOTOR_TEST_ORDER_SEQUENCE',\n  // motor numbers are specified as the output as labeled on the board\n  MOTOR_TEST_ORDER_BOARD = 'MOTOR_TEST_ORDER_BOARD',\n}\n\n/**\n * Motor test type\n */\nexport enum MotorTestThrottleType {\n  // throttle as a percentage from 0 ~ 100\n  MOTOR_TEST_THROTTLE_PERCENT = 'MOTOR_TEST_THROTTLE_PERCENT',\n  // throttle as an absolute PWM value (normally in range of 1000~2000)\n  MOTOR_TEST_THROTTLE_PWM = 'MOTOR_TEST_THROTTLE_PWM',\n  // throttle pass-through from pilot's transmitter\n  MOTOR_TEST_THROTTLE_PILOT = 'MOTOR_TEST_THROTTLE_PILOT',\n  // per-motor compass calibration test\n  MOTOR_TEST_COMPASS_CAL = 'MOTOR_TEST_COMPASS_CAL',\n}\n\n/**\n * Possible actions an aircraft can take to avoid a collision.\n */\nexport enum MavCollisionAction {\n  // Ignore any potential collisions\n  MAV_COLLISION_ACTION_NONE = 'MAV_COLLISION_ACTION_NONE',\n  // Report potential collision\n  MAV_COLLISION_ACTION_REPORT = 'MAV_COLLISION_ACTION_REPORT',\n  // Ascend or Descend to avoid threat\n  MAV_COLLISION_ACTION_ASCEND_OR_DESCEND = 'MAV_COLLISION_ACTION_ASCEND_OR_DESCEND',\n  // Move horizontally to avoid threat\n  MAV_COLLISION_ACTION_MOVE_HORIZONTALLY = 'MAV_COLLISION_ACTION_MOVE_HORIZONTALLY',\n  // Aircraft to move perpendicular to the collision's velocity vector\n  MAV_COLLISION_ACTION_MOVE_PERPENDICULAR = 'MAV_COLLISION_ACTION_MOVE_PERPENDICULAR',\n  // Aircraft to fly directly back to its launch point\n  MAV_COLLISION_ACTION_RTL = 'MAV_COLLISION_ACTION_RTL',\n  // Aircraft to stop in place\n  MAV_COLLISION_ACTION_HOVER = 'MAV_COLLISION_ACTION_HOVER',\n}\n\n/**\n * Aircraft-rated danger from this threat.\n */\nexport enum MavCollisionThreatLevel {\n  // Not a threat\n  MAV_COLLISION_THREAT_LEVEL_NONE = 'MAV_COLLISION_THREAT_LEVEL_NONE',\n  // Craft is mildly concerned about this threat\n  MAV_COLLISION_THREAT_LEVEL_LOW = 'MAV_COLLISION_THREAT_LEVEL_LOW',\n  // Craft is panicking, and may take actions to avoid threat\n  MAV_COLLISION_THREAT_LEVEL_HIGH = 'MAV_COLLISION_THREAT_LEVEL_HIGH',\n}\n\n/**\n * Source of information about this collision.\n */\nexport enum MavCollisionSrc {\n  // ID field references ADSB_VEHICLE packets\n  MAV_COLLISION_SRC_ADSB = 'MAV_COLLISION_SRC_ADSB',\n  // ID field references MAVLink SRC ID\n  MAV_COLLISION_SRC_MAVLINK_GPS_GLOBAL_INT = 'MAV_COLLISION_SRC_MAVLINK_GPS_GLOBAL_INT',\n}\n\n/**\n * Type of GPS fix\n */\nexport enum GpsFixType {\n  // No GPS connected\n  GPS_FIX_TYPE_NO_GPS = 'GPS_FIX_TYPE_NO_GPS',\n  // No position information, GPS is connected\n  GPS_FIX_TYPE_NO_FIX = 'GPS_FIX_TYPE_NO_FIX',\n  // 2D position\n  GPS_FIX_TYPE_2D_FIX = 'GPS_FIX_TYPE_2D_FIX',\n  // 3D position\n  GPS_FIX_TYPE_3D_FIX = 'GPS_FIX_TYPE_3D_FIX',\n  // DGPS/SBAS aided 3D position\n  GPS_FIX_TYPE_DGPS = 'GPS_FIX_TYPE_DGPS',\n  // RTK float, 3D position\n  GPS_FIX_TYPE_RTK_FLOAT = 'GPS_FIX_TYPE_RTK_FLOAT',\n  // RTK Fixed, 3D position\n  GPS_FIX_TYPE_RTK_FIXED = 'GPS_FIX_TYPE_RTK_FIXED',\n  // Static fixed, typically used for base stations\n  GPS_FIX_TYPE_STATIC = 'GPS_FIX_TYPE_STATIC',\n  // PPP, 3D position.\n  GPS_FIX_TYPE_PPP = 'GPS_FIX_TYPE_PPP',\n}\n\n/**\n * RTK GPS baseline coordinate system, used for RTK corrections\n */\nexport enum RtkBaselineCoordinateSystem {\n  // Earth-centered, Earth-fixed\n  RTK_BASELINE_COORDINATE_SYSTEM_ECEF = 'RTK_BASELINE_COORDINATE_SYSTEM_ECEF',\n  // RTK basestation centered, north, east, down\n  RTK_BASELINE_COORDINATE_SYSTEM_NED = 'RTK_BASELINE_COORDINATE_SYSTEM_NED',\n}\n\n/**\n * Type of landing target\n */\nexport enum LandingTargetType {\n  // Landing target signaled by light beacon (ex: IR-LOCK)\n  LANDING_TARGET_TYPE_LIGHT_BEACON = 'LANDING_TARGET_TYPE_LIGHT_BEACON',\n  // Landing target signaled by radio beacon (ex: ILS, NDB)\n  LANDING_TARGET_TYPE_RADIO_BEACON = 'LANDING_TARGET_TYPE_RADIO_BEACON',\n  // Landing target represented by a fiducial marker (ex: ARTag)\n  LANDING_TARGET_TYPE_VISION_FIDUCIAL = 'LANDING_TARGET_TYPE_VISION_FIDUCIAL',\n  // Landing target represented by a pre-defined visual shape/feature (ex: X-marker, H-marker, square)\n  LANDING_TARGET_TYPE_VISION_OTHER = 'LANDING_TARGET_TYPE_VISION_OTHER',\n}\n\n/**\n * Direction of VTOL transition\n */\nexport enum VtolTransitionHeading {\n  // Respect the heading configuration of the vehicle.\n  VTOL_TRANSITION_HEADING_VEHICLE_DEFAULT = 'VTOL_TRANSITION_HEADING_VEHICLE_DEFAULT',\n  // Use the heading pointing towards the next waypoint.\n  VTOL_TRANSITION_HEADING_NEXT_WAYPOINT = 'VTOL_TRANSITION_HEADING_NEXT_WAYPOINT',\n  // Use the heading on takeoff (while sitting on the ground).\n  VTOL_TRANSITION_HEADING_TAKEOFF = 'VTOL_TRANSITION_HEADING_TAKEOFF',\n  // Use the specified heading in parameter 4.\n  VTOL_TRANSITION_HEADING_SPECIFIED = 'VTOL_TRANSITION_HEADING_SPECIFIED',\n  // Use the current heading when reaching takeoff altitude (potentially facing the wind when weather-vaning is active).\n  VTOL_TRANSITION_HEADING_ANY = 'VTOL_TRANSITION_HEADING_ANY',\n}\n\n/**\n * Stream status flags (Bitmap)\n */\nexport enum VideoStreamStatusFlags {\n  // Stream is active (running)\n  VIDEO_STREAM_STATUS_FLAGS_RUNNING = 1,\n  // Stream is thermal imaging\n  VIDEO_STREAM_STATUS_FLAGS_THERMAL = 2,\n}\n\n/**\n * Video stream types\n */\nexport enum VideoStreamType {\n  // Stream is RTSP\n  VIDEO_STREAM_TYPE_RTSP = 'VIDEO_STREAM_TYPE_RTSP',\n  // Stream is RTP UDP (URI gives the port number)\n  VIDEO_STREAM_TYPE_RTPUDP = 'VIDEO_STREAM_TYPE_RTPUDP',\n  // Stream is MPEG on TCP\n  VIDEO_STREAM_TYPE_TCP_MPEG = 'VIDEO_STREAM_TYPE_TCP_MPEG',\n  // Stream is h.264 on MPEG TS (URI gives the port number)\n  VIDEO_STREAM_TYPE_MPEG_TS_H264 = 'VIDEO_STREAM_TYPE_MPEG_TS_H264',\n}\n\n/**\n * Zoom types for MAV_CMD_SET_CAMERA_ZOOM\n */\nexport enum CameraZoomType {\n  // Zoom one step increment (-1 for wide, 1 for tele)\n  ZOOM_TYPE_STEP = 'ZOOM_TYPE_STEP',\n  // Continuous zoom up/down until stopped (-1 for wide, 1 for tele, 0 to stop zooming)\n  ZOOM_TYPE_CONTINUOUS = 'ZOOM_TYPE_CONTINUOUS',\n  // Zoom value as proportion of full camera range (a value between 0.0 and 100.0)\n  ZOOM_TYPE_RANGE = 'ZOOM_TYPE_RANGE',\n  // Zoom value/variable focal length in milimetres. Note that there is no message to get the valid zoom range of the camera, so this can type can only be used for cameras where the zoom range is known (implying that this cannot reliably be used in a GCS for an arbitrary camera)\n  ZOOM_TYPE_FOCAL_LENGTH = 'ZOOM_TYPE_FOCAL_LENGTH',\n}\n\n/**\n * Focus types for MAV_CMD_SET_CAMERA_FOCUS\n */\nexport enum SetFocusType {\n  // Focus one step increment (-1 for focusing in, 1 for focusing out towards infinity).\n  FOCUS_TYPE_STEP = 'FOCUS_TYPE_STEP',\n  // Continuous focus up/down until stopped (-1 for focusing in, 1 for focusing out towards infinity, 0 to stop focusing)\n  FOCUS_TYPE_CONTINUOUS = 'FOCUS_TYPE_CONTINUOUS',\n  // Focus value as proportion of full camera focus range (a value between 0.0 and 100.0)\n  FOCUS_TYPE_RANGE = 'FOCUS_TYPE_RANGE',\n  // Focus value in metres. Note that there is no message to get the valid focus range of the camera, so this can type can only be used for cameras where the range is known (implying that this cannot reliably be used in a GCS for an arbitrary camera).\n  FOCUS_TYPE_METERS = 'FOCUS_TYPE_METERS',\n}\n\n/**\n * Result from a PARAM_EXT_SET message.\n */\nexport enum ParamAck {\n  // Parameter value ACCEPTED and SET\n  PARAM_ACK_ACCEPTED = 'PARAM_ACK_ACCEPTED',\n  // Parameter value UNKNOWN/UNSUPPORTED\n  PARAM_ACK_VALUE_UNSUPPORTED = 'PARAM_ACK_VALUE_UNSUPPORTED',\n  // Parameter failed to set\n  PARAM_ACK_FAILED = 'PARAM_ACK_FAILED',\n  // Parameter value received but not yet validated or set. A subsequent PARAM_EXT_ACK will follow once operation is completed with the actual result. These are for parameters that may take longer to set. Instead of waiting for an ACK and potentially timing out, you will immediately receive this response to let you know it was received.\n  PARAM_ACK_IN_PROGRESS = 'PARAM_ACK_IN_PROGRESS',\n}\n\n/**\n * Camera Modes.\n */\nexport enum CameraMode {\n  // Camera is in image/photo capture mode.\n  CAMERA_MODE_IMAGE = 'CAMERA_MODE_IMAGE',\n  // Camera is in video capture mode.\n  CAMERA_MODE_VIDEO = 'CAMERA_MODE_VIDEO',\n  // Camera is in image survey capture mode. It allows for camera controller to do specific settings for surveys.\n  CAMERA_MODE_IMAGE_SURVEY = 'CAMERA_MODE_IMAGE_SURVEY',\n}\n\n/**\n * Arm denied reason\n */\nexport enum MavArmAuthDeniedReason {\n  // Not a specific reason\n  MAV_ARM_AUTH_DENIED_REASON_GENERIC = 'MAV_ARM_AUTH_DENIED_REASON_GENERIC',\n  // Authorizer will send the error as string to GCS\n  MAV_ARM_AUTH_DENIED_REASON_NONE = 'MAV_ARM_AUTH_DENIED_REASON_NONE',\n  // At least one waypoint have a invalid value\n  MAV_ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT = 'MAV_ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT',\n  // Timeout in the authorizer process(in case it depends on network)\n  MAV_ARM_AUTH_DENIED_REASON_TIMEOUT = 'MAV_ARM_AUTH_DENIED_REASON_TIMEOUT',\n  // Airspace of the mission in use by another vehicle, second result parameter can have the waypoint id that caused it to be denied.\n  MAV_ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE = 'MAV_ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE',\n  // Weather is not good to fly\n  MAV_ARM_AUTH_DENIED_REASON_BAD_WEATHER = 'MAV_ARM_AUTH_DENIED_REASON_BAD_WEATHER',\n}\n\n/**\n * RC type\n */\nexport enum RcType {\n  // Spektrum DSM2\n  RC_TYPE_SPEKTRUM_DSM2 = 'RC_TYPE_SPEKTRUM_DSM2',\n  // Spektrum DSMX\n  RC_TYPE_SPEKTRUM_DSMX = 'RC_TYPE_SPEKTRUM_DSMX',\n}\n\n/**\n * Airborne status of UAS.\n */\nexport enum UtmFlightState {\n  // The flight state can't be determined.\n  UTM_FLIGHT_STATE_UNKNOWN = 'UTM_FLIGHT_STATE_UNKNOWN',\n  // UAS on ground.\n  UTM_FLIGHT_STATE_GROUND = 'UTM_FLIGHT_STATE_GROUND',\n  // UAS airborne.\n  UTM_FLIGHT_STATE_AIRBORNE = 'UTM_FLIGHT_STATE_AIRBORNE',\n  // UAS is in an emergency flight state.\n  UTM_FLIGHT_STATE_EMERGENCY = 'UTM_FLIGHT_STATE_EMERGENCY',\n  // UAS has no active controls.\n  UTM_FLIGHT_STATE_NOCTRL = 'UTM_FLIGHT_STATE_NOCTRL',\n}\n\n/**\n * Cellular network radio type\n */\nexport enum CellularNetworkRadioType {\n  CELLULAR_NETWORK_RADIO_TYPE_NONE = 'CELLULAR_NETWORK_RADIO_TYPE_NONE',\n  CELLULAR_NETWORK_RADIO_TYPE_GSM = 'CELLULAR_NETWORK_RADIO_TYPE_GSM',\n  CELLULAR_NETWORK_RADIO_TYPE_CDMA = 'CELLULAR_NETWORK_RADIO_TYPE_CDMA',\n  CELLULAR_NETWORK_RADIO_TYPE_WCDMA = 'CELLULAR_NETWORK_RADIO_TYPE_WCDMA',\n  CELLULAR_NETWORK_RADIO_TYPE_LTE = 'CELLULAR_NETWORK_RADIO_TYPE_LTE',\n}\n\n/**\n * These flags encode the cellular network status\n */\nexport enum CellularStatusFlag {\n  // State unknown or not reportable.\n  CELLULAR_STATUS_FLAG_UNKNOWN = 0,\n  // Modem is unusable\n  CELLULAR_STATUS_FLAG_FAILED = 1,\n  // Modem is being initialized\n  CELLULAR_STATUS_FLAG_INITIALIZING = 2,\n  // Modem is locked\n  CELLULAR_STATUS_FLAG_LOCKED = 3,\n  // Modem is not enabled and is powered down\n  CELLULAR_STATUS_FLAG_DISABLED = 4,\n  // Modem is currently transitioning to the CELLULAR_STATUS_FLAG_DISABLED state\n  CELLULAR_STATUS_FLAG_DISABLING = 5,\n  // Modem is currently transitioning to the CELLULAR_STATUS_FLAG_ENABLED state\n  CELLULAR_STATUS_FLAG_ENABLING = 6,\n  // Modem is enabled and powered on but not registered with a network provider and not available for data connections\n  CELLULAR_STATUS_FLAG_ENABLED = 7,\n  // Modem is searching for a network provider to register\n  CELLULAR_STATUS_FLAG_SEARCHING = 8,\n  // Modem is registered with a network provider, and data connections and messaging may be available for use\n  CELLULAR_STATUS_FLAG_REGISTERED = 9,\n  // Modem is disconnecting and deactivating the last active packet data bearer. This state will not be entered if more than one packet data bearer is active and one of the active bearers is deactivated\n  CELLULAR_STATUS_FLAG_DISCONNECTING = 10,\n  // Modem is activating and connecting the first packet data bearer. Subsequent bearer activations when another bearer is already active do not cause this state to be entered\n  CELLULAR_STATUS_FLAG_CONNECTING = 11,\n  // One or more packet data bearers is active and connected\n  CELLULAR_STATUS_FLAG_CONNECTED = 12,\n}\n\n/**\n * These flags are used to diagnose the failure state of CELLULAR_STATUS\n */\nexport enum CellularNetworkFailedReason {\n  // No error\n  CELLULAR_NETWORK_FAILED_REASON_NONE = 'CELLULAR_NETWORK_FAILED_REASON_NONE',\n  // Error state is unknown\n  CELLULAR_NETWORK_FAILED_REASON_UNKNOWN = 'CELLULAR_NETWORK_FAILED_REASON_UNKNOWN',\n  // SIM is required for the modem but missing\n  CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING = 'CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING',\n  // SIM is available, but not usuable for connection\n  CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR = 'CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR',\n}\n\n/**\n * Precision land modes (used in MAV_CMD_NAV_LAND).\n */\nexport enum PrecisionLandMode {\n  // Normal (non-precision) landing.\n  PRECISION_LAND_MODE_DISABLED = 'PRECISION_LAND_MODE_DISABLED',\n  // Use precision landing if beacon detected when land command accepted, otherwise land normally.\n  PRECISION_LAND_MODE_OPPORTUNISTIC = 'PRECISION_LAND_MODE_OPPORTUNISTIC',\n  // Use precision landing, searching for beacon if not found when land command accepted (land normally if beacon cannot be found).\n  PRECISION_LAND_MODE_REQUIRED = 'PRECISION_LAND_MODE_REQUIRED',\n}\n\n/**\n * Parachute actions. Trigger release and enable/disable auto-release.\n */\nexport enum ParachuteAction {\n  // Disable auto-release of parachute (i.e. release triggered by crash detectors).\n  PARACHUTE_DISABLE = 'PARACHUTE_DISABLE',\n  // Enable auto-release of parachute.\n  PARACHUTE_ENABLE = 'PARACHUTE_ENABLE',\n  // Release parachute and kill motors.\n  PARACHUTE_RELEASE = 'PARACHUTE_RELEASE',\n}\n\n/**\n * Runnel payload type\n */\nexport enum MavTunnelPayloadType {\n  // Encoding of payload unknown.\n  MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN = 'MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8',\n  // Registered for STorM32 gimbal controller.\n  MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9 = 'MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9',\n}\n\n/**\n * Odid Id type\n */\nexport enum MavOdidIdType {\n  // No type defined.\n  MAV_ODID_ID_TYPE_NONE = 'MAV_ODID_ID_TYPE_NONE',\n  // Manufacturer Serial Number (ANSI/CTA-2063 format).\n  MAV_ODID_ID_TYPE_SERIAL_NUMBER = 'MAV_ODID_ID_TYPE_SERIAL_NUMBER',\n  // CAA (Civil Aviation Authority) registered ID. Format: [ICAO Country Code].[CAA Assigned ID].\n  MAV_ODID_ID_TYPE_CAA_REGISTRATION_ID = 'MAV_ODID_ID_TYPE_CAA_REGISTRATION_ID',\n  // UTM (Unmanned Traffic Management) assigned UUID (RFC4122).\n  MAV_ODID_ID_TYPE_UTM_ASSIGNED_UUID = 'MAV_ODID_ID_TYPE_UTM_ASSIGNED_UUID',\n}\n\n/**\n * Odid Ua type\n */\nexport enum MavOdidUaType {\n  // No UA (Unmanned Aircraft) type defined.\n  MAV_ODID_UA_TYPE_NONE = 'MAV_ODID_UA_TYPE_NONE',\n  // Aeroplane/Airplane. Fixed wing.\n  MAV_ODID_UA_TYPE_AEROPLANE = 'MAV_ODID_UA_TYPE_AEROPLANE',\n  // Helicopter or multirotor.\n  MAV_ODID_UA_TYPE_HELICOPTER_OR_MULTIROTOR = 'MAV_ODID_UA_TYPE_HELICOPTER_OR_MULTIROTOR',\n  // Gyroplane.\n  MAV_ODID_UA_TYPE_GYROPLANE = 'MAV_ODID_UA_TYPE_GYROPLANE',\n  // VTOL (Vertical Take-Off and Landing). Fixed wing aircraft that can take off vertically.\n  MAV_ODID_UA_TYPE_HYBRID_LIFT = 'MAV_ODID_UA_TYPE_HYBRID_LIFT',\n  // Ornithopter.\n  MAV_ODID_UA_TYPE_ORNITHOPTER = 'MAV_ODID_UA_TYPE_ORNITHOPTER',\n  // Glider.\n  MAV_ODID_UA_TYPE_GLIDER = 'MAV_ODID_UA_TYPE_GLIDER',\n  // Kite.\n  MAV_ODID_UA_TYPE_KITE = 'MAV_ODID_UA_TYPE_KITE',\n  // Free Balloon.\n  MAV_ODID_UA_TYPE_FREE_BALLOON = 'MAV_ODID_UA_TYPE_FREE_BALLOON',\n  // Captive Balloon.\n  MAV_ODID_UA_TYPE_CAPTIVE_BALLOON = 'MAV_ODID_UA_TYPE_CAPTIVE_BALLOON',\n  // Airship. E.g. a blimp.\n  MAV_ODID_UA_TYPE_AIRSHIP = 'MAV_ODID_UA_TYPE_AIRSHIP',\n  // Free Fall/Parachute (unpowered).\n  MAV_ODID_UA_TYPE_FREE_FALL_PARACHUTE = 'MAV_ODID_UA_TYPE_FREE_FALL_PARACHUTE',\n  // Rocket.\n  MAV_ODID_UA_TYPE_ROCKET = 'MAV_ODID_UA_TYPE_ROCKET',\n  // Tethered powered aircraft.\n  MAV_ODID_UA_TYPE_TETHERED_POWERED_AIRCRAFT = 'MAV_ODID_UA_TYPE_TETHERED_POWERED_AIRCRAFT',\n  // Ground Obstacle.\n  MAV_ODID_UA_TYPE_GROUND_OBSTACLE = 'MAV_ODID_UA_TYPE_GROUND_OBSTACLE',\n  // Other type of aircraft not listed earlier.\n  MAV_ODID_UA_TYPE_OTHER = 'MAV_ODID_UA_TYPE_OTHER',\n}\n\n/**\n * Odid status\n */\nexport enum MavOdidStatus {\n  // The status of the (UA) Unmanned Aircraft is undefined.\n  MAV_ODID_STATUS_UNDECLARED = 'MAV_ODID_STATUS_UNDECLARED',\n  // The UA is on the ground.\n  MAV_ODID_STATUS_GROUND = 'MAV_ODID_STATUS_GROUND',\n  // The UA is in the air.\n  MAV_ODID_STATUS_AIRBORNE = 'MAV_ODID_STATUS_AIRBORNE',\n  // The UA is having an emergency.\n  MAV_ODID_STATUS_EMERGENCY = 'MAV_ODID_STATUS_EMERGENCY',\n}\n\n/**\n * Odid geight reference\n */\nexport enum MavOdidHeightRef {\n  // The height field is relative to the take-off location.\n  MAV_ODID_HEIGHT_REF_OVER_TAKEOFF = 'MAV_ODID_HEIGHT_REF_OVER_TAKEOFF',\n  // The height field is relative to ground.\n  MAV_ODID_HEIGHT_REF_OVER_GROUND = 'MAV_ODID_HEIGHT_REF_OVER_GROUND',\n}\n\n/**\n * Odid hor acc\n */\nexport enum MavOdidHorAcc {\n  // The horizontal accuracy is unknown.\n  MAV_ODID_HOR_ACC_UNKNOWN = 'MAV_ODID_HOR_ACC_UNKNOWN',\n  // The horizontal accuracy is smaller than 10 Nautical Miles. 18.52 km.\n  MAV_ODID_HOR_ACC_10NM = 'MAV_ODID_HOR_ACC_10NM',\n  // The horizontal accuracy is smaller than 4 Nautical Miles. 7.408 km.\n  MAV_ODID_HOR_ACC_4NM = 'MAV_ODID_HOR_ACC_4NM',\n  // The horizontal accuracy is smaller than 2 Nautical Miles. 3.704 km.\n  MAV_ODID_HOR_ACC_2NM = 'MAV_ODID_HOR_ACC_2NM',\n  // The horizontal accuracy is smaller than 1 Nautical Miles. 1.852 km.\n  MAV_ODID_HOR_ACC_1NM = 'MAV_ODID_HOR_ACC_1NM',\n  // The horizontal accuracy is smaller than 0.5 Nautical Miles. 926 m.\n  MAV_ODID_HOR_ACC_0_5NM = 'MAV_ODID_HOR_ACC_0_5NM',\n  // The horizontal accuracy is smaller than 0.3 Nautical Miles. 555.6 m.\n  MAV_ODID_HOR_ACC_0_3NM = 'MAV_ODID_HOR_ACC_0_3NM',\n  // The horizontal accuracy is smaller than 0.1 Nautical Miles. 185.2 m.\n  MAV_ODID_HOR_ACC_0_1NM = 'MAV_ODID_HOR_ACC_0_1NM',\n  // The horizontal accuracy is smaller than 0.05 Nautical Miles. 92.6 m.\n  MAV_ODID_HOR_ACC_0_05NM = 'MAV_ODID_HOR_ACC_0_05NM',\n  // The horizontal accuracy is smaller than 30 meter.\n  MAV_ODID_HOR_ACC_30_METER = 'MAV_ODID_HOR_ACC_30_METER',\n  // The horizontal accuracy is smaller than 10 meter.\n  MAV_ODID_HOR_ACC_10_METER = 'MAV_ODID_HOR_ACC_10_METER',\n  // The horizontal accuracy is smaller than 3 meter.\n  MAV_ODID_HOR_ACC_3_METER = 'MAV_ODID_HOR_ACC_3_METER',\n  // The horizontal accuracy is smaller than 1 meter.\n  MAV_ODID_HOR_ACC_1_METER = 'MAV_ODID_HOR_ACC_1_METER',\n}\n\n/**\n * Odid ver acc\n */\nexport enum MavOdidVerAcc {\n  // The vertical accuracy is unknown.\n  MAV_ODID_VER_ACC_UNKNOWN = 'MAV_ODID_VER_ACC_UNKNOWN',\n  // The vertical accuracy is smaller than 150 meter.\n  MAV_ODID_VER_ACC_150_METER = 'MAV_ODID_VER_ACC_150_METER',\n  // The vertical accuracy is smaller than 45 meter.\n  MAV_ODID_VER_ACC_45_METER = 'MAV_ODID_VER_ACC_45_METER',\n  // The vertical accuracy is smaller than 25 meter.\n  MAV_ODID_VER_ACC_25_METER = 'MAV_ODID_VER_ACC_25_METER',\n  // The vertical accuracy is smaller than 10 meter.\n  MAV_ODID_VER_ACC_10_METER = 'MAV_ODID_VER_ACC_10_METER',\n  // The vertical accuracy is smaller than 3 meter.\n  MAV_ODID_VER_ACC_3_METER = 'MAV_ODID_VER_ACC_3_METER',\n  // The vertical accuracy is smaller than 1 meter.\n  MAV_ODID_VER_ACC_1_METER = 'MAV_ODID_VER_ACC_1_METER',\n}\n\n/**\n * Odid speed acc\n */\nexport enum MavOdidSpeedAcc {\n  // The speed accuracy is unknown.\n  MAV_ODID_SPEED_ACC_UNKNOWN = 'MAV_ODID_SPEED_ACC_UNKNOWN',\n  // The speed accuracy is smaller than 10 meters per second.\n  MAV_ODID_SPEED_ACC_10_METERS_PER_SECOND = 'MAV_ODID_SPEED_ACC_10_METERS_PER_SECOND',\n  // The speed accuracy is smaller than 3 meters per second.\n  MAV_ODID_SPEED_ACC_3_METERS_PER_SECOND = 'MAV_ODID_SPEED_ACC_3_METERS_PER_SECOND',\n  // The speed accuracy is smaller than 1 meters per second.\n  MAV_ODID_SPEED_ACC_1_METERS_PER_SECOND = 'MAV_ODID_SPEED_ACC_1_METERS_PER_SECOND',\n  // The speed accuracy is smaller than 0.3 meters per second.\n  MAV_ODID_SPEED_ACC_0_3_METERS_PER_SECOND = 'MAV_ODID_SPEED_ACC_0_3_METERS_PER_SECOND',\n}\n\n/**\n * Odid time acc\n */\nexport enum MavOdidTimeAcc {\n  // The timestamp accuracy is unknown.\n  MAV_ODID_TIME_ACC_UNKNOWN = 'MAV_ODID_TIME_ACC_UNKNOWN',\n  // The timestamp accuracy is smaller than or equal to 0.1 second.\n  MAV_ODID_TIME_ACC_0_1_SECOND = 'MAV_ODID_TIME_ACC_0_1_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.2 second.\n  MAV_ODID_TIME_ACC_0_2_SECOND = 'MAV_ODID_TIME_ACC_0_2_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.3 second.\n  MAV_ODID_TIME_ACC_0_3_SECOND = 'MAV_ODID_TIME_ACC_0_3_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.4 second.\n  MAV_ODID_TIME_ACC_0_4_SECOND = 'MAV_ODID_TIME_ACC_0_4_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.5 second.\n  MAV_ODID_TIME_ACC_0_5_SECOND = 'MAV_ODID_TIME_ACC_0_5_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.6 second.\n  MAV_ODID_TIME_ACC_0_6_SECOND = 'MAV_ODID_TIME_ACC_0_6_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.7 second.\n  MAV_ODID_TIME_ACC_0_7_SECOND = 'MAV_ODID_TIME_ACC_0_7_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.8 second.\n  MAV_ODID_TIME_ACC_0_8_SECOND = 'MAV_ODID_TIME_ACC_0_8_SECOND',\n  // The timestamp accuracy is smaller than or equal to 0.9 second.\n  MAV_ODID_TIME_ACC_0_9_SECOND = 'MAV_ODID_TIME_ACC_0_9_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.0 second.\n  MAV_ODID_TIME_ACC_1_0_SECOND = 'MAV_ODID_TIME_ACC_1_0_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.1 second.\n  MAV_ODID_TIME_ACC_1_1_SECOND = 'MAV_ODID_TIME_ACC_1_1_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.2 second.\n  MAV_ODID_TIME_ACC_1_2_SECOND = 'MAV_ODID_TIME_ACC_1_2_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.3 second.\n  MAV_ODID_TIME_ACC_1_3_SECOND = 'MAV_ODID_TIME_ACC_1_3_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.4 second.\n  MAV_ODID_TIME_ACC_1_4_SECOND = 'MAV_ODID_TIME_ACC_1_4_SECOND',\n  // The timestamp accuracy is smaller than or equal to 1.5 second.\n  MAV_ODID_TIME_ACC_1_5_SECOND = 'MAV_ODID_TIME_ACC_1_5_SECOND',\n}\n\n/**\n * Odid auth type\n */\nexport enum MavOdidAuthType {\n  // No authentication type is specified.\n  MAV_ODID_AUTH_TYPE_NONE = 'MAV_ODID_AUTH_TYPE_NONE',\n  // Signature for the UAS (Unmanned Aircraft System) ID.\n  MAV_ODID_AUTH_TYPE_UAS_ID_SIGNATURE = 'MAV_ODID_AUTH_TYPE_UAS_ID_SIGNATURE',\n  // Signature for the Operator ID.\n  MAV_ODID_AUTH_TYPE_OPERATOR_ID_SIGNATURE = 'MAV_ODID_AUTH_TYPE_OPERATOR_ID_SIGNATURE',\n  // Signature for the entire message set.\n  MAV_ODID_AUTH_TYPE_MESSAGE_SET_SIGNATURE = 'MAV_ODID_AUTH_TYPE_MESSAGE_SET_SIGNATURE',\n  // Authentication is provided by Network Remote ID.\n  MAV_ODID_AUTH_TYPE_NETWORK_REMOTE_ID = 'MAV_ODID_AUTH_TYPE_NETWORK_REMOTE_ID',\n}\n\n/**\n * Odid Desc type\n */\nexport enum MavOdidDescType {\n  // Free-form text description of the purpose of the flight.\n  MAV_ODID_DESC_TYPE_TEXT = 'MAV_ODID_DESC_TYPE_TEXT',\n}\n\n/**\n * Odid operator location type\n */\nexport enum MavOdidOperatorLocationType {\n  // The location of the operator is the same as the take-off location.\n  MAV_ODID_OPERATOR_LOCATION_TYPE_TAKEOFF = 'MAV_ODID_OPERATOR_LOCATION_TYPE_TAKEOFF',\n  // The location of the operator is based on live GNSS data.\n  MAV_ODID_OPERATOR_LOCATION_TYPE_LIVE_GNSS = 'MAV_ODID_OPERATOR_LOCATION_TYPE_LIVE_GNSS',\n  // The location of the operator is a fixed location.\n  MAV_ODID_OPERATOR_LOCATION_TYPE_FIXED = 'MAV_ODID_OPERATOR_LOCATION_TYPE_FIXED',\n}\n\n/**\n * Odid classification type\n */\nexport enum MavOdidClassificationType {\n  // The classification type for the UA is undeclared.\n  MAV_ODID_CLASSIFICATION_TYPE_UNDECLARED = 'MAV_ODID_CLASSIFICATION_TYPE_UNDECLARED',\n  // The classification type for the UA follows EU (European Union) specifications.\n  MAV_ODID_CLASSIFICATION_TYPE_EU = 'MAV_ODID_CLASSIFICATION_TYPE_EU',\n}\n\n/**\n * Odid category EU\n */\nexport enum MavOdidCategoryEu {\n  // The category for the UA, according to the EU specification, is undeclared.\n  MAV_ODID_CATEGORY_EU_UNDECLARED = 'MAV_ODID_CATEGORY_EU_UNDECLARED',\n  // The category for the UA, according to the EU specification, is the Open category.\n  MAV_ODID_CATEGORY_EU_OPEN = 'MAV_ODID_CATEGORY_EU_OPEN',\n  // The category for the UA, according to the EU specification, is the Specific category.\n  MAV_ODID_CATEGORY_EU_SPECIFIC = 'MAV_ODID_CATEGORY_EU_SPECIFIC',\n  // The category for the UA, according to the EU specification, is the Certified category.\n  MAV_ODID_CATEGORY_EU_CERTIFIED = 'MAV_ODID_CATEGORY_EU_CERTIFIED',\n}\n\n/**\n * Odid classification EU\n */\nexport enum MavOdidClassEu {\n  // The class for the UA, according to the EU specification, is undeclared.\n  MAV_ODID_CLASS_EU_UNDECLARED = 'MAV_ODID_CLASS_EU_UNDECLARED',\n  // The class for the UA, according to the EU specification, is Class 0.\n  MAV_ODID_CLASS_EU_CLASS_0 = 'MAV_ODID_CLASS_EU_CLASS_0',\n  // The class for the UA, according to the EU specification, is Class 1.\n  MAV_ODID_CLASS_EU_CLASS_1 = 'MAV_ODID_CLASS_EU_CLASS_1',\n  // The class for the UA, according to the EU specification, is Class 2.\n  MAV_ODID_CLASS_EU_CLASS_2 = 'MAV_ODID_CLASS_EU_CLASS_2',\n  // The class for the UA, according to the EU specification, is Class 3.\n  MAV_ODID_CLASS_EU_CLASS_3 = 'MAV_ODID_CLASS_EU_CLASS_3',\n  // The class for the UA, according to the EU specification, is Class 4.\n  MAV_ODID_CLASS_EU_CLASS_4 = 'MAV_ODID_CLASS_EU_CLASS_4',\n  // The class for the UA, according to the EU specification, is Class 5.\n  MAV_ODID_CLASS_EU_CLASS_5 = 'MAV_ODID_CLASS_EU_CLASS_5',\n  // The class for the UA, according to the EU specification, is Class 6.\n  MAV_ODID_CLASS_EU_CLASS_6 = 'MAV_ODID_CLASS_EU_CLASS_6',\n}\n\n/**\n * Odid operator ID type\n */\nexport enum MavOdidOperatorIdType {\n  // CAA (Civil Aviation Authority) registered operator ID.\n  MAV_ODID_OPERATOR_ID_TYPE_CAA = 'MAV_ODID_OPERATOR_ID_TYPE_CAA',\n}\n\n/**\n * Component capability flags (Bitmap)\n */\nexport enum ComponentCapFlags {\n  // Component has parameters, and supports the parameter protocol (PARAM messages).\n  COMPONENT_CAP_FLAGS_PARAM = 1,\n  // Component has parameters, and supports the extended parameter protocol (PARAM_EXT messages).\n  COMPONENT_CAP_FLAGS_PARAM_EXT = 2,\n}\n\n/**\n * Type of AIS vessel, enum duplicated from AIS standard, https://gpsd.gitlab.io/gpsd/AIVDM.html\n */\nexport enum AisType {\n  // Not available (default).\n  AIS_TYPE_UNKNOWN = 'AIS_TYPE_UNKNOWN',\n  AIS_TYPE_RESERVED_1 = 'AIS_TYPE_RESERVED_1',\n  AIS_TYPE_RESERVED_2 = 'AIS_TYPE_RESERVED_2',\n  AIS_TYPE_RESERVED_3 = 'AIS_TYPE_RESERVED_3',\n  AIS_TYPE_RESERVED_4 = 'AIS_TYPE_RESERVED_4',\n  AIS_TYPE_RESERVED_5 = 'AIS_TYPE_RESERVED_5',\n  AIS_TYPE_RESERVED_6 = 'AIS_TYPE_RESERVED_6',\n  AIS_TYPE_RESERVED_7 = 'AIS_TYPE_RESERVED_7',\n  AIS_TYPE_RESERVED_8 = 'AIS_TYPE_RESERVED_8',\n  AIS_TYPE_RESERVED_9 = 'AIS_TYPE_RESERVED_9',\n  AIS_TYPE_RESERVED_10 = 'AIS_TYPE_RESERVED_10',\n  AIS_TYPE_RESERVED_11 = 'AIS_TYPE_RESERVED_11',\n  AIS_TYPE_RESERVED_12 = 'AIS_TYPE_RESERVED_12',\n  AIS_TYPE_RESERVED_13 = 'AIS_TYPE_RESERVED_13',\n  AIS_TYPE_RESERVED_14 = 'AIS_TYPE_RESERVED_14',\n  AIS_TYPE_RESERVED_15 = 'AIS_TYPE_RESERVED_15',\n  AIS_TYPE_RESERVED_16 = 'AIS_TYPE_RESERVED_16',\n  AIS_TYPE_RESERVED_17 = 'AIS_TYPE_RESERVED_17',\n  AIS_TYPE_RESERVED_18 = 'AIS_TYPE_RESERVED_18',\n  AIS_TYPE_RESERVED_19 = 'AIS_TYPE_RESERVED_19',\n  // Wing In Ground effect.\n  AIS_TYPE_WIG = 'AIS_TYPE_WIG',\n  AIS_TYPE_WIG_HAZARDOUS_A = 'AIS_TYPE_WIG_HAZARDOUS_A',\n  AIS_TYPE_WIG_HAZARDOUS_B = 'AIS_TYPE_WIG_HAZARDOUS_B',\n  AIS_TYPE_WIG_HAZARDOUS_C = 'AIS_TYPE_WIG_HAZARDOUS_C',\n  AIS_TYPE_WIG_HAZARDOUS_D = 'AIS_TYPE_WIG_HAZARDOUS_D',\n  AIS_TYPE_WIG_RESERVED_1 = 'AIS_TYPE_WIG_RESERVED_1',\n  AIS_TYPE_WIG_RESERVED_2 = 'AIS_TYPE_WIG_RESERVED_2',\n  AIS_TYPE_WIG_RESERVED_3 = 'AIS_TYPE_WIG_RESERVED_3',\n  AIS_TYPE_WIG_RESERVED_4 = 'AIS_TYPE_WIG_RESERVED_4',\n  AIS_TYPE_WIG_RESERVED_5 = 'AIS_TYPE_WIG_RESERVED_5',\n  AIS_TYPE_FISHING = 'AIS_TYPE_FISHING',\n  AIS_TYPE_TOWING = 'AIS_TYPE_TOWING',\n  // Towing: length exceeds 200m or breadth exceeds 25m.\n  AIS_TYPE_TOWING_LARGE = 'AIS_TYPE_TOWING_LARGE',\n  // Dredging or other underwater ops.\n  AIS_TYPE_DREDGING = 'AIS_TYPE_DREDGING',\n  AIS_TYPE_DIVING = 'AIS_TYPE_DIVING',\n  AIS_TYPE_MILITARY = 'AIS_TYPE_MILITARY',\n  AIS_TYPE_SAILING = 'AIS_TYPE_SAILING',\n  AIS_TYPE_PLEASURE = 'AIS_TYPE_PLEASURE',\n  AIS_TYPE_RESERVED_20 = 'AIS_TYPE_RESERVED_20',\n  AIS_TYPE_RESERVED_21 = 'AIS_TYPE_RESERVED_21',\n  // High Speed Craft.\n  AIS_TYPE_HSC = 'AIS_TYPE_HSC',\n  AIS_TYPE_HSC_HAZARDOUS_A = 'AIS_TYPE_HSC_HAZARDOUS_A',\n  AIS_TYPE_HSC_HAZARDOUS_B = 'AIS_TYPE_HSC_HAZARDOUS_B',\n  AIS_TYPE_HSC_HAZARDOUS_C = 'AIS_TYPE_HSC_HAZARDOUS_C',\n  AIS_TYPE_HSC_HAZARDOUS_D = 'AIS_TYPE_HSC_HAZARDOUS_D',\n  AIS_TYPE_HSC_RESERVED_1 = 'AIS_TYPE_HSC_RESERVED_1',\n  AIS_TYPE_HSC_RESERVED_2 = 'AIS_TYPE_HSC_RESERVED_2',\n  AIS_TYPE_HSC_RESERVED_3 = 'AIS_TYPE_HSC_RESERVED_3',\n  AIS_TYPE_HSC_RESERVED_4 = 'AIS_TYPE_HSC_RESERVED_4',\n  AIS_TYPE_HSC_UNKNOWN = 'AIS_TYPE_HSC_UNKNOWN',\n  AIS_TYPE_PILOT = 'AIS_TYPE_PILOT',\n  // Search And Rescue vessel.\n  AIS_TYPE_SAR = 'AIS_TYPE_SAR',\n  AIS_TYPE_TUG = 'AIS_TYPE_TUG',\n  AIS_TYPE_PORT_TENDER = 'AIS_TYPE_PORT_TENDER',\n  // Anti-pollution equipment.\n  AIS_TYPE_ANTI_POLLUTION = 'AIS_TYPE_ANTI_POLLUTION',\n  AIS_TYPE_LAW_ENFORCEMENT = 'AIS_TYPE_LAW_ENFORCEMENT',\n  AIS_TYPE_SPARE_LOCAL_1 = 'AIS_TYPE_SPARE_LOCAL_1',\n  AIS_TYPE_SPARE_LOCAL_2 = 'AIS_TYPE_SPARE_LOCAL_2',\n  AIS_TYPE_MEDICAL_TRANSPORT = 'AIS_TYPE_MEDICAL_TRANSPORT',\n  // Noncombatant ship according to RR Resolution No. 18.\n  AIS_TYPE_NONECOMBATANT = 'AIS_TYPE_NONECOMBATANT',\n  AIS_TYPE_PASSENGER = 'AIS_TYPE_PASSENGER',\n  AIS_TYPE_PASSENGER_HAZARDOUS_A = 'AIS_TYPE_PASSENGER_HAZARDOUS_A',\n  AIS_TYPE_PASSENGER_HAZARDOUS_B = 'AIS_TYPE_PASSENGER_HAZARDOUS_B',\n  AIS_TYPE_AIS_TYPE_PASSENGER_HAZARDOUS_C = 'AIS_TYPE_AIS_TYPE_PASSENGER_HAZARDOUS_C',\n  AIS_TYPE_PASSENGER_HAZARDOUS_D = 'AIS_TYPE_PASSENGER_HAZARDOUS_D',\n  AIS_TYPE_PASSENGER_RESERVED_1 = 'AIS_TYPE_PASSENGER_RESERVED_1',\n  AIS_TYPE_PASSENGER_RESERVED_2 = 'AIS_TYPE_PASSENGER_RESERVED_2',\n  AIS_TYPE_PASSENGER_RESERVED_3 = 'AIS_TYPE_PASSENGER_RESERVED_3',\n  AIS_TYPE_AIS_TYPE_PASSENGER_RESERVED_4 = 'AIS_TYPE_AIS_TYPE_PASSENGER_RESERVED_4',\n  AIS_TYPE_PASSENGER_UNKNOWN = 'AIS_TYPE_PASSENGER_UNKNOWN',\n  AIS_TYPE_CARGO = 'AIS_TYPE_CARGO',\n  AIS_TYPE_CARGO_HAZARDOUS_A = 'AIS_TYPE_CARGO_HAZARDOUS_A',\n  AIS_TYPE_CARGO_HAZARDOUS_B = 'AIS_TYPE_CARGO_HAZARDOUS_B',\n  AIS_TYPE_CARGO_HAZARDOUS_C = 'AIS_TYPE_CARGO_HAZARDOUS_C',\n  AIS_TYPE_CARGO_HAZARDOUS_D = 'AIS_TYPE_CARGO_HAZARDOUS_D',\n  AIS_TYPE_CARGO_RESERVED_1 = 'AIS_TYPE_CARGO_RESERVED_1',\n  AIS_TYPE_CARGO_RESERVED_2 = 'AIS_TYPE_CARGO_RESERVED_2',\n  AIS_TYPE_CARGO_RESERVED_3 = 'AIS_TYPE_CARGO_RESERVED_3',\n  AIS_TYPE_CARGO_RESERVED_4 = 'AIS_TYPE_CARGO_RESERVED_4',\n  AIS_TYPE_CARGO_UNKNOWN = 'AIS_TYPE_CARGO_UNKNOWN',\n  AIS_TYPE_TANKER = 'AIS_TYPE_TANKER',\n  AIS_TYPE_TANKER_HAZARDOUS_A = 'AIS_TYPE_TANKER_HAZARDOUS_A',\n  AIS_TYPE_TANKER_HAZARDOUS_B = 'AIS_TYPE_TANKER_HAZARDOUS_B',\n  AIS_TYPE_TANKER_HAZARDOUS_C = 'AIS_TYPE_TANKER_HAZARDOUS_C',\n  AIS_TYPE_TANKER_HAZARDOUS_D = 'AIS_TYPE_TANKER_HAZARDOUS_D',\n  AIS_TYPE_TANKER_RESERVED_1 = 'AIS_TYPE_TANKER_RESERVED_1',\n  AIS_TYPE_TANKER_RESERVED_2 = 'AIS_TYPE_TANKER_RESERVED_2',\n  AIS_TYPE_TANKER_RESERVED_3 = 'AIS_TYPE_TANKER_RESERVED_3',\n  AIS_TYPE_TANKER_RESERVED_4 = 'AIS_TYPE_TANKER_RESERVED_4',\n  AIS_TYPE_TANKER_UNKNOWN = 'AIS_TYPE_TANKER_UNKNOWN',\n  AIS_TYPE_OTHER = 'AIS_TYPE_OTHER',\n  AIS_TYPE_OTHER_HAZARDOUS_A = 'AIS_TYPE_OTHER_HAZARDOUS_A',\n  AIS_TYPE_OTHER_HAZARDOUS_B = 'AIS_TYPE_OTHER_HAZARDOUS_B',\n  AIS_TYPE_OTHER_HAZARDOUS_C = 'AIS_TYPE_OTHER_HAZARDOUS_C',\n  AIS_TYPE_OTHER_HAZARDOUS_D = 'AIS_TYPE_OTHER_HAZARDOUS_D',\n  AIS_TYPE_OTHER_RESERVED_1 = 'AIS_TYPE_OTHER_RESERVED_1',\n  AIS_TYPE_OTHER_RESERVED_2 = 'AIS_TYPE_OTHER_RESERVED_2',\n  AIS_TYPE_OTHER_RESERVED_3 = 'AIS_TYPE_OTHER_RESERVED_3',\n  AIS_TYPE_OTHER_RESERVED_4 = 'AIS_TYPE_OTHER_RESERVED_4',\n  AIS_TYPE_OTHER_UNKNOWN = 'AIS_TYPE_OTHER_UNKNOWN',\n}\n\n/**\n * Navigational status of AIS vessel, enum duplicated from AIS standard, https://gpsd.gitlab.io/gpsd/AIVDM.html\n */\nexport enum AisNavStatus {\n  // Under way using engine.\n  UNDER_WAY = 'UNDER_WAY',\n  AIS_NAV_ANCHORED = 'AIS_NAV_ANCHORED',\n  AIS_NAV_UN_COMMANDED = 'AIS_NAV_UN_COMMANDED',\n  AIS_NAV_RESTRICTED_MANOEUVERABILITY = 'AIS_NAV_RESTRICTED_MANOEUVERABILITY',\n  AIS_NAV_DRAUGHT_CONSTRAINED = 'AIS_NAV_DRAUGHT_CONSTRAINED',\n  AIS_NAV_MOORED = 'AIS_NAV_MOORED',\n  AIS_NAV_AGROUND = 'AIS_NAV_AGROUND',\n  AIS_NAV_FISHING = 'AIS_NAV_FISHING',\n  AIS_NAV_SAILING = 'AIS_NAV_SAILING',\n  AIS_NAV_RESERVED_HSC = 'AIS_NAV_RESERVED_HSC',\n  AIS_NAV_RESERVED_WIG = 'AIS_NAV_RESERVED_WIG',\n  AIS_NAV_RESERVED_1 = 'AIS_NAV_RESERVED_1',\n  AIS_NAV_RESERVED_2 = 'AIS_NAV_RESERVED_2',\n  AIS_NAV_RESERVED_3 = 'AIS_NAV_RESERVED_3',\n  // Search And Rescue Transponder.\n  AIS_NAV_AIS_SART = 'AIS_NAV_AIS_SART',\n  // Not available (default).\n  AIS_NAV_UNKNOWN = 'AIS_NAV_UNKNOWN',\n}\n\n/**\n * List of possible units where failures can be injected.\n */\nexport enum FailureUnit {\n  FAILURE_UNIT_SENSOR_GYRO = 'FAILURE_UNIT_SENSOR_GYRO',\n  FAILURE_UNIT_SENSOR_ACCEL = 'FAILURE_UNIT_SENSOR_ACCEL',\n  FAILURE_UNIT_SENSOR_MAG = 'FAILURE_UNIT_SENSOR_MAG',\n  FAILURE_UNIT_SENSOR_BARO = 'FAILURE_UNIT_SENSOR_BARO',\n  FAILURE_UNIT_SENSOR_GPS = 'FAILURE_UNIT_SENSOR_GPS',\n  FAILURE_UNIT_SENSOR_OPTICAL_FLOW = 'FAILURE_UNIT_SENSOR_OPTICAL_FLOW',\n  FAILURE_UNIT_SENSOR_VIO = 'FAILURE_UNIT_SENSOR_VIO',\n  FAILURE_UNIT_SENSOR_DISTANCE_SENSOR = 'FAILURE_UNIT_SENSOR_DISTANCE_SENSOR',\n  FAILURE_UNIT_SENSOR_AIRSPEED = 'FAILURE_UNIT_SENSOR_AIRSPEED',\n  FAILURE_UNIT_SYSTEM_BATTERY = 'FAILURE_UNIT_SYSTEM_BATTERY',\n  FAILURE_UNIT_SYSTEM_MOTOR = 'FAILURE_UNIT_SYSTEM_MOTOR',\n  FAILURE_UNIT_SYSTEM_SERVO = 'FAILURE_UNIT_SYSTEM_SERVO',\n  FAILURE_UNIT_SYSTEM_AVOIDANCE = 'FAILURE_UNIT_SYSTEM_AVOIDANCE',\n  FAILURE_UNIT_SYSTEM_RC_SIGNAL = 'FAILURE_UNIT_SYSTEM_RC_SIGNAL',\n  FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL = 'FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL',\n}\n\n/**\n * List of possible failure type to inject.\n */\nexport enum FailureType {\n  // No failure injected, used to reset a previous failure.\n  FAILURE_TYPE_OK = 'FAILURE_TYPE_OK',\n  // Sets unit off, so completely non-responsive.\n  FAILURE_TYPE_OFF = 'FAILURE_TYPE_OFF',\n  // Unit is stuck e.g. keeps reporting the same value.\n  FAILURE_TYPE_STUCK = 'FAILURE_TYPE_STUCK',\n  // Unit is reporting complete garbage.\n  FAILURE_TYPE_GARBAGE = 'FAILURE_TYPE_GARBAGE',\n  // Unit is consistently wrong.\n  FAILURE_TYPE_WRONG = 'FAILURE_TYPE_WRONG',\n  // Unit is slow, so e.g. reporting at slower than expected rate.\n  FAILURE_TYPE_SLOW = 'FAILURE_TYPE_SLOW',\n  // Data of unit is delayed in time.\n  FAILURE_TYPE_DELAYED = 'FAILURE_TYPE_DELAYED',\n  // Unit is sometimes working, sometimes not.\n  FAILURE_TYPE_INTERMITTENT = 'FAILURE_TYPE_INTERMITTENT',\n}\n\n/**\n * Acceleration vehicle position\n */\nexport enum AccelcalVehiclePos {\n  ACCELCAL_VEHICLE_POS_LEVEL = 'ACCELCAL_VEHICLE_POS_LEVEL',\n  ACCELCAL_VEHICLE_POS_LEFT = 'ACCELCAL_VEHICLE_POS_LEFT',\n  ACCELCAL_VEHICLE_POS_RIGHT = 'ACCELCAL_VEHICLE_POS_RIGHT',\n  ACCELCAL_VEHICLE_POS_NOSEDOWN = 'ACCELCAL_VEHICLE_POS_NOSEDOWN',\n  ACCELCAL_VEHICLE_POS_NOSEUP = 'ACCELCAL_VEHICLE_POS_NOSEUP',\n  ACCELCAL_VEHICLE_POS_BACK = 'ACCELCAL_VEHICLE_POS_BACK',\n  ACCELCAL_VEHICLE_POS_SUCCESS = 'ACCELCAL_VEHICLE_POS_SUCCESS',\n  ACCELCAL_VEHICLE_POS_FAILED = 'ACCELCAL_VEHICLE_POS_FAILED',\n}\n\n/**\n *\n */\nexport enum ScriptingCmd {\n  // Start a REPL session.\n  SCRIPTING_CMD_REPL_START = 'SCRIPTING_CMD_REPL_START',\n  // End a REPL session.\n  SCRIPTING_CMD_REPL_STOP = 'SCRIPTING_CMD_REPL_STOP',\n}\n\n/**\n *\n */\nexport enum LimitsState {\n  // Pre-initialization.\n  LIMITS_INIT = 'LIMITS_INIT',\n  // Disabled.\n  LIMITS_DISABLED = 'LIMITS_DISABLED',\n  // Checking limits.\n  LIMITS_ENABLED = 'LIMITS_ENABLED',\n  // A limit has been breached.\n  LIMITS_TRIGGERED = 'LIMITS_TRIGGERED',\n  // Taking action e.g. Return/RTL.\n  LIMITS_RECOVERING = 'LIMITS_RECOVERING',\n  // We're no longer in breach of a limit.\n  LIMITS_RECOVERED = 'LIMITS_RECOVERED',\n}\n\n/**\n * Gripper actions.\n */\nexport enum GripperActions {\n  // Gripper release cargo.\n  GRIPPER_ACTION_RELEASE = 'GRIPPER_ACTION_RELEASE',\n  // Gripper grab onto cargo.\n  GRIPPER_ACTION_GRAB = 'GRIPPER_ACTION_GRAB',\n}\n\n/**\n * Winch actions.\n */\nexport enum WinchActions {\n  // Relax winch.\n  WINCH_RELAXED = 'WINCH_RELAXED',\n  // Winch unwinds or winds specified length of cable optionally using specified rate.\n  WINCH_RELATIVE_LENGTH_CONTROL = 'WINCH_RELATIVE_LENGTH_CONTROL',\n  // Winch unwinds or winds cable at specified rate in meters/seconds.\n  WINCH_RATE_CONTROL = 'WINCH_RATE_CONTROL',\n}\n\n/**\n * Camera status type\n */\nexport enum CameraStatusTypes {\n  // Camera heartbeat, announce camera component ID at 1Hz.\n  CAMERA_STATUS_TYPE_HEARTBEAT = 'CAMERA_STATUS_TYPE_HEARTBEAT',\n  // Camera image triggered.\n  CAMERA_STATUS_TYPE_TRIGGER = 'CAMERA_STATUS_TYPE_TRIGGER',\n  // Camera connection lost.\n  CAMERA_STATUS_TYPE_DISCONNECT = 'CAMERA_STATUS_TYPE_DISCONNECT',\n  // Camera unknown error.\n  CAMERA_STATUS_TYPE_ERROR = 'CAMERA_STATUS_TYPE_ERROR',\n  // Camera battery low. Parameter p1 shows reported voltage.\n  CAMERA_STATUS_TYPE_LOWBATT = 'CAMERA_STATUS_TYPE_LOWBATT',\n  // Camera storage low. Parameter p1 shows reported shots remaining.\n  CAMERA_STATUS_TYPE_LOWSTORE = 'CAMERA_STATUS_TYPE_LOWSTORE',\n  // Camera storage low. Parameter p1 shows reported video minutes remaining.\n  CAMERA_STATUS_TYPE_LOWSTOREV = 'CAMERA_STATUS_TYPE_LOWSTOREV',\n}\n\n/**\n * Camera feedback flags\n */\nexport enum CameraFeedbackFlags {\n  // Shooting photos, not video.\n  CAMERA_FEEDBACK_PHOTO = 0,\n  // Shooting video, not stills.\n  CAMERA_FEEDBACK_VIDEO = 1,\n  // Unable to achieve requested exposure (e.g. shutter speed too low).\n  CAMERA_FEEDBACK_BADEXPOSURE = 2,\n  // Closed loop feedback from camera, we know for sure it has successfully taken a picture.\n  CAMERA_FEEDBACK_CLOSEDLOOP = 3,\n  // Open loop camera, an image trigger has been requested but we can't know for sure it has successfully taken a picture.\n  CAMERA_FEEDBACK_OPENLOOP = 4,\n}\n\n/**\n * Gimbal mode\n */\nexport enum MavModeGimbal {\n  // Gimbal is powered on but has not started initializing yet.\n  MAV_MODE_GIMBAL_UNINITIALIZED = 'MAV_MODE_GIMBAL_UNINITIALIZED',\n  // Gimbal is currently running calibration on the pitch axis.\n  MAV_MODE_GIMBAL_CALIBRATING_PITCH = 'MAV_MODE_GIMBAL_CALIBRATING_PITCH',\n  // Gimbal is currently running calibration on the roll axis.\n  MAV_MODE_GIMBAL_CALIBRATING_ROLL = 'MAV_MODE_GIMBAL_CALIBRATING_ROLL',\n  // Gimbal is currently running calibration on the yaw axis.\n  MAV_MODE_GIMBAL_CALIBRATING_YAW = 'MAV_MODE_GIMBAL_CALIBRATING_YAW',\n  // Gimbal has finished calibrating and initializing, but is relaxed pending reception of first rate command from copter.\n  MAV_MODE_GIMBAL_INITIALIZED = 'MAV_MODE_GIMBAL_INITIALIZED',\n  // Gimbal is actively stabilizing.\n  MAV_MODE_GIMBAL_ACTIVE = 'MAV_MODE_GIMBAL_ACTIVE',\n  // Gimbal is relaxed because it missed more than 10 expected rate command messages in a row. Gimbal will move back to active mode when it receives a new rate command.\n  MAV_MODE_GIMBAL_RATE_CMD_TIMEOUT = 'MAV_MODE_GIMBAL_RATE_CMD_TIMEOUT',\n}\n\n/**\n *Gimbal axis\n */\nexport enum GimbalAxis {\n  // Gimbal yaw axis.\n  GIMBAL_AXIS_YAW = 'GIMBAL_AXIS_YAW',\n  // Gimbal pitch axis.\n  GIMBAL_AXIS_PITCH = 'GIMBAL_AXIS_PITCH',\n  // Gimbal roll axis.\n  GIMBAL_AXIS_ROLL = 'GIMBAL_AXIS_ROLL',\n}\n\n/**\n * Gimbal axis calibration status\n */\nexport enum GimbalAxisCalibrationStatus {\n  // Axis calibration is in progress.\n  GIMBAL_AXIS_CALIBRATION_STATUS_IN_PROGRESS = 'GIMBAL_AXIS_CALIBRATION_STATUS_IN_PROGRESS',\n  // Axis calibration succeeded.\n  GIMBAL_AXIS_CALIBRATION_STATUS_SUCCEEDED = 'GIMBAL_AXIS_CALIBRATION_STATUS_SUCCEEDED',\n  // Axis calibration failed.\n  GIMBAL_AXIS_CALIBRATION_STATUS_FAILED = 'GIMBAL_AXIS_CALIBRATION_STATUS_FAILED',\n}\n\n/**\n *Gimbal axis calibration required\n */\nexport enum GimbalAxisCalibrationRequired {\n  // Whether or not this axis requires calibration is unknown at this time.\n  GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN = 'GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN',\n  // This axis requires calibration.\n  GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE = 'GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE',\n  // This axis does not require calibration.\n  GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE = 'GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE',\n}\n\n/**\n * Gopro Heartbeat statu\n */\nexport enum GoproHeartbeatStatus {\n  // No GoPro connected.\n  GOPRO_HEARTBEAT_STATUS_DISCONNECTED = 'GOPRO_HEARTBEAT_STATUS_DISCONNECTED',\n  // The detected GoPro is not HeroBus compatible.\n  GOPRO_HEARTBEAT_STATUS_INCOMPATIBLE = 'GOPRO_HEARTBEAT_STATUS_INCOMPATIBLE',\n  // A HeroBus compatible GoPro is connected.\n  GOPRO_HEARTBEAT_STATUS_CONNECTED = 'GOPRO_HEARTBEAT_STATUS_CONNECTED',\n  // An unrecoverable error was encountered with the connected GoPro, it may require a power cycle.\n  GOPRO_HEARTBEAT_STATUS_ERROR = 'GOPRO_HEARTBEAT_STATUS_ERROR',\n}\n\n/**\n * Gopro request status\n */\nexport enum GoproRequestStatus {\n  // The write message with ID indicated succeeded.\n  GOPRO_REQUEST_SUCCESS = 'GOPRO_REQUEST_SUCCESS',\n  // The write message with ID indicated failed.\n  GOPRO_REQUEST_FAILED = 'GOPRO_REQUEST_FAILED',\n}\n\n/**\n * Gopro command\n */\nexport enum GoproCommand {\n  // (Get/Set).\n  GOPRO_COMMAND_POWER = 'GOPRO_COMMAND_POWER',\n  // (Get/Set).\n  GOPRO_COMMAND_CAPTURE_MODE = 'GOPRO_COMMAND_CAPTURE_MODE',\n  // (___/Set).\n  GOPRO_COMMAND_SHUTTER = 'GOPRO_COMMAND_SHUTTER',\n  // (Get/___).\n  GOPRO_COMMAND_BATTERY = 'GOPRO_COMMAND_BATTERY',\n  // (Get/___).\n  GOPRO_COMMAND_MODEL = 'GOPRO_COMMAND_MODEL',\n  // (Get/Set).\n  GOPRO_COMMAND_VIDEO_SETTINGS = 'GOPRO_COMMAND_VIDEO_SETTINGS',\n  // (Get/Set).\n  GOPRO_COMMAND_LOW_LIGHT = 'GOPRO_COMMAND_LOW_LIGHT',\n  // (Get/Set).\n  GOPRO_COMMAND_PHOTO_RESOLUTION = 'GOPRO_COMMAND_PHOTO_RESOLUTION',\n  // (Get/Set).\n  GOPRO_COMMAND_PHOTO_BURST_RATE = 'GOPRO_COMMAND_PHOTO_BURST_RATE',\n  // (Get/Set).\n  GOPRO_COMMAND_PROTUNE = 'GOPRO_COMMAND_PROTUNE',\n  // (Get/Set) Hero 3+ Only.\n  GOPRO_COMMAND_PROTUNE_WHITE_BALANCE = 'GOPRO_COMMAND_PROTUNE_WHITE_BALANCE',\n  // (Get/Set) Hero 3+ Only.\n  GOPRO_COMMAND_PROTUNE_COLOUR = 'GOPRO_COMMAND_PROTUNE_COLOUR',\n  // (Get/Set) Hero 3+ Only.\n  GOPRO_COMMAND_PROTUNE_GAIN = 'GOPRO_COMMAND_PROTUNE_GAIN',\n  // (Get/Set) Hero 3+ Only.\n  GOPRO_COMMAND_PROTUNE_SHARPNESS = 'GOPRO_COMMAND_PROTUNE_SHARPNESS',\n  // (Get/Set) Hero 3+ Only.\n  GOPRO_COMMAND_PROTUNE_EXPOSURE = 'GOPRO_COMMAND_PROTUNE_EXPOSURE',\n  // (Get/Set).\n  GOPRO_COMMAND_TIME = 'GOPRO_COMMAND_TIME',\n  // (Get/Set).\n  GOPRO_COMMAND_CHARGING = 'GOPRO_COMMAND_CHARGING',\n}\n\n/**\n * Gopro capture mode\n */\nexport enum GoproCaptureMode {\n  // Video mode.\n  GOPRO_CAPTURE_MODE_VIDEO = 'GOPRO_CAPTURE_MODE_VIDEO',\n  // Photo mode.\n  GOPRO_CAPTURE_MODE_PHOTO = 'GOPRO_CAPTURE_MODE_PHOTO',\n  // Burst mode, Hero 3+ only.\n  GOPRO_CAPTURE_MODE_BURST = 'GOPRO_CAPTURE_MODE_BURST',\n  // Time lapse mode, Hero 3+ only.\n  GOPRO_CAPTURE_MODE_TIME_LAPSE = 'GOPRO_CAPTURE_MODE_TIME_LAPSE',\n  // Multi shot mode, Hero 4 only.\n  GOPRO_CAPTURE_MODE_MULTI_SHOT = 'GOPRO_CAPTURE_MODE_MULTI_SHOT',\n  // Playback mode, Hero 4 only, silver only except when LCD or HDMI is connected to black.\n  GOPRO_CAPTURE_MODE_PLAYBACK = 'GOPRO_CAPTURE_MODE_PLAYBACK',\n  // Playback mode, Hero 4 only.\n  GOPRO_CAPTURE_MODE_SETUP = 'GOPRO_CAPTURE_MODE_SETUP',\n  // Mode not yet known.\n  GOPRO_CAPTURE_MODE_UNKNOWN = 'GOPRO_CAPTURE_MODE_UNKNOWN',\n}\n\n/**\n * Gopro Resolution\n */\nexport enum GoproResolution {\n  // 848 x 480 (480p).\n  GOPRO_RESOLUTION_480p = 'GOPRO_RESOLUTION_480p',\n  // 1280 x 720 (720p).\n  GOPRO_RESOLUTION_720p = 'GOPRO_RESOLUTION_720p',\n  // 1280 x 960 (960p).\n  GOPRO_RESOLUTION_960p = 'GOPRO_RESOLUTION_960p',\n  // 1920 x 1080 (1080p).\n  GOPRO_RESOLUTION_1080p = 'GOPRO_RESOLUTION_1080p',\n  // 1920 x 1440 (1440p).\n  GOPRO_RESOLUTION_1440p = 'GOPRO_RESOLUTION_1440p',\n  // 2704 x 1440 (2.7k-17:9).\n  GOPRO_RESOLUTION_2_7k_17_9 = 'GOPRO_RESOLUTION_2_7k_17_9',\n  // 2704 x 1524 (2.7k-16:9).\n  GOPRO_RESOLUTION_2_7k_16_9 = 'GOPRO_RESOLUTION_2_7k_16_9',\n  // 2704 x 2028 (2.7k-4:3).\n  GOPRO_RESOLUTION_2_7k_4_3 = 'GOPRO_RESOLUTION_2_7k_4_3',\n  // 3840 x 2160 (4k-16:9).\n  GOPRO_RESOLUTION_4k_16_9 = 'GOPRO_RESOLUTION_4k_16_9',\n  // 4096 x 2160 (4k-17:9).\n  GOPRO_RESOLUTION_4k_17_9 = 'GOPRO_RESOLUTION_4k_17_9',\n  // 1280 x 720 (720p-SuperView).\n  GOPRO_RESOLUTION_720p_SUPERVIEW = 'GOPRO_RESOLUTION_720p_SUPERVIEW',\n  // 1920 x 1080 (1080p-SuperView).\n  GOPRO_RESOLUTION_1080p_SUPERVIEW = 'GOPRO_RESOLUTION_1080p_SUPERVIEW',\n  // 2704 x 1520 (2.7k-SuperView).\n  GOPRO_RESOLUTION_2_7k_SUPERVIEW = 'GOPRO_RESOLUTION_2_7k_SUPERVIEW',\n  // 3840 x 2160 (4k-SuperView).\n  GOPRO_RESOLUTION_4k_SUPERVIEW = 'GOPRO_RESOLUTION_4k_SUPERVIEW',\n}\n\n/**\n * Gopro Framerate\n */\nexport enum GoproFrameRate {\n  // 12 FPS.\n  GOPRO_FRAME_RATE_12 = 'GOPRO_FRAME_RATE_12',\n  // 15 FPS.\n  GOPRO_FRAME_RATE_15 = 'GOPRO_FRAME_RATE_15',\n  // 24 FPS.\n  GOPRO_FRAME_RATE_24 = 'GOPRO_FRAME_RATE_24',\n  // 25 FPS.\n  GOPRO_FRAME_RATE_25 = 'GOPRO_FRAME_RATE_25',\n  // 30 FPS.\n  GOPRO_FRAME_RATE_30 = 'GOPRO_FRAME_RATE_30',\n  // 48 FPS.\n  GOPRO_FRAME_RATE_48 = 'GOPRO_FRAME_RATE_48',\n  // 50 FPS.\n  GOPRO_FRAME_RATE_50 = 'GOPRO_FRAME_RATE_50',\n  // 60 FPS.\n  GOPRO_FRAME_RATE_60 = 'GOPRO_FRAME_RATE_60',\n  // 80 FPS.\n  GOPRO_FRAME_RATE_80 = 'GOPRO_FRAME_RATE_80',\n  // 90 FPS.\n  GOPRO_FRAME_RATE_90 = 'GOPRO_FRAME_RATE_90',\n  // 100 FPS.\n  GOPRO_FRAME_RATE_100 = 'GOPRO_FRAME_RATE_100',\n  // 120 FPS.\n  GOPRO_FRAME_RATE_120 = 'GOPRO_FRAME_RATE_120',\n  // 240 FPS.\n  GOPRO_FRAME_RATE_240 = 'GOPRO_FRAME_RATE_240',\n  // 12.5 FPS.\n  GOPRO_FRAME_RATE_12_5 = 'GOPRO_FRAME_RATE_12_5',\n}\n\n/**\n * Gopro field of view\n */\nexport enum GoproFieldOfView {\n  // 0x00: Wide.\n  GOPRO_FIELD_OF_VIEW_WIDE = 'GOPRO_FIELD_OF_VIEW_WIDE',\n  // 0x01: Medium.\n  GOPRO_FIELD_OF_VIEW_MEDIUM = 'GOPRO_FIELD_OF_VIEW_MEDIUM',\n  // 0x02: Narrow.\n  GOPRO_FIELD_OF_VIEW_NARROW = 'GOPRO_FIELD_OF_VIEW_NARROW',\n}\n\n/**\n * Gopro video settings flags\n */\nexport enum GoproVideoSettingsFlags {\n  // 0=NTSC, 1=PAL.\n  GOPRO_VIDEO_SETTINGS_TV_MODE = 'GOPRO_VIDEO_SETTINGS_TV_MODE',\n}\n\n/**\n * Gopro photo resolution\n */\nexport enum GoproPhotoResolution {\n  // 5MP Medium.\n  GOPRO_PHOTO_RESOLUTION_5MP_MEDIUM = 'GOPRO_PHOTO_RESOLUTION_5MP_MEDIUM',\n  // 7MP Medium.\n  GOPRO_PHOTO_RESOLUTION_7MP_MEDIUM = 'GOPRO_PHOTO_RESOLUTION_7MP_MEDIUM',\n  // 7MP Wide.\n  GOPRO_PHOTO_RESOLUTION_7MP_WIDE = 'GOPRO_PHOTO_RESOLUTION_7MP_WIDE',\n  // 10MP Wide.\n  GOPRO_PHOTO_RESOLUTION_10MP_WIDE = 'GOPRO_PHOTO_RESOLUTION_10MP_WIDE',\n  // 12MP Wide.\n  GOPRO_PHOTO_RESOLUTION_12MP_WIDE = 'GOPRO_PHOTO_RESOLUTION_12MP_WIDE',\n}\n\n/**\n * Gopro protune white balance\n */\nexport enum GoproProtuneWhiteBalance {\n  // Auto.\n  GOPRO_PROTUNE_WHITE_BALANCE_AUTO = 'GOPRO_PROTUNE_WHITE_BALANCE_AUTO',\n  // 3000K.\n  GOPRO_PROTUNE_WHITE_BALANCE_3000K = 'GOPRO_PROTUNE_WHITE_BALANCE_3000K',\n  // 5500K.\n  GOPRO_PROTUNE_WHITE_BALANCE_5500K = 'GOPRO_PROTUNE_WHITE_BALANCE_5500K',\n  // 6500K.\n  GOPRO_PROTUNE_WHITE_BALANCE_6500K = 'GOPRO_PROTUNE_WHITE_BALANCE_6500K',\n  // Camera Raw.\n  GOPRO_PROTUNE_WHITE_BALANCE_RAW = 'GOPRO_PROTUNE_WHITE_BALANCE_RAW',\n}\n\n/**\n * Gopro protune colour\n */\nexport enum GoproProtuneColour {\n  // Auto.\n  GOPRO_PROTUNE_COLOUR_STANDARD = 'GOPRO_PROTUNE_COLOUR_STANDARD',\n  // Neutral.\n  GOPRO_PROTUNE_COLOUR_NEUTRAL = 'GOPRO_PROTUNE_COLOUR_NEUTRAL',\n}\n\n/**\n * Gopro protune gain\n */\nexport enum GoproProtuneGain {\n  // ISO 400.\n  GOPRO_PROTUNE_GAIN_400 = 'GOPRO_PROTUNE_GAIN_400',\n  // ISO 800 (Only Hero 4).\n  GOPRO_PROTUNE_GAIN_800 = 'GOPRO_PROTUNE_GAIN_800',\n  // ISO 1600.\n  GOPRO_PROTUNE_GAIN_1600 = 'GOPRO_PROTUNE_GAIN_1600',\n  // ISO 3200 (Only Hero 4).\n  GOPRO_PROTUNE_GAIN_3200 = 'GOPRO_PROTUNE_GAIN_3200',\n  // ISO 6400.\n  GOPRO_PROTUNE_GAIN_6400 = 'GOPRO_PROTUNE_GAIN_6400',\n}\n\n/**\n * Gopro protune sharpness\n */\nexport enum GoproProtuneSharpness {\n  // Low Sharpness.\n  GOPRO_PROTUNE_SHARPNESS_LOW = 'GOPRO_PROTUNE_SHARPNESS_LOW',\n  // Medium Sharpness.\n  GOPRO_PROTUNE_SHARPNESS_MEDIUM = 'GOPRO_PROTUNE_SHARPNESS_MEDIUM',\n  // High Sharpness.\n  GOPRO_PROTUNE_SHARPNESS_HIGH = 'GOPRO_PROTUNE_SHARPNESS_HIGH',\n}\n\n/**\n * Gopro protune exposure\n */\nexport enum GoproProtuneExposure {\n  // -5.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_5_0 = 'GOPRO_PROTUNE_EXPOSURE_NEG_5_0',\n  // -4.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_4_5 = 'GOPRO_PROTUNE_EXPOSURE_NEG_4_5',\n  // -4.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_4_0 = 'GOPRO_PROTUNE_EXPOSURE_NEG_4_0',\n  // -3.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_3_5 = 'GOPRO_PROTUNE_EXPOSURE_NEG_3_5',\n  // -3.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_3_0 = 'GOPRO_PROTUNE_EXPOSURE_NEG_3_0',\n  // -2.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_NEG_2_5 = 'GOPRO_PROTUNE_EXPOSURE_NEG_2_5',\n  // -2.0 EV.\n  GOPRO_PROTUNE_EXPOSURE_NEG_2_0 = 'GOPRO_PROTUNE_EXPOSURE_NEG_2_0',\n  // -1.5 EV.\n  GOPRO_PROTUNE_EXPOSURE_NEG_1_5 = 'GOPRO_PROTUNE_EXPOSURE_NEG_1_5',\n  // -1.0 EV.\n  GOPRO_PROTUNE_EXPOSURE_NEG_1_0 = 'GOPRO_PROTUNE_EXPOSURE_NEG_1_0',\n  // -0.5 EV.\n  GOPRO_PROTUNE_EXPOSURE_NEG_0_5 = 'GOPRO_PROTUNE_EXPOSURE_NEG_0_5',\n  // 0.0 EV.\n  GOPRO_PROTUNE_EXPOSURE_ZERO = 'GOPRO_PROTUNE_EXPOSURE_ZERO',\n  // +0.5 EV.\n  GOPRO_PROTUNE_EXPOSURE_POS_0_5 = 'GOPRO_PROTUNE_EXPOSURE_POS_0_5',\n  // +1.0 EV.\n  GOPRO_PROTUNE_EXPOSURE_POS_1_0 = 'GOPRO_PROTUNE_EXPOSURE_POS_1_0',\n  // +1.5 EV.\n  GOPRO_PROTUNE_EXPOSURE_POS_1_5 = 'GOPRO_PROTUNE_EXPOSURE_POS_1_5',\n  // +2.0 EV.\n  GOPRO_PROTUNE_EXPOSURE_POS_2_0 = 'GOPRO_PROTUNE_EXPOSURE_POS_2_0',\n  // +2.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_2_5 = 'GOPRO_PROTUNE_EXPOSURE_POS_2_5',\n  // +3.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_3_0 = 'GOPRO_PROTUNE_EXPOSURE_POS_3_0',\n  // +3.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_3_5 = 'GOPRO_PROTUNE_EXPOSURE_POS_3_5',\n  // +4.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_4_0 = 'GOPRO_PROTUNE_EXPOSURE_POS_4_0',\n  // +4.5 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_4_5 = 'GOPRO_PROTUNE_EXPOSURE_POS_4_5',\n  // +5.0 EV (Hero 3+ Only).\n  GOPRO_PROTUNE_EXPOSURE_POS_5_0 = 'GOPRO_PROTUNE_EXPOSURE_POS_5_0',\n}\n\n/**\n * Gopro charging\n */\nexport enum GoproCharging {\n  // Charging disabled.\n  GOPRO_CHARGING_DISABLED = 'GOPRO_CHARGING_DISABLED',\n  // Charging enabled.\n  GOPRO_CHARGING_ENABLED = 'GOPRO_CHARGING_ENABLED',\n}\n\n/**\n * Gopro model\n */\nexport enum GoproModel {\n  // Unknown gopro model.\n  GOPRO_MODEL_UNKNOWN = 'GOPRO_MODEL_UNKNOWN',\n  // Hero 3+ Silver (HeroBus not supported by GoPro).\n  GOPRO_MODEL_HERO_3_PLUS_SILVER = 'GOPRO_MODEL_HERO_3_PLUS_SILVER',\n  // Hero 3+ Black.\n  GOPRO_MODEL_HERO_3_PLUS_BLACK = 'GOPRO_MODEL_HERO_3_PLUS_BLACK',\n  // Hero 4 Silver.\n  GOPRO_MODEL_HERO_4_SILVER = 'GOPRO_MODEL_HERO_4_SILVER',\n  // Hero 4 Black.\n  GOPRO_MODEL_HERO_4_BLACK = 'GOPRO_MODEL_HERO_4_BLACK',\n}\n\n/**\n * Gopro Burst rate\n */\nexport enum GoproBurstRate {\n  // 3 Shots / 1 Second.\n  GOPRO_BURST_RATE_3_IN_1_SECOND = 'GOPRO_BURST_RATE_3_IN_1_SECOND',\n  // 5 Shots / 1 Second.\n  GOPRO_BURST_RATE_5_IN_1_SECOND = 'GOPRO_BURST_RATE_5_IN_1_SECOND',\n  // 10 Shots / 1 Second.\n  GOPRO_BURST_RATE_10_IN_1_SECOND = 'GOPRO_BURST_RATE_10_IN_1_SECOND',\n  // 10 Shots / 2 Second.\n  GOPRO_BURST_RATE_10_IN_2_SECOND = 'GOPRO_BURST_RATE_10_IN_2_SECOND',\n  // 10 Shots / 3 Second (Hero 4 Only).\n  GOPRO_BURST_RATE_10_IN_3_SECOND = 'GOPRO_BURST_RATE_10_IN_3_SECOND',\n  // 30 Shots / 1 Second.\n  GOPRO_BURST_RATE_30_IN_1_SECOND = 'GOPRO_BURST_RATE_30_IN_1_SECOND',\n  // 30 Shots / 2 Second.\n  GOPRO_BURST_RATE_30_IN_2_SECOND = 'GOPRO_BURST_RATE_30_IN_2_SECOND',\n  // 30 Shots / 3 Second.\n  GOPRO_BURST_RATE_30_IN_3_SECOND = 'GOPRO_BURST_RATE_30_IN_3_SECOND',\n  // 30 Shots / 6 Second.\n  GOPRO_BURST_RATE_30_IN_6_SECOND = 'GOPRO_BURST_RATE_30_IN_6_SECOND',\n}\n\n/**\n *Led control pattern\n */\nexport enum LedControlPattern {\n  // LED patterns off (return control to regular vehicle control).\n  LED_CONTROL_PATTERN_OFF = 'LED_CONTROL_PATTERN_OFF',\n  // LEDs show pattern during firmware update.\n  LED_CONTROL_PATTERN_FIRMWAREUPDATE = 'LED_CONTROL_PATTERN_FIRMWAREUPDATE',\n  // Custom Pattern using custom bytes fields.\n  LED_CONTROL_PATTERN_CUSTOM = 'LED_CONTROL_PATTERN_CUSTOM',\n}\n\n/**\n * PID tuning axis\n */\nexport enum PidTuningAxis {\n  PID_TUNING_ROLL = 'PID_TUNING_ROLL',\n  PID_TUNING_PITCH = 'PID_TUNING_PITCH',\n  PID_TUNING_YAW = 'PID_TUNING_YAW',\n  PID_TUNING_ACCZ = 'PID_TUNING_ACCZ',\n  PID_TUNING_STEER = 'PID_TUNING_STEER',\n  PID_TUNING_LANDING = 'PID_TUNING_LANDING',\n}\n\n/**\n * Mag calibration status\n */\nexport enum MagCalStatus {\n  MAG_CAL_NOT_STARTED = 'MAG_CAL_NOT_STARTED',\n  MAG_CAL_WAITING_TO_START = 'MAG_CAL_WAITING_TO_START',\n  MAG_CAL_RUNNING_STEP_ONE = 'MAG_CAL_RUNNING_STEP_ONE',\n  MAG_CAL_RUNNING_STEP_TWO = 'MAG_CAL_RUNNING_STEP_TWO',\n  MAG_CAL_SUCCESS = 'MAG_CAL_SUCCESS',\n  MAG_CAL_FAILED = 'MAG_CAL_FAILED',\n  MAG_CAL_BAD_ORIENTATION = 'MAG_CAL_BAD_ORIENTATION',\n  MAG_CAL_BAD_RADIUS = 'MAG_CAL_BAD_RADIUS',\n}\n\n/**\n * Special ACK block numbers control activation of dataflash log streaming.\n */\nexport enum MavRemoteLogDataBlockCommands {\n  // UAV to stop sending DataFlash blocks.\n  MAV_REMOTE_LOG_DATA_BLOCK_STOP = 'MAV_REMOTE_LOG_DATA_BLOCK_STOP',\n  // UAV to start sending DataFlash blocks.\n  MAV_REMOTE_LOG_DATA_BLOCK_START = 'MAV_REMOTE_LOG_DATA_BLOCK_START',\n}\n\n/**\n * Possible remote log data block statuses.\n */\nexport enum MavRemoteLogDataBlockStatuses {\n  // This block has NOT been received.\n  MAV_REMOTE_LOG_DATA_BLOCK_NACK = 'MAV_REMOTE_LOG_DATA_BLOCK_NACK',\n  // This block has been received.\n  MAV_REMOTE_LOG_DATA_BLOCK_ACK = 'MAV_REMOTE_LOG_DATA_BLOCK_ACK',\n}\n\n/**\n * Bus types for device operations.\n */\nexport enum DeviceOpBustype {\n  // I2C Device operation.\n  DEVICE_OP_BUSTYPE_I2C = 'DEVICE_OP_BUSTYPE_I2C',\n  // SPI Device operation.\n  DEVICE_OP_BUSTYPE_SPI = 'DEVICE_OP_BUSTYPE_SPI',\n}\n\n/**\n * Deepstall flight stage.\n */\nexport enum DeepstallStage {\n  // Flying to the landing point.\n  DEEPSTALL_STAGE_FLY_TO_LANDING = 'DEEPSTALL_STAGE_FLY_TO_LANDING',\n  // Building an estimate of the wind.\n  DEEPSTALL_STAGE_ESTIMATE_WIND = 'DEEPSTALL_STAGE_ESTIMATE_WIND',\n  // Waiting to breakout of the loiter to fly the approach.\n  DEEPSTALL_STAGE_WAIT_FOR_BREAKOUT = 'DEEPSTALL_STAGE_WAIT_FOR_BREAKOUT',\n  // Flying to the first arc point to turn around to the landing point.\n  DEEPSTALL_STAGE_FLY_TO_ARC = 'DEEPSTALL_STAGE_FLY_TO_ARC',\n  // Turning around back to the deepstall landing point.\n  DEEPSTALL_STAGE_ARC = 'DEEPSTALL_STAGE_ARC',\n  // Approaching the landing point.\n  DEEPSTALL_STAGE_APPROACH = 'DEEPSTALL_STAGE_APPROACH',\n  // Stalling and steering towards the land point.\n  DEEPSTALL_STAGE_LAND = 'DEEPSTALL_STAGE_LAND',\n}\n\n/**\n * A mapping of plane flight modes for custom_mode field of heartbeat.\n */\nexport enum PlaneMode {\n  PLANE_MODE_MANUAL = 'PLANE_MODE_MANUAL',\n  PLANE_MODE_CIRCLE = 'PLANE_MODE_CIRCLE',\n  PLANE_MODE_STABILIZE = 'PLANE_MODE_STABILIZE',\n  PLANE_MODE_TRAINING = 'PLANE_MODE_TRAINING',\n  PLANE_MODE_ACRO = 'PLANE_MODE_ACRO',\n  PLANE_MODE_FLY_BY_WIRE_A = 'PLANE_MODE_FLY_BY_WIRE_A',\n  PLANE_MODE_FLY_BY_WIRE_B = 'PLANE_MODE_FLY_BY_WIRE_B',\n  PLANE_MODE_CRUISE = 'PLANE_MODE_CRUISE',\n  PLANE_MODE_AUTOTUNE = 'PLANE_MODE_AUTOTUNE',\n  PLANE_MODE_AUTO = 'PLANE_MODE_AUTO',\n  PLANE_MODE_RTL = 'PLANE_MODE_RTL',\n  PLANE_MODE_LOITER = 'PLANE_MODE_LOITER',\n  PLANE_MODE_TAKEOFF = 'PLANE_MODE_TAKEOFF',\n  PLANE_MODE_AVOID_ADSB = 'PLANE_MODE_AVOID_ADSB',\n  PLANE_MODE_GUIDED = 'PLANE_MODE_GUIDED',\n  PLANE_MODE_INITIALIZING = 'PLANE_MODE_INITIALIZING',\n  PLANE_MODE_QSTABILIZE = 'PLANE_MODE_QSTABILIZE',\n  PLANE_MODE_QHOVER = 'PLANE_MODE_QHOVER',\n  PLANE_MODE_QLOITER = 'PLANE_MODE_QLOITER',\n  PLANE_MODE_QLAND = 'PLANE_MODE_QLAND',\n  PLANE_MODE_QRTL = 'PLANE_MODE_QRTL',\n  PLANE_MODE_QAUTOTUNE = 'PLANE_MODE_QAUTOTUNE',\n}\n\n/**\n * A mapping of copter flight modes for custom_mode field of heartbeat.\n */\nexport enum CopterMode {\n  COPTER_MODE_STABILIZE = 'COPTER_MODE_STABILIZE',\n  COPTER_MODE_ACRO = 'COPTER_MODE_ACRO',\n  COPTER_MODE_ALT_HOLD = 'COPTER_MODE_ALT_HOLD',\n  COPTER_MODE_AUTO = 'COPTER_MODE_AUTO',\n  COPTER_MODE_GUIDED = 'COPTER_MODE_GUIDED',\n  COPTER_MODE_LOITER = 'COPTER_MODE_LOITER',\n  COPTER_MODE_RTL = 'COPTER_MODE_RTL',\n  COPTER_MODE_CIRCLE = 'COPTER_MODE_CIRCLE',\n  COPTER_MODE_LAND = 'COPTER_MODE_LAND',\n  COPTER_MODE_DRIFT = 'COPTER_MODE_DRIFT',\n  COPTER_MODE_SPORT = 'COPTER_MODE_SPORT',\n  COPTER_MODE_FLIP = 'COPTER_MODE_FLIP',\n  COPTER_MODE_AUTOTUNE = 'COPTER_MODE_AUTOTUNE',\n  COPTER_MODE_POSHOLD = 'COPTER_MODE_POSHOLD',\n  COPTER_MODE_BRAKE = 'COPTER_MODE_BRAKE',\n  COPTER_MODE_THROW = 'COPTER_MODE_THROW',\n  COPTER_MODE_AVOID_ADSB = 'COPTER_MODE_AVOID_ADSB',\n  COPTER_MODE_GUIDED_NOGPS = 'COPTER_MODE_GUIDED_NOGPS',\n  COPTER_MODE_SMART_RTL = 'COPTER_MODE_SMART_RTL',\n}\n\n/**\n * A mapping of sub flight modes for custom_mode field of heartbeat.\n */\nexport enum SubMode {\n  SUB_MODE_STABILIZE = 'SUB_MODE_STABILIZE',\n  SUB_MODE_ACRO = 'SUB_MODE_ACRO',\n  SUB_MODE_ALT_HOLD = 'SUB_MODE_ALT_HOLD',\n  SUB_MODE_AUTO = 'SUB_MODE_AUTO',\n  SUB_MODE_GUIDED = 'SUB_MODE_GUIDED',\n  SUB_MODE_CIRCLE = 'SUB_MODE_CIRCLE',\n  SUB_MODE_SURFACE = 'SUB_MODE_SURFACE',\n  SUB_MODE_POSHOLD = 'SUB_MODE_POSHOLD',\n  SUB_MODE_MANUAL = 'SUB_MODE_MANUAL',\n}\n\n/**\n * A mapping of rover flight modes for custom_mode field of heartbeat.\n */\nexport enum RoverMode {\n  ROVER_MODE_MANUAL = 'ROVER_MODE_MANUAL',\n  ROVER_MODE_ACRO = 'ROVER_MODE_ACRO',\n  ROVER_MODE_STEERING = 'ROVER_MODE_STEERING',\n  ROVER_MODE_HOLD = 'ROVER_MODE_HOLD',\n  ROVER_MODE_LOITER = 'ROVER_MODE_LOITER',\n  ROVER_MODE_AUTO = 'ROVER_MODE_AUTO',\n  ROVER_MODE_RTL = 'ROVER_MODE_RTL',\n  ROVER_MODE_SMART_RTL = 'ROVER_MODE_SMART_RTL',\n  ROVER_MODE_GUIDED = 'ROVER_MODE_GUIDED',\n  ROVER_MODE_INITIALIZING = 'ROVER_MODE_INITIALIZING',\n}\n\n/**\n * A mapping of antenna tracker flight modes for custom_mode field of heartbeat.\n */\nexport enum TrackerMode {\n  TRACKER_MODE_MANUAL = 'TRACKER_MODE_MANUAL',\n  TRACKER_MODE_STOP = 'TRACKER_MODE_STOP',\n  TRACKER_MODE_SCAN = 'TRACKER_MODE_SCAN',\n  TRACKER_MODE_SERVO_TEST = 'TRACKER_MODE_SERVO_TEST',\n  TRACKER_MODE_AUTO = 'TRACKER_MODE_AUTO',\n  TRACKER_MODE_INITIALIZING = 'TRACKER_MODE_INITIALIZING',\n}\n\n/**\n * Possible type of MAVLink messages\n */\nexport enum MAVLinkType {\n  ACTUATOR_CONTROL_TARGET = 'ACTUATOR_CONTROL_TARGET',\n  ACTUATOR_OUTPUT_STATUS = 'ACTUATOR_OUTPUT_STATUS',\n  ADAP_TUNING = 'ADAP_TUNING',\n  ADSB_VEHICLE = 'ADSB_VEHICLE',\n  AHRS = 'AHRS',\n  AHRS2 = 'AHRS2',\n  AHRS3 = 'AHRS3',\n  AIRSPEED_AUTOCAL = 'AIRSPEED_AUTOCAL',\n  AIS_VESSEL = 'AIS_VESSEL',\n  ALTITUDE = 'ALTITUDE',\n  AOA_SSA = 'AOA_SSA',\n  AP_ADC = 'AP_ADC',\n  ATT_POS_MOCAP = 'ATT_POS_MOCAP',\n  ATTITUDE = 'ATTITUDE',\n  ATTITUDE_QUATERNION = 'ATTITUDE_QUATERNION',\n  ATTITUDE_QUATERNION_COV = 'ATTITUDE_QUATERNION_COV',\n  ATTITUDE_TARGET = 'ATTITUDE_TARGET',\n  AUTH_KEY = 'AUTH_KEY',\n  AUTOPILOT_STATE_FOR_GIMBAL_DEVICE = 'AUTOPILOT_STATE_FOR_GIMBAL_DEVICE',\n  AUTOPILOT_VERSION = 'AUTOPILOT_VERSION',\n  AUTOPILOT_VERSION_REQUEST = 'AUTOPILOT_VERSION_REQUEST',\n  BATTERY_STATUS = 'BATTERY_STATUS',\n  BATTERY2 = 'BATTERY2',\n  BUTTON_CHANGE = 'BUTTON_CHANGE',\n  CAMERA_CAPTURE_STATUS = 'CAMERA_CAPTURE_STATUS',\n  CAMERA_FEEDBACK = 'CAMERA_FEEDBACK',\n  CAMERA_IMAGE_CAPTURED = 'CAMERA_IMAGE_CAPTURED',\n  CAMERA_INFORMATION = 'CAMERA_INFORMATION',\n  CAMERA_SETTINGS = 'CAMERA_SETTINGS',\n  CAMERA_STATUS = 'CAMERA_STATUS',\n  CAMERA_TRIGGER = 'CAMERA_TRIGGER',\n  CELLULAR_CONFIG = 'CELLULAR_CONFIG',\n  CELLULAR_STATUS = 'CELLULAR_STATUS',\n  CHANGE_OPERATOR_CONTROL = 'CHANGE_OPERATOR_CONTROL',\n  CHANGE_OPERATOR_CONTROL_ACK = 'CHANGE_OPERATOR_CONTROL_ACK',\n  COLLISION = 'COLLISION',\n  COMMAND_ACK = 'COMMAND_ACK',\n  COMMAND_CANCEL = 'COMMAND_CANCEL',\n  COMMAND_INT = 'COMMAND_INT',\n  COMMAND_LONG = 'COMMAND_LONG',\n  COMPASSMOT_STATUS = 'COMPASSMOT_STATUS',\n  COMPONENT_INFORMATION = 'COMPONENT_INFORMATION',\n  CONTROL_SYSTEM_STATE = 'CONTROL_SYSTEM_STATE',\n  DATA_STREAM = 'DATA_STREAM',\n  DATA_TRANSMISSION_HANDSHAKE = 'DATA_TRANSMISSION_HANDSHAKE',\n  DATA16 = 'DATA16',\n  DATA32 = 'DATA32',\n  DATA64 = 'DATA64',\n  DATA96 = 'DATA96',\n  DEBUG = 'DEBUG',\n  DEBUG_FLOAT_ARRAY = 'DEBUG_FLOAT_ARRAY',\n  DEBUG_VECT = 'DEBUG_VECT',\n  DEEPSTALL = 'DEEPSTALL',\n  DEVICE_OP_READ = 'DEVICE_OP_READ',\n  DEVICE_OP_READ_REPLY = 'DEVICE_OP_READ_REPLY',\n  DEVICE_OP_WRITE = 'DEVICE_OP_WRITE',\n  DEVICE_OP_WRITE_REPLY = 'DEVICE_OP_WRITE_REPLY',\n  DIGICAM_CONFIGURE = 'DIGICAM_CONFIGURE',\n  DIGICAM_CONTROL = 'DIGICAM_CONTROL',\n  DISTANCE_SENSOR = 'DISTANCE_SENSOR',\n  EFI_STATUS = 'EFI_STATUS',\n  EKF_STATUS_REPORT = 'EKF_STATUS_REPORT',\n  ENCAPSULATED_DATA = 'ENCAPSULATED_DATA',\n  ESC_TELEMETRY_1_TO_4 = 'ESC_TELEMETRY_1_TO_4',\n  ESC_TELEMETRY_5_TO_8 = 'ESC_TELEMETRY_5_TO_8',\n  ESC_TELEMETRY_9_TO_12 = 'ESC_TELEMETRY_9_TO_12',\n  ESTIMATOR_STATUS = 'ESTIMATOR_STATUS',\n  EXTENDED_SYS_STATE = 'EXTENDED_SYS_STATE',\n  FENCE_FETCH_POINT = 'FENCE_FETCH_POINT',\n  FENCE_POINT = 'FENCE_POINT',\n  FENCE_STATUS = 'FENCE_STATUS',\n  FILE_TRANSFER_PROTOCOL = 'FILE_TRANSFER_PROTOCOL',\n  FLIGHT_INFORMATION = 'FLIGHT_INFORMATION',\n  FOLLOW_TARGET = 'FOLLOW_TARGET',\n  GENERATOR_STATUS = 'GENERATOR_STATUS',\n  GIMBAL_CONTROL = 'GIMBAL_CONTROL',\n  GIMBAL_DEVICE_ATTITUDE_STATUS = 'GIMBAL_DEVICE_ATTITUDE_STATUS',\n  GIMBAL_DEVICE_INFORMATION = 'GIMBAL_DEVICE_INFORMATION',\n  GIMBAL_DEVICE_SET_ATTITUDE = 'GIMBAL_DEVICE_SET_ATTITUDE',\n  GIMBAL_MANAGER_INFORMATION = 'GIMBAL_MANAGER_INFORMATION',\n  GIMBAL_MANAGER_SET_ATTITUDE = 'GIMBAL_MANAGER_SET_ATTITUDE',\n  GIMBAL_MANAGER_SET_TILTPAN = 'GIMBAL_MANAGER_SET_TILTPAN',\n  GIMBAL_MANAGER_STATUS = 'GIMBAL_MANAGER_STATUS',\n  GIMBAL_REPORT = 'GIMBAL_REPORT',\n  GIMBAL_TORQUE_CMD_REPORT = 'GIMBAL_TORQUE_CMD_REPORT',\n  GLOBAL_POSITION_INT = 'GLOBAL_POSITION_INT',\n  GLOBAL_POSITION_INT_COV = 'GLOBAL_POSITION_INT_COV',\n  GLOBAL_VISION_POSITION_ESTIMATE = 'GLOBAL_VISION_POSITION_ESTIMATE',\n  GOPRO_GET_REQUEST = 'GOPRO_GET_REQUEST',\n  GOPRO_GET_RESPONSE = 'GOPRO_GET_RESPONSE',\n  GOPRO_HEARTBEAT = 'GOPRO_HEARTBEAT',\n  GOPRO_SET_REQUEST = 'GOPRO_SET_REQUEST',\n  GOPRO_SET_RESPONSE = 'GOPRO_SET_RESPONSE',\n  GPS_GLOBAL_ORIGIN = 'GPS_GLOBAL_ORIGIN',\n  GPS_INJECT_DATA = 'GPS_INJECT_DATA',\n  GPS_INPUT = 'GPS_INPUT',\n  GPS_RAW_INT = 'GPS_RAW_INT',\n  GPS_RTCM_DATA = 'GPS_RTCM_DATA',\n  GPS_RTK = 'GPS_RTK',\n  GPS_STATUS = 'GPS_STATUS',\n  GPS2_RAW = 'GPS2_RAW',\n  GPS2_RTK = 'GPS2_RTK',\n  HEARTBEAT = 'HEARTBEAT',\n  HIGH_LATENCY = 'HIGH_LATENCY',\n  HIGH_LATENCY2 = 'HIGH_LATENCY2',\n  HIGHRES_IMU = 'HIGHRES_IMU',\n  HIL_ACTUATOR_CONTROLS = 'HIL_ACTUATOR_CONTROLS',\n  HIL_CONTROLS = 'HIL_CONTROLS',\n  HIL_GPS = 'HIL_GPS',\n  HIL_OPTICAL_FLOW = 'HIL_OPTICAL_FLOW',\n  HIL_RC_INPUTS_RAW = 'HIL_RC_INPUTS_RAW',\n  HIL_SENSOR = 'HIL_SENSOR',\n  HIL_STATE = 'HIL_STATE',\n  HIL_STATE_QUATERNION = 'HIL_STATE_QUATERNION',\n  HOME_POSITION = 'HOME_POSITION',\n  HWSTATUS = 'HWSTATUS',\n  ISBD_LINK_STATUS = 'ISBD_LINK_STATUS',\n  LANDING_TARGET = 'LANDING_TARGET',\n  LED_CONTROL = 'LED_CONTROL',\n  LIMITS_STATUS = 'LIMITS_STATUS',\n  LINK_NODE_STATUS = 'LINK_NODE_STATUS',\n  LOCAL_POSITION_NED = 'LOCAL_POSITION_NED',\n  LOCAL_POSITION_NED_COV = 'LOCAL_POSITION_NED_COV',\n  LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET = 'LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET',\n  LOG_DATA = 'LOG_DATA',\n  LOG_ENTRY = 'LOG_ENTRY',\n  LOG_ERASE = 'LOG_ERASE',\n  LOG_REQUEST_DATA = 'LOG_REQUEST_DATA',\n  LOG_REQUEST_END = 'LOG_REQUEST_END',\n  LOG_REQUEST_LIST = 'LOG_REQUEST_LIST',\n  LOGGING_ACK = 'LOGGING_ACK',\n  LOGGING_DATA = 'LOGGING_DATA',\n  LOGGING_DATA_ACKED = 'LOGGING_DATA_ACKED',\n  MAG_CAL_PROGRESS = 'MAG_CAL_PROGRESS',\n  MAG_CAL_REPORT = 'MAG_CAL_REPORT',\n  MANUAL_CONTROL = 'MANUAL_CONTROL',\n  MANUAL_SETPOINT = 'MANUAL_SETPOINT',\n  MEMINFO = 'MEMINFO',\n  MEMORY_VECT = 'MEMORY_VECT',\n  MESSAGE_INTERVAL = 'MESSAGE_INTERVAL',\n  MISSION_ACK = 'MISSION_ACK',\n  MISSION_CHANGED = 'MISSION_CHANGED',\n  MISSION_CLEAR_ALL = 'MISSION_CLEAR_ALL',\n  MISSION_COUNT = 'MISSION_COUNT',\n  MISSION_CURRENT = 'MISSION_CURRENT',\n  MISSION_ITEM = 'MISSION_ITEM',\n  MISSION_ITEM_INT = 'MISSION_ITEM_INT',\n  MISSION_ITEM_REACHED = 'MISSION_ITEM_REACHED',\n  MISSION_REQUEST = 'MISSION_REQUEST',\n  MISSION_REQUEST_INT = 'MISSION_REQUEST_INT',\n  MISSION_REQUEST_LIST = 'MISSION_REQUEST_LIST',\n  MISSION_REQUEST_PARTIAL_LIST = 'MISSION_REQUEST_PARTIAL_LIST',\n  MISSION_SET_CURRENT = 'MISSION_SET_CURRENT',\n  MISSION_WRITE_PARTIAL_LIST = 'MISSION_WRITE_PARTIAL_LIST',\n  MOUNT_CONFIGURE = 'MOUNT_CONFIGURE',\n  MOUNT_CONTROL = 'MOUNT_CONTROL',\n  MOUNT_ORIENTATION = 'MOUNT_ORIENTATION',\n  MOUNT_STATUS = 'MOUNT_STATUS',\n  NAMED_VALUE_FLOAT = 'NAMED_VALUE_FLOAT',\n  NAMED_VALUE_INT = 'NAMED_VALUE_INT',\n  NAV_CONTROLLER_OUTPUT = 'NAV_CONTROLLER_OUTPUT',\n  OBSTACLE_DISTANCE = 'OBSTACLE_DISTANCE',\n  ODOMETRY = 'ODOMETRY',\n  ONBOARD_COMPUTER_STATUS = 'ONBOARD_COMPUTER_STATUS',\n  OPEN_DRONE_ID_AUTHENTICATION = 'OPEN_DRONE_ID_AUTHENTICATION',\n  OPEN_DRONE_ID_BASIC_ID = 'OPEN_DRONE_ID_BASIC_ID',\n  OPEN_DRONE_ID_LOCATION = 'OPEN_DRONE_ID_LOCATION',\n  OPEN_DRONE_ID_MESSAGE_PACK = 'OPEN_DRONE_ID_MESSAGE_PACK',\n  OPEN_DRONE_ID_OPERATOR_ID = 'OPEN_DRONE_ID_OPERATOR_ID',\n  OPEN_DRONE_ID_SELF_ID = 'OPEN_DRONE_ID_SELF_ID',\n  OPEN_DRONE_ID_SYSTEM = 'OPEN_DRONE_ID_SYSTEM',\n  OPTICAL_FLOW = 'OPTICAL_FLOW',\n  OPTICAL_FLOW_RAD = 'OPTICAL_FLOW_RAD',\n  ORBIT_EXECUTION_STATUS = 'ORBIT_EXECUTION_STATUS',\n  PARAM_EXT_ACK = 'PARAM_EXT_ACK',\n  PARAM_EXT_REQUEST_LIST = 'PARAM_EXT_REQUEST_LIST',\n  PARAM_EXT_REQUEST_READ = 'PARAM_EXT_REQUEST_READ',\n  PARAM_EXT_SET = 'PARAM_EXT_SET',\n  PARAM_EXT_VALUE = 'PARAM_EXT_VALUE',\n  PARAM_MAP_RC = 'PARAM_MAP_RC',\n  PARAM_REQUEST_LIST = 'PARAM_REQUEST_LIST',\n  PARAM_REQUEST_READ = 'PARAM_REQUEST_READ',\n  PARAM_SET = 'PARAM_SET',\n  PARAM_VALUE = 'PARAM_VALUE',\n  PID_TUNING = 'PID_TUNING',\n  PING = 'PING',\n  PLAY_TUNE = 'PLAY_TUNE',\n  PLAY_TUNE_V2 = 'PLAY_TUNE_V2',\n  POSITION_TARGET_GLOBAL_INT = 'POSITION_TARGET_GLOBAL_INT',\n  POSITION_TARGET_LOCAL_NED = 'POSITION_TARGET_LOCAL_NED',\n  POWER_STATUS = 'POWER_STATUS',\n  PROTOCOL_VERSION = 'PROTOCOL_VERSION',\n  RADIO = 'RADIO',\n  RADIO_STATUS = 'RADIO_STATUS',\n  RALLY_FETCH_POINT = 'RALLY_FETCH_POINT',\n  RALLY_POINT = 'RALLY_POINT',\n  RANGEFINDER = 'RANGEFINDER',\n  RAW_IMU = 'RAW_IMU',\n  RAW_PRESSURE = 'RAW_PRESSURE',\n  RAW_RPM = 'RAW_RPM',\n  RC_CHANNELS = 'RC_CHANNELS',\n  RC_CHANNELS_OVERRIDE = 'RC_CHANNELS_OVERRIDE',\n  RC_CHANNELS_RAW = 'RC_CHANNELS_RAW',\n  RC_CHANNELS_SCALED = 'RC_CHANNELS_SCALED',\n  REMOTE_LOG_BLOCK_STATUS = 'REMOTE_LOG_BLOCK_STATUS',\n  REMOTE_LOG_DATA_BLOCK = 'REMOTE_LOG_DATA_BLOCK',\n  REQUEST_DATA_STREAM = 'REQUEST_DATA_STREAM',\n  RESOURCE_REQUEST = 'RESOURCE_REQUEST',\n  RPM = 'RPM',\n  SAFETY_ALLOWED_AREA = 'SAFETY_ALLOWED_AREA',\n  SAFETY_SET_ALLOWED_AREA = 'SAFETY_SET_ALLOWED_AREA',\n  SCALED_IMU = 'SCALED_IMU',\n  SCALED_IMU2 = 'SCALED_IMU2',\n  SCALED_IMU3 = 'SCALED_IMU3',\n  SCALED_PRESSURE = 'SCALED_PRESSURE',\n  SCALED_PRESSURE2 = 'SCALED_PRESSURE2',\n  SCALED_PRESSURE3 = 'SCALED_PRESSURE3',\n  SENSOR_OFFSETS = 'SENSOR_OFFSETS',\n  SERIAL_CONTROL = 'SERIAL_CONTROL',\n  SERVO_OUTPUT_RAW = 'SERVO_OUTPUT_RAW',\n  SET_ACTUATOR_CONTROL_TARGET = 'SET_ACTUATOR_CONTROL_TARGET',\n  SET_ATTITUDE_TARGET = 'SET_ATTITUDE_TARGET',\n  SET_GPS_GLOBAL_ORIGIN = 'SET_GPS_GLOBAL_ORIGIN',\n  SET_HOME_POSITION = 'SET_HOME_POSITION',\n  SET_MAG_OFFSETS = 'SET_MAG_OFFSETS',\n  SET_MODE = 'SET_MODE',\n  SET_POSITION_TARGET_GLOBAL_INT = 'SET_POSITION_TARGET_GLOBAL_INT',\n  SET_POSITION_TARGET_LOCAL_NED = 'SET_POSITION_TARGET_LOCAL_NED',\n  SETUP_SIGNING = 'SETUP_SIGNING',\n  SIM_STATE = 'SIM_STATE',\n  SIMSTATE = 'SIMSTATE',\n  SMART_BATTERY_INFO = 'SMART_BATTERY_INFO',\n  SMART_BATTERY_STATUS = 'SMART_BATTERY_STATUS',\n  STATUSTEXT = 'STATUSTEXT',\n  STORAGE_INFORMATION = 'STORAGE_INFORMATION',\n  SUPPORTED_TUNES = 'SUPPORTED_TUNES',\n  SYS_STATUS = 'SYS_STATUS',\n  SYSTEM_TIME = 'SYSTEM_TIME',\n  TERRAIN_CHECK = 'TERRAIN_CHECK',\n  TERRAIN_DATA = 'TERRAIN_DATA',\n  TERRAIN_REPORT = 'TERRAIN_REPORT',\n  TERRAIN_REQUEST = 'TERRAIN_REQUEST',\n  TIME_ESTIMATE_TO_TARGET = 'TIME_ESTIMATE_TO_TARGET',\n  TIMESYNC = 'TIMESYNC',\n  TRAJECTORY_REPRESENTATION_BEZIER = 'TRAJECTORY_REPRESENTATION_BEZIER',\n  TRAJECTORY_REPRESENTATION_WAYPOINTS = 'TRAJECTORY_REPRESENTATION_WAYPOINTS',\n  TUNNEL = 'TUNNEL',\n  UAVCAN_NODE_INFO = 'UAVCAN_NODE_INFO',\n  UAVCAN_NODE_STATUS = 'UAVCAN_NODE_STATUS',\n  UTM_GLOBAL_POSITION = 'UTM_GLOBAL_POSITION',\n  V2_EXTENSION = 'V2_EXTENSION',\n  VFR_HUD = 'VFR_HUD',\n  VIBRATION = 'VIBRATION',\n  VICON_POSITION_ESTIMATE = 'VICON_POSITION_ESTIMATE',\n  VIDEO_STREAM_INFORMATION = 'VIDEO_STREAM_INFORMATION',\n  VIDEO_STREAM_STATUS = 'VIDEO_STREAM_STATUS',\n  VISION_POSITION_DELTA = 'VISION_POSITION_DELTA',\n  VISION_POSITION_ESTIMATE = 'VISION_POSITION_ESTIMATE',\n  VISION_SPEED_ESTIMATE = 'VISION_SPEED_ESTIMATE',\n  WHEEL_DISTANCE = 'WHEEL_DISTANCE',\n  WIFI_CONFIG_AP = 'WIFI_CONFIG_AP',\n  WIND = 'WIND',\n  WIND_COV = 'WIND_COV',\n}\n","import { type RoomConnectOptions, DefaultReconnectPolicy, type RoomOptions, VideoPresets } from \"livekit-client\"\nimport { MAVLinkType } from \"./mavlink2rest-ts/messages/mavlink2rest-enum.ts\";\n\ndeclare global {\n    interface Window {\n        LIVEKIT_LIST_ONLY_TOKEN: string\n    }\n}\n\nexport enum ConnectionStates {\n    init = \"Init\",\n    connecting = \"Connecting\",\n    connected = \"Connected\",\n    reconnecting = \"Reconnecting\",\n    disconnectedOk = \"Disconnected\",\n    failed = \"Failed\",\n}\n\nconst TE = new TextEncoder();\nexport const ENCODE_TXT = (txt: string) => TE.encode(txt)\nconst TD = new TextDecoder();\nexport const DECODE_TXT = (data: ArrayBufferLike) => TD.decode(data)\n\nexport const ENCRYPTED_AUTH_TOKEN_PREFIX = \"AUTHTOKEN:\";\n\nexport const SEA_LEVEL_PRESSURE = 1013.25; // mbar\n\n// export let DEBUG_MODE = false;\n// export let ROV_NAME = 'Default-ROV'\n// export let ROV_CONTROL_PASSWORD = ''\n// export let LIVEKIT_API_KEY = ''\n// export let LIVEKIT_SECRET_KEY = ''\n// export let TWITCH_STREAM_KEY = 'None'\n// export let ENABLE_LIVEKIT_LOCAL = false\n// export let ENABLE_LIVEKIT_CLOUD = true\n// export let PYTHON_WEBSOCKET_PORT = 0\n// export let AUTH_TOKEN_TIMEOUT = 60 * 60 * 24 // 1 day\n// export let BLUEOS_APIS_ENDPOINT = 'http://blueos.local'\n// export let LIVEKIT_CLOUD_ENDPOINT = 'https://rov-web.livekit.cloud'\n// export let LIVEKIT_LOCAL_ENDPOINT = 'http://localhost:7880'\n\n// export function setRuntimeConsts(livekitConfig: LivekitSetupOptions) {\n\n\n\nexport const PROXY_PREFIX = 'proxy:';\nexport const SECONDS_IN_DAY = 60 * 60 * 24;\nexport const FRONTEND_HANDLED_MAVLINK_MESSAGE_TYPES = [\n    MAVLinkType.HEARTBEAT, MAVLinkType.ATTITUDE, MAVLinkType.SYS_STATUS, MAVLinkType.STATUSTEXT, MAVLinkType.SCALED_PRESSURE, MAVLinkType.SCALED_PRESSURE2, MAVLinkType.SCALED_PRESSURE3\n]\n\nexport const LIVEKIT_BACKEND_ROOM_CONNECTION_CONFIG: RoomConnectOptions = {\n    autoSubscribe: false,\n    maxRetries: 2,\n    peerConnectionTimeout: 30000, // miliseconds\n}\n\nexport const LIVEKIT_FRONTEND_ROOM_CONNECTION_CONFIG: RoomConnectOptions = {\n    autoSubscribe: false,\n    maxRetries: 6,\n    peerConnectionTimeout: 15000, // miliseconds\n}\n\nexport const LIVEKIT_BACKEND_ROOM_CONFIG: RoomOptions = {\n\n    // specify how offten to retry connection when it fails.\n    reconnectPolicy: new DefaultReconnectPolicy(),\n\n    // optimize publishing bandwidth and CPU for published tracks\n    dynacast: true,\n\n    adaptiveStream: true,\n\n    // default capture settings\n    videoCaptureDefaults: {\n        resolution: {\n            width: 1920,\n            height: 1080,\n            frameRate: 60,\n        },\n        // facingMode: 'environment',\n        // deviceId: //get device id beforehand\n\n    },\n\n    publishDefaults: {\n        videoCodec: \"vp8\",\n        videoEncoding: {\n            maxBitrate: 2_000_000,\n            maxFramerate: 60,\n            priority: \"high\",\n        },\n\n        // videoEncoding: {\n        //     maxBitrate: 160_000,\n        //     maxFramerate: 30,\n        //     priority: \"high\",\n        // },\n\n        simulcast: false,\n        // videoSimulcastLayers: [\n        //     // VideoPresets.h540,\n        //     VideoPresets.h360,\n        // ]\n\n    },\n}\n\n\nexport const LIVEKIT_FRONTEND_ROOM_CONFIG: RoomOptions = {\n    // specify how offten to retry connection when it fails.\n    reconnectPolicy: new DefaultReconnectPolicy(),\n    // optimize publishing bandwidth and CPU for published tracks\n    dynacast: true,\n    disconnectOnPageLeave: true,\n    adaptiveStream: true,\n\n}\n\nexport const SIMPLEPEER_BASE_CONFIG = {\n    initiator: true,\n    trickle: true,\n    // @ts-ignore\n    config: {\n        bundlePolicy: \"balanced\",\n        iceTransportPolicy: \"all\",\n    } as RTCConfiguration,\n}\n","const urlParams = new URLSearchParams(window.location.search);\n\nexport function getStringQueryParam(name: string, defaultValue?: string): string {\n    const param = urlParams.get(name);\n    if (param == undefined || param === \"\") {\n        if (defaultValue === undefined) throw new Error(\"Missing required url query parameter (string): \" + name);\n        return defaultValue;\n    }\n    return param;\n}\n\nexport function getBooleanQueryParam(name: string, defaultValue?: boolean): boolean {\n    const param = urlParams.get(name);\n    if (param == undefined || param === \"\") {\n        if (defaultValue === undefined) throw new Error(\"Missing required boolean url query parameter (boolean): \" + name);\n        return defaultValue;\n    }\n    if (param.toLowerCase() === \"false\") return false;\n    return true;\n}\n\nexport function getIntegerQueryParam(name: string, defaultValue?: number): number {\n    const param = urlParams.get(name);\n    if (param == undefined || param === \"\") {\n        if (defaultValue === undefined) throw new Error(\"Missing required integer url query parameter (integer): \" + name);\n        else return defaultValue;\n    }\n    try {\n        return parseInt(param);\n    } catch (e) {\n        throw new Error(`Error parsing integer url query parameter: ${name}=${param}`);\n    }\n}\n","import type { PopupSettings } from \"../components/Popup/types\";\nimport { SECONDS_IN_DAY } from \"./shared/consts\";\nimport { getBooleanQueryParam, getIntegerQueryParam, getStringQueryParam } from \"./shared/urlParameters\";\n\n/** Token used by the frontend to list available livekit rooms, it does not have any other permissions, but lasts almost indefinately */\n// START_LIVEKIT_FRONTEND_TOKEN\nexport const LIVEKIT_LIST_ONLY_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2aWRlbyI6eyJyb29tTGlzdCI6dHJ1ZSwicm9vbUpvaW4iOmZhbHNlLCJjYW5QdWJsaXNoIjpmYWxzZSwiY2FuU3Vic2NyaWJlIjpmYWxzZSwiY2FuUHVibGlzaERhdGEiOmZhbHNlLCJjYW5VcGRhdGVPd25NZXRhZGF0YSI6ZmFsc2V9LCJpYXQiOjE2OTE0NTEzNDEsIm5iZiI6MTY5MTQ1MTM0MSwiZXhwIjoxMTE1MjI1MTM0MSwiaXNzIjoiQVBJSGQ3Qm9hOVJVVWlUIiwic3ViIjoibHQiLCJqdGkiOiJsdCJ9.X5fI6ceu2aLf0bc-h3PKc-u2PRzSAgVZEpK5FjScRGQ\"\n// END_LIVEKIT_FRONTEND_TOKEN\n\nexport const URL_PARAMS = {\n    DEBUG_MODE: getBooleanQueryParam(\"DEBUG_MODE\", false),\n    SHOW_REMOTE_LOGS: getBooleanQueryParam(\"SHOW_REMOTE_LOGS\", true),\n    LIVEKIT_CLOUD_ENDPOINT: getStringQueryParam(\"LIVEKIT_CLOUD_URL\", 'https://rov-web.livekit.cloud'),\n    LIVEKIT_LOCAL_ENDPOINT: getStringQueryParam(\"LIVEKIT_LOCAL_URL\", 'http://localhost:7880'),\n}\n\nexport const ROV_PEERID_BASE = \"ROV-\";\nexport const EMOJI_MAP = [\"🏔\", \"🏎\", \"🚃\", \"🕤\", \"🐔\", \"🛤\", \"🚖\", \"🎿\", \"🐼\", \"🙏\", \"🏨\", \"💞\", \"🐺\", \"👽\", \"🎯\", \"🏊\", \"🍘\", \"🍕\", \"🎡\", \"🐋\", \"🍒\", \"🐜\", \"💫\", \"🏑\", \"💥\", \"⛰\", \"🎬\", \"🐝\", \"👎\", \"🚓\", \"💵\", \"📡\", \"🏤\", \"📍\", \"🍔\", \"🌐\", \"🏧\", \"👈\", \"💺\", \"🛺\", \"😳\", \"🌌\", \"🥋\", \"🐚\", \"🐄\", \"🎓\", \"🚵\", \"🔑\", \"🛖\", \"🕍\", \"💿\", \"🎚\", \"🐫\", \"🌍\", \"🌔\", \"🍓\", \"🤾\", \"💧\", \"🍌\", \"🍚\", \"💯\", \"🥘\", \"⌛\", \"🔬\", \"🛣\", \"🌊\", \"🏰\", \"🎫\", \"🌈\", \"👶\", \"🚫\", \"🚑\", \"📊\", \"💐\", \"📠\", \"👠\", \"🎤\", \"🚨\", \"🎢\", \"🐽\", \"🍞\", \"🚄\", \"🐂\", \"🍸\", \"🚗\", \"👑\", \"🦽\", \"🎹\", \"🚿\", \"⌚\", \"🎾\", \"🤿\", \"🚪\", \"🍇\", \"🐻\", \"👦\", \"🛟\", \"🥌\", \"🃏\", \"🏜\", \"🐗\", \"🚜\", \"🍫\", \"🚌\", \"🌅\", \"🪁\", \"🌳\", \"🚕\", \"🚛\", \"🚇\", \"🍵\", \"🔔\", \"🛶\", \"👏\", \"💚\", \"🤼\", \"🏄\", \"🐙\", \"😄\", \"🌄\", \"🎸\", \"🌆\", \"👙\", \"👇\", \"⛲\", \"👄\", \"🍩\", \"🩼\", \"🛳\", \"🔉\", \"💦\", \"🏃\", \"🛵\", \"🌼\", \"🏩\", \"🎅\", \"💏\", \"🌵\", \"🏠\", \"🍆\", \"🍺\", \"⭐\", \"🐣\", \"🏥\", \"💻\", \"🎮\", \"🎲\", \"👅\", \"⛱\", \"🏙\", \"📰\", \"📯\", \"🎥\", \"🍏\", \"🎊\", \"👢\", \"🐩\", \"🍍\", \"📼\", \"📺\", \"🚅\", \"⚽\", \"🚙\", \"📘\", \"🍎\", \"🚚\", \"🚀\", \"🐊\", \"🎺\", \"👧\", \"🚝\", \"🧡\", \"⛳\", \"🔕\", \"👃\", \"🛞\", \"👂\", \"🏇\", \"🍁\", \"🔫\", \"🎵\", \"🐢\", \"🖱\", \"🤺\", \"🔆\", \"🐈\", \"💔\", \"🚣\", \"🤣\", \"🪕\", \"🔦\", \"🙈\", \"🛷\", \"📸\", \"🎟\", \"🌽\", \"🚠\", \"🗼\", \"📢\", \"🍗\", \"🗜\", \"💋\", \"🎗\", \"📷\", \"🥛\", \"📫\", \"🎃\", \"💡\", \"🗿\", \"🐌\", \"🥁\", \"🎍\", \"🥝\", \"📚\", \"🍪\", \"🍟\", \"🏦\", \"💢\", \"🌬\", \"🍷\", \"😼\", \"🔩\", \"🚴\", \"🕋\", \"🎆\", \"👛\", \"🌿\", \"🚔\", \"🎽\", \"📞\", \"🏚\", \"🏵\", \"🧦\", \"🐬\", \"💭\", \"🎩\", \"⛵\", \"⛺\", \"🔧\", \"💼\", \"👻\", \"🛻\", \"🏝\", \"🍼\", \"👾\", \"🚋\", \"🐍\", \"🐸\", \"🍐\", \"🌠\", \"📽\", \"⛔\", \"🍰\", \"🪂\", \"💉\", \"📖\", \"🔍\", \"💎\", \"⛄\", \"🏘\", \"🚲\", \"📻\", \"🌀\", \"👉\", \"🎳\", \"📌\", \"🏹\", \"🔥\", \"🏀\", \"💾\", \"⛪\", \"🏍\", \"💙\", \"🏈\", \"🏕\", \"💪\", \"💒\", \"👆\", \"🍨\", \"🛫\", \"🐎\", \"🐀\", \"🚆\", \"👊\", \"😈\", \"🏟\", \"🐴\", \"💩\", \"👐\", \"🔮\", \"🐓\", \"💨\", \"🎁\", \"🔨\", \"🍬\", \"📆\", \"💣\", \"🚉\", \"👓\", \"🎀\", \"🎻\", \"🐇\", \"🏁\", \"🎪\", \"📟\", \"🎂\", \"🕌\", \"🚽\", \"🌁\", \"💃\", \"💘\", \"😠\", \"🤹\", \"👔\", \"💀\", \"🚮\", \"🪀\", \"📣\", \"🚈\", \"🏖\", \"📝\", \"💊\", \"🚒\", \"🎈\", \"🪲\", \"🥊\", \"☁\", \"🗻\", \"🏞\", \"⛷\", \"💰\", \"🎨\", \"🌇\", \"😎\", \"🚊\", \"🛼\", \"🚦\", \"🛴\", \"💬\", \"👍\", \"🛀\", \"👩\", \"🐛\", \"👌\", \"👫\", \"🎭\", \"🎷\", \"👕\", \"🌮\", \"🍃\", \"🎱\", \"🗾\", \"🕠\", \"🚢\", \"💈\", \"🍂\", \"🚧\", \"👼\", \"🔢\", \"🐧\", \"🐖\", \"🍄\", \"🎠\", \"👜\", \"🐨\", \"🛬\", \"🛹\", \"🍤\", \"🚍\", \"🤽\", \"🎄\", \"🐒\", \"🚥\", \"🐕\", \"⛩\", \"🚡\", \"🎑\", \"👰\", \"🔭\", \"⛽\", \"🎇\", \"😮\", \"🏯\", \"🍀\", \"⛑\", \"🔋\", \"⛅\", \"😌\", \"🌹\", \"😭\", \"🚘\", \"🧩\", \"🏆\", \"🍑\", \"👤\", \"🛥\", \"🐁\", \"🛰\", \"💍\", \"🛩\"];\nexport const MEMORABLE_PEER_ID_OFFSET = 74646;\n\nexport const PING_INTERVAL = 1000 // 1 second in ms\nexport const MOVE_MSG_TIMEOUT = 100 // 0.8 seconds in ms\n\nexport enum ConnectionState {\n    connecting = \"Connecting\",\n    connected = \"Connected\",\n    reconnecting = \"Reconnecting\",\n    disconnected = \"Disconnected\",\n}\n\nexport enum ConnectionTransitions {\n    ON_CONNECTED = \"ON_CONNECTED\",\n    ON_DISCONNECTED = \"ON_DISCONNECTED\",\n    ON_DESTROY = \"ON_DESTROY\",\n}\n\nexport type EventHandlerStore = {\n    [key: string]: (e?: any) => void;\n}\n\n/******* UI RELATED CONSTANTS ********/\n\nexport enum LOADING_MESSAGE {\n    clearAll = \"all\",\n    default = \"Loading...\",\n    ipScan = \"Scanning for ROV IP address...\",\n    internetCheck = \"Checking internet access...\",\n    serverConnecting = \"Connecting to peer server...\",\n    serverReconnecting = \"Reconnecting to peer server...\",\n    webrtcConnecting = \"Searching for ROV...\",\n    webrtcReconnecting = \"Reconnecting to ROV...\",\n    reloadingSite = \"Reloading site...\",\n    awaitingVideoCall = \"Waiting for livestream...\",\n    awaitingRovReconnect = \"Waiting for ROV to reconnect...\",\n}\n\n/****** GAMEPAD RELATED ***********/\n\nexport enum GPAD_STANDARD_BUTTON_INDEX {\n    A = 0,\n    B = 1,\n    X = 2,\n    Y = 3,\n    LB = 4,\n    RB = 5,\n    LT = 6,\n    RT = 7,\n    SELECT = 8,\n    START = 9,\n    LSTICK = 10,\n    RSTICK = 11,\n    DPAD_UP = 12,\n    DPAD_DOWN = 13,\n    DPAD_LEFT = 14,\n    DPAD_RIGHT = 15,\n    VENDOR = 16,\n}\n\nexport const GPAD_STANDARD_BUTTON_INDEX_TO_MAVLINK_INDEX = {\n    [GPAD_STANDARD_BUTTON_INDEX.A]: 0,\n    [GPAD_STANDARD_BUTTON_INDEX.B]: 1,\n    [GPAD_STANDARD_BUTTON_INDEX.X]: 2,\n    [GPAD_STANDARD_BUTTON_INDEX.Y]: 3,\n    [GPAD_STANDARD_BUTTON_INDEX.LB]: 9,\n    [GPAD_STANDARD_BUTTON_INDEX.RB]: 10,\n    // [GPAD_STANDARD_BUTTON_INDEX.LT]: -1,\n    // [GPAD_STANDARD_BUTTON_INDEX.RT]: -1,\n    [GPAD_STANDARD_BUTTON_INDEX.SELECT]: 4,\n    [GPAD_STANDARD_BUTTON_INDEX.START]: 6,\n    [GPAD_STANDARD_BUTTON_INDEX.LSTICK]: 7,\n    [GPAD_STANDARD_BUTTON_INDEX.RSTICK]: 8,\n    [GPAD_STANDARD_BUTTON_INDEX.DPAD_UP]: 11,\n    [GPAD_STANDARD_BUTTON_INDEX.DPAD_DOWN]: 12,\n    [GPAD_STANDARD_BUTTON_INDEX.DPAD_LEFT]: 13,\n    [GPAD_STANDARD_BUTTON_INDEX.DPAD_RIGHT]: 14,\n    [GPAD_STANDARD_BUTTON_INDEX.VENDOR]: 5,\n}\n\n\n// export const TOUCHED_BUTTON_EQUIVELANT_VALUE = 0.5;\nexport type GpadBtnConfig = { btnName: string, helpLabel: string, tooltipPlacement: PopupSettings[\"placement\"], fireWhileHolding?: boolean, remoteAction?: string, localAction?: string }\nexport const GAME_CONTROLLER_BUTTON_CONFIG: GpadBtnConfig[] = [\n    { btnName: \"button_1\", helpLabel: \"Take Control\", tooltipPlacement: \"left\" },\n    { btnName: \"button_2\", helpLabel: \"HALT Motors\", tooltipPlacement: \"left\" },\n    { btnName: \"button_3\", helpLabel: \"Take Photo (N/A)\", tooltipPlacement: \"left\" },\n    { btnName: \"button_4\", helpLabel: \"Change Fly Mode\", tooltipPlacement: \"left\" },\n    { btnName: \"shoulder_button_front_left\", helpLabel: \"Decrease Throttle\", tooltipPlacement: \"right\", fireWhileHolding: true, },\n    { btnName: \"shoulder_button_front_right\", helpLabel: \"Increase Throttle\", tooltipPlacement: \"left\", fireWhileHolding: true, },\n    { btnName: \"shoulder_trigger_back_left\", helpLabel: \"Open Claw\", fireWhileHolding: true, tooltipPlacement: \"right\" },\n    { btnName: \"shoulder_trigger_back_right\", helpLabel: \"Close Claw\", fireWhileHolding: true, tooltipPlacement: \"left\" },\n    { btnName: \"select_button\", helpLabel: \"Tutorial\", tooltipPlacement: \"right\" },\n    { btnName: \"start_button\", helpLabel: \"Move-Roll Toggle\", tooltipPlacement: \"left\" },\n    { btnName: \"stick_button_left\", helpLabel: \"Move Forward-Back & Turn\", tooltipPlacement: \"right\" },\n    { btnName: \"stick_button_right\", helpLabel: \"Move Up-Down & Left-Right\", tooltipPlacement: \"left\" },\n    { btnName: \"d_pad_up\", helpLabel: \"Look Up\", fireWhileHolding: true, tooltipPlacement: \"right\" },\n    { btnName: \"d_pad_down\", helpLabel: \"Look Down\", fireWhileHolding: true, tooltipPlacement: \"right\" },\n    { btnName: \"d_pad_left\", helpLabel: \"Dim Lights\", fireWhileHolding: true, tooltipPlacement: \"right\" },\n    { btnName: \"d_pad_right\", helpLabel: \"Brighten Lights\", fireWhileHolding: true, tooltipPlacement: \"right\" },\n    // { btnName: \"vendor\", helpLabel: \"TBD\", tooltipPlacement: \"top\" }, // note that the vendor button is often used by windows / android, so we can't use it.\n];\n\n\nexport const ONSCREEN_GPAD_BUTTON_LABELS = [\n    \"button_1\",\n    \"button_2\",\n    \"button_3\",\n    \"button_4\",\n    \"shoulder_button_front_left\",\n    \"shoulder_button_front_right\",\n    \"shoulder_trigger_back_left\",\n    \"shoulder_trigger_back_right\",\n    \"select_button\",\n    \"start_button\",\n    \"stick_button_left\",\n    \"stick_button_right\",\n    \"d_pad_up\",\n    \"d_pad_down\",\n    \"d_pad_left\",\n    \"d_pad_right\",\n    /* \"vendor\" */ // generally not available to browsers because it is used by OS vendors (eg: Xbox Game Bar, Steam HUD).\n];\n\n\nexport const ONSCREEN_GPAD_BUTTON_TOUCHED_CLASS = \"touched\", ONSCREEN_GPAD_BUTTON_PRESSED_CLASS = \"pressed\";\n","import type { nStoreT } from './shared/libraries/nStore';\nimport { EMOJI_MAP } from \"./frontendConsts\";\nimport { changesSubscribe } from './shared/util';\nimport { log, logDebug, logInfo, logWarn, logError } from \"../js/shared/logging\"\n\ndeclare global {\n    interface Element {\n        ALLOW_KEYBOARD_INPUT: Number;\n    }\n\n    interface HTMLElement {\n        webkitRequestFullscreen?(): Promise<void>;\n        webkitRequestFullScreen?(): Promise<void>;\n        mozRequestFullScreen?(): Promise<void>;\n        msRequestFullscreen?(): Promise<void>;\n        webkitEnterFullscreen?(): Promise<void>;\n    }\n\n    interface Document {\n        requestFullscreen(): Promise<void>;\n        webkitRequestFullscreen?(): Promise<void>;\n        mozRequestFullScreen?(): Promise<void>;\n        msRequestFullscreen?(): Promise<void>;\n        webkitExitFullscreen?(): Promise<void>;\n        mozCancelFullScreen?(): Promise<void>;\n        msExitFullscreen?(): Promise<void>;\n        msFullscreenElement?: Element;\n        mozFullScreenElement?: Element;\n        webkitFullscreenElement?: Element;\n        fullscreenElement?: Element;\n    }\n}\n\n/** keeps a svelte store and local storage value in sync (value is a string).\n * @param label label to use as the key to store this value in local storage.\n * @param store the svelte store to keep in sync with the local storage value.\n * @param defaultValue {optional} the value to initilize the store and local storage with if neither has been set.\n */\nexport function bindStringSvelteStoreToLocalStorage(label: string, store: nStoreT<string>, defaultValue?: string): void {\n    store.set(localStorage.getItem(label) || store.get() || defaultValue);\n    changesSubscribe(store, (newVal: string) => localStorage.setItem(label, String(newVal)));\n}\n\n\n/** keeps a svelte store and local storage value in sync (value is a number).\n * @param label label to use as the key to store this value in local storage.\n * @param store the svelte store to keep in sync with the local storage value.\n * @param defaultValue {optional} the value to initilize the store and local storage with if neither has been set.\n */\nexport function bindNumberSvelteStoreToLocalStorage(label: string, store: nStoreT<number>, defaultValue?: number): void {\n    store.set(parseFloat(localStorage.getItem(label)) || store.get() || defaultValue);\n    changesSubscribe(store, (newVal: number) => localStorage.setItem(label, String(newVal)));\n}\n\n/** wrap the callback for a keyboard event so it only fires on Enter or Space.\n * The output of this function should be passed to a keyboard event listener.\n * eg: body.addEventListener('keydown',selectKeypressFactory(log));\n * @param callback your callback function to run when the key enter or space is pressed\n * @returns return a function  will call the callback if the key is enter or space.\n */\nexport function selectKeypressFactory(callback: (KeyboardEvent) => void) {\n    return (e: KeyboardEvent) => {\n        if (e.key === 'Enter' || e.key === ' ') callback(e);\n    }\n}\n\nexport function clamp(number, max, min) {\n    return Math.max(Math.min(number, max), min)\n}\n\n/** Checks if two arrays are equal\n * @param a1 Array 1\n * @param a2 Array 2\n * @returns true if the all the array elements are equal\n */\nexport function arraysEqual(a1: any[], a2: any[]) {\n    let i = a1.length;\n    while (i--) {\n        if (a1[i] !== a2[i]) return false;\n    }\n    return true\n}\n\n/*\n* Gets just the passed name parameter from the query string the curent url:\n* Example: if the url is: https://example.com/abc?some-variable-name=somevalue&someotherthing=someothervalue\n* then getURLQueryStringVariable(\"some-variable-name\") will return \"somevalue\"\n*/\nexport function getURLQueryStringVariable(variable) {\n    let query = window.location.search.substring(1);\n    let vars = query.split('&');\n    for (let i = 0; i < vars.length; i++) {\n        let pair = vars[i].split('=');\n        if (decodeURIComponent(pair[0]) == variable) {\n            return decodeURIComponent(pair[1]);\n        }\n    }\n    logWarn(`Query variable ${variable} not found`);\n}\n\n// https://stackoverflow.com/questions/27078285/simple-throttle-in-javascript\nexport function basicThrottle(callback, limit) {\n    let waiting = false;                      // Initially, we're not waiting\n    return function () {                      // We return a throttled function\n        if (!waiting) {                       // If we're not waiting\n            callback.apply(this, arguments);  // Execute users function\n            waiting = true;                   // Prevent future invocations\n            setTimeout(function () {          // After a period of time\n                waiting = false;              // And allow future invocations\n            }, limit);\n        }\n    }\n}\n\n// underscore.js Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport function throttle(func, wait, options) {\n    let context, args, result;\n    let timeout = null;\n    let previous = 0;\n    if (!options) options = {};\n    let later = function () {\n        previous = options.leading === false ? 0 : Date.now();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n    };\n    return function () {\n        let now = Date.now();\n        if (!previous && options.leading === false) previous = now;\n        let remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n};\n\n\n\nexport class Queue {\n    // Source: https://www.geeksforgeeks.org/implementation-queue-javascript/\n\n    items = [];\n    constructor() {\n        // Array is used to implement a Queue\n        this.items = [];\n    }\n\n    push(element) {\n        // adding element to the queue\n        this.items.push(element);\n    }\n\n    pop() {\n        // removing element from the queue\n        // returns underflow when called\n        // on empty queue\n        if (this.isEmpty())\n            return undefined;\n        return this.items.splice(0, 1);\n    }\n\n    peak() {\n        // returns the Front element of\n        // the queue without removing it.\n        if (this.isEmpty())\n            return undefined;\n        return this.items[0];\n    }\n\n    isEmpty() {\n        // return true if the queue is empty.\n        return this.items.length == 0;\n    }\n\n    printQueue() {\n        let str = \"\";\n        for (let i = 0; i < this.items.length; i++)\n            str += this.items[i] + \" \";\n        return str;\n    }\n}\n\n\n\n/* Open the passed element in fullscreen. Note that we must include prefixes for different browsers, as they don't support the requestFullscreen method yet */\nexport function toggleFullscreen(e: Event, elem: HTMLElement) {\n    elem = elem || document.documentElement;\n    let fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n    if (!fullscreenElement || elem !== fullscreenElement) {\n        const requestFullscreenFunc = elem.requestFullscreen || elem.webkitEnterFullscreen || elem.webkitRequestFullscreen || elem.webkitRequestFullScreen || elem.mozRequestFullScreen || elem.msRequestFullscreen;\n        requestFullscreenFunc.apply(elem);\n    } else {\n        const exitFullscreenFunc = document.exitFullscreen || document.webkitExitFullscreen || document.mozCancelFullScreen || document.msExitFullscreen\n        exitFullscreenFunc.apply(document);\n    }\n}\n\n/*\n------ Below functions are Not Used -------\n*/\n\n/** Downloads the given link, with an optional filename for the download */\nexport function download(url, filename) {\n    const a = document.createElement('a') // Create <a> hyperlink element\n    a.href = url // Set the hyperlink URL\n    a.download = filename || \"\" // if left blank the browser will guess the filename for the downloaded file\n    document.body.appendChild(a) // Append the hyperlink to the document body\n    a.click() // Click the hyperlink\n    document.body.removeChild(a) // Remove the hyperlink from the document body\n}\n\n\n\n/** Returns the day of year in the range 1-365 as an integer\n * @param date a JS date object (defaults to today)\n * @returns Returns the day of year\n */\nexport function getDayOfYear(date = new Date()): number {\n    const timestamp1 = Date.UTC(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n    );\n    const timestamp2 = Date.UTC(date.getFullYear(), 0, 0);\n    const differenceInMilliseconds = timestamp1 - timestamp2;\n    const differenceInDays = differenceInMilliseconds / 1000 / 60 / 60 / 24;\n    return differenceInDays;\n}\n\n/** Returns a unique emoji for every day of the year */\nexport function emojiOfTheDay() {\n    return EMOJI_MAP[getDayOfYear()]\n}\n\n/**\n * converts a number expressed as hex to a string of emojis that is unique for every number (just a base conversion to the list of emojis)\n * @param hexString a number expressed as a hex string to convert to emojis\n * @param itterCount the number of emojis to put into the output string.\n * @returns\n */\nexport function hexToEmojiEncoding(hexString = \"FF\", itterCount) {\n    let out = \"\"\n    let emojiCount = BigInt(EMOJI_MAP.length)\n    hexString = \"0x\" + hexString\n    let value = BigInt(hexString);\n    while (itterCount > 0 && value > 0) {\n        out += EMOJI_MAP[Number(value % emojiCount)];\n        value = value / emojiCount;\n        itterCount--\n    }\n    return out\n}\n\n/* generateStateChangeFunction is a function generator for an xstate machine that will return a function that will run a callback and send the named state transition with the data or event from the calling transition */\nexport function generateStateChangeFunction(sendStateChange, stateTransition, data, additionalCallback) {\n    const func = function (evt) {\n        if (additionalCallback) additionalCallback(evt)\n        sendStateChange({ type: stateTransition, data: (data || evt) });\n    }\n    return func;\n}\n","import { type ModalStore } from \"@skeletonlabs/skeleton\";\nimport { get } from \"svelte/store\";\n\nlet modalStore: ModalStore = null;\nexport const setModalStore = (store) => (modalStore = store);\n\nexport const openLogsTimelineModal = () => {\n    modalStore.trigger({\n        type: \"component\",\n        component: \"LogTimeline\",\n    });\n};\n\nexport const openControlTutModal = () => {\n    const topModal = Array.from(get(modalStore)).pop()\n    if (topModal && topModal.component === \"ControlSchemeTut\") {\n        closeModal();\n    } else {\n        modalStore.trigger({\n            type: \"component\",\n            component: \"ControlSchemeTut\"\n        });\n    }\n};\n\nexport const openFlyModesTutModal = () => {\n    const topModal = Array.from(get(modalStore)).pop()\n    if (topModal && topModal.component === \"FlyModesTut\") {\n        closeModal();\n    } else {\n        modalStore.trigger({\n            type: \"component\",\n            component: \"FlyModesTut\"\n        });\n    }\n};\n\n/** Close the topmost modal dialog */\nexport const closeModal = () => (modalStore.close());\n","import { get } from 'svelte/store';\nimport type { PopupSettings } from './types';\n\n// Use a store to pass the Floating UI import references\nimport { storePopup } from \"@skeletonlabs/skeleton\";\n\nexport function popup(triggerNode: HTMLElement | SVGElement, args: PopupSettings) {\n    // Floating UI Modules\n    const { computePosition, autoUpdate, offset, shift, flip, arrow, size, autoPlacement, hide, inline } = get(storePopup) as any;\n    // Local State\n    const popupState = {\n        open: false,\n        autoUpdateCleanup: () => { }\n    };\n    const focusableAllowedList = ':is(a[href], button, input, textarea, select, details, [tabindex]):not([tabindex=\"-1\"])';\n    let focusablePopupElements: HTMLElement[];\n    const documentationLink = 'https://www.skeleton.dev/utilities/popups';\n    // Elements\n    let elemPopup: HTMLElement;\n    let elemArrow: HTMLElement;\n    let shouldOpen = false;\n\n    function setDomElements(): void {\n        elemPopup = document.querySelector(`[data-popup=\"${args.target}\"]`) ?? document.createElement('div');\n        elemArrow = elemPopup.querySelector(`.arrow`) ?? document.createElement('div');\n    }\n    setDomElements(); // init\n\n    // Render Floating UI Popup\n    function render(): void {\n        // Error handling for required Floating UI modules\n        if (!elemPopup) throw new Error(`The data-popup=\"${args.target}\" element was not found. ${documentationLink}`);\n        if (!computePosition) throw new Error(`Floating UI 'computePosition' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!offset) throw new Error(`Floating UI 'offset' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!shift) throw new Error(`Floating UI 'shift' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!flip) throw new Error(`Floating UI 'flip' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n        if (!arrow) throw new Error(`Floating UI 'arrow' not found for data-popup=\"${args.target}\". ${documentationLink}`);\n\n        // Bundle optional middleware\n        const optionalMiddleware = [];\n        // https://floating-ui.com/docs/size\n        if (size) optionalMiddleware.push(size(args.middleware?.size));\n        // https://floating-ui.com/docs/autoPlacement\n        if (autoPlacement) optionalMiddleware.push(autoPlacement(args.middleware?.autoPlacement));\n        // https://floating-ui.com/docs/hide\n        if (hide) optionalMiddleware.push(hide(args.middleware?.hide));\n        // https://floating-ui.com/docs/inline\n        if (inline) optionalMiddleware.push(inline(args.middleware?.inline));\n\n        // Floating UI Compute Position\n        // https://floating-ui.com/docs/computePosition\n        computePosition(triggerNode, elemPopup, {\n            placement: args.placement ?? 'bottom',\n            // Middleware - NOTE: the order matters:\n            // https://floating-ui.com/docs/middleware#ordering\n            middleware: [\n                // https://floating-ui.com/docs/offset\n                offset(args.middleware?.offset ?? 8),\n                // https://floating-ui.com/docs/shift\n                shift(args.middleware?.shift ?? { padding: 8 }),\n                // https://floating-ui.com/docs/flip\n                flip(args.middleware?.flip),\n                // // https://floating-ui.com/docs/arrow\n                arrow(args.middleware?.arrow ?? { element: elemArrow || null }),\n                // // Implement optional middleware\n                // ...optionalMiddleware\n            ]\n        }).then(({ x, y, placement, middlewareData }: any) => {\n            Object.assign(elemPopup.style, {\n                left: `${x}px`,\n                top: `${y}px`\n            });\n            // Handle Arrow Placement:\n            // https://floating-ui.com/docs/arrow\n            if (elemArrow) {\n                const { x: arrowX, y: arrowY } = middlewareData.arrow;\n                const staticSide = {\n                    top: 'bottom',\n                    right: 'left',\n                    bottom: 'top',\n                    left: 'right'\n                }[placement.split('-')[0]];\n                Object.assign(elemArrow.style, {\n                    left: arrowX != null ? `${arrowX}px` : '',\n                    top: arrowY != null ? `${arrowY}px` : '',\n                    right: '',\n                    bottom: '',\n                    [staticSide]: '-4px'\n                });\n            }\n        });\n    }\n\n    // State Handlers\n    function open(): void {\n        if (!elemPopup) return;\n        shouldOpen = true;\n        setTimeout(() => {\n            if (!shouldOpen) return;\n            // Set open state to on\n            popupState.open = true;\n            // Return the current state\n            if (args.state) args.state({ state: popupState.open });\n            // Update render settings\n            render();\n            // Update the DOM\n            elemPopup.style.display = 'block';\n            elemPopup.style.opacity = '1';\n            elemPopup.style.pointerEvents = 'auto';\n            // enable popup interactions\n            elemPopup.removeAttribute('inert');\n            // Trigger Floating UI autoUpdate (open only)\n            // https://floating-ui.com/docs/autoUpdate\n            popupState.autoUpdateCleanup = autoUpdate(triggerNode, elemPopup, render);\n            // Focus the first focusable element within the popup\n            focusablePopupElements = Array.from(elemPopup?.querySelectorAll(focusableAllowedList));\n        }, args.delay ?? 0);\n    }\n    function close(callback?: () => void): void {\n        if (!elemPopup || args.forceOpen) return;\n        shouldOpen = false;\n        // Set transition duration\n        const cssTransitionDuration = parseFloat(window.getComputedStyle(elemPopup).transitionDuration.replace('s', '')) * 1000;\n        setTimeout(() => {\n            // Set open state to off\n            popupState.open = false;\n            // Return the current state\n            if (args.state) args.state({ state: popupState.open });\n            // Update the DOM\n            elemPopup.style.opacity = '0';\n            // disable popup interactions\n            elemPopup.setAttribute('inert', '');\n            // Cleanup Floating UI autoUpdate (close only)\n            if (popupState.autoUpdateCleanup) popupState.autoUpdateCleanup();\n            // Trigger callback\n            if (callback) callback();\n        }, cssTransitionDuration);\n    }\n\n    // Event Handlers\n    function toggle(): void {\n        popupState.open === false ? open() : close();\n    }\n    function onWindowClick(event: any): void {\n        // Return if the popup is not yet open\n        if (popupState.open === false) return;\n        // Return if click is the trigger element\n        if (triggerNode.contains(event.target)) return;\n        // If click it outside the popup\n        if (elemPopup && elemPopup.contains(event.target) === false) {\n            close();\n            return;\n        }\n        // Handle Close Query State\n        const closeQueryString: string = args.closeQuery === undefined ? 'a[href], button' : args.closeQuery;\n        const closableMenuElements = elemPopup?.querySelectorAll(closeQueryString);\n        closableMenuElements?.forEach((elem) => {\n            if (elem.contains(event.target)) close();\n        });\n    }\n\n    // Keyboard Interactions for A11y\n    const onWindowKeyDown = (event: KeyboardEvent): void => {\n        if (popupState.open === false) return;\n        // Handle keys\n        const key: string = event.key;\n        // On Esc key\n        if (key === 'Escape') {\n            event.preventDefault();\n            triggerNode.focus();\n            close();\n            return;\n        }\n        // Update focusable elements (important for Autocomplete)\n        focusablePopupElements = Array.from(elemPopup?.querySelectorAll(focusableAllowedList));\n        // On Tab or ArrowDown key\n        const triggerMenuFocused: boolean = popupState.open && document.activeElement === triggerNode;\n        if (\n            triggerMenuFocused &&\n            (key === 'ArrowDown' || key === 'Tab') &&\n            focusableAllowedList.length > 0 &&\n            focusablePopupElements.length > 0\n        ) {\n            event.preventDefault();\n            focusablePopupElements[0].focus();\n        }\n    };\n\n    // Event Listeners\n    switch (args.event) {\n        case 'click':\n            triggerNode.addEventListener('click', toggle, true);\n            window.addEventListener('click', onWindowClick, true);\n            break;\n        case 'hover':\n            triggerNode.addEventListener('mouseover', () => open(), true);\n            triggerNode.addEventListener('mouseleave', () => close(), true);\n            break;\n        case 'focus-blur':\n            triggerNode.addEventListener('focus', toggle, true);\n            triggerNode.addEventListener('blur', () => close(), true);\n            break;\n        case 'focus-click':\n            triggerNode.addEventListener('focus', open, true);\n            window.addEventListener('click', onWindowClick, true);\n            break;\n        default:\n            throw new Error(`Event value of '${args.event}' is not supported. ${documentationLink}`);\n    }\n    window.addEventListener('keydown', onWindowKeyDown, true);\n\n    // Render popup on initialization\n    render();\n\n    // Lifecycle\n    return {\n        update(newArgs: PopupSettings) {\n            close(() => {\n                args = newArgs;\n                render();\n                setDomElements();\n            });\n        },\n        toggle: toggle,\n        open: open,\n        close: close,\n        destroy() {\n            // Trigger Events\n            triggerNode.removeEventListener('click', toggle, true);\n            triggerNode.removeEventListener('mouseover', open, true);\n            triggerNode.removeEventListener('mouseleave', () => close(), true);\n            triggerNode.removeEventListener('focus', toggle, true);\n            triggerNode.removeEventListener('focus', open, true);\n            triggerNode.removeEventListener('blur', () => close(), true);\n            // Window Events\n            window.removeEventListener('click', onWindowClick, true);\n            window.removeEventListener('keydown', onWindowKeyDown, true);\n        }\n    };\n}\n"],"names":["node","enabled","elemWhitelist","elemFirst","elemLast","onFirstElemKeydown","e","onLastElemKeydown","sortByTabIndex","focusableElems","elem","a","b","getFocusTrapTarget","focusindexElements","onScanElements","fromObserver","onCleanUp","onObservationChange","mutationRecords","observer","newArgs","computedTracker","nStore","value","subscribers","subscribe","subscriber","immediate","includes","push","filter","xSub","set","newValue","oldValue","sub","get","runningComputation","length","computed","refresh","update","updFn","fn","self","computationToken","runComputed","Error","result","pop","VideoSource","debugPageModeActive","fullscreenOpen","sidebarExpanded","tutorialModeActive","throttleGain","isRovDriver","currentVideoSource","rovDrivingVector","VelocityX","VelocityY","VelocityZ","AngularVelocityYaw","ButtonBitmask","asPromise","ctx","params","offset","index","pending","resolve","reject","err","base64","exports","string","p","n","b64","s64","i","buffer","start","end","parts","chunk","j","t","invalidEncoding","c","EventEmitter","evt","listeners","args","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","utf8","len","c1","c2","pool","alloc","slice","size","SIZE","MAX","slab","LongBits","util","require$$0","zero","zeroHash","unsigned","charCodeAt","hash","mask","part0","part1","part2","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","obj","prop","Buffer","sizeOrArray","bits","merge","dst","src","ifNotSet","keys","str","newError","name","CustomError","message","properties","fieldNames","fieldMap","encoding","writer","Writer","BufferWriter","create","write_uint32","write_int32","write_sint32","write_uint64","write_sint64","write_bool","write_fixed32","write_fixed64","write_float","write_double","writeBytes_set","writeBytes_for","write_bytes","write_string","fork","reset","ldelim","head","tail","finish","BufferWriter_","write_bytes_buffer","write_string_buffer","Reader","BufferReader","reader","writeLength","create_typed_array","create_array","read_uint32_setup","read_int32","read_sint32","read_bool","read_fixed32","read_sfixed32","read_float","read_double","read_bytes","nativeBuffer","read_string","bytes","skip","wireType","BufferReader_","read_string_buffer","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","response","endedByRPC","rpc","protobuf","configure","$Reader","$protobuf","$Writer","$util","$root","rov_actions_proto","LogLevel","valuesById","values","Object","SensorMeasurmentTypes","Measurement","prototype","MeasurementType","Value","encode","hasOwnProperty","call","uint32","int32","float","encodeDelimited","decode","undefined","tag","skipType","decodeDelimited","verify","fromObject","object","Number","toObject","options","defaults","enums","String","json","isFinite","toJSON","constructor","toJSONOptions","getTypeUrl","typeUrlPrefix","DataTransportMethod","InternalWebpageEvent","PingAction","Time","Long","fromBits","int64","isInteger","low","high","fromValue","parseInt","toNumber","long","longs","toString","PasswordAttemptAction","Password","isString","AuthTokenAttemptAction","Token","TakeControlAction","MoveAction","BeginVideoStreamAction","TakePhotoAction","StartVideoRecAction","StopVideoRecAction","ToogleLightsAction","ShutdownRovAction","RebootRovAction","EnableWifiAction","DisableWifiAction","RovStatusReportAction","RestartRovServicesAction","RovLogsAction","RefreshAllSensorsAction","MavlinkAction","Message","newBuffer","Array","SimplepeerSignalAction","DisarmAction","SetAutopilotModeAction","mode","ActionBackendMetadata","FromUserId","InternalWebpageEvt","RovAction","BackendMetadata","ExchangeId","Ping","PasswordAttempt","AuthTokenAttempt","TakeControl","Move","BeginVideoStream","TakePhoto","StartVideoRec","StopVideoRec","ToogleLights","ShutdownRov","RebootRov","EnableWifi","DisableWifi","RovStatusReport","RestartRovServices","RovLogs","RefreshAllSensors","Mavlink","SimplepeerSignal","Disarm","SetAutopilotMode","$oneOfFields","defineProperty","oneOfGetter","oneOfSetter","error","Body","TypeError","oneofs","DoneResponse","ErrorResponse","PongResponse","SensorUpdatesResponse","MeasurementUpdates","emptyArray","isArray","arrays","PasswordRequiredResponse","RovId","PasswordAcceptedResponse","AuthToken","PasswordInvalidResponse","DriverChangedResponse","DriverPeerId","ClientConnectedResponse","ClientPeerId","ClientDisconnectedResponse","HeartbeatResponse","ContinuedOutputResponse","MavlinkResponse","SimplepeerSignalResponse","SystemMonitorResponse","Warnings","CpuTemp","CpuUsage","MemoryUsage","DiskUsage","LogMessageResponse","Level","ResponseBackendMetadata","TargetUserIds","TransportMethod","RovResponse","Done","Pong","ContinuedOutput","SensorUpdates","PasswordRequired","PasswordAccepted","PasswordInvalid","DriverChanged","ClientConnected","ClientDisconnected","Heartbeat","SystemMonitor","LogMessage","VITEBUILD_EXTRANIOUS_PATH","LogLevelConsole","LogLevelConsole2","Info","Warning","Debug","Logger","origin","logsStore","sendLogsCallback","rootURL","sendLogsInterval","rawConsole","defaultLogOrigin","svelteSubscribers","log","debug","warn","info","console","window","location","protocol","host","enableSendLogs","addEventListener","filename","lineno","colno","then","successful","addLog","setInterval","sendQueuedLogs","logsToSendCopy","sentToRemote","forEach","Promise","allSettled","map","level","trace","results","status","logLevel","kind","timestamp","performance","now","stack","split","s","replace","trim","splice","logAddLevelFlair","unshift","printLog","msg","join","groupCollapsed","_getLevelColor","_consoleLogAtLevel","groupEnd","printRecentLogs","clear","min","Math","max","apply","Warn","_getLevelIcon","getLogs","logDebug","logWarn","logError","logInfo","mainLogr","bind","m","k","d","condition","arg","enumObject","typeName","opt","v","_opt","names","numbers","normalValues","no","other","type","format","jsonValue","jsonString","bin","_a","runtime","fields","localName","data","lowBits","highBits","shift","middleByte","hasNext","byte","splitBits","hasMoreBits","dec","minus","base","add1e6digit","begin","digit1e6","negative","mid","digitA","digitB","digitC","digit1e7","partial","readBytes","dv","process","MIN","UMIN","UMAX","bi","assertInt64String","assertUInt64String","ScalarType","LongType","longType","WireType","textEncoder","prev","fieldNo","view","tc","textDecoder","wt","zze","extendee","field","fi","extension","container","ext","T","unknownFields","uf","base64Str","es","bytePos","groupPos","ufs","readOpt","writeOpt","f","messageType","target","implicitPresence","actualType","oneofSeen","registry","jsonKey","seen","found","r","emitDefaultValues","parentType","targetArray","jsonItem","enumValue","targetMap","jsonMapKey","jsonMapValue","key","currentValue","scalarValue","nullAsZeroValue","uLong","ignoreUnknownFields","jsonObj","entries","entryKey","entryValue","enumType","jsonArr","enumAsInteger","lengthOrEndTagFieldNo","delimitedMessageEncoding","repeated","scalarType","read","arr","mapKey","mapVal","delimited","item","keyValue","source","member","sk","sourceField","copy","mt","va","vb","any","input","syntax","newFieldList","initFields","normalizer","jsonName","o","protoName","inOneof","snakeCase","capNext","fieldInfos","packedByDefault","_b","_c","_d","_e","_f","ooname","x","module","root","definition","noop","undefinedType","isIE","logMethods","_loggersByName","defaultLogger","bindMethod","methodName","traceForIE","realMethod","replaceLoggingMethods","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","inheritedLevel","defaultLevel","userLevel","storageKey","persistLevelIfPossible","levelNum","levelName","getPersistedLevel","storedLevel","cookie","cookieName","clearPersistedLevel","normalizeLevel","persist","childName","initialLevel","logger","_log","LoggerNames","retryDelays","context","retryDelay","thisArg","_arguments","P","generator","adopt","fulfilled","step","rejected","verb","settle","ReflectApply","receiver","warning","NumberIsNaN","listener","setMaxListeners","that","getMaxListeners","emit","doError","events","er","handler","prepend","existing","w","addListener","prependListener","state","wrapped","once","prependOnceListener","removeListener","list","position","originalListener","removeAllListeners","unwrap","evlistener","rawListeners","emitter","eventNames","ret","errorListener","resolver","flags","wrapListener","uastring","expr","match","eventNameToWrap","wrapper","proto","nativeAddEventListener","nativeEventName","cb","wrappedCallback","modifiedEvent","nativeRemoveEventListener","unwrappedCb","bool","oldMethod","newMethod","navigator","chromium","brand","accumulator","isObj","isEmptyObject","stats","resultSet","id","track","outbound","streamStatsType","filteredResult","trackStats","trackStat","browserDetails","constraintsToChrome_","cc","oldname_","prefix","oc","mix","shimConstraints_","constraints","func","remap","face","getSupportedFacingModeLies","matches","devices","dev","shimError_","getUserMedia_","onSuccess","onError","origGetUserMedia","cs","stream","origSetRemoteDescription","te","event","shimSenderWithDtmf","pc","origAddTrack","sender","origRemoveTrack","idx","origAddStream","origRemoveStream","origGetSenders","senders","origGetReceivers","receivers","origGetStats","streamId","existingSenders","newSenders","newSender","origGetLocalStreams","nativeStreams","newStream","streams","oldStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replaceExternalStreamId","nativeMethod","methodObj","desc","origSetLocalDescription","origLocalDescription","streamid","MediaStreamTrack","nativeGetUserMedia","nativeGetSettings","nativeApplyConstraints","preferredMediaSource","modernStatsTypes","nativeGetStats","selector","onSucc","onErr","stat","origAddTransceiver","sendEncodings","shouldPerformCheck","encodingParam","transceiver","origGetParameters","origCreateOffer","origCreateAnswer","_addTrack","_len","_key","tracks","setLocalDescription","setRemoteDescription","addIceCandidate","successCallback","failureCallback","promise","withCallback","candidate","mediaDevices","_getUserMedia","errcb","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","server","offerOptions","audioTransceiver","videoTransceiver","SDPUtils","blob","line","part","sections","component","parsed","codec","pt","channels","headerExtension","kv","param","lines","fb","sp","colon","ssrc","mediaSection","sessionpart","setupType","fp","parameters","keyParams","ufrag","pwd","mline","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","caps","maxptime","encodingParameters","hasRed","hasUlpfec","ssrcs","primarySsrc","secondarySsrc","flows","encParam","bandwidth","rtcpParameters","remoteSsrc","rsize","mux","spec","planB","msidParts","maxSizeLine","maxMessageSize","sctpPort","sctpMapLines","media","sctp","output","sessId","sessVer","sessUser","sessionId","version","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","sdpSemantics","isFirefox","canSendMMS","remoteMMS","wrapDcSend","dc","origDataChannelSend","origCreateDataChannel","dataChannel","origMethod","newEvent","nativeSRD","nativeAddIceCandidate","nativeSetLocalDescription","logging","adapter","KeyProviderEvent","KeyHandlerEvent","EncryptionEvent","CryptorEvent","material","keyIndex","participantIdentity","keyInfo","code","reason","MediaDeviceFailure","getFailure","CryptorErrorReason","RoomEvent","ParticipantEvent","EngineEvent","TrackEvent","u","l","userAgent","force","ua","browser","_ref","test","exp","widthOrOptions","height","maxBitrate","maxFramerate","priority","backup","AudioPresets","VideoQuality","mediaTrack","loggerOptions","element","elementType","allMediaStreamTracks","hasAudio","tr","detached","elm","shouldCache","el","mediaStream","existingTracks","et","Track","Kind","Source","StreamState$1","StreamState","kindToProto","kindFromProto","sourceToProto","sourceFromProto","streamStateFromProto","audioDefaults","videoDefaults","opts","mainObject","objectToMerge","videoOptions","track_1","timeOffset","analyser","bufferLength","dataArray","someNoise","sample","AudioContext","videoConstraints","mimeType","infos","oldValues","newValues","allKeys","diff","packed","duration","capabilities","hasAV1","hasVP9","supportedSafariVersion","serverUrl","v1","v2","parts1","parts2","p1","p2","entry","width","paintContent","canvas","dummyStream","dummyTrack","oscillator","gain","futureBase","onFinally","unlockNext","willLock","willUnlock","maybeCodec","constraint","url","transcription","text","language","startTime","endTime","final","kind_1","_this","requestPermissions","device","noLabel","isRelevant","permissionsToAcquire","deviceId","groupId","defaultDevice","userProvidedTrack","newTrack","processedTrack","unlock","timeout","started","dims","userProvidedOrOptions","stopProcessor","streamConstraints","muted","_super","processor_1","processor","_this2","showProcessedStreamLocally","processorElement","processorOptions","_this3","keepElement","ev","participant","room","trailer","engine","rtpMap","keyProvider","pub","_","publication","participantId","enableMsg","remoteId","trackInfo","trackId","writable","readable","receiverStreams","senderStreams","QueueTaskStatus","task","taskInfo","req","canPass","SignalConnectionState","useJSON","token","abortSignal","sid","clientInfo","abortHandler","wsTimeout","resp","shouldProcessMessage","updateState","closePromise","offer","answer","trackSid","metadata_1","name_1","metadata","attributes","requestId","settings","sync","layers","allParticipants","trackPermissions","scenario","features","message_1","fromQueue","res","pingHandled","sd","onCloseCallback","rsd","objs","toIntIfInt","attachProperties","rawName","parseReg","content","needsBlank","keyLocation","grammar","validLine","session","paramReducer","acc","candidates","scid","paused","formatStr","outerOrder","innerOrder","config","mungedSDP","stereoMids","nackMids","sdpParsed","trackbr","codecPayload","rtp","fmtpFound","fmtp","attr","currentSD","startBitrate","label","dataChannelDict","mediaStreamTrack","transceiverInit","rtcConfig","selectedCandidatePairId","candidatePairs","selectedID","munged","remote","originalSdp","opusPayload","maxID","PCTransportState","subscriberPrimary","previousState","connectionStates","st","require","publisher","iceRestart","abortController","transport","negotiationTimeout","transports","pcTransport_1","abortController_1","pcTransport","connectTimeout","currentStats","prevStats","bytesNow","bytesPrev","audioContext","deviceHasChanged","audioStats","trackIsSilent","fromPreset","isScreenShare","videoEncoding","useSimulcast","scalabilityMode","videoCodec","original","sm","encodings","bitratesRatio","presets","midPreset","lowPreset","preset","aspect","canSetPriority","topFramerate","notifyOnce","aEnc","bEnc","statsMap","totalBitrate","signalClient","e_1","_g","e_1_1","e_2","sc","e_2_1","items","vs","maxQuality","qualities","q","e_3","e_3_1","e_4","_h","e_4_1","preference","simulcastCodecInfo","codecs","codecs_1","codecs_1_1","e_5","newCodecs","e_5_1","senderEncodings","senderLock","logContext","hasChanged","rid","quality","subscribedQuality","svc","encodingSM","resRatio","scale","PCState","channel","dp","channelKind","connection","disconnectReason","disconnect","delay","onRestarted","onDisconnected","updates","joinResponse","dcCleanup","publicationTimeout","provider","connectionState","publisherState","subscriberState","shouldEmit","isSignalSevered","isPCSevered","leave","serverResponse","rtcIceServers","iceServer","rtcIceServer","simulcastTrack","recoverable","regionUrl","nextRegionUrl","packet","transportName","needNegotiation","targetChannel","handleClosed","rtpTypes","remoteTracks","localTracks","previousAnswer","previousOffer","autoSubscribe","trackSids","trackSidsDisabled","getInfo","newObj","oldObj","destinationIdentities","regionsLeft","region","attempted","nextRegion","signal","regionSettingsResponse","regionSettings","regions","onRemoveTrack","delayInSeconds","loop","sources","rtpTimestamp","audioOutput","volume","highestVolume","needsNewWebAudioConnection","nodes","lastNode","receiverStats","adaptiveStreamSettings","elementInfo","stopElementInfos","detachedElements","codecID","lastVisibilityChange","backgroundPause","isPiPMode","isVisible","maxWidth","maxHeight","pixelDensity","currentElementWidth","currentElementHeight","visible","isIntersecting","top","left","hidden","opacity","display","TrackPublication","SubscriptionStatus","PermissionStatus","ti","ConnectionQuality","identity","md","changed","prevMetadata","permissions","prevPermissions","speaking","prevQuality","perms","targetRequest","newCodecs_1","newCodecs_1_1","unpublished","currentPermissions","isRejected","_ref2","publishOptions","publishPromises","localTrack","screenAudioTrack","mergedOptions","isAudio","trackOptions","trackConstraints","conOrBool","screenVideo","screenAudio","defaultConstraints","deviceKind","existingPublication","isStereoInput","isStereo","publishPromise","_j","_k","_l","_m","_o","publishedTrack","defaultRes","primaryCodecMime","updatedCodec","trackTransceiver","stopOnUnpublish","pubLogContext","negotiationNeeded","trackSender","options_1","restartTracks","localPubs","data_1","topic","allParticipantsAllowed","participantTrackPermissions","mutedOnServer","dimensions","subscribed","prevStatus","prevPermission","fps","prevTrack","allowed","prevMetadataMuted","previousStatus","currentStatus","previousPermissionStatus","pi","previousTrack","audioPublication","triesLeft","isVideo","validTracks","newTracks","existingTrackOfSource","sendUnpublish","promises","ConnectionState","unlockDisconnect","connectFn","nextUrl","connectOptions","roomOptions","serverInfo","resultingError","args_1","stopTracks","elements","audioId","dummyAudioEl","participantInfos","remoteParticipant","speakers","activeSpeakers","seenSids","speaker","speakerUpdates","lastSpeakers","streamStateUpdate","streamState","userPacket","dtmf","_remoteParticipant","segments","oldRoom","changedAttributes","handleRoomUpdate","roomInfo","postAction","onLeave","deviceId_1","exact","success","deviceConstraint","prevDeviceId","reconnectedHandler","cleanup","participantSid","shouldStopTracks","newContextIsRunning","existingParticipant","trackPublication","consecutiveFailures","_len2","_key2","participantOptions","camPub","audioPub","dummyVideo","videoTrack","audioTrack","_len3","_key3","minimizedArgs","CheckStatus","onComplete","mediaPromise","numPackets","reconnectingTriggered","reconnected","reconnectResolver","reconnectTimeout","handleReconnecting","onClose","joinRes","hasTLS","hasTURN","hasSTUN","hasTcp","hasIpv4Udp","prevTrickle","address","second","nextId","checkId","check","handleUpdate","MavModeFlag","MavState","MavSeverity","MAVLinkType","ConnectionStates","TextEncoder","TD","TextDecoder","DECODE_TXT","ENCRYPTED_AUTH_TOKEN_PREFIX","SEA_LEVEL_PRESSURE","HEARTBEAT","ATTITUDE","SYS_STATUS","STATUSTEXT","SCALED_PRESSURE","SCALED_PRESSURE2","SCALED_PRESSURE3","LIVEKIT_FRONTEND_ROOM_CONNECTION_CONFIG","maxRetries","peerConnectionTimeout","DefaultReconnectPolicy","LIVEKIT_FRONTEND_ROOM_CONFIG","reconnectPolicy","dynacast","disconnectOnPageLeave","adaptiveStream","SIMPLEPEER_BASE_CONFIG","initiator","trickle","bundlePolicy","iceTransportPolicy","urlParams","URLSearchParams","search","getStringQueryParam","defaultValue","getBooleanQueryParam","toLowerCase","LIVEKIT_LIST_ONLY_TOKEN","URL_PARAMS","DEBUG_MODE","SHOW_REMOTE_LOGS","LIVEKIT_CLOUD_ENDPOINT","LIVEKIT_LOCAL_ENDPOINT","PING_INTERVAL","MOVE_MSG_TIMEOUT","GPAD_STANDARD_BUTTON_INDEX","GPAD_STANDARD_BUTTON_INDEX_TO_MAVLINK_INDEX","GAME_CONTROLLER_BUTTON_CONFIG","btnName","helpLabel","tooltipPlacement","fireWhileHolding","ONSCREEN_GPAD_BUTTON_LABELS","ONSCREEN_GPAD_BUTTON_TOUCHED_CLASS","ONSCREEN_GPAD_BUTTON_PRESSED_CLASS","getURLQueryStringVariable","variable","vars","substring","pair","decodeURIComponent","toggleFullscreen","document","documentElement","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullscreen","webkitEnterFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","modalStore","setModalStore","store","openLogsTimelineModal","trigger","openControlTutModal","topModal","from","closeModal","openFlyModesTutModal","close","popup","triggerNode","computePosition","autoUpdate","flip","arrow","autoPlacement","hide","inline","storePopup","popupState","open","autoUpdateCleanup","focusableAllowedList","focusablePopupElements","documentationLink","elemPopup","elemArrow","shouldOpen","setDomElements","querySelector","createElement","render","optionalMiddleware","middleware","placement","padding","y","middlewareData","assign","style","arrowX","arrowY","staticSide","right","bottom","setTimeout","pointerEvents","removeAttribute","querySelectorAll","forceOpen","cssTransitionDuration","parseFloat","getComputedStyle","transitionDuration","setAttribute","toggle","onWindowClick","contains","closeQueryString","closeQuery","closableMenuElements","onWindowKeyDown","preventDefault","focus","activeElement","destroy","removeEventListener"],"mappings":"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","x_google_ignoreList":[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24]}