{"version":3,"file":"RadioSelectGrid.ca3d5dc0.js","sources":["../../../../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/each.js","../../../../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/spread.js","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/utilities/LocalStorageStore/LocalStorageStore.js","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/utilities/LightSwitch/lightswitch.js","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/utilities/PrefersReducedMotion/PrefersReducedMotion.js","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/components/Radio/RadioGroup.svelte","../../../../../../../node_modules/.pnpm/@skeletonlabs+skeleton@2.10.2_svelte@4.2.19/node_modules/@skeletonlabs/skeleton/dist/components/Radio/RadioItem.svelte","../../../../../../../node_modules/.pnpm/@protobufjs+aspromise@1.1.2/node_modules/@protobufjs/aspromise/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+base64@1.1.2/node_modules/@protobufjs/base64/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+eventemitter@1.1.0/node_modules/@protobufjs/eventemitter/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+inquire@1.1.0/node_modules/@protobufjs/inquire/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","../../../../../../../node_modules/.pnpm/@protobufjs+pool@1.1.0/node_modules/@protobufjs/pool/index.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/longbits.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/minimal.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer_buffer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader_buffer.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc/service.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/roots.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index-minimal.js","../../../../../../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/minimal.js","../../../../../../src/js/shared/protobufs/rovActionsProto.js","../../../../../../src/js/shared/logging.ts","../../../../../../src/components/Modals/modals.ts","../../../../../../src/components/RadioSelectGrid.svelte"],"sourcesContent":["import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","// Source: https://github.com/joshnuss/svelte-local-storage-store\n// https://github.com/joshnuss/svelte-local-storage-store/blob/master/index.ts\n// Represents version v0.4.0 (2023-01-18)\nimport { BROWSER } from 'esm-env';\nimport { writable as internal, get } from 'svelte/store';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst stores = {};\nfunction getStorage(type) {\n    return type === 'local' ? localStorage : sessionStorage;\n}\nexport function localStorageStore(key, initialValue, options) {\n    const serializer = options?.serializer ?? JSON;\n    const storageType = options?.storage ?? 'local';\n    function updateStorage(key, value) {\n        if (!BROWSER)\n            return;\n        getStorage(storageType).setItem(key, serializer.stringify(value));\n    }\n    if (!stores[key]) {\n        const store = internal(initialValue, (set) => {\n            const json = BROWSER ? getStorage(storageType).getItem(key) : null;\n            if (json) {\n                set(serializer.parse(json));\n            }\n            if (BROWSER) {\n                const handleStorage = (event) => {\n                    if (event.key === key)\n                        set(event.newValue ? serializer.parse(event.newValue) : null);\n                };\n                window.addEventListener('storage', handleStorage);\n                return () => window.removeEventListener('storage', handleStorage);\n            }\n        });\n        const { subscribe, set } = store;\n        stores[key] = {\n            set(value) {\n                updateStorage(key, value);\n                set(value);\n            },\n            update(updater) {\n                const value = updater(get(store));\n                updateStorage(key, value);\n                set(value);\n            },\n            subscribe\n        };\n    }\n    return stores[key];\n}\n","// Lightswitch Service\nimport { get } from 'svelte/store';\n// DO NOT replace this ⬇ import, it has to be imported directly\nimport { localStorageStore } from '../LocalStorageStore/LocalStorageStore.js';\n// Stores ---\n// TRUE: light, FALSE: dark\n/** Store: OS Preference Mode */\nexport const modeOsPrefers = localStorageStore('modeOsPrefers', false);\n/** Store: User Preference Mode */\nexport const modeUserPrefers = localStorageStore('modeUserPrefers', undefined);\n/** Store: Current Mode State */\nexport const modeCurrent = localStorageStore('modeCurrent', false);\n// Get ---\n/** Get the OS Preference for light/dark mode */\nexport function getModeOsPrefers() {\n    const prefersLightMode = window.matchMedia('(prefers-color-scheme: light)').matches;\n    modeOsPrefers.set(prefersLightMode);\n    return prefersLightMode;\n}\n/** Get the User for light/dark mode */\nexport function getModeUserPrefers() {\n    return get(modeUserPrefers);\n}\n/** Get the Automatic Preference light/dark mode */\nexport function getModeAutoPrefers() {\n    const os = getModeOsPrefers();\n    const user = getModeUserPrefers();\n    const modeValue = user !== undefined ? user : os;\n    return modeValue;\n}\n// Set ---\n/** Set the User Preference for light/dark mode */\nexport function setModeUserPrefers(value) {\n    modeUserPrefers.set(value);\n}\n/** Set the the current light/dark mode */\nexport function setModeCurrent(value) {\n    const elemHtmlClasses = document.documentElement.classList;\n    const classDark = `dark`;\n    value === true ? elemHtmlClasses.remove(classDark) : elemHtmlClasses.add(classDark);\n    modeCurrent.set(value);\n}\n// Lightswitch Utility\n/** Set the visible light/dark mode on page load. */\nexport function setInitialClassState() {\n    const elemHtmlClasses = document.documentElement.classList;\n    // Conditions\n    const condLocalStorageUserPrefs = localStorage.getItem('modeUserPrefers') === 'false';\n    const condLocalStorageUserPrefsExists = !('modeUserPrefers' in localStorage);\n    const condMatchMedia = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    // Add/remove `.dark` class to HTML element\n    if (condLocalStorageUserPrefs || (condLocalStorageUserPrefsExists && condMatchMedia)) {\n        elemHtmlClasses.add('dark');\n    }\n    else {\n        elemHtmlClasses.remove('dark');\n    }\n}\n// Auto-Switch Utility\n/** Automatically set the visible light/dark, updates on change. */\nexport function autoModeWatcher() {\n    const mql = window.matchMedia('(prefers-color-scheme: light)');\n    function setMode(value) {\n        const elemHtmlClasses = document.documentElement.classList;\n        const classDark = `dark`;\n        value === true ? elemHtmlClasses.remove(classDark) : elemHtmlClasses.add(classDark);\n    }\n    setMode(mql.matches);\n    mql.onchange = () => {\n        setMode(mql.matches);\n    };\n}\n","import { readable } from 'svelte/store';\nimport { BROWSER } from 'esm-env';\n/** Prefers reduced motion  */\nconst reducedMotionQuery = '(prefers-reduced-motion: reduce)';\nfunction prefersReducedMotion() {\n    if (!BROWSER)\n        return false;\n    return window.matchMedia(reducedMotionQuery).matches;\n}\n/**\n * Indicates that the user has enabled reduced motion on their device.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\n */\nexport const prefersReducedMotionStore = readable(prefersReducedMotion(), (set) => {\n    if (BROWSER) {\n        const setReducedMotion = (event) => {\n            set(event.matches);\n        };\n        const mediaQueryList = window.matchMedia(reducedMotionQuery);\n        mediaQueryList.addEventListener('change', setReducedMotion);\n        return () => {\n            mediaQueryList.removeEventListener('change', setReducedMotion);\n        };\n    }\n});\n","<script>import { setContext } from \"svelte\";\nexport let display = \"inline-flex\";\nexport let flexDirection = \"flex-row\";\nexport let gap = \"gap-1\";\nexport let background = \"bg-surface-200-700-token\";\nexport let border = \"border-token border-surface-400-500-token\";\nexport let rounded = \"rounded-token\";\nexport let padding = \"px-4 py-1\";\nexport let active = \"variant-filled\";\nexport let hover = \"hover:variant-soft\";\nexport let color = \"\";\nexport let fill = \"\";\nexport let regionLabel = \"\";\nexport let labelledby = \"\";\nsetContext(\"rounded\", rounded);\nsetContext(\"padding\", padding);\nsetContext(\"active\", active);\nsetContext(\"hover\", hover);\nsetContext(\"color\", color);\nsetContext(\"fill\", fill);\nsetContext(\"regionLabel\", regionLabel);\nconst cBase = \"p-1\";\n$:\n  classesBase = `${cBase} ${display} ${flexDirection} ${gap} ${background} ${border} ${rounded} ${$$props.class ?? \"\"}`;\n</script>\n\n<div class=\"radio-group {classesBase}\" data-testid=\"radio-group\" role=\"radiogroup\" aria-labelledby={labelledby}>\n\t<slot />\n</div>\n","<script>import { getContext } from \"svelte\";\nexport let group;\nexport let name;\nexport let value;\nexport let title = \"\";\nexport let label = \"\";\nexport let rounded = getContext(\"rounded\");\nexport let padding = getContext(\"padding\");\nexport let active = getContext(\"active\");\nexport let hover = getContext(\"hover\");\nexport let color = getContext(\"color\");\nexport let fill = getContext(\"fill\");\nexport let regionLabel = getContext(\"regionLabel\");\nconst cBase = \"flex-auto\";\nconst cWrapper = \"text-base text-center cursor-pointer\";\nconst cDisabled = \"opacity-50 cursor-not-allowed\";\nlet elemInput;\nfunction onKeyDown(event) {\n  if ([\"Enter\", \"Space\"].includes(event.code)) {\n    event.preventDefault();\n    elemInput.click();\n  }\n}\n$:\n  checked = value === group;\n$:\n  classesActive = checked ? `${active} ${color} ${fill}` : hover;\n$:\n  classesDisabled = $$props.disabled ? cDisabled : \"\";\n$:\n  classsBase = `${cBase}`;\n$:\n  classesWrapper = `${cWrapper} ${padding} ${rounded} ${classesActive} ${classesDisabled} ${$$props.class ?? \"\"}`;\nfunction prunedRestProps() {\n  delete $$restProps.class;\n  return $$restProps;\n}\n</script>\n\n<label class=\"radio-label {classsBase} {regionLabel}\">\n\t<!-- A11y attributes are not allowed on <label> -->\n\t<div\n\t\tclass=\"radio-item {classesWrapper}\"\n\t\tdata-testid=\"radio-item\"\n\t\trole=\"radio\"\n\t\taria-checked={checked}\n\t\taria-label={label}\n\t\ttabindex=\"0\"\n\t\t{title}\n\t\ton:keydown={onKeyDown}\n\t\ton:keydown\n\t\ton:keyup\n\t\ton:keypress\n\t>\n\t\t<!-- NOTE: Don't use `hidden` as it prevents `required` from operating -->\n\t\t<div class=\"h-0 w-0 overflow-hidden\">\n\t\t\t<input bind:this={elemInput} type=\"radio\" bind:group {name} {value} {...prunedRestProps()} tabindex=\"-1\" on:click on:change />\n\t\t</div>\n\t\t<slot />\n\t</div>\n</label>\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\nimport * as $protobuf from \"protobufjs/minimal\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const rov_actions_proto = $root.rov_actions_proto = (() => {\n\n    /**\n     * Namespace rov_actions_proto.\n     * @exports rov_actions_proto\n     * @namespace\n     */\n    const rov_actions_proto = {};\n\n    /**\n     * LogLevel enum.\n     * @name rov_actions_proto.LogLevel\n     * @enum {number}\n     * @property {number} Debug=0 Debug value\n     * @property {number} Info=1 Info value\n     * @property {number} Warning=2 Warning value\n     * @property {number} Error=3 Error value\n     * @property {number} Critical=4 Critical value\n     */\n    rov_actions_proto.LogLevel = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Debug\"] = 0;\n        values[valuesById[1] = \"Info\"] = 1;\n        values[valuesById[2] = \"Warning\"] = 2;\n        values[valuesById[3] = \"Error\"] = 3;\n        values[valuesById[4] = \"Critical\"] = 4;\n        return values;\n    })();\n\n    /**\n     * SensorMeasurmentTypes enum.\n     * @name rov_actions_proto.SensorMeasurmentTypes\n     * @enum {number}\n     * @property {number} depth_meters=0 depth_meters value\n     * @property {number} water_temp_celsius=1 water_temp_celsius value\n     * @property {number} pressure_mbar=2 pressure_mbar value\n     * @property {number} yaw_degrees=3 yaw_degrees value\n     * @property {number} pitch_degrees=4 pitch_degrees value\n     * @property {number} roll_degrees=5 roll_degrees value\n     * @property {number} x_acceleration_m_s2=6 x_acceleration_m_s2 value\n     * @property {number} y_acceleration_m_s2=7 y_acceleration_m_s2 value\n     * @property {number} z_acceleration_m_s2=8 z_acceleration_m_s2 value\n     * @property {number} battery_voltage=9 battery_voltage value\n     * @property {number} battery_current_amps=10 battery_current_amps value\n     * @property {number} internal_temp_celsius=11 internal_temp_celsius value\n     */\n    rov_actions_proto.SensorMeasurmentTypes = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"depth_meters\"] = 0;\n        values[valuesById[1] = \"water_temp_celsius\"] = 1;\n        values[valuesById[2] = \"pressure_mbar\"] = 2;\n        values[valuesById[3] = \"yaw_degrees\"] = 3;\n        values[valuesById[4] = \"pitch_degrees\"] = 4;\n        values[valuesById[5] = \"roll_degrees\"] = 5;\n        values[valuesById[6] = \"x_acceleration_m_s2\"] = 6;\n        values[valuesById[7] = \"y_acceleration_m_s2\"] = 7;\n        values[valuesById[8] = \"z_acceleration_m_s2\"] = 8;\n        values[valuesById[9] = \"battery_voltage\"] = 9;\n        values[valuesById[10] = \"battery_current_amps\"] = 10;\n        values[valuesById[11] = \"internal_temp_celsius\"] = 11;\n        return values;\n    })();\n\n    /**\n     * DataTransportMethod enum.\n     * @name rov_actions_proto.DataTransportMethod\n     * @enum {number}\n     * @property {number} LivekitReliable=0 LivekitReliable value\n     * @property {number} LivekitUnreliable=1 LivekitUnreliable value\n     * @property {number} DirectReliable=2 DirectReliable value\n     * @property {number} DirectUnreliable=3 DirectUnreliable value\n     */\n    rov_actions_proto.DataTransportMethod = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"LivekitReliable\"] = 0;\n        values[valuesById[1] = \"LivekitUnreliable\"] = 1;\n        values[valuesById[2] = \"DirectReliable\"] = 2;\n        values[valuesById[3] = \"DirectUnreliable\"] = 3;\n        return values;\n    })();\n\n    /**\n     * InternalWebpageEvent enum.\n     * @name rov_actions_proto.InternalWebpageEvent\n     * @enum {number}\n     * @property {number} Nothing=0 Nothing value\n     * @property {number} RovConnected=1 RovConnected value\n     * @property {number} RovDisconnected=2 RovDisconnected value\n     * @property {number} UserConnected=3 UserConnected value\n     * @property {number} UserDisconnected=4 UserDisconnected value\n     */\n    rov_actions_proto.InternalWebpageEvent = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Nothing\"] = 0;\n        values[valuesById[1] = \"RovConnected\"] = 1;\n        values[valuesById[2] = \"RovDisconnected\"] = 2;\n        values[valuesById[3] = \"UserConnected\"] = 3;\n        values[valuesById[4] = \"UserDisconnected\"] = 4;\n        return values;\n    })();\n\n    /**\n     * VideoCodec enum.\n     * @name rov_actions_proto.VideoCodec\n     * @enum {number}\n     * @property {number} H264=0 H264 value\n     * @property {number} VP8=1 VP8 value\n     * @property {number} VP9=2 VP9 value\n     * @property {number} AV1=3 AV1 value\n     */\n    rov_actions_proto.VideoCodec = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"H264\"] = 0;\n        values[valuesById[1] = \"VP8\"] = 1;\n        values[valuesById[2] = \"VP9\"] = 2;\n        values[valuesById[3] = \"AV1\"] = 3;\n        return values;\n    })();\n\n    rov_actions_proto.VideoStreamOptions = (function() {\n\n        /**\n         * Properties of a VideoStreamOptions.\n         * @memberof rov_actions_proto\n         * @interface IVideoStreamOptions\n         * @property {number|null} [Height] VideoStreamOptions Height\n         * @property {number|null} [Width] VideoStreamOptions Width\n         * @property {number|null} [Fps] VideoStreamOptions Fps\n         * @property {number|null} [MaxBitrate] VideoStreamOptions MaxBitrate\n         */\n\n        /**\n         * Constructs a new VideoStreamOptions.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a VideoStreamOptions.\n         * @implements IVideoStreamOptions\n         * @constructor\n         * @param {rov_actions_proto.IVideoStreamOptions=} [properties] Properties to set\n         */\n        function VideoStreamOptions(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * VideoStreamOptions Height.\n         * @member {number} Height\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @instance\n         */\n        VideoStreamOptions.prototype.Height = 0;\n\n        /**\n         * VideoStreamOptions Width.\n         * @member {number} Width\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @instance\n         */\n        VideoStreamOptions.prototype.Width = 0;\n\n        /**\n         * VideoStreamOptions Fps.\n         * @member {number} Fps\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @instance\n         */\n        VideoStreamOptions.prototype.Fps = 0;\n\n        /**\n         * VideoStreamOptions MaxBitrate.\n         * @member {number} MaxBitrate\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @instance\n         */\n        VideoStreamOptions.prototype.MaxBitrate = 0;\n\n        /**\n         * Creates a new VideoStreamOptions instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {rov_actions_proto.IVideoStreamOptions=} [properties] Properties to set\n         * @returns {rov_actions_proto.VideoStreamOptions} VideoStreamOptions instance\n         */\n        VideoStreamOptions.create = function create(properties) {\n            return new VideoStreamOptions(properties);\n        };\n\n        /**\n         * Encodes the specified VideoStreamOptions message. Does not implicitly {@link rov_actions_proto.VideoStreamOptions.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {rov_actions_proto.IVideoStreamOptions} message VideoStreamOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VideoStreamOptions.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Height != null && Object.hasOwnProperty.call(message, \"Height\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.Height);\n            if (message.Width != null && Object.hasOwnProperty.call(message, \"Width\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.Width);\n            if (message.Fps != null && Object.hasOwnProperty.call(message, \"Fps\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.Fps);\n            if (message.MaxBitrate != null && Object.hasOwnProperty.call(message, \"MaxBitrate\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.MaxBitrate);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified VideoStreamOptions message, length delimited. Does not implicitly {@link rov_actions_proto.VideoStreamOptions.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {rov_actions_proto.IVideoStreamOptions} message VideoStreamOptions message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        VideoStreamOptions.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a VideoStreamOptions message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.VideoStreamOptions} VideoStreamOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VideoStreamOptions.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.VideoStreamOptions();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Height = reader.uint32();\n                        break;\n                    }\n                case 2: {\n                        message.Width = reader.uint32();\n                        break;\n                    }\n                case 3: {\n                        message.Fps = reader.uint32();\n                        break;\n                    }\n                case 4: {\n                        message.MaxBitrate = reader.uint32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a VideoStreamOptions message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.VideoStreamOptions} VideoStreamOptions\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        VideoStreamOptions.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a VideoStreamOptions message.\n         * @function verify\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        VideoStreamOptions.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Height != null && message.hasOwnProperty(\"Height\"))\n                if (!$util.isInteger(message.Height))\n                    return \"Height: integer expected\";\n            if (message.Width != null && message.hasOwnProperty(\"Width\"))\n                if (!$util.isInteger(message.Width))\n                    return \"Width: integer expected\";\n            if (message.Fps != null && message.hasOwnProperty(\"Fps\"))\n                if (!$util.isInteger(message.Fps))\n                    return \"Fps: integer expected\";\n            if (message.MaxBitrate != null && message.hasOwnProperty(\"MaxBitrate\"))\n                if (!$util.isInteger(message.MaxBitrate))\n                    return \"MaxBitrate: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a VideoStreamOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.VideoStreamOptions} VideoStreamOptions\n         */\n        VideoStreamOptions.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.VideoStreamOptions)\n                return object;\n            let message = new $root.rov_actions_proto.VideoStreamOptions();\n            if (object.Height != null)\n                message.Height = object.Height >>> 0;\n            if (object.Width != null)\n                message.Width = object.Width >>> 0;\n            if (object.Fps != null)\n                message.Fps = object.Fps >>> 0;\n            if (object.MaxBitrate != null)\n                message.MaxBitrate = object.MaxBitrate >>> 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a VideoStreamOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {rov_actions_proto.VideoStreamOptions} message VideoStreamOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        VideoStreamOptions.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.Height = 0;\n                object.Width = 0;\n                object.Fps = 0;\n                object.MaxBitrate = 0;\n            }\n            if (message.Height != null && message.hasOwnProperty(\"Height\"))\n                object.Height = message.Height;\n            if (message.Width != null && message.hasOwnProperty(\"Width\"))\n                object.Width = message.Width;\n            if (message.Fps != null && message.hasOwnProperty(\"Fps\"))\n                object.Fps = message.Fps;\n            if (message.MaxBitrate != null && message.hasOwnProperty(\"MaxBitrate\"))\n                object.MaxBitrate = message.MaxBitrate;\n            return object;\n        };\n\n        /**\n         * Converts this VideoStreamOptions to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        VideoStreamOptions.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for VideoStreamOptions\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.VideoStreamOptions\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        VideoStreamOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.VideoStreamOptions\";\n        };\n\n        return VideoStreamOptions;\n    })();\n\n    rov_actions_proto.SetLivekitVideoOptionsAction = (function() {\n\n        /**\n         * Properties of a SetLivekitVideoOptionsAction.\n         * @memberof rov_actions_proto\n         * @interface ISetLivekitVideoOptionsAction\n         * @property {boolean|null} [Enabled] SetLivekitVideoOptionsAction Enabled\n         * @property {rov_actions_proto.VideoCodec|null} [Codec] SetLivekitVideoOptionsAction Codec\n         * @property {boolean|null} [AllowBackupCodec] SetLivekitVideoOptionsAction AllowBackupCodec\n         * @property {rov_actions_proto.IVideoStreamOptions|null} [BaseStream] SetLivekitVideoOptionsAction BaseStream\n         * @property {Array.<rov_actions_proto.IVideoStreamOptions>|null} [SimulcastLayers] SetLivekitVideoOptionsAction SimulcastLayers\n         */\n\n        /**\n         * Constructs a new SetLivekitVideoOptionsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SetLivekitVideoOptionsAction.\n         * @implements ISetLivekitVideoOptionsAction\n         * @constructor\n         * @param {rov_actions_proto.ISetLivekitVideoOptionsAction=} [properties] Properties to set\n         */\n        function SetLivekitVideoOptionsAction(properties) {\n            this.SimulcastLayers = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SetLivekitVideoOptionsAction Enabled.\n         * @member {boolean} Enabled\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         */\n        SetLivekitVideoOptionsAction.prototype.Enabled = false;\n\n        /**\n         * SetLivekitVideoOptionsAction Codec.\n         * @member {rov_actions_proto.VideoCodec} Codec\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         */\n        SetLivekitVideoOptionsAction.prototype.Codec = 0;\n\n        /**\n         * SetLivekitVideoOptionsAction AllowBackupCodec.\n         * @member {boolean} AllowBackupCodec\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         */\n        SetLivekitVideoOptionsAction.prototype.AllowBackupCodec = false;\n\n        /**\n         * SetLivekitVideoOptionsAction BaseStream.\n         * @member {rov_actions_proto.IVideoStreamOptions|null|undefined} BaseStream\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         */\n        SetLivekitVideoOptionsAction.prototype.BaseStream = null;\n\n        /**\n         * SetLivekitVideoOptionsAction SimulcastLayers.\n         * @member {Array.<rov_actions_proto.IVideoStreamOptions>} SimulcastLayers\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         */\n        SetLivekitVideoOptionsAction.prototype.SimulcastLayers = $util.emptyArray;\n\n        /**\n         * Creates a new SetLivekitVideoOptionsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetLivekitVideoOptionsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SetLivekitVideoOptionsAction} SetLivekitVideoOptionsAction instance\n         */\n        SetLivekitVideoOptionsAction.create = function create(properties) {\n            return new SetLivekitVideoOptionsAction(properties);\n        };\n\n        /**\n         * Encodes the specified SetLivekitVideoOptionsAction message. Does not implicitly {@link rov_actions_proto.SetLivekitVideoOptionsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetLivekitVideoOptionsAction} message SetLivekitVideoOptionsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetLivekitVideoOptionsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Enabled != null && Object.hasOwnProperty.call(message, \"Enabled\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.Enabled);\n            if (message.Codec != null && Object.hasOwnProperty.call(message, \"Codec\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Codec);\n            if (message.AllowBackupCodec != null && Object.hasOwnProperty.call(message, \"AllowBackupCodec\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.AllowBackupCodec);\n            if (message.BaseStream != null && Object.hasOwnProperty.call(message, \"BaseStream\"))\n                $root.rov_actions_proto.VideoStreamOptions.encode(message.BaseStream, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.SimulcastLayers != null && message.SimulcastLayers.length)\n                for (let i = 0; i < message.SimulcastLayers.length; ++i)\n                    $root.rov_actions_proto.VideoStreamOptions.encode(message.SimulcastLayers[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SetLivekitVideoOptionsAction message, length delimited. Does not implicitly {@link rov_actions_proto.SetLivekitVideoOptionsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetLivekitVideoOptionsAction} message SetLivekitVideoOptionsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetLivekitVideoOptionsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SetLivekitVideoOptionsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SetLivekitVideoOptionsAction} SetLivekitVideoOptionsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetLivekitVideoOptionsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SetLivekitVideoOptionsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Enabled = reader.bool();\n                        break;\n                    }\n                case 2: {\n                        message.Codec = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.AllowBackupCodec = reader.bool();\n                        break;\n                    }\n                case 4: {\n                        message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        if (!(message.SimulcastLayers && message.SimulcastLayers.length))\n                            message.SimulcastLayers = [];\n                        message.SimulcastLayers.push($root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SetLivekitVideoOptionsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SetLivekitVideoOptionsAction} SetLivekitVideoOptionsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetLivekitVideoOptionsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SetLivekitVideoOptionsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SetLivekitVideoOptionsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                if (typeof message.Enabled !== \"boolean\")\n                    return \"Enabled: boolean expected\";\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                switch (message.Codec) {\n                default:\n                    return \"Codec: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            if (message.AllowBackupCodec != null && message.hasOwnProperty(\"AllowBackupCodec\"))\n                if (typeof message.AllowBackupCodec !== \"boolean\")\n                    return \"AllowBackupCodec: boolean expected\";\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\")) {\n                let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.BaseStream);\n                if (error)\n                    return \"BaseStream.\" + error;\n            }\n            if (message.SimulcastLayers != null && message.hasOwnProperty(\"SimulcastLayers\")) {\n                if (!Array.isArray(message.SimulcastLayers))\n                    return \"SimulcastLayers: array expected\";\n                for (let i = 0; i < message.SimulcastLayers.length; ++i) {\n                    let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.SimulcastLayers[i]);\n                    if (error)\n                        return \"SimulcastLayers.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SetLivekitVideoOptionsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SetLivekitVideoOptionsAction} SetLivekitVideoOptionsAction\n         */\n        SetLivekitVideoOptionsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SetLivekitVideoOptionsAction)\n                return object;\n            let message = new $root.rov_actions_proto.SetLivekitVideoOptionsAction();\n            if (object.Enabled != null)\n                message.Enabled = Boolean(object.Enabled);\n            switch (object.Codec) {\n            default:\n                if (typeof object.Codec === \"number\") {\n                    message.Codec = object.Codec;\n                    break;\n                }\n                break;\n            case \"H264\":\n            case 0:\n                message.Codec = 0;\n                break;\n            case \"VP8\":\n            case 1:\n                message.Codec = 1;\n                break;\n            case \"VP9\":\n            case 2:\n                message.Codec = 2;\n                break;\n            case \"AV1\":\n            case 3:\n                message.Codec = 3;\n                break;\n            }\n            if (object.AllowBackupCodec != null)\n                message.AllowBackupCodec = Boolean(object.AllowBackupCodec);\n            if (object.BaseStream != null) {\n                if (typeof object.BaseStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.SetLivekitVideoOptionsAction.BaseStream: object expected\");\n                message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.BaseStream);\n            }\n            if (object.SimulcastLayers) {\n                if (!Array.isArray(object.SimulcastLayers))\n                    throw TypeError(\".rov_actions_proto.SetLivekitVideoOptionsAction.SimulcastLayers: array expected\");\n                message.SimulcastLayers = [];\n                for (let i = 0; i < object.SimulcastLayers.length; ++i) {\n                    if (typeof object.SimulcastLayers[i] !== \"object\")\n                        throw TypeError(\".rov_actions_proto.SetLivekitVideoOptionsAction.SimulcastLayers: object expected\");\n                    message.SimulcastLayers[i] = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.SimulcastLayers[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SetLivekitVideoOptionsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.SetLivekitVideoOptionsAction} message SetLivekitVideoOptionsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SetLivekitVideoOptionsAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.SimulcastLayers = [];\n            if (options.defaults) {\n                object.Enabled = false;\n                object.Codec = options.enums === String ? \"H264\" : 0;\n                object.AllowBackupCodec = false;\n                object.BaseStream = null;\n            }\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                object.Enabled = message.Enabled;\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                object.Codec = options.enums === String ? $root.rov_actions_proto.VideoCodec[message.Codec] === undefined ? message.Codec : $root.rov_actions_proto.VideoCodec[message.Codec] : message.Codec;\n            if (message.AllowBackupCodec != null && message.hasOwnProperty(\"AllowBackupCodec\"))\n                object.AllowBackupCodec = message.AllowBackupCodec;\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\"))\n                object.BaseStream = $root.rov_actions_proto.VideoStreamOptions.toObject(message.BaseStream, options);\n            if (message.SimulcastLayers && message.SimulcastLayers.length) {\n                object.SimulcastLayers = [];\n                for (let j = 0; j < message.SimulcastLayers.length; ++j)\n                    object.SimulcastLayers[j] = $root.rov_actions_proto.VideoStreamOptions.toObject(message.SimulcastLayers[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SetLivekitVideoOptionsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SetLivekitVideoOptionsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SetLivekitVideoOptionsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SetLivekitVideoOptionsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SetLivekitVideoOptionsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SetLivekitVideoOptionsAction\";\n        };\n\n        return SetLivekitVideoOptionsAction;\n    })();\n\n    rov_actions_proto.SetSimplePeerVideoOptionsAction = (function() {\n\n        /**\n         * Properties of a SetSimplePeerVideoOptionsAction.\n         * @memberof rov_actions_proto\n         * @interface ISetSimplePeerVideoOptionsAction\n         * @property {boolean|null} [Enabled] SetSimplePeerVideoOptionsAction Enabled\n         * @property {number|null} [Bitrate] SetSimplePeerVideoOptionsAction Bitrate\n         * @property {rov_actions_proto.VideoCodec|null} [Codec] SetSimplePeerVideoOptionsAction Codec\n         * @property {rov_actions_proto.IVideoStreamOptions|null} [BaseStream] SetSimplePeerVideoOptionsAction BaseStream\n         */\n\n        /**\n         * Constructs a new SetSimplePeerVideoOptionsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SetSimplePeerVideoOptionsAction.\n         * @implements ISetSimplePeerVideoOptionsAction\n         * @constructor\n         * @param {rov_actions_proto.ISetSimplePeerVideoOptionsAction=} [properties] Properties to set\n         */\n        function SetSimplePeerVideoOptionsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SetSimplePeerVideoOptionsAction Enabled.\n         * @member {boolean} Enabled\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @instance\n         */\n        SetSimplePeerVideoOptionsAction.prototype.Enabled = false;\n\n        /**\n         * SetSimplePeerVideoOptionsAction Bitrate.\n         * @member {number} Bitrate\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @instance\n         */\n        SetSimplePeerVideoOptionsAction.prototype.Bitrate = 0;\n\n        /**\n         * SetSimplePeerVideoOptionsAction Codec.\n         * @member {rov_actions_proto.VideoCodec} Codec\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @instance\n         */\n        SetSimplePeerVideoOptionsAction.prototype.Codec = 0;\n\n        /**\n         * SetSimplePeerVideoOptionsAction BaseStream.\n         * @member {rov_actions_proto.IVideoStreamOptions|null|undefined} BaseStream\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @instance\n         */\n        SetSimplePeerVideoOptionsAction.prototype.BaseStream = null;\n\n        /**\n         * Creates a new SetSimplePeerVideoOptionsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetSimplePeerVideoOptionsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SetSimplePeerVideoOptionsAction} SetSimplePeerVideoOptionsAction instance\n         */\n        SetSimplePeerVideoOptionsAction.create = function create(properties) {\n            return new SetSimplePeerVideoOptionsAction(properties);\n        };\n\n        /**\n         * Encodes the specified SetSimplePeerVideoOptionsAction message. Does not implicitly {@link rov_actions_proto.SetSimplePeerVideoOptionsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetSimplePeerVideoOptionsAction} message SetSimplePeerVideoOptionsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetSimplePeerVideoOptionsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Enabled != null && Object.hasOwnProperty.call(message, \"Enabled\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.Enabled);\n            if (message.Bitrate != null && Object.hasOwnProperty.call(message, \"Bitrate\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.Bitrate);\n            if (message.Codec != null && Object.hasOwnProperty.call(message, \"Codec\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.Codec);\n            if (message.BaseStream != null && Object.hasOwnProperty.call(message, \"BaseStream\"))\n                $root.rov_actions_proto.VideoStreamOptions.encode(message.BaseStream, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SetSimplePeerVideoOptionsAction message, length delimited. Does not implicitly {@link rov_actions_proto.SetSimplePeerVideoOptionsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.ISetSimplePeerVideoOptionsAction} message SetSimplePeerVideoOptionsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetSimplePeerVideoOptionsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SetSimplePeerVideoOptionsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SetSimplePeerVideoOptionsAction} SetSimplePeerVideoOptionsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetSimplePeerVideoOptionsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SetSimplePeerVideoOptionsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Enabled = reader.bool();\n                        break;\n                    }\n                case 2: {\n                        message.Bitrate = reader.uint32();\n                        break;\n                    }\n                case 3: {\n                        message.Codec = reader.int32();\n                        break;\n                    }\n                case 4: {\n                        message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SetSimplePeerVideoOptionsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SetSimplePeerVideoOptionsAction} SetSimplePeerVideoOptionsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetSimplePeerVideoOptionsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SetSimplePeerVideoOptionsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SetSimplePeerVideoOptionsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                if (typeof message.Enabled !== \"boolean\")\n                    return \"Enabled: boolean expected\";\n            if (message.Bitrate != null && message.hasOwnProperty(\"Bitrate\"))\n                if (!$util.isInteger(message.Bitrate))\n                    return \"Bitrate: integer expected\";\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                switch (message.Codec) {\n                default:\n                    return \"Codec: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\")) {\n                let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.BaseStream);\n                if (error)\n                    return \"BaseStream.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SetSimplePeerVideoOptionsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SetSimplePeerVideoOptionsAction} SetSimplePeerVideoOptionsAction\n         */\n        SetSimplePeerVideoOptionsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SetSimplePeerVideoOptionsAction)\n                return object;\n            let message = new $root.rov_actions_proto.SetSimplePeerVideoOptionsAction();\n            if (object.Enabled != null)\n                message.Enabled = Boolean(object.Enabled);\n            if (object.Bitrate != null)\n                message.Bitrate = object.Bitrate >>> 0;\n            switch (object.Codec) {\n            default:\n                if (typeof object.Codec === \"number\") {\n                    message.Codec = object.Codec;\n                    break;\n                }\n                break;\n            case \"H264\":\n            case 0:\n                message.Codec = 0;\n                break;\n            case \"VP8\":\n            case 1:\n                message.Codec = 1;\n                break;\n            case \"VP9\":\n            case 2:\n                message.Codec = 2;\n                break;\n            case \"AV1\":\n            case 3:\n                message.Codec = 3;\n                break;\n            }\n            if (object.BaseStream != null) {\n                if (typeof object.BaseStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.SetSimplePeerVideoOptionsAction.BaseStream: object expected\");\n                message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.BaseStream);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SetSimplePeerVideoOptionsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {rov_actions_proto.SetSimplePeerVideoOptionsAction} message SetSimplePeerVideoOptionsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SetSimplePeerVideoOptionsAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.Enabled = false;\n                object.Bitrate = 0;\n                object.Codec = options.enums === String ? \"H264\" : 0;\n                object.BaseStream = null;\n            }\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                object.Enabled = message.Enabled;\n            if (message.Bitrate != null && message.hasOwnProperty(\"Bitrate\"))\n                object.Bitrate = message.Bitrate;\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                object.Codec = options.enums === String ? $root.rov_actions_proto.VideoCodec[message.Codec] === undefined ? message.Codec : $root.rov_actions_proto.VideoCodec[message.Codec] : message.Codec;\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\"))\n                object.BaseStream = $root.rov_actions_proto.VideoStreamOptions.toObject(message.BaseStream, options);\n            return object;\n        };\n\n        /**\n         * Converts this SetSimplePeerVideoOptionsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SetSimplePeerVideoOptionsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SetSimplePeerVideoOptionsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SetSimplePeerVideoOptionsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SetSimplePeerVideoOptionsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SetSimplePeerVideoOptionsAction\";\n        };\n\n        return SetSimplePeerVideoOptionsAction;\n    })();\n\n    rov_actions_proto.PingAction = (function() {\n\n        /**\n         * Properties of a PingAction.\n         * @memberof rov_actions_proto\n         * @interface IPingAction\n         * @property {number|Long|null} [Time] PingAction Time\n         */\n\n        /**\n         * Constructs a new PingAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PingAction.\n         * @implements IPingAction\n         * @constructor\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         */\n        function PingAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PingAction Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         */\n        PingAction.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PingAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PingAction} PingAction instance\n         */\n        PingAction.create = function create(properties) {\n            return new PingAction(properties);\n        };\n\n        /**\n         * Encodes the specified PingAction message. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PingAction message, length delimited. Does not implicitly {@link rov_actions_proto.PingAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.IPingAction} message PingAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PingAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PingAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PingAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PingAction} PingAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PingAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PingAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PingAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PingAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PingAction} PingAction\n         */\n        PingAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PingAction)\n                return object;\n            let message = new $root.rov_actions_proto.PingAction();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PingAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {rov_actions_proto.PingAction} message PingAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PingAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PingAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PingAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PingAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PingAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PingAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PingAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PingAction\";\n        };\n\n        return PingAction;\n    })();\n\n    rov_actions_proto.PasswordAttemptAction = (function() {\n\n        /**\n         * Properties of a PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAttemptAction\n         * @property {string|null} [Password] PasswordAttemptAction Password\n         */\n\n        /**\n         * Constructs a new PasswordAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAttemptAction.\n         * @implements IPasswordAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         */\n        function PasswordAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAttemptAction Password.\n         * @member {string} Password\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         */\n        PasswordAttemptAction.prototype.Password = \"\";\n\n        /**\n         * Creates a new PasswordAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction instance\n         */\n        PasswordAttemptAction.create = function create(properties) {\n            return new PasswordAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Password);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.IPasswordAttemptAction} message PasswordAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Password = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                if (!$util.isString(message.Password))\n                    return \"Password: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAttemptAction} PasswordAttemptAction\n         */\n        PasswordAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAttemptAction();\n            if (object.Password != null)\n                message.Password = String(object.Password);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {rov_actions_proto.PasswordAttemptAction} message PasswordAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Password = \"\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                object.Password = message.Password;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAttemptAction\";\n        };\n\n        return PasswordAttemptAction;\n    })();\n\n    rov_actions_proto.AuthTokenAttemptAction = (function() {\n\n        /**\n         * Properties of an AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @interface IAuthTokenAttemptAction\n         * @property {string|null} [Token] AuthTokenAttemptAction Token\n         */\n\n        /**\n         * Constructs a new AuthTokenAttemptAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an AuthTokenAttemptAction.\n         * @implements IAuthTokenAttemptAction\n         * @constructor\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         */\n        function AuthTokenAttemptAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AuthTokenAttemptAction Token.\n         * @member {string} Token\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         */\n        AuthTokenAttemptAction.prototype.Token = \"\";\n\n        /**\n         * Creates a new AuthTokenAttemptAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction instance\n         */\n        AuthTokenAttemptAction.create = function create(properties) {\n            return new AuthTokenAttemptAction(properties);\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Token != null && Object.hasOwnProperty.call(message, \"Token\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Token);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AuthTokenAttemptAction message, length delimited. Does not implicitly {@link rov_actions_proto.AuthTokenAttemptAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.IAuthTokenAttemptAction} message AuthTokenAttemptAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AuthTokenAttemptAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Token = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AuthTokenAttemptAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AuthTokenAttemptAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AuthTokenAttemptAction message.\n         * @function verify\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AuthTokenAttemptAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                if (!$util.isString(message.Token))\n                    return \"Token: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an AuthTokenAttemptAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.AuthTokenAttemptAction} AuthTokenAttemptAction\n         */\n        AuthTokenAttemptAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.AuthTokenAttemptAction)\n                return object;\n            let message = new $root.rov_actions_proto.AuthTokenAttemptAction();\n            if (object.Token != null)\n                message.Token = String(object.Token);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AuthTokenAttemptAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {rov_actions_proto.AuthTokenAttemptAction} message AuthTokenAttemptAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AuthTokenAttemptAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Token = \"\";\n            if (message.Token != null && message.hasOwnProperty(\"Token\"))\n                object.Token = message.Token;\n            return object;\n        };\n\n        /**\n         * Converts this AuthTokenAttemptAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AuthTokenAttemptAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for AuthTokenAttemptAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.AuthTokenAttemptAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        AuthTokenAttemptAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.AuthTokenAttemptAction\";\n        };\n\n        return AuthTokenAttemptAction;\n    })();\n\n    rov_actions_proto.TakeControlAction = (function() {\n\n        /**\n         * Properties of a TakeControlAction.\n         * @memberof rov_actions_proto\n         * @interface ITakeControlAction\n         */\n\n        /**\n         * Constructs a new TakeControlAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakeControlAction.\n         * @implements ITakeControlAction\n         * @constructor\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         */\n        function TakeControlAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakeControlAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction instance\n         */\n        TakeControlAction.create = function create(properties) {\n            return new TakeControlAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakeControlAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakeControlAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.ITakeControlAction} message TakeControlAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakeControlAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakeControlAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakeControlAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakeControlAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakeControlAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakeControlAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakeControlAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakeControlAction} TakeControlAction\n         */\n        TakeControlAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakeControlAction)\n                return object;\n            return new $root.rov_actions_proto.TakeControlAction();\n        };\n\n        /**\n         * Creates a plain object from a TakeControlAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {rov_actions_proto.TakeControlAction} message TakeControlAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakeControlAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakeControlAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakeControlAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakeControlAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakeControlAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakeControlAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakeControlAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakeControlAction\";\n        };\n\n        return TakeControlAction;\n    })();\n\n    rov_actions_proto.MoveAction = (function() {\n\n        /**\n         * Properties of a MoveAction.\n         * @memberof rov_actions_proto\n         * @interface IMoveAction\n         * @property {number|null} [VelocityX] MoveAction VelocityX\n         * @property {number|null} [VelocityY] MoveAction VelocityY\n         * @property {number|null} [VelocityZ] MoveAction VelocityZ\n         * @property {number|null} [AngularVelocityYaw] MoveAction AngularVelocityYaw\n         * @property {number|null} [ButtonBitmask] MoveAction ButtonBitmask\n         */\n\n        /**\n         * Constructs a new MoveAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MoveAction.\n         * @implements IMoveAction\n         * @constructor\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         */\n        function MoveAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MoveAction VelocityX.\n         * @member {number} VelocityX\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityX = 0;\n\n        /**\n         * MoveAction VelocityY.\n         * @member {number} VelocityY\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityY = 0;\n\n        /**\n         * MoveAction VelocityZ.\n         * @member {number} VelocityZ\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.VelocityZ = 0;\n\n        /**\n         * MoveAction AngularVelocityYaw.\n         * @member {number} AngularVelocityYaw\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.AngularVelocityYaw = 0;\n\n        /**\n         * MoveAction ButtonBitmask.\n         * @member {number} ButtonBitmask\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         */\n        MoveAction.prototype.ButtonBitmask = 0;\n\n        /**\n         * Creates a new MoveAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MoveAction} MoveAction instance\n         */\n        MoveAction.create = function create(properties) {\n            return new MoveAction(properties);\n        };\n\n        /**\n         * Encodes the specified MoveAction message. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.VelocityX != null && Object.hasOwnProperty.call(message, \"VelocityX\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.VelocityX);\n            if (message.VelocityY != null && Object.hasOwnProperty.call(message, \"VelocityY\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.VelocityY);\n            if (message.VelocityZ != null && Object.hasOwnProperty.call(message, \"VelocityZ\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.VelocityZ);\n            if (message.AngularVelocityYaw != null && Object.hasOwnProperty.call(message, \"AngularVelocityYaw\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.AngularVelocityYaw);\n            if (message.ButtonBitmask != null && Object.hasOwnProperty.call(message, \"ButtonBitmask\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.ButtonBitmask);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MoveAction message, length delimited. Does not implicitly {@link rov_actions_proto.MoveAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.IMoveAction} message MoveAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MoveAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.VelocityX = reader.float();\n                        break;\n                    }\n                case 2: {\n                        message.VelocityY = reader.float();\n                        break;\n                    }\n                case 3: {\n                        message.VelocityZ = reader.float();\n                        break;\n                    }\n                case 4: {\n                        message.AngularVelocityYaw = reader.float();\n                        break;\n                    }\n                case 5: {\n                        message.ButtonBitmask = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MoveAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MoveAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MoveAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                if (typeof message.VelocityX !== \"number\")\n                    return \"VelocityX: number expected\";\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                if (typeof message.VelocityY !== \"number\")\n                    return \"VelocityY: number expected\";\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                if (typeof message.VelocityZ !== \"number\")\n                    return \"VelocityZ: number expected\";\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                if (typeof message.AngularVelocityYaw !== \"number\")\n                    return \"AngularVelocityYaw: number expected\";\n            if (message.ButtonBitmask != null && message.hasOwnProperty(\"ButtonBitmask\"))\n                if (!$util.isInteger(message.ButtonBitmask))\n                    return \"ButtonBitmask: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MoveAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MoveAction} MoveAction\n         */\n        MoveAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MoveAction)\n                return object;\n            let message = new $root.rov_actions_proto.MoveAction();\n            if (object.VelocityX != null)\n                message.VelocityX = Number(object.VelocityX);\n            if (object.VelocityY != null)\n                message.VelocityY = Number(object.VelocityY);\n            if (object.VelocityZ != null)\n                message.VelocityZ = Number(object.VelocityZ);\n            if (object.AngularVelocityYaw != null)\n                message.AngularVelocityYaw = Number(object.AngularVelocityYaw);\n            if (object.ButtonBitmask != null)\n                message.ButtonBitmask = object.ButtonBitmask | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MoveAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {rov_actions_proto.MoveAction} message MoveAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MoveAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.VelocityX = 0;\n                object.VelocityY = 0;\n                object.VelocityZ = 0;\n                object.AngularVelocityYaw = 0;\n                object.ButtonBitmask = 0;\n            }\n            if (message.VelocityX != null && message.hasOwnProperty(\"VelocityX\"))\n                object.VelocityX = options.json && !isFinite(message.VelocityX) ? String(message.VelocityX) : message.VelocityX;\n            if (message.VelocityY != null && message.hasOwnProperty(\"VelocityY\"))\n                object.VelocityY = options.json && !isFinite(message.VelocityY) ? String(message.VelocityY) : message.VelocityY;\n            if (message.VelocityZ != null && message.hasOwnProperty(\"VelocityZ\"))\n                object.VelocityZ = options.json && !isFinite(message.VelocityZ) ? String(message.VelocityZ) : message.VelocityZ;\n            if (message.AngularVelocityYaw != null && message.hasOwnProperty(\"AngularVelocityYaw\"))\n                object.AngularVelocityYaw = options.json && !isFinite(message.AngularVelocityYaw) ? String(message.AngularVelocityYaw) : message.AngularVelocityYaw;\n            if (message.ButtonBitmask != null && message.hasOwnProperty(\"ButtonBitmask\"))\n                object.ButtonBitmask = message.ButtonBitmask;\n            return object;\n        };\n\n        /**\n         * Converts this MoveAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MoveAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MoveAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MoveAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MoveAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MoveAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MoveAction\";\n        };\n\n        return MoveAction;\n    })();\n\n    rov_actions_proto.TakePhotoAction = (function() {\n\n        /**\n         * Properties of a TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @interface ITakePhotoAction\n         */\n\n        /**\n         * Constructs a new TakePhotoAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a TakePhotoAction.\n         * @implements ITakePhotoAction\n         * @constructor\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         */\n        function TakePhotoAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new TakePhotoAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction instance\n         */\n        TakePhotoAction.create = function create(properties) {\n            return new TakePhotoAction(properties);\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TakePhotoAction message, length delimited. Does not implicitly {@link rov_actions_proto.TakePhotoAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.ITakePhotoAction} message TakePhotoAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TakePhotoAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.TakePhotoAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TakePhotoAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TakePhotoAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TakePhotoAction message.\n         * @function verify\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TakePhotoAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TakePhotoAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.TakePhotoAction} TakePhotoAction\n         */\n        TakePhotoAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.TakePhotoAction)\n                return object;\n            return new $root.rov_actions_proto.TakePhotoAction();\n        };\n\n        /**\n         * Creates a plain object from a TakePhotoAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {rov_actions_proto.TakePhotoAction} message TakePhotoAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TakePhotoAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this TakePhotoAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TakePhotoAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for TakePhotoAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.TakePhotoAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        TakePhotoAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.TakePhotoAction\";\n        };\n\n        return TakePhotoAction;\n    })();\n\n    rov_actions_proto.StartVideoRecAction = (function() {\n\n        /**\n         * Properties of a StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStartVideoRecAction\n         */\n\n        /**\n         * Constructs a new StartVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StartVideoRecAction.\n         * @implements IStartVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         */\n        function StartVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StartVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction instance\n         */\n        StartVideoRecAction.create = function create(properties) {\n            return new StartVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StartVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StartVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStartVideoRecAction} message StartVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StartVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StartVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StartVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StartVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StartVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StartVideoRecAction} StartVideoRecAction\n         */\n        StartVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StartVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StartVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StartVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StartVideoRecAction} message StartVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StartVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StartVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StartVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StartVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StartVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StartVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StartVideoRecAction\";\n        };\n\n        return StartVideoRecAction;\n    })();\n\n    rov_actions_proto.StopVideoRecAction = (function() {\n\n        /**\n         * Properties of a StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @interface IStopVideoRecAction\n         */\n\n        /**\n         * Constructs a new StopVideoRecAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a StopVideoRecAction.\n         * @implements IStopVideoRecAction\n         * @constructor\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         */\n        function StopVideoRecAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new StopVideoRecAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction instance\n         */\n        StopVideoRecAction.create = function create(properties) {\n            return new StopVideoRecAction(properties);\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StopVideoRecAction message, length delimited. Does not implicitly {@link rov_actions_proto.StopVideoRecAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.IStopVideoRecAction} message StopVideoRecAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StopVideoRecAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.StopVideoRecAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StopVideoRecAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StopVideoRecAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StopVideoRecAction message.\n         * @function verify\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StopVideoRecAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StopVideoRecAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.StopVideoRecAction} StopVideoRecAction\n         */\n        StopVideoRecAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.StopVideoRecAction)\n                return object;\n            return new $root.rov_actions_proto.StopVideoRecAction();\n        };\n\n        /**\n         * Creates a plain object from a StopVideoRecAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {rov_actions_proto.StopVideoRecAction} message StopVideoRecAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StopVideoRecAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this StopVideoRecAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StopVideoRecAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StopVideoRecAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.StopVideoRecAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StopVideoRecAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.StopVideoRecAction\";\n        };\n\n        return StopVideoRecAction;\n    })();\n\n    rov_actions_proto.ToggleLightsAction = (function() {\n\n        /**\n         * Properties of a ToggleLightsAction.\n         * @memberof rov_actions_proto\n         * @interface IToggleLightsAction\n         */\n\n        /**\n         * Constructs a new ToggleLightsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ToggleLightsAction.\n         * @implements IToggleLightsAction\n         * @constructor\n         * @param {rov_actions_proto.IToggleLightsAction=} [properties] Properties to set\n         */\n        function ToggleLightsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ToggleLightsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToggleLightsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ToggleLightsAction} ToggleLightsAction instance\n         */\n        ToggleLightsAction.create = function create(properties) {\n            return new ToggleLightsAction(properties);\n        };\n\n        /**\n         * Encodes the specified ToggleLightsAction message. Does not implicitly {@link rov_actions_proto.ToggleLightsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToggleLightsAction} message ToggleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleLightsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ToggleLightsAction message, length delimited. Does not implicitly {@link rov_actions_proto.ToggleLightsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {rov_actions_proto.IToggleLightsAction} message ToggleLightsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ToggleLightsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ToggleLightsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ToggleLightsAction} ToggleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleLightsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ToggleLightsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ToggleLightsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ToggleLightsAction} ToggleLightsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ToggleLightsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ToggleLightsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ToggleLightsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ToggleLightsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ToggleLightsAction} ToggleLightsAction\n         */\n        ToggleLightsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ToggleLightsAction)\n                return object;\n            return new $root.rov_actions_proto.ToggleLightsAction();\n        };\n\n        /**\n         * Creates a plain object from a ToggleLightsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {rov_actions_proto.ToggleLightsAction} message ToggleLightsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ToggleLightsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ToggleLightsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ToggleLightsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ToggleLightsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ToggleLightsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ToggleLightsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ToggleLightsAction\";\n        };\n\n        return ToggleLightsAction;\n    })();\n\n    rov_actions_proto.ShutdownRovAction = (function() {\n\n        /**\n         * Properties of a ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @interface IShutdownRovAction\n         */\n\n        /**\n         * Constructs a new ShutdownRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ShutdownRovAction.\n         * @implements IShutdownRovAction\n         * @constructor\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         */\n        function ShutdownRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new ShutdownRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction instance\n         */\n        ShutdownRovAction.create = function create(properties) {\n            return new ShutdownRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ShutdownRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.ShutdownRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.IShutdownRovAction} message ShutdownRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ShutdownRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ShutdownRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ShutdownRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ShutdownRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ShutdownRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ShutdownRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ShutdownRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ShutdownRovAction} ShutdownRovAction\n         */\n        ShutdownRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ShutdownRovAction)\n                return object;\n            return new $root.rov_actions_proto.ShutdownRovAction();\n        };\n\n        /**\n         * Creates a plain object from a ShutdownRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {rov_actions_proto.ShutdownRovAction} message ShutdownRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ShutdownRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this ShutdownRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ShutdownRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ShutdownRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ShutdownRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ShutdownRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ShutdownRovAction\";\n        };\n\n        return ShutdownRovAction;\n    })();\n\n    rov_actions_proto.RebootRovAction = (function() {\n\n        /**\n         * Properties of a RebootRovAction.\n         * @memberof rov_actions_proto\n         * @interface IRebootRovAction\n         */\n\n        /**\n         * Constructs a new RebootRovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RebootRovAction.\n         * @implements IRebootRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         */\n        function RebootRovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RebootRovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction instance\n         */\n        RebootRovAction.create = function create(properties) {\n            return new RebootRovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RebootRovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RebootRovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.IRebootRovAction} message RebootRovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RebootRovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RebootRovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RebootRovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RebootRovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RebootRovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RebootRovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RebootRovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RebootRovAction} RebootRovAction\n         */\n        RebootRovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RebootRovAction)\n                return object;\n            return new $root.rov_actions_proto.RebootRovAction();\n        };\n\n        /**\n         * Creates a plain object from a RebootRovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {rov_actions_proto.RebootRovAction} message RebootRovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RebootRovAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RebootRovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RebootRovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RebootRovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RebootRovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RebootRovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RebootRovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RebootRovAction\";\n        };\n\n        return RebootRovAction;\n    })();\n\n    rov_actions_proto.EnableWifiAction = (function() {\n\n        /**\n         * Properties of an EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IEnableWifiAction\n         */\n\n        /**\n         * Constructs a new EnableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an EnableWifiAction.\n         * @implements IEnableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         */\n        function EnableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new EnableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction instance\n         */\n        EnableWifiAction.create = function create(properties) {\n            return new EnableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified EnableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.EnableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.IEnableWifiAction} message EnableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        EnableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.EnableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an EnableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        EnableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an EnableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        EnableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates an EnableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.EnableWifiAction} EnableWifiAction\n         */\n        EnableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.EnableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.EnableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from an EnableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {rov_actions_proto.EnableWifiAction} message EnableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        EnableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this EnableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        EnableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for EnableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.EnableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        EnableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.EnableWifiAction\";\n        };\n\n        return EnableWifiAction;\n    })();\n\n    rov_actions_proto.DisableWifiAction = (function() {\n\n        /**\n         * Properties of a DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @interface IDisableWifiAction\n         */\n\n        /**\n         * Constructs a new DisableWifiAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DisableWifiAction.\n         * @implements IDisableWifiAction\n         * @constructor\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         */\n        function DisableWifiAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new DisableWifiAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction instance\n         */\n        DisableWifiAction.create = function create(properties) {\n            return new DisableWifiAction(properties);\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DisableWifiAction message, length delimited. Does not implicitly {@link rov_actions_proto.DisableWifiAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.IDisableWifiAction} message DisableWifiAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisableWifiAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DisableWifiAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DisableWifiAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisableWifiAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DisableWifiAction message.\n         * @function verify\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DisableWifiAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DisableWifiAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DisableWifiAction} DisableWifiAction\n         */\n        DisableWifiAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DisableWifiAction)\n                return object;\n            return new $root.rov_actions_proto.DisableWifiAction();\n        };\n\n        /**\n         * Creates a plain object from a DisableWifiAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {rov_actions_proto.DisableWifiAction} message DisableWifiAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DisableWifiAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this DisableWifiAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DisableWifiAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DisableWifiAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DisableWifiAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DisableWifiAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DisableWifiAction\";\n        };\n\n        return DisableWifiAction;\n    })();\n\n    rov_actions_proto.RovStatusReportAction = (function() {\n\n        /**\n         * Properties of a RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @interface IRovStatusReportAction\n         */\n\n        /**\n         * Constructs a new RovStatusReportAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovStatusReportAction.\n         * @implements IRovStatusReportAction\n         * @constructor\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         */\n        function RovStatusReportAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RovStatusReportAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction instance\n         */\n        RovStatusReportAction.create = function create(properties) {\n            return new RovStatusReportAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovStatusReportAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovStatusReportAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.IRovStatusReportAction} message RovStatusReportAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovStatusReportAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovStatusReportAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovStatusReportAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovStatusReportAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovStatusReportAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovStatusReportAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RovStatusReportAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovStatusReportAction} RovStatusReportAction\n         */\n        RovStatusReportAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovStatusReportAction)\n                return object;\n            return new $root.rov_actions_proto.RovStatusReportAction();\n        };\n\n        /**\n         * Creates a plain object from a RovStatusReportAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {rov_actions_proto.RovStatusReportAction} message RovStatusReportAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovStatusReportAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RovStatusReportAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovStatusReportAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovStatusReportAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovStatusReportAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovStatusReportAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovStatusReportAction\";\n        };\n\n        return RovStatusReportAction;\n    })();\n\n    rov_actions_proto.RestartRovServicesAction = (function() {\n\n        /**\n         * Properties of a RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @interface IRestartRovServicesAction\n         */\n\n        /**\n         * Constructs a new RestartRovServicesAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RestartRovServicesAction.\n         * @implements IRestartRovServicesAction\n         * @constructor\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         */\n        function RestartRovServicesAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RestartRovServicesAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction instance\n         */\n        RestartRovServicesAction.create = function create(properties) {\n            return new RestartRovServicesAction(properties);\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RestartRovServicesAction message, length delimited. Does not implicitly {@link rov_actions_proto.RestartRovServicesAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.IRestartRovServicesAction} message RestartRovServicesAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RestartRovServicesAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RestartRovServicesAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RestartRovServicesAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RestartRovServicesAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RestartRovServicesAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RestartRovServicesAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RestartRovServicesAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RestartRovServicesAction} RestartRovServicesAction\n         */\n        RestartRovServicesAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RestartRovServicesAction)\n                return object;\n            return new $root.rov_actions_proto.RestartRovServicesAction();\n        };\n\n        /**\n         * Creates a plain object from a RestartRovServicesAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {rov_actions_proto.RestartRovServicesAction} message RestartRovServicesAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RestartRovServicesAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RestartRovServicesAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RestartRovServicesAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RestartRovServicesAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RestartRovServicesAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RestartRovServicesAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RestartRovServicesAction\";\n        };\n\n        return RestartRovServicesAction;\n    })();\n\n    rov_actions_proto.SendRovLogsAction = (function() {\n\n        /**\n         * Properties of a SendRovLogsAction.\n         * @memberof rov_actions_proto\n         * @interface ISendRovLogsAction\n         */\n\n        /**\n         * Constructs a new SendRovLogsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SendRovLogsAction.\n         * @implements ISendRovLogsAction\n         * @constructor\n         * @param {rov_actions_proto.ISendRovLogsAction=} [properties] Properties to set\n         */\n        function SendRovLogsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new SendRovLogsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {rov_actions_proto.ISendRovLogsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SendRovLogsAction} SendRovLogsAction instance\n         */\n        SendRovLogsAction.create = function create(properties) {\n            return new SendRovLogsAction(properties);\n        };\n\n        /**\n         * Encodes the specified SendRovLogsAction message. Does not implicitly {@link rov_actions_proto.SendRovLogsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {rov_actions_proto.ISendRovLogsAction} message SendRovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendRovLogsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SendRovLogsAction message, length delimited. Does not implicitly {@link rov_actions_proto.SendRovLogsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {rov_actions_proto.ISendRovLogsAction} message SendRovLogsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendRovLogsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SendRovLogsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SendRovLogsAction} SendRovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendRovLogsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SendRovLogsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SendRovLogsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SendRovLogsAction} SendRovLogsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendRovLogsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SendRovLogsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SendRovLogsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SendRovLogsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SendRovLogsAction} SendRovLogsAction\n         */\n        SendRovLogsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SendRovLogsAction)\n                return object;\n            return new $root.rov_actions_proto.SendRovLogsAction();\n        };\n\n        /**\n         * Creates a plain object from a SendRovLogsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {rov_actions_proto.SendRovLogsAction} message SendRovLogsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SendRovLogsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this SendRovLogsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SendRovLogsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SendRovLogsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SendRovLogsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SendRovLogsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SendRovLogsAction\";\n        };\n\n        return SendRovLogsAction;\n    })();\n\n    rov_actions_proto.RefreshAllSensorsAction = (function() {\n\n        /**\n         * Properties of a RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @interface IRefreshAllSensorsAction\n         */\n\n        /**\n         * Constructs a new RefreshAllSensorsAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RefreshAllSensorsAction.\n         * @implements IRefreshAllSensorsAction\n         * @constructor\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         */\n        function RefreshAllSensorsAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new RefreshAllSensorsAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction instance\n         */\n        RefreshAllSensorsAction.create = function create(properties) {\n            return new RefreshAllSensorsAction(properties);\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RefreshAllSensorsAction message, length delimited. Does not implicitly {@link rov_actions_proto.RefreshAllSensorsAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.IRefreshAllSensorsAction} message RefreshAllSensorsAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RefreshAllSensorsAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RefreshAllSensorsAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RefreshAllSensorsAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RefreshAllSensorsAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RefreshAllSensorsAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RefreshAllSensorsAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RefreshAllSensorsAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RefreshAllSensorsAction} RefreshAllSensorsAction\n         */\n        RefreshAllSensorsAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RefreshAllSensorsAction)\n                return object;\n            return new $root.rov_actions_proto.RefreshAllSensorsAction();\n        };\n\n        /**\n         * Creates a plain object from a RefreshAllSensorsAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {rov_actions_proto.RefreshAllSensorsAction} message RefreshAllSensorsAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RefreshAllSensorsAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this RefreshAllSensorsAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RefreshAllSensorsAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RefreshAllSensorsAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RefreshAllSensorsAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RefreshAllSensorsAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RefreshAllSensorsAction\";\n        };\n\n        return RefreshAllSensorsAction;\n    })();\n\n    rov_actions_proto.MoveClawAction = (function() {\n\n        /**\n         * Properties of a MoveClawAction.\n         * @memberof rov_actions_proto\n         * @interface IMoveClawAction\n         * @property {number|null} [Value] MoveClawAction Value\n         */\n\n        /**\n         * Constructs a new MoveClawAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MoveClawAction.\n         * @implements IMoveClawAction\n         * @constructor\n         * @param {rov_actions_proto.IMoveClawAction=} [properties] Properties to set\n         */\n        function MoveClawAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MoveClawAction Value.\n         * @member {number} Value\n         * @memberof rov_actions_proto.MoveClawAction\n         * @instance\n         */\n        MoveClawAction.prototype.Value = 0;\n\n        /**\n         * Creates a new MoveClawAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {rov_actions_proto.IMoveClawAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.MoveClawAction} MoveClawAction instance\n         */\n        MoveClawAction.create = function create(properties) {\n            return new MoveClawAction(properties);\n        };\n\n        /**\n         * Encodes the specified MoveClawAction message. Does not implicitly {@link rov_actions_proto.MoveClawAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {rov_actions_proto.IMoveClawAction} message MoveClawAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveClawAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.Value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MoveClawAction message, length delimited. Does not implicitly {@link rov_actions_proto.MoveClawAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {rov_actions_proto.IMoveClawAction} message MoveClawAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MoveClawAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MoveClawAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MoveClawAction} MoveClawAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveClawAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MoveClawAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Value = reader.float();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MoveClawAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MoveClawAction} MoveClawAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MoveClawAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MoveClawAction message.\n         * @function verify\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MoveClawAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                if (typeof message.Value !== \"number\")\n                    return \"Value: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MoveClawAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MoveClawAction} MoveClawAction\n         */\n        MoveClawAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MoveClawAction)\n                return object;\n            let message = new $root.rov_actions_proto.MoveClawAction();\n            if (object.Value != null)\n                message.Value = Number(object.Value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MoveClawAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {rov_actions_proto.MoveClawAction} message MoveClawAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MoveClawAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Value = 0;\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                object.Value = options.json && !isFinite(message.Value) ? String(message.Value) : message.Value;\n            return object;\n        };\n\n        /**\n         * Converts this MoveClawAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MoveClawAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MoveClawAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MoveClawAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MoveClawAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MoveClawAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MoveClawAction\";\n        };\n\n        return MoveClawAction;\n    })();\n\n    rov_actions_proto.SimplePeerSignalAction = (function() {\n\n        /**\n         * Properties of a SimplePeerSignalAction.\n         * @memberof rov_actions_proto\n         * @interface ISimplePeerSignalAction\n         * @property {string|null} [Message] SimplePeerSignalAction Message\n         */\n\n        /**\n         * Constructs a new SimplePeerSignalAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplePeerSignalAction.\n         * @implements ISimplePeerSignalAction\n         * @constructor\n         * @param {rov_actions_proto.ISimplePeerSignalAction=} [properties] Properties to set\n         */\n        function SimplePeerSignalAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplePeerSignalAction Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @instance\n         */\n        SimplePeerSignalAction.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplePeerSignalAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplePeerSignalAction} SimplePeerSignalAction instance\n         */\n        SimplePeerSignalAction.create = function create(properties) {\n            return new SimplePeerSignalAction(properties);\n        };\n\n        /**\n         * Encodes the specified SimplePeerSignalAction message. Does not implicitly {@link rov_actions_proto.SimplePeerSignalAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalAction} message SimplePeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerSignalAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplePeerSignalAction message, length delimited. Does not implicitly {@link rov_actions_proto.SimplePeerSignalAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalAction} message SimplePeerSignalAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerSignalAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplePeerSignalAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplePeerSignalAction} SimplePeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerSignalAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplePeerSignalAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplePeerSignalAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplePeerSignalAction} SimplePeerSignalAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerSignalAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplePeerSignalAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplePeerSignalAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplePeerSignalAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplePeerSignalAction} SimplePeerSignalAction\n         */\n        SimplePeerSignalAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplePeerSignalAction)\n                return object;\n            let message = new $root.rov_actions_proto.SimplePeerSignalAction();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplePeerSignalAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {rov_actions_proto.SimplePeerSignalAction} message SimplePeerSignalAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplePeerSignalAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplePeerSignalAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplePeerSignalAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplePeerSignalAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplePeerSignalAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplePeerSignalAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplePeerSignalAction\";\n        };\n\n        return SimplePeerSignalAction;\n    })();\n\n    rov_actions_proto.DisarmAction = (function() {\n\n        /**\n         * Properties of a DisarmAction.\n         * @memberof rov_actions_proto\n         * @interface IDisarmAction\n         */\n\n        /**\n         * Constructs a new DisarmAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DisarmAction.\n         * @implements IDisarmAction\n         * @constructor\n         * @param {rov_actions_proto.IDisarmAction=} [properties] Properties to set\n         */\n        function DisarmAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new DisarmAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction instance\n         */\n        DisarmAction.create = function create(properties) {\n            return new DisarmAction(properties);\n        };\n\n        /**\n         * Encodes the specified DisarmAction message. Does not implicitly {@link rov_actions_proto.DisarmAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction} message DisarmAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisarmAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DisarmAction message, length delimited. Does not implicitly {@link rov_actions_proto.DisarmAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.IDisarmAction} message DisarmAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DisarmAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DisarmAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisarmAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DisarmAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DisarmAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DisarmAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DisarmAction message.\n         * @function verify\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DisarmAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DisarmAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DisarmAction} DisarmAction\n         */\n        DisarmAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DisarmAction)\n                return object;\n            return new $root.rov_actions_proto.DisarmAction();\n        };\n\n        /**\n         * Creates a plain object from a DisarmAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {rov_actions_proto.DisarmAction} message DisarmAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DisarmAction.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this DisarmAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DisarmAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DisarmAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DisarmAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DisarmAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DisarmAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DisarmAction\";\n        };\n\n        return DisarmAction;\n    })();\n\n    rov_actions_proto.SetAutopilotModeAction = (function() {\n\n        /**\n         * Properties of a SetAutopilotModeAction.\n         * @memberof rov_actions_proto\n         * @interface ISetAutopilotModeAction\n         * @property {number|null} [mode] SetAutopilotModeAction mode\n         */\n\n        /**\n         * Constructs a new SetAutopilotModeAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SetAutopilotModeAction.\n         * @implements ISetAutopilotModeAction\n         * @constructor\n         * @param {rov_actions_proto.ISetAutopilotModeAction=} [properties] Properties to set\n         */\n        function SetAutopilotModeAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SetAutopilotModeAction mode.\n         * @member {number} mode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @instance\n         */\n        SetAutopilotModeAction.prototype.mode = 0;\n\n        /**\n         * Creates a new SetAutopilotModeAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction instance\n         */\n        SetAutopilotModeAction.create = function create(properties) {\n            return new SetAutopilotModeAction(properties);\n        };\n\n        /**\n         * Encodes the specified SetAutopilotModeAction message. Does not implicitly {@link rov_actions_proto.SetAutopilotModeAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction} message SetAutopilotModeAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetAutopilotModeAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.mode != null && Object.hasOwnProperty.call(message, \"mode\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mode);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SetAutopilotModeAction message, length delimited. Does not implicitly {@link rov_actions_proto.SetAutopilotModeAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.ISetAutopilotModeAction} message SetAutopilotModeAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetAutopilotModeAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SetAutopilotModeAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetAutopilotModeAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SetAutopilotModeAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.mode = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SetAutopilotModeAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetAutopilotModeAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SetAutopilotModeAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SetAutopilotModeAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                if (!$util.isInteger(message.mode))\n                    return \"mode: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SetAutopilotModeAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SetAutopilotModeAction} SetAutopilotModeAction\n         */\n        SetAutopilotModeAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SetAutopilotModeAction)\n                return object;\n            let message = new $root.rov_actions_proto.SetAutopilotModeAction();\n            if (object.mode != null)\n                message.mode = object.mode | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SetAutopilotModeAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {rov_actions_proto.SetAutopilotModeAction} message SetAutopilotModeAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SetAutopilotModeAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.mode = 0;\n            if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                object.mode = message.mode;\n            return object;\n        };\n\n        /**\n         * Converts this SetAutopilotModeAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SetAutopilotModeAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SetAutopilotModeAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SetAutopilotModeAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SetAutopilotModeAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SetAutopilotModeAction\";\n        };\n\n        return SetAutopilotModeAction;\n    })();\n\n    rov_actions_proto.SetLivestreamingEnabledAction = (function() {\n\n        /**\n         * Properties of a SetLivestreamingEnabledAction.\n         * @memberof rov_actions_proto\n         * @interface ISetLivestreamingEnabledAction\n         * @property {boolean|null} [Enabled] SetLivestreamingEnabledAction Enabled\n         */\n\n        /**\n         * Constructs a new SetLivestreamingEnabledAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SetLivestreamingEnabledAction.\n         * @implements ISetLivestreamingEnabledAction\n         * @constructor\n         * @param {rov_actions_proto.ISetLivestreamingEnabledAction=} [properties] Properties to set\n         */\n        function SetLivestreamingEnabledAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SetLivestreamingEnabledAction Enabled.\n         * @member {boolean} Enabled\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @instance\n         */\n        SetLivestreamingEnabledAction.prototype.Enabled = false;\n\n        /**\n         * Creates a new SetLivestreamingEnabledAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {rov_actions_proto.ISetLivestreamingEnabledAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.SetLivestreamingEnabledAction} SetLivestreamingEnabledAction instance\n         */\n        SetLivestreamingEnabledAction.create = function create(properties) {\n            return new SetLivestreamingEnabledAction(properties);\n        };\n\n        /**\n         * Encodes the specified SetLivestreamingEnabledAction message. Does not implicitly {@link rov_actions_proto.SetLivestreamingEnabledAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {rov_actions_proto.ISetLivestreamingEnabledAction} message SetLivestreamingEnabledAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetLivestreamingEnabledAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Enabled != null && Object.hasOwnProperty.call(message, \"Enabled\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.Enabled);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SetLivestreamingEnabledAction message, length delimited. Does not implicitly {@link rov_actions_proto.SetLivestreamingEnabledAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {rov_actions_proto.ISetLivestreamingEnabledAction} message SetLivestreamingEnabledAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SetLivestreamingEnabledAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SetLivestreamingEnabledAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SetLivestreamingEnabledAction} SetLivestreamingEnabledAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetLivestreamingEnabledAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SetLivestreamingEnabledAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Enabled = reader.bool();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SetLivestreamingEnabledAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SetLivestreamingEnabledAction} SetLivestreamingEnabledAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SetLivestreamingEnabledAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SetLivestreamingEnabledAction message.\n         * @function verify\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SetLivestreamingEnabledAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                if (typeof message.Enabled !== \"boolean\")\n                    return \"Enabled: boolean expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SetLivestreamingEnabledAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SetLivestreamingEnabledAction} SetLivestreamingEnabledAction\n         */\n        SetLivestreamingEnabledAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SetLivestreamingEnabledAction)\n                return object;\n            let message = new $root.rov_actions_proto.SetLivestreamingEnabledAction();\n            if (object.Enabled != null)\n                message.Enabled = Boolean(object.Enabled);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SetLivestreamingEnabledAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {rov_actions_proto.SetLivestreamingEnabledAction} message SetLivestreamingEnabledAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SetLivestreamingEnabledAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Enabled = false;\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                object.Enabled = message.Enabled;\n            return object;\n        };\n\n        /**\n         * Converts this SetLivestreamingEnabledAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SetLivestreamingEnabledAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SetLivestreamingEnabledAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SetLivestreamingEnabledAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SetLivestreamingEnabledAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SetLivestreamingEnabledAction\";\n        };\n\n        return SetLivestreamingEnabledAction;\n    })();\n\n    rov_actions_proto.ActionBackendMetadata = (function() {\n\n        /**\n         * Properties of an ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IActionBackendMetadata\n         * @property {string|null} [FromUserId] ActionBackendMetadata FromUserId\n         * @property {rov_actions_proto.InternalWebpageEvent|null} [InternalWebpageEvt] ActionBackendMetadata InternalWebpageEvt\n         */\n\n        /**\n         * Constructs a new ActionBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ActionBackendMetadata.\n         * @implements IActionBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         */\n        function ActionBackendMetadata(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ActionBackendMetadata FromUserId.\n         * @member {string} FromUserId\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.FromUserId = \"\";\n\n        /**\n         * ActionBackendMetadata InternalWebpageEvt.\n         * @member {rov_actions_proto.InternalWebpageEvent} InternalWebpageEvt\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         */\n        ActionBackendMetadata.prototype.InternalWebpageEvt = 0;\n\n        /**\n         * Creates a new ActionBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata instance\n         */\n        ActionBackendMetadata.create = function create(properties) {\n            return new ActionBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.FromUserId != null && Object.hasOwnProperty.call(message, \"FromUserId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.FromUserId);\n            if (message.InternalWebpageEvt != null && Object.hasOwnProperty.call(message, \"InternalWebpageEvt\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.InternalWebpageEvt);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ActionBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ActionBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IActionBackendMetadata} message ActionBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ActionBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ActionBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.FromUserId = reader.string();\n                        break;\n                    }\n                case 2: {\n                        message.InternalWebpageEvt = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ActionBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ActionBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ActionBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ActionBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.FromUserId != null && message.hasOwnProperty(\"FromUserId\"))\n                if (!$util.isString(message.FromUserId))\n                    return \"FromUserId: string expected\";\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                switch (message.InternalWebpageEvt) {\n                default:\n                    return \"InternalWebpageEvt: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates an ActionBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ActionBackendMetadata} ActionBackendMetadata\n         */\n        ActionBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ActionBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ActionBackendMetadata();\n            if (object.FromUserId != null)\n                message.FromUserId = String(object.FromUserId);\n            switch (object.InternalWebpageEvt) {\n            default:\n                if (typeof object.InternalWebpageEvt === \"number\") {\n                    message.InternalWebpageEvt = object.InternalWebpageEvt;\n                    break;\n                }\n                break;\n            case \"Nothing\":\n            case 0:\n                message.InternalWebpageEvt = 0;\n                break;\n            case \"RovConnected\":\n            case 1:\n                message.InternalWebpageEvt = 1;\n                break;\n            case \"RovDisconnected\":\n            case 2:\n                message.InternalWebpageEvt = 2;\n                break;\n            case \"UserConnected\":\n            case 3:\n                message.InternalWebpageEvt = 3;\n                break;\n            case \"UserDisconnected\":\n            case 4:\n                message.InternalWebpageEvt = 4;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ActionBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ActionBackendMetadata} message ActionBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ActionBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.FromUserId = \"\";\n                object.InternalWebpageEvt = options.enums === String ? \"Nothing\" : 0;\n            }\n            if (message.FromUserId != null && message.hasOwnProperty(\"FromUserId\"))\n                object.FromUserId = message.FromUserId;\n            if (message.InternalWebpageEvt != null && message.hasOwnProperty(\"InternalWebpageEvt\"))\n                object.InternalWebpageEvt = options.enums === String ? $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] === undefined ? message.InternalWebpageEvt : $root.rov_actions_proto.InternalWebpageEvent[message.InternalWebpageEvt] : message.InternalWebpageEvt;\n            return object;\n        };\n\n        /**\n         * Converts this ActionBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ActionBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ActionBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ActionBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ActionBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ActionBackendMetadata\";\n        };\n\n        return ActionBackendMetadata;\n    })();\n\n    rov_actions_proto.RovAction = (function() {\n\n        /**\n         * Properties of a RovAction.\n         * @memberof rov_actions_proto\n         * @interface IRovAction\n         * @property {rov_actions_proto.IActionBackendMetadata|null} [BackendMetadata] RovAction BackendMetadata\n         * @property {number|null} [ExchangeId] RovAction ExchangeId\n         * @property {rov_actions_proto.IPingAction|null} [Ping] RovAction Ping\n         * @property {rov_actions_proto.IPasswordAttemptAction|null} [PasswordAttempt] RovAction PasswordAttempt\n         * @property {rov_actions_proto.IAuthTokenAttemptAction|null} [AuthTokenAttempt] RovAction AuthTokenAttempt\n         * @property {rov_actions_proto.ITakeControlAction|null} [TakeControl] RovAction TakeControl\n         * @property {rov_actions_proto.IMoveAction|null} [Move] RovAction Move\n         * @property {rov_actions_proto.ITakePhotoAction|null} [TakePhoto] RovAction TakePhoto\n         * @property {rov_actions_proto.IStartVideoRecAction|null} [StartVideoRec] RovAction StartVideoRec\n         * @property {rov_actions_proto.IStopVideoRecAction|null} [StopVideoRec] RovAction StopVideoRec\n         * @property {rov_actions_proto.IToggleLightsAction|null} [ToggleLights] RovAction ToggleLights\n         * @property {rov_actions_proto.IShutdownRovAction|null} [ShutdownRov] RovAction ShutdownRov\n         * @property {rov_actions_proto.IRebootRovAction|null} [RebootRov] RovAction RebootRov\n         * @property {rov_actions_proto.IEnableWifiAction|null} [EnableWifi] RovAction EnableWifi\n         * @property {rov_actions_proto.IDisableWifiAction|null} [DisableWifi] RovAction DisableWifi\n         * @property {rov_actions_proto.IRovStatusReportAction|null} [RovStatusReport] RovAction RovStatusReport\n         * @property {rov_actions_proto.IRestartRovServicesAction|null} [RestartRovServices] RovAction RestartRovServices\n         * @property {rov_actions_proto.ISendRovLogsAction|null} [SendRovLogs] RovAction SendRovLogs\n         * @property {rov_actions_proto.IRefreshAllSensorsAction|null} [RefreshAllSensors] RovAction RefreshAllSensors\n         * @property {rov_actions_proto.IMoveClawAction|null} [MoveClaw] RovAction MoveClaw\n         * @property {rov_actions_proto.ISimplePeerSignalAction|null} [SimplePeerSignal] RovAction SimplePeerSignal\n         * @property {rov_actions_proto.IDisarmAction|null} [Disarm] RovAction Disarm\n         * @property {rov_actions_proto.ISetAutopilotModeAction|null} [SetAutopilotMode] RovAction SetAutopilotMode\n         * @property {rov_actions_proto.ISetLivekitVideoOptionsAction|null} [SetLivekitVideoOptions] RovAction SetLivekitVideoOptions\n         * @property {rov_actions_proto.ISetSimplePeerVideoOptionsAction|null} [SetSimplePeerVideoOptions] RovAction SetSimplePeerVideoOptions\n         * @property {rov_actions_proto.ISetLivestreamingEnabledAction|null} [SetLivestreamingEnabled] RovAction SetLivestreamingEnabled\n         */\n\n        /**\n         * Constructs a new RovAction.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovAction.\n         * @implements IRovAction\n         * @constructor\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         */\n        function RovAction(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovAction BackendMetadata.\n         * @member {rov_actions_proto.IActionBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.BackendMetadata = null;\n\n        /**\n         * RovAction ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ExchangeId = 0;\n\n        /**\n         * RovAction Ping.\n         * @member {rov_actions_proto.IPingAction|null|undefined} Ping\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Ping = null;\n\n        /**\n         * RovAction PasswordAttempt.\n         * @member {rov_actions_proto.IPasswordAttemptAction|null|undefined} PasswordAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.PasswordAttempt = null;\n\n        /**\n         * RovAction AuthTokenAttempt.\n         * @member {rov_actions_proto.IAuthTokenAttemptAction|null|undefined} AuthTokenAttempt\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.AuthTokenAttempt = null;\n\n        /**\n         * RovAction TakeControl.\n         * @member {rov_actions_proto.ITakeControlAction|null|undefined} TakeControl\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakeControl = null;\n\n        /**\n         * RovAction Move.\n         * @member {rov_actions_proto.IMoveAction|null|undefined} Move\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Move = null;\n\n        /**\n         * RovAction TakePhoto.\n         * @member {rov_actions_proto.ITakePhotoAction|null|undefined} TakePhoto\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.TakePhoto = null;\n\n        /**\n         * RovAction StartVideoRec.\n         * @member {rov_actions_proto.IStartVideoRecAction|null|undefined} StartVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StartVideoRec = null;\n\n        /**\n         * RovAction StopVideoRec.\n         * @member {rov_actions_proto.IStopVideoRecAction|null|undefined} StopVideoRec\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.StopVideoRec = null;\n\n        /**\n         * RovAction ToggleLights.\n         * @member {rov_actions_proto.IToggleLightsAction|null|undefined} ToggleLights\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ToggleLights = null;\n\n        /**\n         * RovAction ShutdownRov.\n         * @member {rov_actions_proto.IShutdownRovAction|null|undefined} ShutdownRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.ShutdownRov = null;\n\n        /**\n         * RovAction RebootRov.\n         * @member {rov_actions_proto.IRebootRovAction|null|undefined} RebootRov\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RebootRov = null;\n\n        /**\n         * RovAction EnableWifi.\n         * @member {rov_actions_proto.IEnableWifiAction|null|undefined} EnableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.EnableWifi = null;\n\n        /**\n         * RovAction DisableWifi.\n         * @member {rov_actions_proto.IDisableWifiAction|null|undefined} DisableWifi\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.DisableWifi = null;\n\n        /**\n         * RovAction RovStatusReport.\n         * @member {rov_actions_proto.IRovStatusReportAction|null|undefined} RovStatusReport\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RovStatusReport = null;\n\n        /**\n         * RovAction RestartRovServices.\n         * @member {rov_actions_proto.IRestartRovServicesAction|null|undefined} RestartRovServices\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RestartRovServices = null;\n\n        /**\n         * RovAction SendRovLogs.\n         * @member {rov_actions_proto.ISendRovLogsAction|null|undefined} SendRovLogs\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SendRovLogs = null;\n\n        /**\n         * RovAction RefreshAllSensors.\n         * @member {rov_actions_proto.IRefreshAllSensorsAction|null|undefined} RefreshAllSensors\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.RefreshAllSensors = null;\n\n        /**\n         * RovAction MoveClaw.\n         * @member {rov_actions_proto.IMoveClawAction|null|undefined} MoveClaw\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.MoveClaw = null;\n\n        /**\n         * RovAction SimplePeerSignal.\n         * @member {rov_actions_proto.ISimplePeerSignalAction|null|undefined} SimplePeerSignal\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SimplePeerSignal = null;\n\n        /**\n         * RovAction Disarm.\n         * @member {rov_actions_proto.IDisarmAction|null|undefined} Disarm\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.Disarm = null;\n\n        /**\n         * RovAction SetAutopilotMode.\n         * @member {rov_actions_proto.ISetAutopilotModeAction|null|undefined} SetAutopilotMode\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SetAutopilotMode = null;\n\n        /**\n         * RovAction SetLivekitVideoOptions.\n         * @member {rov_actions_proto.ISetLivekitVideoOptionsAction|null|undefined} SetLivekitVideoOptions\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SetLivekitVideoOptions = null;\n\n        /**\n         * RovAction SetSimplePeerVideoOptions.\n         * @member {rov_actions_proto.ISetSimplePeerVideoOptionsAction|null|undefined} SetSimplePeerVideoOptions\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SetSimplePeerVideoOptions = null;\n\n        /**\n         * RovAction SetLivestreamingEnabled.\n         * @member {rov_actions_proto.ISetLivestreamingEnabledAction|null|undefined} SetLivestreamingEnabled\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        RovAction.prototype.SetLivestreamingEnabled = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovAction Body.\n         * @member {\"Ping\"|\"PasswordAttempt\"|\"AuthTokenAttempt\"|\"TakeControl\"|\"Move\"|\"TakePhoto\"|\"StartVideoRec\"|\"StopVideoRec\"|\"ToggleLights\"|\"ShutdownRov\"|\"RebootRov\"|\"EnableWifi\"|\"DisableWifi\"|\"RovStatusReport\"|\"RestartRovServices\"|\"SendRovLogs\"|\"RefreshAllSensors\"|\"MoveClaw\"|\"SimplePeerSignal\"|\"Disarm\"|\"SetAutopilotMode\"|\"SetLivekitVideoOptions\"|\"SetSimplePeerVideoOptions\"|\"SetLivestreamingEnabled\"|undefined} Body\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         */\n        Object.defineProperty(RovAction.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Ping\", \"PasswordAttempt\", \"AuthTokenAttempt\", \"TakeControl\", \"Move\", \"TakePhoto\", \"StartVideoRec\", \"StopVideoRec\", \"ToggleLights\", \"ShutdownRov\", \"RebootRov\", \"EnableWifi\", \"DisableWifi\", \"RovStatusReport\", \"RestartRovServices\", \"SendRovLogs\", \"RefreshAllSensors\", \"MoveClaw\", \"SimplePeerSignal\", \"Disarm\", \"SetAutopilotMode\", \"SetLivekitVideoOptions\", \"SetSimplePeerVideoOptions\", \"SetLivestreamingEnabled\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovAction instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovAction} RovAction instance\n         */\n        RovAction.create = function create(properties) {\n            return new RovAction(properties);\n        };\n\n        /**\n         * Encodes the specified RovAction message. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ActionBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Ping != null && Object.hasOwnProperty.call(message, \"Ping\"))\n                $root.rov_actions_proto.PingAction.encode(message.Ping, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.PasswordAttempt != null && Object.hasOwnProperty.call(message, \"PasswordAttempt\"))\n                $root.rov_actions_proto.PasswordAttemptAction.encode(message.PasswordAttempt, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.AuthTokenAttempt != null && Object.hasOwnProperty.call(message, \"AuthTokenAttempt\"))\n                $root.rov_actions_proto.AuthTokenAttemptAction.encode(message.AuthTokenAttempt, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.TakeControl != null && Object.hasOwnProperty.call(message, \"TakeControl\"))\n                $root.rov_actions_proto.TakeControlAction.encode(message.TakeControl, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.Move != null && Object.hasOwnProperty.call(message, \"Move\"))\n                $root.rov_actions_proto.MoveAction.encode(message.Move, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.TakePhoto != null && Object.hasOwnProperty.call(message, \"TakePhoto\"))\n                $root.rov_actions_proto.TakePhotoAction.encode(message.TakePhoto, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.StartVideoRec != null && Object.hasOwnProperty.call(message, \"StartVideoRec\"))\n                $root.rov_actions_proto.StartVideoRecAction.encode(message.StartVideoRec, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.StopVideoRec != null && Object.hasOwnProperty.call(message, \"StopVideoRec\"))\n                $root.rov_actions_proto.StopVideoRecAction.encode(message.StopVideoRec, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.ToggleLights != null && Object.hasOwnProperty.call(message, \"ToggleLights\"))\n                $root.rov_actions_proto.ToggleLightsAction.encode(message.ToggleLights, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.ShutdownRov != null && Object.hasOwnProperty.call(message, \"ShutdownRov\"))\n                $root.rov_actions_proto.ShutdownRovAction.encode(message.ShutdownRov, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.RebootRov != null && Object.hasOwnProperty.call(message, \"RebootRov\"))\n                $root.rov_actions_proto.RebootRovAction.encode(message.RebootRov, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.EnableWifi != null && Object.hasOwnProperty.call(message, \"EnableWifi\"))\n                $root.rov_actions_proto.EnableWifiAction.encode(message.EnableWifi, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.DisableWifi != null && Object.hasOwnProperty.call(message, \"DisableWifi\"))\n                $root.rov_actions_proto.DisableWifiAction.encode(message.DisableWifi, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.RovStatusReport != null && Object.hasOwnProperty.call(message, \"RovStatusReport\"))\n                $root.rov_actions_proto.RovStatusReportAction.encode(message.RovStatusReport, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.RestartRovServices != null && Object.hasOwnProperty.call(message, \"RestartRovServices\"))\n                $root.rov_actions_proto.RestartRovServicesAction.encode(message.RestartRovServices, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            if (message.SendRovLogs != null && Object.hasOwnProperty.call(message, \"SendRovLogs\"))\n                $root.rov_actions_proto.SendRovLogsAction.encode(message.SendRovLogs, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n            if (message.RefreshAllSensors != null && Object.hasOwnProperty.call(message, \"RefreshAllSensors\"))\n                $root.rov_actions_proto.RefreshAllSensorsAction.encode(message.RefreshAllSensors, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n            if (message.MoveClaw != null && Object.hasOwnProperty.call(message, \"MoveClaw\"))\n                $root.rov_actions_proto.MoveClawAction.encode(message.MoveClaw, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n            if (message.SimplePeerSignal != null && Object.hasOwnProperty.call(message, \"SimplePeerSignal\"))\n                $root.rov_actions_proto.SimplePeerSignalAction.encode(message.SimplePeerSignal, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n            if (message.Disarm != null && Object.hasOwnProperty.call(message, \"Disarm\"))\n                $root.rov_actions_proto.DisarmAction.encode(message.Disarm, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n            if (message.SetAutopilotMode != null && Object.hasOwnProperty.call(message, \"SetAutopilotMode\"))\n                $root.rov_actions_proto.SetAutopilotModeAction.encode(message.SetAutopilotMode, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();\n            if (message.SetLivekitVideoOptions != null && Object.hasOwnProperty.call(message, \"SetLivekitVideoOptions\"))\n                $root.rov_actions_proto.SetLivekitVideoOptionsAction.encode(message.SetLivekitVideoOptions, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n            if (message.SetSimplePeerVideoOptions != null && Object.hasOwnProperty.call(message, \"SetSimplePeerVideoOptions\"))\n                $root.rov_actions_proto.SetSimplePeerVideoOptionsAction.encode(message.SetSimplePeerVideoOptions, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n            if (message.SetLivestreamingEnabled != null && Object.hasOwnProperty.call(message, \"SetLivestreamingEnabled\"))\n                $root.rov_actions_proto.SetLivestreamingEnabledAction.encode(message.SetLivestreamingEnabled, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovAction message, length delimited. Does not implicitly {@link rov_actions_proto.RovAction.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.IRovAction} message RovAction message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovAction.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovAction();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Ping = $root.rov_actions_proto.PingAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.TakeControl = $root.rov_actions_proto.TakeControlAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.Move = $root.rov_actions_proto.MoveAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 11: {\n                        message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 12: {\n                        message.ToggleLights = $root.rov_actions_proto.ToggleLightsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.RebootRov = $root.rov_actions_proto.RebootRovAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 19: {\n                        message.SendRovLogs = $root.rov_actions_proto.SendRovLogsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 20: {\n                        message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 21: {\n                        message.MoveClaw = $root.rov_actions_proto.MoveClawAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 22: {\n                        message.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 23: {\n                        message.Disarm = $root.rov_actions_proto.DisarmAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 24: {\n                        message.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 25: {\n                        message.SetLivekitVideoOptions = $root.rov_actions_proto.SetLivekitVideoOptionsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 26: {\n                        message.SetSimplePeerVideoOptions = $root.rov_actions_proto.SetSimplePeerVideoOptionsAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 27: {\n                        message.SetLivestreamingEnabled = $root.rov_actions_proto.SetLivestreamingEnabledAction.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovAction message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovAction} RovAction\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovAction.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovAction message.\n         * @function verify\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovAction.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ActionBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PingAction.verify(message.Ping);\n                    if (error)\n                        return \"Ping.\" + error;\n                }\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAttemptAction.verify(message.PasswordAttempt);\n                    if (error)\n                        return \"PasswordAttempt.\" + error;\n                }\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.AuthTokenAttemptAction.verify(message.AuthTokenAttempt);\n                    if (error)\n                        return \"AuthTokenAttempt.\" + error;\n                }\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakeControlAction.verify(message.TakeControl);\n                    if (error)\n                        return \"TakeControl.\" + error;\n                }\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MoveAction.verify(message.Move);\n                    if (error)\n                        return \"Move.\" + error;\n                }\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.TakePhotoAction.verify(message.TakePhoto);\n                    if (error)\n                        return \"TakePhoto.\" + error;\n                }\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StartVideoRecAction.verify(message.StartVideoRec);\n                    if (error)\n                        return \"StartVideoRec.\" + error;\n                }\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.StopVideoRecAction.verify(message.StopVideoRec);\n                    if (error)\n                        return \"StopVideoRec.\" + error;\n                }\n            }\n            if (message.ToggleLights != null && message.hasOwnProperty(\"ToggleLights\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ToggleLightsAction.verify(message.ToggleLights);\n                    if (error)\n                        return \"ToggleLights.\" + error;\n                }\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ShutdownRovAction.verify(message.ShutdownRov);\n                    if (error)\n                        return \"ShutdownRov.\" + error;\n                }\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RebootRovAction.verify(message.RebootRov);\n                    if (error)\n                        return \"RebootRov.\" + error;\n                }\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.EnableWifiAction.verify(message.EnableWifi);\n                    if (error)\n                        return \"EnableWifi.\" + error;\n                }\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DisableWifiAction.verify(message.DisableWifi);\n                    if (error)\n                        return \"DisableWifi.\" + error;\n                }\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RovStatusReportAction.verify(message.RovStatusReport);\n                    if (error)\n                        return \"RovStatusReport.\" + error;\n                }\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RestartRovServicesAction.verify(message.RestartRovServices);\n                    if (error)\n                        return \"RestartRovServices.\" + error;\n                }\n            }\n            if (message.SendRovLogs != null && message.hasOwnProperty(\"SendRovLogs\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SendRovLogsAction.verify(message.SendRovLogs);\n                    if (error)\n                        return \"SendRovLogs.\" + error;\n                }\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.RefreshAllSensorsAction.verify(message.RefreshAllSensors);\n                    if (error)\n                        return \"RefreshAllSensors.\" + error;\n                }\n            }\n            if (message.MoveClaw != null && message.hasOwnProperty(\"MoveClaw\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MoveClawAction.verify(message.MoveClaw);\n                    if (error)\n                        return \"MoveClaw.\" + error;\n                }\n            }\n            if (message.SimplePeerSignal != null && message.hasOwnProperty(\"SimplePeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplePeerSignalAction.verify(message.SimplePeerSignal);\n                    if (error)\n                        return \"SimplePeerSignal.\" + error;\n                }\n            }\n            if (message.Disarm != null && message.hasOwnProperty(\"Disarm\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DisarmAction.verify(message.Disarm);\n                    if (error)\n                        return \"Disarm.\" + error;\n                }\n            }\n            if (message.SetAutopilotMode != null && message.hasOwnProperty(\"SetAutopilotMode\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SetAutopilotModeAction.verify(message.SetAutopilotMode);\n                    if (error)\n                        return \"SetAutopilotMode.\" + error;\n                }\n            }\n            if (message.SetLivekitVideoOptions != null && message.hasOwnProperty(\"SetLivekitVideoOptions\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SetLivekitVideoOptionsAction.verify(message.SetLivekitVideoOptions);\n                    if (error)\n                        return \"SetLivekitVideoOptions.\" + error;\n                }\n            }\n            if (message.SetSimplePeerVideoOptions != null && message.hasOwnProperty(\"SetSimplePeerVideoOptions\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SetSimplePeerVideoOptionsAction.verify(message.SetSimplePeerVideoOptions);\n                    if (error)\n                        return \"SetSimplePeerVideoOptions.\" + error;\n                }\n            }\n            if (message.SetLivestreamingEnabled != null && message.hasOwnProperty(\"SetLivestreamingEnabled\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SetLivestreamingEnabledAction.verify(message.SetLivestreamingEnabled);\n                    if (error)\n                        return \"SetLivestreamingEnabled.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovAction message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovAction} RovAction\n         */\n        RovAction.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovAction)\n                return object;\n            let message = new $root.rov_actions_proto.RovAction();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Ping != null) {\n                if (typeof object.Ping !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Ping: object expected\");\n                message.Ping = $root.rov_actions_proto.PingAction.fromObject(object.Ping);\n            }\n            if (object.PasswordAttempt != null) {\n                if (typeof object.PasswordAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.PasswordAttempt: object expected\");\n                message.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.fromObject(object.PasswordAttempt);\n            }\n            if (object.AuthTokenAttempt != null) {\n                if (typeof object.AuthTokenAttempt !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.AuthTokenAttempt: object expected\");\n                message.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.fromObject(object.AuthTokenAttempt);\n            }\n            if (object.TakeControl != null) {\n                if (typeof object.TakeControl !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakeControl: object expected\");\n                message.TakeControl = $root.rov_actions_proto.TakeControlAction.fromObject(object.TakeControl);\n            }\n            if (object.Move != null) {\n                if (typeof object.Move !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Move: object expected\");\n                message.Move = $root.rov_actions_proto.MoveAction.fromObject(object.Move);\n            }\n            if (object.TakePhoto != null) {\n                if (typeof object.TakePhoto !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.TakePhoto: object expected\");\n                message.TakePhoto = $root.rov_actions_proto.TakePhotoAction.fromObject(object.TakePhoto);\n            }\n            if (object.StartVideoRec != null) {\n                if (typeof object.StartVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StartVideoRec: object expected\");\n                message.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.fromObject(object.StartVideoRec);\n            }\n            if (object.StopVideoRec != null) {\n                if (typeof object.StopVideoRec !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.StopVideoRec: object expected\");\n                message.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.fromObject(object.StopVideoRec);\n            }\n            if (object.ToggleLights != null) {\n                if (typeof object.ToggleLights !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ToggleLights: object expected\");\n                message.ToggleLights = $root.rov_actions_proto.ToggleLightsAction.fromObject(object.ToggleLights);\n            }\n            if (object.ShutdownRov != null) {\n                if (typeof object.ShutdownRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.ShutdownRov: object expected\");\n                message.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.fromObject(object.ShutdownRov);\n            }\n            if (object.RebootRov != null) {\n                if (typeof object.RebootRov !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RebootRov: object expected\");\n                message.RebootRov = $root.rov_actions_proto.RebootRovAction.fromObject(object.RebootRov);\n            }\n            if (object.EnableWifi != null) {\n                if (typeof object.EnableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.EnableWifi: object expected\");\n                message.EnableWifi = $root.rov_actions_proto.EnableWifiAction.fromObject(object.EnableWifi);\n            }\n            if (object.DisableWifi != null) {\n                if (typeof object.DisableWifi !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.DisableWifi: object expected\");\n                message.DisableWifi = $root.rov_actions_proto.DisableWifiAction.fromObject(object.DisableWifi);\n            }\n            if (object.RovStatusReport != null) {\n                if (typeof object.RovStatusReport !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RovStatusReport: object expected\");\n                message.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.fromObject(object.RovStatusReport);\n            }\n            if (object.RestartRovServices != null) {\n                if (typeof object.RestartRovServices !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RestartRovServices: object expected\");\n                message.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.fromObject(object.RestartRovServices);\n            }\n            if (object.SendRovLogs != null) {\n                if (typeof object.SendRovLogs !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SendRovLogs: object expected\");\n                message.SendRovLogs = $root.rov_actions_proto.SendRovLogsAction.fromObject(object.SendRovLogs);\n            }\n            if (object.RefreshAllSensors != null) {\n                if (typeof object.RefreshAllSensors !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.RefreshAllSensors: object expected\");\n                message.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.fromObject(object.RefreshAllSensors);\n            }\n            if (object.MoveClaw != null) {\n                if (typeof object.MoveClaw !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.MoveClaw: object expected\");\n                message.MoveClaw = $root.rov_actions_proto.MoveClawAction.fromObject(object.MoveClaw);\n            }\n            if (object.SimplePeerSignal != null) {\n                if (typeof object.SimplePeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SimplePeerSignal: object expected\");\n                message.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalAction.fromObject(object.SimplePeerSignal);\n            }\n            if (object.Disarm != null) {\n                if (typeof object.Disarm !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.Disarm: object expected\");\n                message.Disarm = $root.rov_actions_proto.DisarmAction.fromObject(object.Disarm);\n            }\n            if (object.SetAutopilotMode != null) {\n                if (typeof object.SetAutopilotMode !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SetAutopilotMode: object expected\");\n                message.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.fromObject(object.SetAutopilotMode);\n            }\n            if (object.SetLivekitVideoOptions != null) {\n                if (typeof object.SetLivekitVideoOptions !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SetLivekitVideoOptions: object expected\");\n                message.SetLivekitVideoOptions = $root.rov_actions_proto.SetLivekitVideoOptionsAction.fromObject(object.SetLivekitVideoOptions);\n            }\n            if (object.SetSimplePeerVideoOptions != null) {\n                if (typeof object.SetSimplePeerVideoOptions !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SetSimplePeerVideoOptions: object expected\");\n                message.SetSimplePeerVideoOptions = $root.rov_actions_proto.SetSimplePeerVideoOptionsAction.fromObject(object.SetSimplePeerVideoOptions);\n            }\n            if (object.SetLivestreamingEnabled != null) {\n                if (typeof object.SetLivestreamingEnabled !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovAction.SetLivestreamingEnabled: object expected\");\n                message.SetLivestreamingEnabled = $root.rov_actions_proto.SetLivestreamingEnabledAction.fromObject(object.SetLivestreamingEnabled);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovAction message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {rov_actions_proto.RovAction} message RovAction\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovAction.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ActionBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Ping != null && message.hasOwnProperty(\"Ping\")) {\n                object.Ping = $root.rov_actions_proto.PingAction.toObject(message.Ping, options);\n                if (options.oneofs)\n                    object.Body = \"Ping\";\n            }\n            if (message.PasswordAttempt != null && message.hasOwnProperty(\"PasswordAttempt\")) {\n                object.PasswordAttempt = $root.rov_actions_proto.PasswordAttemptAction.toObject(message.PasswordAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAttempt\";\n            }\n            if (message.AuthTokenAttempt != null && message.hasOwnProperty(\"AuthTokenAttempt\")) {\n                object.AuthTokenAttempt = $root.rov_actions_proto.AuthTokenAttemptAction.toObject(message.AuthTokenAttempt, options);\n                if (options.oneofs)\n                    object.Body = \"AuthTokenAttempt\";\n            }\n            if (message.TakeControl != null && message.hasOwnProperty(\"TakeControl\")) {\n                object.TakeControl = $root.rov_actions_proto.TakeControlAction.toObject(message.TakeControl, options);\n                if (options.oneofs)\n                    object.Body = \"TakeControl\";\n            }\n            if (message.Move != null && message.hasOwnProperty(\"Move\")) {\n                object.Move = $root.rov_actions_proto.MoveAction.toObject(message.Move, options);\n                if (options.oneofs)\n                    object.Body = \"Move\";\n            }\n            if (message.TakePhoto != null && message.hasOwnProperty(\"TakePhoto\")) {\n                object.TakePhoto = $root.rov_actions_proto.TakePhotoAction.toObject(message.TakePhoto, options);\n                if (options.oneofs)\n                    object.Body = \"TakePhoto\";\n            }\n            if (message.StartVideoRec != null && message.hasOwnProperty(\"StartVideoRec\")) {\n                object.StartVideoRec = $root.rov_actions_proto.StartVideoRecAction.toObject(message.StartVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StartVideoRec\";\n            }\n            if (message.StopVideoRec != null && message.hasOwnProperty(\"StopVideoRec\")) {\n                object.StopVideoRec = $root.rov_actions_proto.StopVideoRecAction.toObject(message.StopVideoRec, options);\n                if (options.oneofs)\n                    object.Body = \"StopVideoRec\";\n            }\n            if (message.ToggleLights != null && message.hasOwnProperty(\"ToggleLights\")) {\n                object.ToggleLights = $root.rov_actions_proto.ToggleLightsAction.toObject(message.ToggleLights, options);\n                if (options.oneofs)\n                    object.Body = \"ToggleLights\";\n            }\n            if (message.ShutdownRov != null && message.hasOwnProperty(\"ShutdownRov\")) {\n                object.ShutdownRov = $root.rov_actions_proto.ShutdownRovAction.toObject(message.ShutdownRov, options);\n                if (options.oneofs)\n                    object.Body = \"ShutdownRov\";\n            }\n            if (message.RebootRov != null && message.hasOwnProperty(\"RebootRov\")) {\n                object.RebootRov = $root.rov_actions_proto.RebootRovAction.toObject(message.RebootRov, options);\n                if (options.oneofs)\n                    object.Body = \"RebootRov\";\n            }\n            if (message.EnableWifi != null && message.hasOwnProperty(\"EnableWifi\")) {\n                object.EnableWifi = $root.rov_actions_proto.EnableWifiAction.toObject(message.EnableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"EnableWifi\";\n            }\n            if (message.DisableWifi != null && message.hasOwnProperty(\"DisableWifi\")) {\n                object.DisableWifi = $root.rov_actions_proto.DisableWifiAction.toObject(message.DisableWifi, options);\n                if (options.oneofs)\n                    object.Body = \"DisableWifi\";\n            }\n            if (message.RovStatusReport != null && message.hasOwnProperty(\"RovStatusReport\")) {\n                object.RovStatusReport = $root.rov_actions_proto.RovStatusReportAction.toObject(message.RovStatusReport, options);\n                if (options.oneofs)\n                    object.Body = \"RovStatusReport\";\n            }\n            if (message.RestartRovServices != null && message.hasOwnProperty(\"RestartRovServices\")) {\n                object.RestartRovServices = $root.rov_actions_proto.RestartRovServicesAction.toObject(message.RestartRovServices, options);\n                if (options.oneofs)\n                    object.Body = \"RestartRovServices\";\n            }\n            if (message.SendRovLogs != null && message.hasOwnProperty(\"SendRovLogs\")) {\n                object.SendRovLogs = $root.rov_actions_proto.SendRovLogsAction.toObject(message.SendRovLogs, options);\n                if (options.oneofs)\n                    object.Body = \"SendRovLogs\";\n            }\n            if (message.RefreshAllSensors != null && message.hasOwnProperty(\"RefreshAllSensors\")) {\n                object.RefreshAllSensors = $root.rov_actions_proto.RefreshAllSensorsAction.toObject(message.RefreshAllSensors, options);\n                if (options.oneofs)\n                    object.Body = \"RefreshAllSensors\";\n            }\n            if (message.MoveClaw != null && message.hasOwnProperty(\"MoveClaw\")) {\n                object.MoveClaw = $root.rov_actions_proto.MoveClawAction.toObject(message.MoveClaw, options);\n                if (options.oneofs)\n                    object.Body = \"MoveClaw\";\n            }\n            if (message.SimplePeerSignal != null && message.hasOwnProperty(\"SimplePeerSignal\")) {\n                object.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalAction.toObject(message.SimplePeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplePeerSignal\";\n            }\n            if (message.Disarm != null && message.hasOwnProperty(\"Disarm\")) {\n                object.Disarm = $root.rov_actions_proto.DisarmAction.toObject(message.Disarm, options);\n                if (options.oneofs)\n                    object.Body = \"Disarm\";\n            }\n            if (message.SetAutopilotMode != null && message.hasOwnProperty(\"SetAutopilotMode\")) {\n                object.SetAutopilotMode = $root.rov_actions_proto.SetAutopilotModeAction.toObject(message.SetAutopilotMode, options);\n                if (options.oneofs)\n                    object.Body = \"SetAutopilotMode\";\n            }\n            if (message.SetLivekitVideoOptions != null && message.hasOwnProperty(\"SetLivekitVideoOptions\")) {\n                object.SetLivekitVideoOptions = $root.rov_actions_proto.SetLivekitVideoOptionsAction.toObject(message.SetLivekitVideoOptions, options);\n                if (options.oneofs)\n                    object.Body = \"SetLivekitVideoOptions\";\n            }\n            if (message.SetSimplePeerVideoOptions != null && message.hasOwnProperty(\"SetSimplePeerVideoOptions\")) {\n                object.SetSimplePeerVideoOptions = $root.rov_actions_proto.SetSimplePeerVideoOptionsAction.toObject(message.SetSimplePeerVideoOptions, options);\n                if (options.oneofs)\n                    object.Body = \"SetSimplePeerVideoOptions\";\n            }\n            if (message.SetLivestreamingEnabled != null && message.hasOwnProperty(\"SetLivestreamingEnabled\")) {\n                object.SetLivestreamingEnabled = $root.rov_actions_proto.SetLivestreamingEnabledAction.toObject(message.SetLivestreamingEnabled, options);\n                if (options.oneofs)\n                    object.Body = \"SetLivestreamingEnabled\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovAction to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovAction\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovAction.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovAction\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovAction\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovAction\";\n        };\n\n        return RovAction;\n    })();\n\n    rov_actions_proto.DoneResponse = (function() {\n\n        /**\n         * Properties of a DoneResponse.\n         * @memberof rov_actions_proto\n         * @interface IDoneResponse\n         * @property {string|null} [Message] DoneResponse Message\n         */\n\n        /**\n         * Constructs a new DoneResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a DoneResponse.\n         * @implements IDoneResponse\n         * @constructor\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         */\n        function DoneResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * DoneResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         */\n        DoneResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new DoneResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse instance\n         */\n        DoneResponse.create = function create(properties) {\n            return new DoneResponse(properties);\n        };\n\n        /**\n         * Encodes the specified DoneResponse message. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified DoneResponse message, length delimited. Does not implicitly {@link rov_actions_proto.DoneResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.IDoneResponse} message DoneResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        DoneResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.DoneResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a DoneResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        DoneResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a DoneResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        DoneResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a DoneResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.DoneResponse} DoneResponse\n         */\n        DoneResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.DoneResponse)\n                return object;\n            let message = new $root.rov_actions_proto.DoneResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a DoneResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {rov_actions_proto.DoneResponse} message DoneResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        DoneResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this DoneResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.DoneResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        DoneResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for DoneResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.DoneResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        DoneResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.DoneResponse\";\n        };\n\n        return DoneResponse;\n    })();\n\n    rov_actions_proto.ErrorResponse = (function() {\n\n        /**\n         * Properties of an ErrorResponse.\n         * @memberof rov_actions_proto\n         * @interface IErrorResponse\n         * @property {string|null} [Message] ErrorResponse Message\n         */\n\n        /**\n         * Constructs a new ErrorResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents an ErrorResponse.\n         * @implements IErrorResponse\n         * @constructor\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         */\n        function ErrorResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ErrorResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         */\n        ErrorResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ErrorResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse instance\n         */\n        ErrorResponse.create = function create(properties) {\n            return new ErrorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ErrorResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ErrorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.IErrorResponse} message ErrorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ErrorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ErrorResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ErrorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ErrorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ErrorResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ErrorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an ErrorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ErrorResponse} ErrorResponse\n         */\n        ErrorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ErrorResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ErrorResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ErrorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {rov_actions_proto.ErrorResponse} message ErrorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ErrorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ErrorResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ErrorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ErrorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ErrorResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ErrorResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ErrorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ErrorResponse\";\n        };\n\n        return ErrorResponse;\n    })();\n\n    rov_actions_proto.PongResponse = (function() {\n\n        /**\n         * Properties of a PongResponse.\n         * @memberof rov_actions_proto\n         * @interface IPongResponse\n         * @property {number|Long|null} [Time] PongResponse Time\n         */\n\n        /**\n         * Constructs a new PongResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PongResponse.\n         * @implements IPongResponse\n         * @constructor\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         */\n        function PongResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PongResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         */\n        PongResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new PongResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PongResponse} PongResponse instance\n         */\n        PongResponse.create = function create(properties) {\n            return new PongResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PongResponse message. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PongResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PongResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.IPongResponse} message PongResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PongResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PongResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PongResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PongResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PongResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PongResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PongResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PongResponse} PongResponse\n         */\n        PongResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PongResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PongResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PongResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {rov_actions_proto.PongResponse} message PongResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PongResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this PongResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PongResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PongResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PongResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PongResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PongResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PongResponse\";\n        };\n\n        return PongResponse;\n    })();\n\n    rov_actions_proto.Measurement = (function() {\n\n        /**\n         * Properties of a Measurement.\n         * @memberof rov_actions_proto\n         * @interface IMeasurement\n         * @property {rov_actions_proto.SensorMeasurmentTypes|null} [MeasurementType] Measurement MeasurementType\n         * @property {number|null} [Value] Measurement Value\n         */\n\n        /**\n         * Constructs a new Measurement.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a Measurement.\n         * @implements IMeasurement\n         * @constructor\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         */\n        function Measurement(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Measurement MeasurementType.\n         * @member {rov_actions_proto.SensorMeasurmentTypes} MeasurementType\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.MeasurementType = 0;\n\n        /**\n         * Measurement Value.\n         * @member {number} Value\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         */\n        Measurement.prototype.Value = 0;\n\n        /**\n         * Creates a new Measurement instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement=} [properties] Properties to set\n         * @returns {rov_actions_proto.Measurement} Measurement instance\n         */\n        Measurement.create = function create(properties) {\n            return new Measurement(properties);\n        };\n\n        /**\n         * Encodes the specified Measurement message. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementType != null && Object.hasOwnProperty.call(message, \"MeasurementType\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.MeasurementType);\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.Value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Measurement message, length delimited. Does not implicitly {@link rov_actions_proto.Measurement.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.IMeasurement} message Measurement message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Measurement.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.Measurement();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.MeasurementType = reader.int32();\n                        break;\n                    }\n                case 2: {\n                        message.Value = reader.float();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Measurement message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.Measurement} Measurement\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Measurement.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Measurement message.\n         * @function verify\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Measurement.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                switch (message.MeasurementType) {\n                default:\n                    return \"MeasurementType: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                    break;\n                }\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                if (typeof message.Value !== \"number\")\n                    return \"Value: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a Measurement message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.Measurement} Measurement\n         */\n        Measurement.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.Measurement)\n                return object;\n            let message = new $root.rov_actions_proto.Measurement();\n            switch (object.MeasurementType) {\n            default:\n                if (typeof object.MeasurementType === \"number\") {\n                    message.MeasurementType = object.MeasurementType;\n                    break;\n                }\n                break;\n            case \"depth_meters\":\n            case 0:\n                message.MeasurementType = 0;\n                break;\n            case \"water_temp_celsius\":\n            case 1:\n                message.MeasurementType = 1;\n                break;\n            case \"pressure_mbar\":\n            case 2:\n                message.MeasurementType = 2;\n                break;\n            case \"yaw_degrees\":\n            case 3:\n                message.MeasurementType = 3;\n                break;\n            case \"pitch_degrees\":\n            case 4:\n                message.MeasurementType = 4;\n                break;\n            case \"roll_degrees\":\n            case 5:\n                message.MeasurementType = 5;\n                break;\n            case \"x_acceleration_m_s2\":\n            case 6:\n                message.MeasurementType = 6;\n                break;\n            case \"y_acceleration_m_s2\":\n            case 7:\n                message.MeasurementType = 7;\n                break;\n            case \"z_acceleration_m_s2\":\n            case 8:\n                message.MeasurementType = 8;\n                break;\n            case \"battery_voltage\":\n            case 9:\n                message.MeasurementType = 9;\n                break;\n            case \"battery_current_amps\":\n            case 10:\n                message.MeasurementType = 10;\n                break;\n            case \"internal_temp_celsius\":\n            case 11:\n                message.MeasurementType = 11;\n                break;\n            }\n            if (object.Value != null)\n                message.Value = Number(object.Value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a Measurement message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {rov_actions_proto.Measurement} message Measurement\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Measurement.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.MeasurementType = options.enums === String ? \"depth_meters\" : 0;\n                object.Value = 0;\n            }\n            if (message.MeasurementType != null && message.hasOwnProperty(\"MeasurementType\"))\n                object.MeasurementType = options.enums === String ? $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] === undefined ? message.MeasurementType : $root.rov_actions_proto.SensorMeasurmentTypes[message.MeasurementType] : message.MeasurementType;\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\n                object.Value = options.json && !isFinite(message.Value) ? String(message.Value) : message.Value;\n            return object;\n        };\n\n        /**\n         * Converts this Measurement to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.Measurement\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Measurement.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Measurement\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.Measurement\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Measurement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.Measurement\";\n        };\n\n        return Measurement;\n    })();\n\n    rov_actions_proto.SensorUpdatesResponse = (function() {\n\n        /**\n         * Properties of a SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @interface ISensorUpdatesResponse\n         * @property {Array.<rov_actions_proto.IMeasurement>|null} [MeasurementUpdates] SensorUpdatesResponse MeasurementUpdates\n         */\n\n        /**\n         * Constructs a new SensorUpdatesResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SensorUpdatesResponse.\n         * @implements ISensorUpdatesResponse\n         * @constructor\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         */\n        function SensorUpdatesResponse(properties) {\n            this.MeasurementUpdates = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SensorUpdatesResponse MeasurementUpdates.\n         * @member {Array.<rov_actions_proto.IMeasurement>} MeasurementUpdates\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         */\n        SensorUpdatesResponse.prototype.MeasurementUpdates = $util.emptyArray;\n\n        /**\n         * Creates a new SensorUpdatesResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse instance\n         */\n        SensorUpdatesResponse.create = function create(properties) {\n            return new SensorUpdatesResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MeasurementUpdates != null && message.MeasurementUpdates.length)\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i)\n                    $root.rov_actions_proto.Measurement.encode(message.MeasurementUpdates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SensorUpdatesResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SensorUpdatesResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.ISensorUpdatesResponse} message SensorUpdatesResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SensorUpdatesResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.MeasurementUpdates && message.MeasurementUpdates.length))\n                            message.MeasurementUpdates = [];\n                        message.MeasurementUpdates.push($root.rov_actions_proto.Measurement.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SensorUpdatesResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SensorUpdatesResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SensorUpdatesResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SensorUpdatesResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.MeasurementUpdates != null && message.hasOwnProperty(\"MeasurementUpdates\")) {\n                if (!Array.isArray(message.MeasurementUpdates))\n                    return \"MeasurementUpdates: array expected\";\n                for (let i = 0; i < message.MeasurementUpdates.length; ++i) {\n                    let error = $root.rov_actions_proto.Measurement.verify(message.MeasurementUpdates[i]);\n                    if (error)\n                        return \"MeasurementUpdates.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SensorUpdatesResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SensorUpdatesResponse} SensorUpdatesResponse\n         */\n        SensorUpdatesResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SensorUpdatesResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SensorUpdatesResponse();\n            if (object.MeasurementUpdates) {\n                if (!Array.isArray(object.MeasurementUpdates))\n                    throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: array expected\");\n                message.MeasurementUpdates = [];\n                for (let i = 0; i < object.MeasurementUpdates.length; ++i) {\n                    if (typeof object.MeasurementUpdates[i] !== \"object\")\n                        throw TypeError(\".rov_actions_proto.SensorUpdatesResponse.MeasurementUpdates: object expected\");\n                    message.MeasurementUpdates[i] = $root.rov_actions_proto.Measurement.fromObject(object.MeasurementUpdates[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SensorUpdatesResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {rov_actions_proto.SensorUpdatesResponse} message SensorUpdatesResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SensorUpdatesResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.MeasurementUpdates = [];\n            if (message.MeasurementUpdates && message.MeasurementUpdates.length) {\n                object.MeasurementUpdates = [];\n                for (let j = 0; j < message.MeasurementUpdates.length; ++j)\n                    object.MeasurementUpdates[j] = $root.rov_actions_proto.Measurement.toObject(message.MeasurementUpdates[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SensorUpdatesResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SensorUpdatesResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SensorUpdatesResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SensorUpdatesResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SensorUpdatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SensorUpdatesResponse\";\n        };\n\n        return SensorUpdatesResponse;\n    })();\n\n    rov_actions_proto.PasswordRequiredResponse = (function() {\n\n        /**\n         * Properties of a PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordRequiredResponse\n         * @property {string|null} [RovId] PasswordRequiredResponse RovId\n         */\n\n        /**\n         * Constructs a new PasswordRequiredResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordRequiredResponse.\n         * @implements IPasswordRequiredResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         */\n        function PasswordRequiredResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordRequiredResponse RovId.\n         * @member {string} RovId\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         */\n        PasswordRequiredResponse.prototype.RovId = \"\";\n\n        /**\n         * Creates a new PasswordRequiredResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse instance\n         */\n        PasswordRequiredResponse.create = function create(properties) {\n            return new PasswordRequiredResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RovId != null && Object.hasOwnProperty.call(message, \"RovId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.RovId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordRequiredResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordRequiredResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordRequiredResponse} message PasswordRequiredResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordRequiredResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.RovId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordRequiredResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordRequiredResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordRequiredResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordRequiredResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                if (!$util.isString(message.RovId))\n                    return \"RovId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordRequiredResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordRequiredResponse} PasswordRequiredResponse\n         */\n        PasswordRequiredResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordRequiredResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordRequiredResponse();\n            if (object.RovId != null)\n                message.RovId = String(object.RovId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordRequiredResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {rov_actions_proto.PasswordRequiredResponse} message PasswordRequiredResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordRequiredResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.RovId = \"\";\n            if (message.RovId != null && message.hasOwnProperty(\"RovId\"))\n                object.RovId = message.RovId;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordRequiredResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordRequiredResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordRequiredResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordRequiredResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordRequiredResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordRequiredResponse\";\n        };\n\n        return PasswordRequiredResponse;\n    })();\n\n    rov_actions_proto.PasswordAcceptedResponse = (function() {\n\n        /**\n         * Properties of a PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordAcceptedResponse\n         * @property {string|null} [AuthToken] PasswordAcceptedResponse AuthToken\n         */\n\n        /**\n         * Constructs a new PasswordAcceptedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordAcceptedResponse.\n         * @implements IPasswordAcceptedResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         */\n        function PasswordAcceptedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PasswordAcceptedResponse AuthToken.\n         * @member {string} AuthToken\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         */\n        PasswordAcceptedResponse.prototype.AuthToken = \"\";\n\n        /**\n         * Creates a new PasswordAcceptedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse instance\n         */\n        PasswordAcceptedResponse.create = function create(properties) {\n            return new PasswordAcceptedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.AuthToken != null && Object.hasOwnProperty.call(message, \"AuthToken\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.AuthToken);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordAcceptedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordAcceptedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordAcceptedResponse} message PasswordAcceptedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordAcceptedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.AuthToken = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordAcceptedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordAcceptedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordAcceptedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordAcceptedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                if (!$util.isString(message.AuthToken))\n                    return \"AuthToken: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordAcceptedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordAcceptedResponse} PasswordAcceptedResponse\n         */\n        PasswordAcceptedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordAcceptedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PasswordAcceptedResponse();\n            if (object.AuthToken != null)\n                message.AuthToken = String(object.AuthToken);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PasswordAcceptedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {rov_actions_proto.PasswordAcceptedResponse} message PasswordAcceptedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordAcceptedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.AuthToken = \"\";\n            if (message.AuthToken != null && message.hasOwnProperty(\"AuthToken\"))\n                object.AuthToken = message.AuthToken;\n            return object;\n        };\n\n        /**\n         * Converts this PasswordAcceptedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordAcceptedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordAcceptedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordAcceptedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordAcceptedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordAcceptedResponse\";\n        };\n\n        return PasswordAcceptedResponse;\n    })();\n\n    rov_actions_proto.PasswordInvalidResponse = (function() {\n\n        /**\n         * Properties of a PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @interface IPasswordInvalidResponse\n         */\n\n        /**\n         * Constructs a new PasswordInvalidResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PasswordInvalidResponse.\n         * @implements IPasswordInvalidResponse\n         * @constructor\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         */\n        function PasswordInvalidResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new PasswordInvalidResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse instance\n         */\n        PasswordInvalidResponse.create = function create(properties) {\n            return new PasswordInvalidResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PasswordInvalidResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PasswordInvalidResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.IPasswordInvalidResponse} message PasswordInvalidResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PasswordInvalidResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PasswordInvalidResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PasswordInvalidResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PasswordInvalidResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PasswordInvalidResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PasswordInvalidResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PasswordInvalidResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PasswordInvalidResponse} PasswordInvalidResponse\n         */\n        PasswordInvalidResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PasswordInvalidResponse)\n                return object;\n            return new $root.rov_actions_proto.PasswordInvalidResponse();\n        };\n\n        /**\n         * Creates a plain object from a PasswordInvalidResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {rov_actions_proto.PasswordInvalidResponse} message PasswordInvalidResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PasswordInvalidResponse.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this PasswordInvalidResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PasswordInvalidResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PasswordInvalidResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PasswordInvalidResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PasswordInvalidResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PasswordInvalidResponse\";\n        };\n\n        return PasswordInvalidResponse;\n    })();\n\n    rov_actions_proto.PilotChangedResponse = (function() {\n\n        /**\n         * Properties of a PilotChangedResponse.\n         * @memberof rov_actions_proto\n         * @interface IPilotChangedResponse\n         * @property {string|null} [PilotIdentity] PilotChangedResponse PilotIdentity\n         */\n\n        /**\n         * Constructs a new PilotChangedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a PilotChangedResponse.\n         * @implements IPilotChangedResponse\n         * @constructor\n         * @param {rov_actions_proto.IPilotChangedResponse=} [properties] Properties to set\n         */\n        function PilotChangedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PilotChangedResponse PilotIdentity.\n         * @member {string} PilotIdentity\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @instance\n         */\n        PilotChangedResponse.prototype.PilotIdentity = \"\";\n\n        /**\n         * Creates a new PilotChangedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {rov_actions_proto.IPilotChangedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.PilotChangedResponse} PilotChangedResponse instance\n         */\n        PilotChangedResponse.create = function create(properties) {\n            return new PilotChangedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified PilotChangedResponse message. Does not implicitly {@link rov_actions_proto.PilotChangedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {rov_actions_proto.IPilotChangedResponse} message PilotChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PilotChangedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.PilotIdentity != null && Object.hasOwnProperty.call(message, \"PilotIdentity\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.PilotIdentity);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PilotChangedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.PilotChangedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {rov_actions_proto.IPilotChangedResponse} message PilotChangedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PilotChangedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PilotChangedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.PilotChangedResponse} PilotChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PilotChangedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.PilotChangedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.PilotIdentity = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PilotChangedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.PilotChangedResponse} PilotChangedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PilotChangedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PilotChangedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PilotChangedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.PilotIdentity != null && message.hasOwnProperty(\"PilotIdentity\"))\n                if (!$util.isString(message.PilotIdentity))\n                    return \"PilotIdentity: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PilotChangedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.PilotChangedResponse} PilotChangedResponse\n         */\n        PilotChangedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.PilotChangedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.PilotChangedResponse();\n            if (object.PilotIdentity != null)\n                message.PilotIdentity = String(object.PilotIdentity);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PilotChangedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {rov_actions_proto.PilotChangedResponse} message PilotChangedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PilotChangedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.PilotIdentity = \"\";\n            if (message.PilotIdentity != null && message.hasOwnProperty(\"PilotIdentity\"))\n                object.PilotIdentity = message.PilotIdentity;\n            return object;\n        };\n\n        /**\n         * Converts this PilotChangedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PilotChangedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PilotChangedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.PilotChangedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PilotChangedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.PilotChangedResponse\";\n        };\n\n        return PilotChangedResponse;\n    })();\n\n    rov_actions_proto.ClientConnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientConnectedResponse\n         * @property {string|null} [ClientPeerId] ClientConnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientConnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientConnectedResponse.\n         * @implements IClientConnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         */\n        function ClientConnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientConnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         */\n        ClientConnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientConnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse instance\n         */\n        ClientConnectedResponse.create = function create(properties) {\n            return new ClientConnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientConnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientConnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientConnectedResponse} message ClientConnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientConnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientConnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientConnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientConnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientConnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientConnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientConnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientConnectedResponse} ClientConnectedResponse\n         */\n        ClientConnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientConnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientConnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientConnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientConnectedResponse} message ClientConnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientConnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientConnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientConnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientConnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientConnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientConnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientConnectedResponse\";\n        };\n\n        return ClientConnectedResponse;\n    })();\n\n    rov_actions_proto.ClientDisconnectedResponse = (function() {\n\n        /**\n         * Properties of a ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @interface IClientDisconnectedResponse\n         * @property {string|null} [ClientPeerId] ClientDisconnectedResponse ClientPeerId\n         */\n\n        /**\n         * Constructs a new ClientDisconnectedResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ClientDisconnectedResponse.\n         * @implements IClientDisconnectedResponse\n         * @constructor\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         */\n        function ClientDisconnectedResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ClientDisconnectedResponse ClientPeerId.\n         * @member {string} ClientPeerId\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         */\n        ClientDisconnectedResponse.prototype.ClientPeerId = \"\";\n\n        /**\n         * Creates a new ClientDisconnectedResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse instance\n         */\n        ClientDisconnectedResponse.create = function create(properties) {\n            return new ClientDisconnectedResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.ClientPeerId != null && Object.hasOwnProperty.call(message, \"ClientPeerId\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.ClientPeerId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ClientDisconnectedResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ClientDisconnectedResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.IClientDisconnectedResponse} message ClientDisconnectedResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ClientDisconnectedResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.ClientPeerId = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ClientDisconnectedResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ClientDisconnectedResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ClientDisconnectedResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ClientDisconnectedResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                if (!$util.isString(message.ClientPeerId))\n                    return \"ClientPeerId: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ClientDisconnectedResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ClientDisconnectedResponse} ClientDisconnectedResponse\n         */\n        ClientDisconnectedResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ClientDisconnectedResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ClientDisconnectedResponse();\n            if (object.ClientPeerId != null)\n                message.ClientPeerId = String(object.ClientPeerId);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ClientDisconnectedResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {rov_actions_proto.ClientDisconnectedResponse} message ClientDisconnectedResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ClientDisconnectedResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.ClientPeerId = \"\";\n            if (message.ClientPeerId != null && message.hasOwnProperty(\"ClientPeerId\"))\n                object.ClientPeerId = message.ClientPeerId;\n            return object;\n        };\n\n        /**\n         * Converts this ClientDisconnectedResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ClientDisconnectedResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ClientDisconnectedResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ClientDisconnectedResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ClientDisconnectedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ClientDisconnectedResponse\";\n        };\n\n        return ClientDisconnectedResponse;\n    })();\n\n    rov_actions_proto.HeartbeatResponse = (function() {\n\n        /**\n         * Properties of a HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @interface IHeartbeatResponse\n         * @property {number|Long|null} [Time] HeartbeatResponse Time\n         */\n\n        /**\n         * Constructs a new HeartbeatResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a HeartbeatResponse.\n         * @implements IHeartbeatResponse\n         * @constructor\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         */\n        function HeartbeatResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * HeartbeatResponse Time.\n         * @member {number|Long} Time\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         */\n        HeartbeatResponse.prototype.Time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new HeartbeatResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse instance\n         */\n        HeartbeatResponse.create = function create(properties) {\n            return new HeartbeatResponse(properties);\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Time != null && Object.hasOwnProperty.call(message, \"Time\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified HeartbeatResponse message, length delimited. Does not implicitly {@link rov_actions_proto.HeartbeatResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.IHeartbeatResponse} message HeartbeatResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        HeartbeatResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.HeartbeatResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a HeartbeatResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        HeartbeatResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a HeartbeatResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        HeartbeatResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (!$util.isInteger(message.Time) && !(message.Time && $util.isInteger(message.Time.low) && $util.isInteger(message.Time.high)))\n                    return \"Time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a HeartbeatResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.HeartbeatResponse} HeartbeatResponse\n         */\n        HeartbeatResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.HeartbeatResponse)\n                return object;\n            let message = new $root.rov_actions_proto.HeartbeatResponse();\n            if (object.Time != null)\n                if ($util.Long)\n                    (message.Time = $util.Long.fromValue(object.Time)).unsigned = false;\n                else if (typeof object.Time === \"string\")\n                    message.Time = parseInt(object.Time, 10);\n                else if (typeof object.Time === \"number\")\n                    message.Time = object.Time;\n                else if (typeof object.Time === \"object\")\n                    message.Time = new $util.LongBits(object.Time.low >>> 0, object.Time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a HeartbeatResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {rov_actions_proto.HeartbeatResponse} message HeartbeatResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        HeartbeatResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.Time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Time = options.longs === String ? \"0\" : 0;\n            if (message.Time != null && message.hasOwnProperty(\"Time\"))\n                if (typeof message.Time === \"number\")\n                    object.Time = options.longs === String ? String(message.Time) : message.Time;\n                else\n                    object.Time = options.longs === String ? $util.Long.prototype.toString.call(message.Time) : options.longs === Number ? new $util.LongBits(message.Time.low >>> 0, message.Time.high >>> 0).toNumber() : message.Time;\n            return object;\n        };\n\n        /**\n         * Converts this HeartbeatResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        HeartbeatResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for HeartbeatResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.HeartbeatResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        HeartbeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.HeartbeatResponse\";\n        };\n\n        return HeartbeatResponse;\n    })();\n\n    rov_actions_proto.ContinuedOutputResponse = (function() {\n\n        /**\n         * Properties of a ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @interface IContinuedOutputResponse\n         * @property {string|null} [Message] ContinuedOutputResponse Message\n         */\n\n        /**\n         * Constructs a new ContinuedOutputResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ContinuedOutputResponse.\n         * @implements IContinuedOutputResponse\n         * @constructor\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         */\n        function ContinuedOutputResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ContinuedOutputResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         */\n        ContinuedOutputResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new ContinuedOutputResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse instance\n         */\n        ContinuedOutputResponse.create = function create(properties) {\n            return new ContinuedOutputResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ContinuedOutputResponse message, length delimited. Does not implicitly {@link rov_actions_proto.ContinuedOutputResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.IContinuedOutputResponse} message ContinuedOutputResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ContinuedOutputResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ContinuedOutputResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ContinuedOutputResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ContinuedOutputResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ContinuedOutputResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ContinuedOutputResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ContinuedOutputResponse} ContinuedOutputResponse\n         */\n        ContinuedOutputResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ContinuedOutputResponse)\n                return object;\n            let message = new $root.rov_actions_proto.ContinuedOutputResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ContinuedOutputResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {rov_actions_proto.ContinuedOutputResponse} message ContinuedOutputResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ContinuedOutputResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this ContinuedOutputResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ContinuedOutputResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ContinuedOutputResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ContinuedOutputResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ContinuedOutputResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ContinuedOutputResponse\";\n        };\n\n        return ContinuedOutputResponse;\n    })();\n\n    rov_actions_proto.MavlinkResponse = (function() {\n\n        /**\n         * Properties of a MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @interface IMavlinkResponse\n         * @property {Uint8Array|null} [Message] MavlinkResponse Message\n         */\n\n        /**\n         * Constructs a new MavlinkResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a MavlinkResponse.\n         * @implements IMavlinkResponse\n         * @constructor\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         */\n        function MavlinkResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * MavlinkResponse Message.\n         * @member {Uint8Array} Message\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         */\n        MavlinkResponse.prototype.Message = $util.newBuffer([]);\n\n        /**\n         * Creates a new MavlinkResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse instance\n         */\n        MavlinkResponse.create = function create(properties) {\n            return new MavlinkResponse(properties);\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified MavlinkResponse message, length delimited. Does not implicitly {@link rov_actions_proto.MavlinkResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.IMavlinkResponse} message MavlinkResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        MavlinkResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.MavlinkResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.bytes();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a MavlinkResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        MavlinkResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a MavlinkResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        MavlinkResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!(message.Message && typeof message.Message.length === \"number\" || $util.isString(message.Message)))\n                    return \"Message: buffer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a MavlinkResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.MavlinkResponse} MavlinkResponse\n         */\n        MavlinkResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.MavlinkResponse)\n                return object;\n            let message = new $root.rov_actions_proto.MavlinkResponse();\n            if (object.Message != null)\n                if (typeof object.Message === \"string\")\n                    $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);\n                else if (object.Message.length >= 0)\n                    message.Message = object.Message;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a MavlinkResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {rov_actions_proto.MavlinkResponse} message MavlinkResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        MavlinkResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                if (options.bytes === String)\n                    object.Message = \"\";\n                else {\n                    object.Message = [];\n                    if (options.bytes !== Array)\n                        object.Message = $util.newBuffer(object.Message);\n                }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this MavlinkResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        MavlinkResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for MavlinkResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.MavlinkResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        MavlinkResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.MavlinkResponse\";\n        };\n\n        return MavlinkResponse;\n    })();\n\n    rov_actions_proto.SimplePeerSignalResponse = (function() {\n\n        /**\n         * Properties of a SimplePeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @interface ISimplePeerSignalResponse\n         * @property {string|null} [Message] SimplePeerSignalResponse Message\n         */\n\n        /**\n         * Constructs a new SimplePeerSignalResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplePeerSignalResponse.\n         * @implements ISimplePeerSignalResponse\n         * @constructor\n         * @param {rov_actions_proto.ISimplePeerSignalResponse=} [properties] Properties to set\n         */\n        function SimplePeerSignalResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplePeerSignalResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @instance\n         */\n        SimplePeerSignalResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new SimplePeerSignalResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplePeerSignalResponse} SimplePeerSignalResponse instance\n         */\n        SimplePeerSignalResponse.create = function create(properties) {\n            return new SimplePeerSignalResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SimplePeerSignalResponse message. Does not implicitly {@link rov_actions_proto.SimplePeerSignalResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalResponse} message SimplePeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerSignalResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplePeerSignalResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SimplePeerSignalResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerSignalResponse} message SimplePeerSignalResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerSignalResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplePeerSignalResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplePeerSignalResponse} SimplePeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerSignalResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplePeerSignalResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplePeerSignalResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplePeerSignalResponse} SimplePeerSignalResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerSignalResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplePeerSignalResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplePeerSignalResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplePeerSignalResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplePeerSignalResponse} SimplePeerSignalResponse\n         */\n        SimplePeerSignalResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplePeerSignalResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SimplePeerSignalResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplePeerSignalResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {rov_actions_proto.SimplePeerSignalResponse} message SimplePeerSignalResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplePeerSignalResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.Message = \"\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this SimplePeerSignalResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplePeerSignalResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplePeerSignalResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplePeerSignalResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplePeerSignalResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplePeerSignalResponse\";\n        };\n\n        return SimplePeerSignalResponse;\n    })();\n\n    rov_actions_proto.SystemMonitorResponse = (function() {\n\n        /**\n         * Properties of a SystemMonitorResponse.\n         * @memberof rov_actions_proto\n         * @interface ISystemMonitorResponse\n         * @property {number|null} [CpuTemp] SystemMonitorResponse CpuTemp\n         * @property {number|null} [CpuUsage] SystemMonitorResponse CpuUsage\n         * @property {number|null} [MemoryUsage] SystemMonitorResponse MemoryUsage\n         * @property {number|null} [DiskUsage] SystemMonitorResponse DiskUsage\n         * @property {Array.<string>|null} [Warnings] SystemMonitorResponse Warnings\n         */\n\n        /**\n         * Constructs a new SystemMonitorResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SystemMonitorResponse.\n         * @implements ISystemMonitorResponse\n         * @constructor\n         * @param {rov_actions_proto.ISystemMonitorResponse=} [properties] Properties to set\n         */\n        function SystemMonitorResponse(properties) {\n            this.Warnings = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SystemMonitorResponse CpuTemp.\n         * @member {number} CpuTemp\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.CpuTemp = 0;\n\n        /**\n         * SystemMonitorResponse CpuUsage.\n         * @member {number} CpuUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.CpuUsage = 0;\n\n        /**\n         * SystemMonitorResponse MemoryUsage.\n         * @member {number} MemoryUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.MemoryUsage = 0;\n\n        /**\n         * SystemMonitorResponse DiskUsage.\n         * @member {number} DiskUsage\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.DiskUsage = 0;\n\n        /**\n         * SystemMonitorResponse Warnings.\n         * @member {Array.<string>} Warnings\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         */\n        SystemMonitorResponse.prototype.Warnings = $util.emptyArray;\n\n        /**\n         * Creates a new SystemMonitorResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse instance\n         */\n        SystemMonitorResponse.create = function create(properties) {\n            return new SystemMonitorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SystemMonitorResponse message. Does not implicitly {@link rov_actions_proto.SystemMonitorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse} message SystemMonitorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SystemMonitorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.CpuTemp != null && Object.hasOwnProperty.call(message, \"CpuTemp\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.CpuTemp);\n            if (message.CpuUsage != null && Object.hasOwnProperty.call(message, \"CpuUsage\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.CpuUsage);\n            if (message.MemoryUsage != null && Object.hasOwnProperty.call(message, \"MemoryUsage\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.MemoryUsage);\n            if (message.DiskUsage != null && Object.hasOwnProperty.call(message, \"DiskUsage\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.DiskUsage);\n            if (message.Warnings != null && message.Warnings.length)\n                for (let i = 0; i < message.Warnings.length; ++i)\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.Warnings[i]);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SystemMonitorResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SystemMonitorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.ISystemMonitorResponse} message SystemMonitorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SystemMonitorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SystemMonitorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SystemMonitorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SystemMonitorResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.CpuTemp = reader.float();\n                        break;\n                    }\n                case 2: {\n                        message.CpuUsage = reader.float();\n                        break;\n                    }\n                case 3: {\n                        message.MemoryUsage = reader.float();\n                        break;\n                    }\n                case 4: {\n                        message.DiskUsage = reader.float();\n                        break;\n                    }\n                case 5: {\n                        if (!(message.Warnings && message.Warnings.length))\n                            message.Warnings = [];\n                        message.Warnings.push(reader.string());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SystemMonitorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SystemMonitorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SystemMonitorResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SystemMonitorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.CpuTemp != null && message.hasOwnProperty(\"CpuTemp\"))\n                if (typeof message.CpuTemp !== \"number\")\n                    return \"CpuTemp: number expected\";\n            if (message.CpuUsage != null && message.hasOwnProperty(\"CpuUsage\"))\n                if (typeof message.CpuUsage !== \"number\")\n                    return \"CpuUsage: number expected\";\n            if (message.MemoryUsage != null && message.hasOwnProperty(\"MemoryUsage\"))\n                if (typeof message.MemoryUsage !== \"number\")\n                    return \"MemoryUsage: number expected\";\n            if (message.DiskUsage != null && message.hasOwnProperty(\"DiskUsage\"))\n                if (typeof message.DiskUsage !== \"number\")\n                    return \"DiskUsage: number expected\";\n            if (message.Warnings != null && message.hasOwnProperty(\"Warnings\")) {\n                if (!Array.isArray(message.Warnings))\n                    return \"Warnings: array expected\";\n                for (let i = 0; i < message.Warnings.length; ++i)\n                    if (!$util.isString(message.Warnings[i]))\n                        return \"Warnings: string[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SystemMonitorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SystemMonitorResponse} SystemMonitorResponse\n         */\n        SystemMonitorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SystemMonitorResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SystemMonitorResponse();\n            if (object.CpuTemp != null)\n                message.CpuTemp = Number(object.CpuTemp);\n            if (object.CpuUsage != null)\n                message.CpuUsage = Number(object.CpuUsage);\n            if (object.MemoryUsage != null)\n                message.MemoryUsage = Number(object.MemoryUsage);\n            if (object.DiskUsage != null)\n                message.DiskUsage = Number(object.DiskUsage);\n            if (object.Warnings) {\n                if (!Array.isArray(object.Warnings))\n                    throw TypeError(\".rov_actions_proto.SystemMonitorResponse.Warnings: array expected\");\n                message.Warnings = [];\n                for (let i = 0; i < object.Warnings.length; ++i)\n                    message.Warnings[i] = String(object.Warnings[i]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SystemMonitorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {rov_actions_proto.SystemMonitorResponse} message SystemMonitorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SystemMonitorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.Warnings = [];\n            if (options.defaults) {\n                object.CpuTemp = 0;\n                object.CpuUsage = 0;\n                object.MemoryUsage = 0;\n                object.DiskUsage = 0;\n            }\n            if (message.CpuTemp != null && message.hasOwnProperty(\"CpuTemp\"))\n                object.CpuTemp = options.json && !isFinite(message.CpuTemp) ? String(message.CpuTemp) : message.CpuTemp;\n            if (message.CpuUsage != null && message.hasOwnProperty(\"CpuUsage\"))\n                object.CpuUsage = options.json && !isFinite(message.CpuUsage) ? String(message.CpuUsage) : message.CpuUsage;\n            if (message.MemoryUsage != null && message.hasOwnProperty(\"MemoryUsage\"))\n                object.MemoryUsage = options.json && !isFinite(message.MemoryUsage) ? String(message.MemoryUsage) : message.MemoryUsage;\n            if (message.DiskUsage != null && message.hasOwnProperty(\"DiskUsage\"))\n                object.DiskUsage = options.json && !isFinite(message.DiskUsage) ? String(message.DiskUsage) : message.DiskUsage;\n            if (message.Warnings && message.Warnings.length) {\n                object.Warnings = [];\n                for (let j = 0; j < message.Warnings.length; ++j)\n                    object.Warnings[j] = message.Warnings[j];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SystemMonitorResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SystemMonitorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SystemMonitorResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SystemMonitorResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SystemMonitorResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SystemMonitorResponse\";\n        };\n\n        return SystemMonitorResponse;\n    })();\n\n    rov_actions_proto.LogMessageResponse = (function() {\n\n        /**\n         * Properties of a LogMessageResponse.\n         * @memberof rov_actions_proto\n         * @interface ILogMessageResponse\n         * @property {string|null} [Message] LogMessageResponse Message\n         * @property {rov_actions_proto.LogLevel|null} [Level] LogMessageResponse Level\n         */\n\n        /**\n         * Constructs a new LogMessageResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a LogMessageResponse.\n         * @implements ILogMessageResponse\n         * @constructor\n         * @param {rov_actions_proto.ILogMessageResponse=} [properties] Properties to set\n         */\n        function LogMessageResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * LogMessageResponse Message.\n         * @member {string} Message\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         */\n        LogMessageResponse.prototype.Message = \"\";\n\n        /**\n         * LogMessageResponse Level.\n         * @member {rov_actions_proto.LogLevel} Level\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         */\n        LogMessageResponse.prototype.Level = 0;\n\n        /**\n         * Creates a new LogMessageResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse instance\n         */\n        LogMessageResponse.create = function create(properties) {\n            return new LogMessageResponse(properties);\n        };\n\n        /**\n         * Encodes the specified LogMessageResponse message. Does not implicitly {@link rov_actions_proto.LogMessageResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse} message LogMessageResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LogMessageResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Message);\n            if (message.Level != null && Object.hasOwnProperty.call(message, \"Level\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Level);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified LogMessageResponse message, length delimited. Does not implicitly {@link rov_actions_proto.LogMessageResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.ILogMessageResponse} message LogMessageResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LogMessageResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a LogMessageResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LogMessageResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.LogMessageResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Message = reader.string();\n                        break;\n                    }\n                case 2: {\n                        message.Level = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a LogMessageResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LogMessageResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a LogMessageResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        LogMessageResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.Level != null && message.hasOwnProperty(\"Level\"))\n                switch (message.Level) {\n                default:\n                    return \"Level: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a LogMessageResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.LogMessageResponse} LogMessageResponse\n         */\n        LogMessageResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.LogMessageResponse)\n                return object;\n            let message = new $root.rov_actions_proto.LogMessageResponse();\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            switch (object.Level) {\n            default:\n                if (typeof object.Level === \"number\") {\n                    message.Level = object.Level;\n                    break;\n                }\n                break;\n            case \"Debug\":\n            case 0:\n                message.Level = 0;\n                break;\n            case \"Info\":\n            case 1:\n                message.Level = 1;\n                break;\n            case \"Warning\":\n            case 2:\n                message.Level = 2;\n                break;\n            case \"Error\":\n            case 3:\n                message.Level = 3;\n                break;\n            case \"Critical\":\n            case 4:\n                message.Level = 4;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a LogMessageResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {rov_actions_proto.LogMessageResponse} message LogMessageResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        LogMessageResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.Message = \"\";\n                object.Level = options.enums === String ? \"Debug\" : 0;\n            }\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            if (message.Level != null && message.hasOwnProperty(\"Level\"))\n                object.Level = options.enums === String ? $root.rov_actions_proto.LogLevel[message.Level] === undefined ? message.Level : $root.rov_actions_proto.LogLevel[message.Level] : message.Level;\n            return object;\n        };\n\n        /**\n         * Converts this LogMessageResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        LogMessageResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for LogMessageResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.LogMessageResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        LogMessageResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.LogMessageResponse\";\n        };\n\n        return LogMessageResponse;\n    })();\n\n    rov_actions_proto.LivekitVideoStatsResponse = (function() {\n\n        /**\n         * Properties of a LivekitVideoStatsResponse.\n         * @memberof rov_actions_proto\n         * @interface ILivekitVideoStatsResponse\n         * @property {boolean|null} [Enabled] LivekitVideoStatsResponse Enabled\n         * @property {rov_actions_proto.VideoCodec|null} [Codec] LivekitVideoStatsResponse Codec\n         * @property {boolean|null} [AllowBackupCodec] LivekitVideoStatsResponse AllowBackupCodec\n         * @property {rov_actions_proto.IVideoStreamOptions|null} [BaseStream] LivekitVideoStatsResponse BaseStream\n         * @property {Array.<rov_actions_proto.IVideoStreamOptions>|null} [SimulcastLayers] LivekitVideoStatsResponse SimulcastLayers\n         * @property {string|null} [RtcSenderStatsJson] LivekitVideoStatsResponse RtcSenderStatsJson\n         */\n\n        /**\n         * Constructs a new LivekitVideoStatsResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a LivekitVideoStatsResponse.\n         * @implements ILivekitVideoStatsResponse\n         * @constructor\n         * @param {rov_actions_proto.ILivekitVideoStatsResponse=} [properties] Properties to set\n         */\n        function LivekitVideoStatsResponse(properties) {\n            this.SimulcastLayers = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * LivekitVideoStatsResponse Enabled.\n         * @member {boolean} Enabled\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.Enabled = false;\n\n        /**\n         * LivekitVideoStatsResponse Codec.\n         * @member {rov_actions_proto.VideoCodec} Codec\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.Codec = 0;\n\n        /**\n         * LivekitVideoStatsResponse AllowBackupCodec.\n         * @member {boolean} AllowBackupCodec\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.AllowBackupCodec = false;\n\n        /**\n         * LivekitVideoStatsResponse BaseStream.\n         * @member {rov_actions_proto.IVideoStreamOptions|null|undefined} BaseStream\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.BaseStream = null;\n\n        /**\n         * LivekitVideoStatsResponse SimulcastLayers.\n         * @member {Array.<rov_actions_proto.IVideoStreamOptions>} SimulcastLayers\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.SimulcastLayers = $util.emptyArray;\n\n        /**\n         * LivekitVideoStatsResponse RtcSenderStatsJson.\n         * @member {string} RtcSenderStatsJson\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         */\n        LivekitVideoStatsResponse.prototype.RtcSenderStatsJson = \"\";\n\n        /**\n         * Creates a new LivekitVideoStatsResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ILivekitVideoStatsResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.LivekitVideoStatsResponse} LivekitVideoStatsResponse instance\n         */\n        LivekitVideoStatsResponse.create = function create(properties) {\n            return new LivekitVideoStatsResponse(properties);\n        };\n\n        /**\n         * Encodes the specified LivekitVideoStatsResponse message. Does not implicitly {@link rov_actions_proto.LivekitVideoStatsResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ILivekitVideoStatsResponse} message LivekitVideoStatsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LivekitVideoStatsResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Enabled != null && Object.hasOwnProperty.call(message, \"Enabled\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.Enabled);\n            if (message.Codec != null && Object.hasOwnProperty.call(message, \"Codec\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Codec);\n            if (message.AllowBackupCodec != null && Object.hasOwnProperty.call(message, \"AllowBackupCodec\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.AllowBackupCodec);\n            if (message.BaseStream != null && Object.hasOwnProperty.call(message, \"BaseStream\"))\n                $root.rov_actions_proto.VideoStreamOptions.encode(message.BaseStream, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.SimulcastLayers != null && message.SimulcastLayers.length)\n                for (let i = 0; i < message.SimulcastLayers.length; ++i)\n                    $root.rov_actions_proto.VideoStreamOptions.encode(message.SimulcastLayers[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.RtcSenderStatsJson != null && Object.hasOwnProperty.call(message, \"RtcSenderStatsJson\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.RtcSenderStatsJson);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified LivekitVideoStatsResponse message, length delimited. Does not implicitly {@link rov_actions_proto.LivekitVideoStatsResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ILivekitVideoStatsResponse} message LivekitVideoStatsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        LivekitVideoStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a LivekitVideoStatsResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.LivekitVideoStatsResponse} LivekitVideoStatsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LivekitVideoStatsResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.LivekitVideoStatsResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Enabled = reader.bool();\n                        break;\n                    }\n                case 2: {\n                        message.Codec = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.AllowBackupCodec = reader.bool();\n                        break;\n                    }\n                case 4: {\n                        message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        if (!(message.SimulcastLayers && message.SimulcastLayers.length))\n                            message.SimulcastLayers = [];\n                        message.SimulcastLayers.push($root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32()));\n                        break;\n                    }\n                case 6: {\n                        message.RtcSenderStatsJson = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a LivekitVideoStatsResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.LivekitVideoStatsResponse} LivekitVideoStatsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        LivekitVideoStatsResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a LivekitVideoStatsResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        LivekitVideoStatsResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                if (typeof message.Enabled !== \"boolean\")\n                    return \"Enabled: boolean expected\";\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                switch (message.Codec) {\n                default:\n                    return \"Codec: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            if (message.AllowBackupCodec != null && message.hasOwnProperty(\"AllowBackupCodec\"))\n                if (typeof message.AllowBackupCodec !== \"boolean\")\n                    return \"AllowBackupCodec: boolean expected\";\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\")) {\n                let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.BaseStream);\n                if (error)\n                    return \"BaseStream.\" + error;\n            }\n            if (message.SimulcastLayers != null && message.hasOwnProperty(\"SimulcastLayers\")) {\n                if (!Array.isArray(message.SimulcastLayers))\n                    return \"SimulcastLayers: array expected\";\n                for (let i = 0; i < message.SimulcastLayers.length; ++i) {\n                    let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.SimulcastLayers[i]);\n                    if (error)\n                        return \"SimulcastLayers.\" + error;\n                }\n            }\n            if (message.RtcSenderStatsJson != null && message.hasOwnProperty(\"RtcSenderStatsJson\"))\n                if (!$util.isString(message.RtcSenderStatsJson))\n                    return \"RtcSenderStatsJson: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a LivekitVideoStatsResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.LivekitVideoStatsResponse} LivekitVideoStatsResponse\n         */\n        LivekitVideoStatsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.LivekitVideoStatsResponse)\n                return object;\n            let message = new $root.rov_actions_proto.LivekitVideoStatsResponse();\n            if (object.Enabled != null)\n                message.Enabled = Boolean(object.Enabled);\n            switch (object.Codec) {\n            default:\n                if (typeof object.Codec === \"number\") {\n                    message.Codec = object.Codec;\n                    break;\n                }\n                break;\n            case \"H264\":\n            case 0:\n                message.Codec = 0;\n                break;\n            case \"VP8\":\n            case 1:\n                message.Codec = 1;\n                break;\n            case \"VP9\":\n            case 2:\n                message.Codec = 2;\n                break;\n            case \"AV1\":\n            case 3:\n                message.Codec = 3;\n                break;\n            }\n            if (object.AllowBackupCodec != null)\n                message.AllowBackupCodec = Boolean(object.AllowBackupCodec);\n            if (object.BaseStream != null) {\n                if (typeof object.BaseStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.LivekitVideoStatsResponse.BaseStream: object expected\");\n                message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.BaseStream);\n            }\n            if (object.SimulcastLayers) {\n                if (!Array.isArray(object.SimulcastLayers))\n                    throw TypeError(\".rov_actions_proto.LivekitVideoStatsResponse.SimulcastLayers: array expected\");\n                message.SimulcastLayers = [];\n                for (let i = 0; i < object.SimulcastLayers.length; ++i) {\n                    if (typeof object.SimulcastLayers[i] !== \"object\")\n                        throw TypeError(\".rov_actions_proto.LivekitVideoStatsResponse.SimulcastLayers: object expected\");\n                    message.SimulcastLayers[i] = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.SimulcastLayers[i]);\n                }\n            }\n            if (object.RtcSenderStatsJson != null)\n                message.RtcSenderStatsJson = String(object.RtcSenderStatsJson);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a LivekitVideoStatsResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.LivekitVideoStatsResponse} message LivekitVideoStatsResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        LivekitVideoStatsResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.SimulcastLayers = [];\n            if (options.defaults) {\n                object.Enabled = false;\n                object.Codec = options.enums === String ? \"H264\" : 0;\n                object.AllowBackupCodec = false;\n                object.BaseStream = null;\n                object.RtcSenderStatsJson = \"\";\n            }\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                object.Enabled = message.Enabled;\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                object.Codec = options.enums === String ? $root.rov_actions_proto.VideoCodec[message.Codec] === undefined ? message.Codec : $root.rov_actions_proto.VideoCodec[message.Codec] : message.Codec;\n            if (message.AllowBackupCodec != null && message.hasOwnProperty(\"AllowBackupCodec\"))\n                object.AllowBackupCodec = message.AllowBackupCodec;\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\"))\n                object.BaseStream = $root.rov_actions_proto.VideoStreamOptions.toObject(message.BaseStream, options);\n            if (message.SimulcastLayers && message.SimulcastLayers.length) {\n                object.SimulcastLayers = [];\n                for (let j = 0; j < message.SimulcastLayers.length; ++j)\n                    object.SimulcastLayers[j] = $root.rov_actions_proto.VideoStreamOptions.toObject(message.SimulcastLayers[j], options);\n            }\n            if (message.RtcSenderStatsJson != null && message.hasOwnProperty(\"RtcSenderStatsJson\"))\n                object.RtcSenderStatsJson = message.RtcSenderStatsJson;\n            return object;\n        };\n\n        /**\n         * Converts this LivekitVideoStatsResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        LivekitVideoStatsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for LivekitVideoStatsResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.LivekitVideoStatsResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        LivekitVideoStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.LivekitVideoStatsResponse\";\n        };\n\n        return LivekitVideoStatsResponse;\n    })();\n\n    rov_actions_proto.SimplePeerVideoStatsResponse = (function() {\n\n        /**\n         * Properties of a SimplePeerVideoStatsResponse.\n         * @memberof rov_actions_proto\n         * @interface ISimplePeerVideoStatsResponse\n         * @property {boolean|null} [Enabled] SimplePeerVideoStatsResponse Enabled\n         * @property {rov_actions_proto.VideoCodec|null} [Codec] SimplePeerVideoStatsResponse Codec\n         * @property {rov_actions_proto.IVideoStreamOptions|null} [BaseStream] SimplePeerVideoStatsResponse BaseStream\n         * @property {string|null} [RtcSenderStatsJson] SimplePeerVideoStatsResponse RtcSenderStatsJson\n         */\n\n        /**\n         * Constructs a new SimplePeerVideoStatsResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a SimplePeerVideoStatsResponse.\n         * @implements ISimplePeerVideoStatsResponse\n         * @constructor\n         * @param {rov_actions_proto.ISimplePeerVideoStatsResponse=} [properties] Properties to set\n         */\n        function SimplePeerVideoStatsResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SimplePeerVideoStatsResponse Enabled.\n         * @member {boolean} Enabled\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @instance\n         */\n        SimplePeerVideoStatsResponse.prototype.Enabled = false;\n\n        /**\n         * SimplePeerVideoStatsResponse Codec.\n         * @member {rov_actions_proto.VideoCodec} Codec\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @instance\n         */\n        SimplePeerVideoStatsResponse.prototype.Codec = 0;\n\n        /**\n         * SimplePeerVideoStatsResponse BaseStream.\n         * @member {rov_actions_proto.IVideoStreamOptions|null|undefined} BaseStream\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @instance\n         */\n        SimplePeerVideoStatsResponse.prototype.BaseStream = null;\n\n        /**\n         * SimplePeerVideoStatsResponse RtcSenderStatsJson.\n         * @member {string} RtcSenderStatsJson\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @instance\n         */\n        SimplePeerVideoStatsResponse.prototype.RtcSenderStatsJson = \"\";\n\n        /**\n         * Creates a new SimplePeerVideoStatsResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerVideoStatsResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.SimplePeerVideoStatsResponse} SimplePeerVideoStatsResponse instance\n         */\n        SimplePeerVideoStatsResponse.create = function create(properties) {\n            return new SimplePeerVideoStatsResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SimplePeerVideoStatsResponse message. Does not implicitly {@link rov_actions_proto.SimplePeerVideoStatsResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerVideoStatsResponse} message SimplePeerVideoStatsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerVideoStatsResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Enabled != null && Object.hasOwnProperty.call(message, \"Enabled\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.Enabled);\n            if (message.Codec != null && Object.hasOwnProperty.call(message, \"Codec\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Codec);\n            if (message.BaseStream != null && Object.hasOwnProperty.call(message, \"BaseStream\"))\n                $root.rov_actions_proto.VideoStreamOptions.encode(message.BaseStream, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.RtcSenderStatsJson != null && Object.hasOwnProperty.call(message, \"RtcSenderStatsJson\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.RtcSenderStatsJson);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SimplePeerVideoStatsResponse message, length delimited. Does not implicitly {@link rov_actions_proto.SimplePeerVideoStatsResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.ISimplePeerVideoStatsResponse} message SimplePeerVideoStatsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SimplePeerVideoStatsResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SimplePeerVideoStatsResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.SimplePeerVideoStatsResponse} SimplePeerVideoStatsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerVideoStatsResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.SimplePeerVideoStatsResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.Enabled = reader.bool();\n                        break;\n                    }\n                case 2: {\n                        message.Codec = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.RtcSenderStatsJson = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SimplePeerVideoStatsResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.SimplePeerVideoStatsResponse} SimplePeerVideoStatsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SimplePeerVideoStatsResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SimplePeerVideoStatsResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SimplePeerVideoStatsResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                if (typeof message.Enabled !== \"boolean\")\n                    return \"Enabled: boolean expected\";\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                switch (message.Codec) {\n                default:\n                    return \"Codec: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\")) {\n                let error = $root.rov_actions_proto.VideoStreamOptions.verify(message.BaseStream);\n                if (error)\n                    return \"BaseStream.\" + error;\n            }\n            if (message.RtcSenderStatsJson != null && message.hasOwnProperty(\"RtcSenderStatsJson\"))\n                if (!$util.isString(message.RtcSenderStatsJson))\n                    return \"RtcSenderStatsJson: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SimplePeerVideoStatsResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.SimplePeerVideoStatsResponse} SimplePeerVideoStatsResponse\n         */\n        SimplePeerVideoStatsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.SimplePeerVideoStatsResponse)\n                return object;\n            let message = new $root.rov_actions_proto.SimplePeerVideoStatsResponse();\n            if (object.Enabled != null)\n                message.Enabled = Boolean(object.Enabled);\n            switch (object.Codec) {\n            default:\n                if (typeof object.Codec === \"number\") {\n                    message.Codec = object.Codec;\n                    break;\n                }\n                break;\n            case \"H264\":\n            case 0:\n                message.Codec = 0;\n                break;\n            case \"VP8\":\n            case 1:\n                message.Codec = 1;\n                break;\n            case \"VP9\":\n            case 2:\n                message.Codec = 2;\n                break;\n            case \"AV1\":\n            case 3:\n                message.Codec = 3;\n                break;\n            }\n            if (object.BaseStream != null) {\n                if (typeof object.BaseStream !== \"object\")\n                    throw TypeError(\".rov_actions_proto.SimplePeerVideoStatsResponse.BaseStream: object expected\");\n                message.BaseStream = $root.rov_actions_proto.VideoStreamOptions.fromObject(object.BaseStream);\n            }\n            if (object.RtcSenderStatsJson != null)\n                message.RtcSenderStatsJson = String(object.RtcSenderStatsJson);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SimplePeerVideoStatsResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {rov_actions_proto.SimplePeerVideoStatsResponse} message SimplePeerVideoStatsResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SimplePeerVideoStatsResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.Enabled = false;\n                object.Codec = options.enums === String ? \"H264\" : 0;\n                object.BaseStream = null;\n                object.RtcSenderStatsJson = \"\";\n            }\n            if (message.Enabled != null && message.hasOwnProperty(\"Enabled\"))\n                object.Enabled = message.Enabled;\n            if (message.Codec != null && message.hasOwnProperty(\"Codec\"))\n                object.Codec = options.enums === String ? $root.rov_actions_proto.VideoCodec[message.Codec] === undefined ? message.Codec : $root.rov_actions_proto.VideoCodec[message.Codec] : message.Codec;\n            if (message.BaseStream != null && message.hasOwnProperty(\"BaseStream\"))\n                object.BaseStream = $root.rov_actions_proto.VideoStreamOptions.toObject(message.BaseStream, options);\n            if (message.RtcSenderStatsJson != null && message.hasOwnProperty(\"RtcSenderStatsJson\"))\n                object.RtcSenderStatsJson = message.RtcSenderStatsJson;\n            return object;\n        };\n\n        /**\n         * Converts this SimplePeerVideoStatsResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SimplePeerVideoStatsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SimplePeerVideoStatsResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.SimplePeerVideoStatsResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SimplePeerVideoStatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.SimplePeerVideoStatsResponse\";\n        };\n\n        return SimplePeerVideoStatsResponse;\n    })();\n\n    rov_actions_proto.ResponseBackendMetadata = (function() {\n\n        /**\n         * Properties of a ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @interface IResponseBackendMetadata\n         * @property {Array.<string>|null} [TargetUserIds] ResponseBackendMetadata TargetUserIds\n         * @property {rov_actions_proto.DataTransportMethod|null} [TransportMethod] ResponseBackendMetadata TransportMethod\n         */\n\n        /**\n         * Constructs a new ResponseBackendMetadata.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a ResponseBackendMetadata.\n         * @implements IResponseBackendMetadata\n         * @constructor\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         */\n        function ResponseBackendMetadata(properties) {\n            this.TargetUserIds = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ResponseBackendMetadata TargetUserIds.\n         * @member {Array.<string>} TargetUserIds\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TargetUserIds = $util.emptyArray;\n\n        /**\n         * ResponseBackendMetadata TransportMethod.\n         * @member {rov_actions_proto.DataTransportMethod} TransportMethod\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         */\n        ResponseBackendMetadata.prototype.TransportMethod = 0;\n\n        /**\n         * Creates a new ResponseBackendMetadata instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata=} [properties] Properties to set\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata instance\n         */\n        ResponseBackendMetadata.create = function create(properties) {\n            return new ResponseBackendMetadata(properties);\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.TargetUserIds != null && message.TargetUserIds.length)\n                for (let i = 0; i < message.TargetUserIds.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.TargetUserIds[i]);\n            if (message.TransportMethod != null && Object.hasOwnProperty.call(message, \"TransportMethod\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.TransportMethod);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ResponseBackendMetadata message, length delimited. Does not implicitly {@link rov_actions_proto.ResponseBackendMetadata.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.IResponseBackendMetadata} message ResponseBackendMetadata message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ResponseBackendMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        if (!(message.TargetUserIds && message.TargetUserIds.length))\n                            message.TargetUserIds = [];\n                        message.TargetUserIds.push(reader.string());\n                        break;\n                    }\n                case 2: {\n                        message.TransportMethod = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ResponseBackendMetadata message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ResponseBackendMetadata.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ResponseBackendMetadata message.\n         * @function verify\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ResponseBackendMetadata.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.TargetUserIds != null && message.hasOwnProperty(\"TargetUserIds\")) {\n                if (!Array.isArray(message.TargetUserIds))\n                    return \"TargetUserIds: array expected\";\n                for (let i = 0; i < message.TargetUserIds.length; ++i)\n                    if (!$util.isString(message.TargetUserIds[i]))\n                        return \"TargetUserIds: string[] expected\";\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                switch (message.TransportMethod) {\n                default:\n                    return \"TransportMethod: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a ResponseBackendMetadata message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.ResponseBackendMetadata} ResponseBackendMetadata\n         */\n        ResponseBackendMetadata.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.ResponseBackendMetadata)\n                return object;\n            let message = new $root.rov_actions_proto.ResponseBackendMetadata();\n            if (object.TargetUserIds) {\n                if (!Array.isArray(object.TargetUserIds))\n                    throw TypeError(\".rov_actions_proto.ResponseBackendMetadata.TargetUserIds: array expected\");\n                message.TargetUserIds = [];\n                for (let i = 0; i < object.TargetUserIds.length; ++i)\n                    message.TargetUserIds[i] = String(object.TargetUserIds[i]);\n            }\n            switch (object.TransportMethod) {\n            default:\n                if (typeof object.TransportMethod === \"number\") {\n                    message.TransportMethod = object.TransportMethod;\n                    break;\n                }\n                break;\n            case \"LivekitReliable\":\n            case 0:\n                message.TransportMethod = 0;\n                break;\n            case \"LivekitUnreliable\":\n            case 1:\n                message.TransportMethod = 1;\n                break;\n            case \"DirectReliable\":\n            case 2:\n                message.TransportMethod = 2;\n                break;\n            case \"DirectUnreliable\":\n            case 3:\n                message.TransportMethod = 3;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ResponseBackendMetadata message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {rov_actions_proto.ResponseBackendMetadata} message ResponseBackendMetadata\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ResponseBackendMetadata.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.TargetUserIds = [];\n            if (options.defaults)\n                object.TransportMethod = options.enums === String ? \"LivekitReliable\" : 0;\n            if (message.TargetUserIds && message.TargetUserIds.length) {\n                object.TargetUserIds = [];\n                for (let j = 0; j < message.TargetUserIds.length; ++j)\n                    object.TargetUserIds[j] = message.TargetUserIds[j];\n            }\n            if (message.TransportMethod != null && message.hasOwnProperty(\"TransportMethod\"))\n                object.TransportMethod = options.enums === String ? $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] === undefined ? message.TransportMethod : $root.rov_actions_proto.DataTransportMethod[message.TransportMethod] : message.TransportMethod;\n            return object;\n        };\n\n        /**\n         * Converts this ResponseBackendMetadata to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ResponseBackendMetadata.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ResponseBackendMetadata\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.ResponseBackendMetadata\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ResponseBackendMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.ResponseBackendMetadata\";\n        };\n\n        return ResponseBackendMetadata;\n    })();\n\n    rov_actions_proto.RovResponse = (function() {\n\n        /**\n         * Properties of a RovResponse.\n         * @memberof rov_actions_proto\n         * @interface IRovResponse\n         * @property {rov_actions_proto.IResponseBackendMetadata|null} [BackendMetadata] RovResponse BackendMetadata\n         * @property {number|null} [ExchangeId] RovResponse ExchangeId\n         * @property {rov_actions_proto.IDoneResponse|null} [Done] RovResponse Done\n         * @property {rov_actions_proto.IErrorResponse|null} [Error] RovResponse Error\n         * @property {rov_actions_proto.IPongResponse|null} [Pong] RovResponse Pong\n         * @property {rov_actions_proto.IContinuedOutputResponse|null} [ContinuedOutput] RovResponse ContinuedOutput\n         * @property {rov_actions_proto.ISensorUpdatesResponse|null} [SensorUpdates] RovResponse SensorUpdates\n         * @property {rov_actions_proto.IPasswordRequiredResponse|null} [PasswordRequired] RovResponse PasswordRequired\n         * @property {rov_actions_proto.IPasswordAcceptedResponse|null} [PasswordAccepted] RovResponse PasswordAccepted\n         * @property {rov_actions_proto.IPasswordInvalidResponse|null} [PasswordInvalid] RovResponse PasswordInvalid\n         * @property {rov_actions_proto.IPilotChangedResponse|null} [PilotChanged] RovResponse PilotChanged\n         * @property {rov_actions_proto.IClientConnectedResponse|null} [ClientConnected] RovResponse ClientConnected\n         * @property {rov_actions_proto.IClientDisconnectedResponse|null} [ClientDisconnected] RovResponse ClientDisconnected\n         * @property {rov_actions_proto.IHeartbeatResponse|null} [Heartbeat] RovResponse Heartbeat\n         * @property {rov_actions_proto.IMavlinkResponse|null} [Mavlink] RovResponse Mavlink\n         * @property {rov_actions_proto.ISimplePeerSignalResponse|null} [SimplePeerSignal] RovResponse SimplePeerSignal\n         * @property {rov_actions_proto.ISystemMonitorResponse|null} [SystemMonitor] RovResponse SystemMonitor\n         * @property {rov_actions_proto.ILogMessageResponse|null} [LogMessage] RovResponse LogMessage\n         * @property {rov_actions_proto.ILivekitVideoStatsResponse|null} [LivekitVideoStats] RovResponse LivekitVideoStats\n         * @property {rov_actions_proto.ISimplePeerVideoStatsResponse|null} [SimplePeerVideoStats] RovResponse SimplePeerVideoStats\n         */\n\n        /**\n         * Constructs a new RovResponse.\n         * @memberof rov_actions_proto\n         * @classdesc Represents a RovResponse.\n         * @implements IRovResponse\n         * @constructor\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         */\n        function RovResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RovResponse BackendMetadata.\n         * @member {rov_actions_proto.IResponseBackendMetadata|null|undefined} BackendMetadata\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.BackendMetadata = null;\n\n        /**\n         * RovResponse ExchangeId.\n         * @member {number} ExchangeId\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ExchangeId = 0;\n\n        /**\n         * RovResponse Done.\n         * @member {rov_actions_proto.IDoneResponse|null|undefined} Done\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Done = null;\n\n        /**\n         * RovResponse Error.\n         * @member {rov_actions_proto.IErrorResponse|null|undefined} Error\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Error = null;\n\n        /**\n         * RovResponse Pong.\n         * @member {rov_actions_proto.IPongResponse|null|undefined} Pong\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Pong = null;\n\n        /**\n         * RovResponse ContinuedOutput.\n         * @member {rov_actions_proto.IContinuedOutputResponse|null|undefined} ContinuedOutput\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ContinuedOutput = null;\n\n        /**\n         * RovResponse SensorUpdates.\n         * @member {rov_actions_proto.ISensorUpdatesResponse|null|undefined} SensorUpdates\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SensorUpdates = null;\n\n        /**\n         * RovResponse PasswordRequired.\n         * @member {rov_actions_proto.IPasswordRequiredResponse|null|undefined} PasswordRequired\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordRequired = null;\n\n        /**\n         * RovResponse PasswordAccepted.\n         * @member {rov_actions_proto.IPasswordAcceptedResponse|null|undefined} PasswordAccepted\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordAccepted = null;\n\n        /**\n         * RovResponse PasswordInvalid.\n         * @member {rov_actions_proto.IPasswordInvalidResponse|null|undefined} PasswordInvalid\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PasswordInvalid = null;\n\n        /**\n         * RovResponse PilotChanged.\n         * @member {rov_actions_proto.IPilotChangedResponse|null|undefined} PilotChanged\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.PilotChanged = null;\n\n        /**\n         * RovResponse ClientConnected.\n         * @member {rov_actions_proto.IClientConnectedResponse|null|undefined} ClientConnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientConnected = null;\n\n        /**\n         * RovResponse ClientDisconnected.\n         * @member {rov_actions_proto.IClientDisconnectedResponse|null|undefined} ClientDisconnected\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.ClientDisconnected = null;\n\n        /**\n         * RovResponse Heartbeat.\n         * @member {rov_actions_proto.IHeartbeatResponse|null|undefined} Heartbeat\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Heartbeat = null;\n\n        /**\n         * RovResponse Mavlink.\n         * @member {rov_actions_proto.IMavlinkResponse|null|undefined} Mavlink\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.Mavlink = null;\n\n        /**\n         * RovResponse SimplePeerSignal.\n         * @member {rov_actions_proto.ISimplePeerSignalResponse|null|undefined} SimplePeerSignal\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SimplePeerSignal = null;\n\n        /**\n         * RovResponse SystemMonitor.\n         * @member {rov_actions_proto.ISystemMonitorResponse|null|undefined} SystemMonitor\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SystemMonitor = null;\n\n        /**\n         * RovResponse LogMessage.\n         * @member {rov_actions_proto.ILogMessageResponse|null|undefined} LogMessage\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.LogMessage = null;\n\n        /**\n         * RovResponse LivekitVideoStats.\n         * @member {rov_actions_proto.ILivekitVideoStatsResponse|null|undefined} LivekitVideoStats\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.LivekitVideoStats = null;\n\n        /**\n         * RovResponse SimplePeerVideoStats.\n         * @member {rov_actions_proto.ISimplePeerVideoStatsResponse|null|undefined} SimplePeerVideoStats\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        RovResponse.prototype.SimplePeerVideoStats = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RovResponse Body.\n         * @member {\"Done\"|\"Error\"|\"Pong\"|\"ContinuedOutput\"|\"SensorUpdates\"|\"PasswordRequired\"|\"PasswordAccepted\"|\"PasswordInvalid\"|\"PilotChanged\"|\"ClientConnected\"|\"ClientDisconnected\"|\"Heartbeat\"|\"Mavlink\"|\"SimplePeerSignal\"|\"SystemMonitor\"|\"LogMessage\"|\"LivekitVideoStats\"|\"SimplePeerVideoStats\"|undefined} Body\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         */\n        Object.defineProperty(RovResponse.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"Done\", \"Error\", \"Pong\", \"ContinuedOutput\", \"SensorUpdates\", \"PasswordRequired\", \"PasswordAccepted\", \"PasswordInvalid\", \"PilotChanged\", \"ClientConnected\", \"ClientDisconnected\", \"Heartbeat\", \"Mavlink\", \"SimplePeerSignal\", \"SystemMonitor\", \"LogMessage\", \"LivekitVideoStats\", \"SimplePeerVideoStats\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RovResponse instance using the specified properties.\n         * @function create\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse=} [properties] Properties to set\n         * @returns {rov_actions_proto.RovResponse} RovResponse instance\n         */\n        RovResponse.create = function create(properties) {\n            return new RovResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RovResponse message. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.BackendMetadata != null && Object.hasOwnProperty.call(message, \"BackendMetadata\"))\n                $root.rov_actions_proto.ResponseBackendMetadata.encode(message.BackendMetadata, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.ExchangeId != null && Object.hasOwnProperty.call(message, \"ExchangeId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ExchangeId);\n            if (message.Done != null && Object.hasOwnProperty.call(message, \"Done\"))\n                $root.rov_actions_proto.DoneResponse.encode(message.Done, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\n                $root.rov_actions_proto.ErrorResponse.encode(message.Error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.Pong != null && Object.hasOwnProperty.call(message, \"Pong\"))\n                $root.rov_actions_proto.PongResponse.encode(message.Pong, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.ContinuedOutput != null && Object.hasOwnProperty.call(message, \"ContinuedOutput\"))\n                $root.rov_actions_proto.ContinuedOutputResponse.encode(message.ContinuedOutput, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.SensorUpdates != null && Object.hasOwnProperty.call(message, \"SensorUpdates\"))\n                $root.rov_actions_proto.SensorUpdatesResponse.encode(message.SensorUpdates, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.PasswordRequired != null && Object.hasOwnProperty.call(message, \"PasswordRequired\"))\n                $root.rov_actions_proto.PasswordRequiredResponse.encode(message.PasswordRequired, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.PasswordAccepted != null && Object.hasOwnProperty.call(message, \"PasswordAccepted\"))\n                $root.rov_actions_proto.PasswordAcceptedResponse.encode(message.PasswordAccepted, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.PasswordInvalid != null && Object.hasOwnProperty.call(message, \"PasswordInvalid\"))\n                $root.rov_actions_proto.PasswordInvalidResponse.encode(message.PasswordInvalid, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.PilotChanged != null && Object.hasOwnProperty.call(message, \"PilotChanged\"))\n                $root.rov_actions_proto.PilotChangedResponse.encode(message.PilotChanged, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.ClientConnected != null && Object.hasOwnProperty.call(message, \"ClientConnected\"))\n                $root.rov_actions_proto.ClientConnectedResponse.encode(message.ClientConnected, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.ClientDisconnected != null && Object.hasOwnProperty.call(message, \"ClientDisconnected\"))\n                $root.rov_actions_proto.ClientDisconnectedResponse.encode(message.ClientDisconnected, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            if (message.Heartbeat != null && Object.hasOwnProperty.call(message, \"Heartbeat\"))\n                $root.rov_actions_proto.HeartbeatResponse.encode(message.Heartbeat, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n            if (message.Mavlink != null && Object.hasOwnProperty.call(message, \"Mavlink\"))\n                $root.rov_actions_proto.MavlinkResponse.encode(message.Mavlink, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n            if (message.SimplePeerSignal != null && Object.hasOwnProperty.call(message, \"SimplePeerSignal\"))\n                $root.rov_actions_proto.SimplePeerSignalResponse.encode(message.SimplePeerSignal, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n            if (message.SystemMonitor != null && Object.hasOwnProperty.call(message, \"SystemMonitor\"))\n                $root.rov_actions_proto.SystemMonitorResponse.encode(message.SystemMonitor, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n            if (message.LogMessage != null && Object.hasOwnProperty.call(message, \"LogMessage\"))\n                $root.rov_actions_proto.LogMessageResponse.encode(message.LogMessage, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n            if (message.LivekitVideoStats != null && Object.hasOwnProperty.call(message, \"LivekitVideoStats\"))\n                $root.rov_actions_proto.LivekitVideoStatsResponse.encode(message.LivekitVideoStats, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n            if (message.SimplePeerVideoStats != null && Object.hasOwnProperty.call(message, \"SimplePeerVideoStats\"))\n                $root.rov_actions_proto.SimplePeerVideoStatsResponse.encode(message.SimplePeerVideoStats, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RovResponse message, length delimited. Does not implicitly {@link rov_actions_proto.RovResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.IRovResponse} message RovResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RovResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.rov_actions_proto.RovResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.ExchangeId = reader.int32();\n                        break;\n                    }\n                case 3: {\n                        message.Done = $root.rov_actions_proto.DoneResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.Error = $root.rov_actions_proto.ErrorResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.Pong = $root.rov_actions_proto.PongResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.PilotChanged = $root.rov_actions_proto.PilotChangedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 16: {\n                        message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 17: {\n                        message.Mavlink = $root.rov_actions_proto.MavlinkResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 18: {\n                        message.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 19: {\n                        message.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 20: {\n                        message.LogMessage = $root.rov_actions_proto.LogMessageResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 21: {\n                        message.LivekitVideoStats = $root.rov_actions_proto.LivekitVideoStatsResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 22: {\n                        message.SimplePeerVideoStats = $root.rov_actions_proto.SimplePeerVideoStatsResponse.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RovResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RovResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RovResponse message.\n         * @function verify\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RovResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\")) {\n                let error = $root.rov_actions_proto.ResponseBackendMetadata.verify(message.BackendMetadata);\n                if (error)\n                    return \"BackendMetadata.\" + error;\n            }\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                if (!$util.isInteger(message.ExchangeId))\n                    return \"ExchangeId: integer expected\";\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.DoneResponse.verify(message.Done);\n                    if (error)\n                        return \"Done.\" + error;\n                }\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ErrorResponse.verify(message.Error);\n                    if (error)\n                        return \"Error.\" + error;\n                }\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PongResponse.verify(message.Pong);\n                    if (error)\n                        return \"Pong.\" + error;\n                }\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ContinuedOutputResponse.verify(message.ContinuedOutput);\n                    if (error)\n                        return \"ContinuedOutput.\" + error;\n                }\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SensorUpdatesResponse.verify(message.SensorUpdates);\n                    if (error)\n                        return \"SensorUpdates.\" + error;\n                }\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordRequiredResponse.verify(message.PasswordRequired);\n                    if (error)\n                        return \"PasswordRequired.\" + error;\n                }\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordAcceptedResponse.verify(message.PasswordAccepted);\n                    if (error)\n                        return \"PasswordAccepted.\" + error;\n                }\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PasswordInvalidResponse.verify(message.PasswordInvalid);\n                    if (error)\n                        return \"PasswordInvalid.\" + error;\n                }\n            }\n            if (message.PilotChanged != null && message.hasOwnProperty(\"PilotChanged\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.PilotChangedResponse.verify(message.PilotChanged);\n                    if (error)\n                        return \"PilotChanged.\" + error;\n                }\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientConnectedResponse.verify(message.ClientConnected);\n                    if (error)\n                        return \"ClientConnected.\" + error;\n                }\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.ClientDisconnectedResponse.verify(message.ClientDisconnected);\n                    if (error)\n                        return \"ClientDisconnected.\" + error;\n                }\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.HeartbeatResponse.verify(message.Heartbeat);\n                    if (error)\n                        return \"Heartbeat.\" + error;\n                }\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.MavlinkResponse.verify(message.Mavlink);\n                    if (error)\n                        return \"Mavlink.\" + error;\n                }\n            }\n            if (message.SimplePeerSignal != null && message.hasOwnProperty(\"SimplePeerSignal\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplePeerSignalResponse.verify(message.SimplePeerSignal);\n                    if (error)\n                        return \"SimplePeerSignal.\" + error;\n                }\n            }\n            if (message.SystemMonitor != null && message.hasOwnProperty(\"SystemMonitor\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SystemMonitorResponse.verify(message.SystemMonitor);\n                    if (error)\n                        return \"SystemMonitor.\" + error;\n                }\n            }\n            if (message.LogMessage != null && message.hasOwnProperty(\"LogMessage\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.LogMessageResponse.verify(message.LogMessage);\n                    if (error)\n                        return \"LogMessage.\" + error;\n                }\n            }\n            if (message.LivekitVideoStats != null && message.hasOwnProperty(\"LivekitVideoStats\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.LivekitVideoStatsResponse.verify(message.LivekitVideoStats);\n                    if (error)\n                        return \"LivekitVideoStats.\" + error;\n                }\n            }\n            if (message.SimplePeerVideoStats != null && message.hasOwnProperty(\"SimplePeerVideoStats\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.rov_actions_proto.SimplePeerVideoStatsResponse.verify(message.SimplePeerVideoStats);\n                    if (error)\n                        return \"SimplePeerVideoStats.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RovResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {rov_actions_proto.RovResponse} RovResponse\n         */\n        RovResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.rov_actions_proto.RovResponse)\n                return object;\n            let message = new $root.rov_actions_proto.RovResponse();\n            if (object.BackendMetadata != null) {\n                if (typeof object.BackendMetadata !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.BackendMetadata: object expected\");\n                message.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.fromObject(object.BackendMetadata);\n            }\n            if (object.ExchangeId != null)\n                message.ExchangeId = object.ExchangeId | 0;\n            if (object.Done != null) {\n                if (typeof object.Done !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Done: object expected\");\n                message.Done = $root.rov_actions_proto.DoneResponse.fromObject(object.Done);\n            }\n            if (object.Error != null) {\n                if (typeof object.Error !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Error: object expected\");\n                message.Error = $root.rov_actions_proto.ErrorResponse.fromObject(object.Error);\n            }\n            if (object.Pong != null) {\n                if (typeof object.Pong !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Pong: object expected\");\n                message.Pong = $root.rov_actions_proto.PongResponse.fromObject(object.Pong);\n            }\n            if (object.ContinuedOutput != null) {\n                if (typeof object.ContinuedOutput !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ContinuedOutput: object expected\");\n                message.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.fromObject(object.ContinuedOutput);\n            }\n            if (object.SensorUpdates != null) {\n                if (typeof object.SensorUpdates !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SensorUpdates: object expected\");\n                message.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.fromObject(object.SensorUpdates);\n            }\n            if (object.PasswordRequired != null) {\n                if (typeof object.PasswordRequired !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordRequired: object expected\");\n                message.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.fromObject(object.PasswordRequired);\n            }\n            if (object.PasswordAccepted != null) {\n                if (typeof object.PasswordAccepted !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordAccepted: object expected\");\n                message.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.fromObject(object.PasswordAccepted);\n            }\n            if (object.PasswordInvalid != null) {\n                if (typeof object.PasswordInvalid !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PasswordInvalid: object expected\");\n                message.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.fromObject(object.PasswordInvalid);\n            }\n            if (object.PilotChanged != null) {\n                if (typeof object.PilotChanged !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.PilotChanged: object expected\");\n                message.PilotChanged = $root.rov_actions_proto.PilotChangedResponse.fromObject(object.PilotChanged);\n            }\n            if (object.ClientConnected != null) {\n                if (typeof object.ClientConnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientConnected: object expected\");\n                message.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.fromObject(object.ClientConnected);\n            }\n            if (object.ClientDisconnected != null) {\n                if (typeof object.ClientDisconnected !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.ClientDisconnected: object expected\");\n                message.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.fromObject(object.ClientDisconnected);\n            }\n            if (object.Heartbeat != null) {\n                if (typeof object.Heartbeat !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Heartbeat: object expected\");\n                message.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.fromObject(object.Heartbeat);\n            }\n            if (object.Mavlink != null) {\n                if (typeof object.Mavlink !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.Mavlink: object expected\");\n                message.Mavlink = $root.rov_actions_proto.MavlinkResponse.fromObject(object.Mavlink);\n            }\n            if (object.SimplePeerSignal != null) {\n                if (typeof object.SimplePeerSignal !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SimplePeerSignal: object expected\");\n                message.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalResponse.fromObject(object.SimplePeerSignal);\n            }\n            if (object.SystemMonitor != null) {\n                if (typeof object.SystemMonitor !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SystemMonitor: object expected\");\n                message.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.fromObject(object.SystemMonitor);\n            }\n            if (object.LogMessage != null) {\n                if (typeof object.LogMessage !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.LogMessage: object expected\");\n                message.LogMessage = $root.rov_actions_proto.LogMessageResponse.fromObject(object.LogMessage);\n            }\n            if (object.LivekitVideoStats != null) {\n                if (typeof object.LivekitVideoStats !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.LivekitVideoStats: object expected\");\n                message.LivekitVideoStats = $root.rov_actions_proto.LivekitVideoStatsResponse.fromObject(object.LivekitVideoStats);\n            }\n            if (object.SimplePeerVideoStats != null) {\n                if (typeof object.SimplePeerVideoStats !== \"object\")\n                    throw TypeError(\".rov_actions_proto.RovResponse.SimplePeerVideoStats: object expected\");\n                message.SimplePeerVideoStats = $root.rov_actions_proto.SimplePeerVideoStatsResponse.fromObject(object.SimplePeerVideoStats);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RovResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {rov_actions_proto.RovResponse} message RovResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RovResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.BackendMetadata = null;\n                object.ExchangeId = 0;\n            }\n            if (message.BackendMetadata != null && message.hasOwnProperty(\"BackendMetadata\"))\n                object.BackendMetadata = $root.rov_actions_proto.ResponseBackendMetadata.toObject(message.BackendMetadata, options);\n            if (message.ExchangeId != null && message.hasOwnProperty(\"ExchangeId\"))\n                object.ExchangeId = message.ExchangeId;\n            if (message.Done != null && message.hasOwnProperty(\"Done\")) {\n                object.Done = $root.rov_actions_proto.DoneResponse.toObject(message.Done, options);\n                if (options.oneofs)\n                    object.Body = \"Done\";\n            }\n            if (message.Error != null && message.hasOwnProperty(\"Error\")) {\n                object.Error = $root.rov_actions_proto.ErrorResponse.toObject(message.Error, options);\n                if (options.oneofs)\n                    object.Body = \"Error\";\n            }\n            if (message.Pong != null && message.hasOwnProperty(\"Pong\")) {\n                object.Pong = $root.rov_actions_proto.PongResponse.toObject(message.Pong, options);\n                if (options.oneofs)\n                    object.Body = \"Pong\";\n            }\n            if (message.ContinuedOutput != null && message.hasOwnProperty(\"ContinuedOutput\")) {\n                object.ContinuedOutput = $root.rov_actions_proto.ContinuedOutputResponse.toObject(message.ContinuedOutput, options);\n                if (options.oneofs)\n                    object.Body = \"ContinuedOutput\";\n            }\n            if (message.SensorUpdates != null && message.hasOwnProperty(\"SensorUpdates\")) {\n                object.SensorUpdates = $root.rov_actions_proto.SensorUpdatesResponse.toObject(message.SensorUpdates, options);\n                if (options.oneofs)\n                    object.Body = \"SensorUpdates\";\n            }\n            if (message.PasswordRequired != null && message.hasOwnProperty(\"PasswordRequired\")) {\n                object.PasswordRequired = $root.rov_actions_proto.PasswordRequiredResponse.toObject(message.PasswordRequired, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordRequired\";\n            }\n            if (message.PasswordAccepted != null && message.hasOwnProperty(\"PasswordAccepted\")) {\n                object.PasswordAccepted = $root.rov_actions_proto.PasswordAcceptedResponse.toObject(message.PasswordAccepted, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordAccepted\";\n            }\n            if (message.PasswordInvalid != null && message.hasOwnProperty(\"PasswordInvalid\")) {\n                object.PasswordInvalid = $root.rov_actions_proto.PasswordInvalidResponse.toObject(message.PasswordInvalid, options);\n                if (options.oneofs)\n                    object.Body = \"PasswordInvalid\";\n            }\n            if (message.PilotChanged != null && message.hasOwnProperty(\"PilotChanged\")) {\n                object.PilotChanged = $root.rov_actions_proto.PilotChangedResponse.toObject(message.PilotChanged, options);\n                if (options.oneofs)\n                    object.Body = \"PilotChanged\";\n            }\n            if (message.ClientConnected != null && message.hasOwnProperty(\"ClientConnected\")) {\n                object.ClientConnected = $root.rov_actions_proto.ClientConnectedResponse.toObject(message.ClientConnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientConnected\";\n            }\n            if (message.ClientDisconnected != null && message.hasOwnProperty(\"ClientDisconnected\")) {\n                object.ClientDisconnected = $root.rov_actions_proto.ClientDisconnectedResponse.toObject(message.ClientDisconnected, options);\n                if (options.oneofs)\n                    object.Body = \"ClientDisconnected\";\n            }\n            if (message.Heartbeat != null && message.hasOwnProperty(\"Heartbeat\")) {\n                object.Heartbeat = $root.rov_actions_proto.HeartbeatResponse.toObject(message.Heartbeat, options);\n                if (options.oneofs)\n                    object.Body = \"Heartbeat\";\n            }\n            if (message.Mavlink != null && message.hasOwnProperty(\"Mavlink\")) {\n                object.Mavlink = $root.rov_actions_proto.MavlinkResponse.toObject(message.Mavlink, options);\n                if (options.oneofs)\n                    object.Body = \"Mavlink\";\n            }\n            if (message.SimplePeerSignal != null && message.hasOwnProperty(\"SimplePeerSignal\")) {\n                object.SimplePeerSignal = $root.rov_actions_proto.SimplePeerSignalResponse.toObject(message.SimplePeerSignal, options);\n                if (options.oneofs)\n                    object.Body = \"SimplePeerSignal\";\n            }\n            if (message.SystemMonitor != null && message.hasOwnProperty(\"SystemMonitor\")) {\n                object.SystemMonitor = $root.rov_actions_proto.SystemMonitorResponse.toObject(message.SystemMonitor, options);\n                if (options.oneofs)\n                    object.Body = \"SystemMonitor\";\n            }\n            if (message.LogMessage != null && message.hasOwnProperty(\"LogMessage\")) {\n                object.LogMessage = $root.rov_actions_proto.LogMessageResponse.toObject(message.LogMessage, options);\n                if (options.oneofs)\n                    object.Body = \"LogMessage\";\n            }\n            if (message.LivekitVideoStats != null && message.hasOwnProperty(\"LivekitVideoStats\")) {\n                object.LivekitVideoStats = $root.rov_actions_proto.LivekitVideoStatsResponse.toObject(message.LivekitVideoStats, options);\n                if (options.oneofs)\n                    object.Body = \"LivekitVideoStats\";\n            }\n            if (message.SimplePeerVideoStats != null && message.hasOwnProperty(\"SimplePeerVideoStats\")) {\n                object.SimplePeerVideoStats = $root.rov_actions_proto.SimplePeerVideoStatsResponse.toObject(message.SimplePeerVideoStats, options);\n                if (options.oneofs)\n                    object.Body = \"SimplePeerVideoStats\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RovResponse to JSON.\n         * @function toJSON\n         * @memberof rov_actions_proto.RovResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RovResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RovResponse\n         * @function getTypeUrl\n         * @memberof rov_actions_proto.RovResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RovResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/rov_actions_proto.RovResponse\";\n        };\n\n        return RovResponse;\n    })();\n\n    return rov_actions_proto;\n})();\n\nexport { $root as default };\n","import { rov_actions_proto } from \"./protobufs/rovActionsProto\";\n\nconst VITEBUILD_EXTRANIOUS_PATH = \"/@fs/Users/ky/Documents/Github/rov-web\";\n\nexport enum LogLevelConsole {\n    Info = rov_actions_proto.LogLevel.Info,\n    Warn = rov_actions_proto.LogLevel.Warning,\n    Error = rov_actions_proto.LogLevel.Error,\n    Debug = rov_actions_proto.LogLevel.Debug,\n    Console = 4,\n}\n\nexport enum LogKind {\n    CONSOLE,\n    SP_WebRTC,\n    LK_WebRTC,\n    MAVLINK,\n    BLUEOS,\n}\n\nexport enum LogOrigin {\n    ROV,\n    PILOT,\n}\n\nexport type LogLevel = rov_actions_proto.LogLevel | LogLevelConsole;\n\nexport interface LogEntry {\n    timestamp: number, // Date.now()\n    level: LogLevelConsole, // warning, error, info, debug, console\n    args: any[],\n    trace: string[],\n    origin: LogOrigin,\n    kind: LogKind,\n    sentToRemote: boolean\n}\n\ninterface partialConsole {\n    info: Console[\"info\"];\n    log: Console[\"log\"];\n    warn: Console[\"warn\"];\n    error: Console[\"error\"];\n    debug: Console[\"debug\"];\n    _modified?: boolean;\n}\n\nexport class Logger {\n\n    logsStore: LogEntry[] = [];\n    sendLogsCallback: (logLevel: LogLevel, args: any[]) => Promise<boolean>;\n    rootURL: string;\n    sendLogsAllowed: boolean = false;\n    sendLogsInterval: number;\n    rawConsole: partialConsole;\n    defaultLogOrigin: LogOrigin;\n    svelteSubscribers: (() => void)[] = [];\n\n    constructor(origin: LogOrigin = LogOrigin.PILOT) {\n        const { log, debug, warn, error, info } = console;\n        this.rawConsole = { log, debug, warn, error, info };\n        this.rootURL = window.location.protocol + \"//\" + window.location.host;\n        this.defaultLogOrigin = origin;\n        console.log(\"Logger initialized\", this.rootURL)\n\n        // Only Chrome & Opera have an error attribute on the event.\n        window.addEventListener(\"error\", (e: ErrorEvent) => {\n            if (!e) return;\n            const args = [e.error ? e.error : \"\", e.message, e.filename + \":\" + e.lineno + \":\" + e.colno];\n            this.addLog(LogLevelConsole.Error, args, [], LogKind.CONSOLE, this.defaultLogOrigin);\n        });\n    }\n\n    subscribe(subscriber: () => void) {\n        this.svelteSubscribers.push(subscriber);\n        subscriber();\n    }\n\n    sendLogs(sendLogsCallback: (logLevel: LogLevel, msg: string) => Promise<boolean>) {\n        // this.sendLogsInterval = setInterval(() => {\n        this.sendQueuedLogs(sendLogsCallback);\n        // }, 1000) as any as number;\n    }\n\n    sendQueuedLogs(sendLogsCallback: (logLevel: LogLevelConsole, msg: string) => Promise<boolean>) {\n        if (!this.sendLogsAllowed) return;\n        const logsToSendCopy = this.logsStore.filter((log) => !log.sentToRemote);\n        logsToSendCopy.forEach((log) => { log.sentToRemote = true });\n        // if (logsToSendCopy.length === 0) return clearInterval(this.sendLogsInterval);\n        return Promise.allSettled(logsToSendCopy.map((log) => {\n            const json = mainLogr.logToJson(log);\n            return sendLogsCallback(log.level, json);\n        })).then((results) => {\n            const failedToSendLogs: { log: LogEntry, result: any }[] = []\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (result && result.status == \"fulfilled\" && result.value == true) {\n                    this.logsStore[i].sentToRemote = true;\n                } else {\n                    this.logsStore[i].sentToRemote = false;\n                    failedToSendLogs.push({ log: this.logsStore[i], result });\n                }\n\n            }\n            if (failedToSendLogs.length > 0) console.warn(\"Failed to send some logs.\", failedToSendLogs);\n            return failedToSendLogs.length;\n        })\n    }\n\n    addLog(\n        logLevel: LogLevelConsole,\n        args: any[],\n        trace: string[] = [],\n        kind: LogKind = LogKind.CONSOLE,\n        origin: LogOrigin = this.defaultLogOrigin,\n        timestamp: number = Date.now(),\n        sentToRemote: boolean = false\n    ) {\n        if (!trace) {\n            const stack = new Error().stack\n            trace = stack ? stack.split(\"\\n\").slice(3).map((s) => s.replace(this.rootURL, \"\").replace(VITEBUILD_EXTRANIOUS_PATH, \"\").trim().slice(3)) : [];\n        }\n        let i = this.logsStore.length;\n        while (i > 0 && this.logsStore[i - 1].timestamp > timestamp) i--;\n        const log: LogEntry = { timestamp, level: logLevel, args, trace, sentToRemote, kind, origin };\n        this.logsStore.splice(i, 0, log);\n        this.svelteSubscribers.forEach((subscriber) => subscriber());\n        // this.logsStore.sort((a, b) => a.timestamp - b.timestamp);\n    }\n\n    logAddLevelFlair(log: LogEntry) {\n        const args = log.args;\n        if (typeof (args[0]) !== typeof (\"\")) args.unshift(\"****\")\n        else args[0] = \"**** \" + args[0];\n        // if (log.trace && log.trace.length > 0) args.push(log.trace.join(\"\\n\"));\n        return {\n            ...log,\n            args\n        }\n    }\n\n    printLog(log: LogEntry) {\n        if (log.trace && log.trace.length > 0) {\n            const msg = log.args[0];\n            const args = log.args.slice(1);\n            args.push(log.trace.join(\"\\n\"));\n            console.groupCollapsed(\"%c\" + msg, this._getLevelColor(log.level));\n            this._consoleLogAtLevel(log.level, args);\n            console.groupEnd();\n        } else {\n            if (typeof (log.args[0]) !== typeof (\"\")) log.args.unshift(\"****\")\n            log.args[0] = \"%c \" + log.args[0];\n            log.args.splice(1, 0, this._getLevelColor(log.level));\n            this._consoleLogAtLevel(log.level, log.args);\n        }\n    }\n\n    consoleRecentLogs(n: number = 100) {\n        console.clear();\n        console.groupCollapsed(\"Recent Logs\");\n        const min = Math.max(this.logsStore.length - n, 0);\n        for (let i = this.logsStore.length - 1; i > min; i--) {\n            const log = this.logsStore[i];\n            this.printLog(log);\n        }\n        console.groupEnd();\n    }\n\n    printRecentLogs(element: HTMLElement, n: number = 1000) {\n        element.innerHTML = \"\";\n        const min = Math.max(this.logsStore.length - n, 0);\n        for (let i = this.logsStore.length - 1; i > min; i--) {\n            const log = this.logsStore[i];\n            const [header, body] = this.logToText(log);\n            const div = document.createElement(\"div\");\n            div.innerHTML = `<details style=\"font-size: 1.1em; font-weight: bold; padding: 0.2em; ${this._getLevelColor(log.level)}\"><summary><small>${log.timestamp} </small> <span>${header}</span></summary><pre>${body}</pre></details>`;\n            element.appendChild(div);\n        }\n    }\n\n\n    _makeJsonEncodable(thing: any, level: number = 0) {\n        if (level > 5) return \"Max recursion level reached\";\n        const type = typeof thing;\n        if (type === \"string\" || type === \"number\" || type === \"boolean\") {\n            return thing;\n        } else if (thing === undefined) {\n            return \"undefined\";\n        } else if (thing === null) {\n            return null;\n        } else if (thing instanceof Error) {\n            return { instanceOf: type, name: thing.name, errMessage: thing.message, stack: thing.stack, cause: thing.cause };\n        } else if (thing instanceof Date) {\n            return thing.toISOString();\n        } else if (thing instanceof Map) {\n            const obj: { [key: string]: any } = {};\n            thing.forEach((value, key) => {\n                obj[key] = this._makeJsonEncodable(value, level + 1);\n            });\n            return { instanceof: type, value: obj };\n        } else if (thing instanceof Set) {\n            let arr = Array.from(thing).map((item) => this._makeJsonEncodable(item, level + 1));\n            return { instanceof: type, value: arr };\n        } else if (thing instanceof Array || thing instanceof Uint8Array || thing instanceof Int8Array || thing instanceof Uint16Array || thing instanceof Int16Array || thing instanceof Uint32Array || thing instanceof Int32Array || thing instanceof Float32Array || thing instanceof Float64Array) {\n            return thing.map((item) => this._makeJsonEncodable(item, level + 1));\n        } else if (thing instanceof Object) {\n            const obj: { [key: string]: any } = {};\n            for (const key in thing) {\n                if (!thing.hasOwnProperty(key)) continue;\n                obj[key] = this._makeJsonEncodable(thing[key], level + 1);\n            }\n            return obj;\n        } else {\n            try {\n                return thing.toString();\n            } catch (e) {\n                return { instanceof: type, value: \"Failed to stringify: \" + e.message };\n            }\n        }\n    }\n\n    logToJson(log: LogEntry) {\n        const { timestamp, args, trace, origin, kind, level } = log;\n        return JSON.stringify(this._makeJsonEncodable({\n            level, timestamp, args, trace, origin, kind\n        }));\n    }\n\n\n    logToText(log: LogEntry) {\n        let header = \"\";\n        let body = \"\";\n        let i = 0;\n\n        for (; i < log.args.length; i++) {\n            const arg = log.args[i];\n            try {\n                if (arg === null) {\n                    header += \" null\";\n                } else if (arg === undefined) {\n                    header += \" undefined\";\n                } else if (arg instanceof Error) {\n                    header += arg.name + \" \" + arg.message + \" \" + arg.cause;\n                    body += arg.stack;\n                } else if (arg instanceof Object) {\n                    body += \"\\n\" + JSON.stringify(arg, null, 2) + \"\\n\";\n                    break;\n                } else {\n                    header += \" \" + arg.toString();\n                }\n            } catch (e) {\n                body += \" STRINGFAIL:\" + typeof arg + \" \";\n                console.error(\"Failed to stringify logs arg: \" + e.message, typeof arg, arg);\n            }\n        }\n        for (; i < log.args.length; i++) {\n            const arg = log.args[i];\n            try {\n                if (arg === null) {\n                    body += \" null\";\n                } else if (arg === undefined) {\n                    body += \" undefined\";\n                } else if (arg instanceof Error) {\n                    body += arg.name + \" \" + arg.message + \" \" + arg.cause + \"\\n\" + arg.stack;\n                } else if (arg instanceof Object) {\n                    body += \"\\n\" + JSON.stringify(arg, null, 2) + \"\\n\";\n                } else {\n                    body += \" \" + arg.toString();\n                }\n            } catch (e) {\n                body += \" STRINGFAIL:\" + typeof arg + \" \";\n                console.error(\"Failed to stringify logs arg: \" + e.message, typeof arg, arg);\n            }\n        }\n        if (log.trace && log.trace.length > 0) {\n            body += \"\\n\" + log.trace.join(\"\\n\");\n        }\n        return [header, body];\n    }\n\n\n    // _logWithTrace() {\n    //     const args = Array.prototype.slice.call(arguments);\n    //     const trace = new Error().stack || \"\";\n    //     const splitTrace = trace.split(\"\\n\").slice(0).map((s) => s.trim().slice(3));\n    //     log.apply(console, args);\n    // };\n\n    _consoleLogAtLevel(level: LogLevel, args: any[], trace: string[] = []) {\n        if (level === LogLevelConsole.Debug) {\n            this.rawConsole.debug.apply(console, args);\n        } else if (level === LogLevelConsole.Warn) {\n            this.rawConsole.warn.apply(console, args);\n        }\n        else if (level === LogLevelConsole.Error) {\n            this.rawConsole.error.apply(console, args);\n        }\n        else if (level === LogLevelConsole.Info) {\n            this.rawConsole.info.apply(console, args);\n        }\n    }\n\n    _getLevelColor(level: LogLevelConsole) {\n        if (level === LogLevelConsole.Debug) {\n            return \"color: #008888\";\n        } else if (level === LogLevelConsole.Warn) {\n            return \"color: #888800\";\n        } else if (level === LogLevelConsole.Error) {\n            return \"color: #880000\";\n        } else if (level === LogLevelConsole.Info) {\n            return \"color: #000088\";\n        } else if (level === LogLevelConsole.Console) {\n            return \"color: #000000\";\n        }\n    }\n\n    _getLevelIcon(level: LogLevelConsole) {\n        if (level === LogLevelConsole.Debug) {\n            return \"🐛\";\n        } else if (level === LogLevelConsole.Warn) {\n            return \"🟨\";\n        } else if (level === LogLevelConsole.Error) {\n            return \"🛑\";\n        } else if (level === LogLevelConsole.Info) {\n            return \"ℹ️\";\n        } else if (level === LogLevelConsole.Console) {\n            return \"ℹ️\";\n        }\n\n    }\n\n    getLogs() {\n        return this.logsStore;\n    }\n\n    log(...args: any[]) {\n        this.rawConsole.log.apply(console, args);\n        this.addLog(LogLevelConsole.Console, args);\n    }\n\n    logDebug(...args: any[]) {\n        this.rawConsole.debug.apply(console, args);\n        this.addLog(LogLevelConsole.Debug, args);\n    }\n\n    logWarn(...args: any[]) {\n        this.rawConsole.warn.apply(console, args);\n        this.addLog(LogLevelConsole.Warn, args);\n    }\n\n    logError(...args: any[]) {\n        this.rawConsole.error.apply(console, args);\n        this.addLog(LogLevelConsole.Error, args);\n    }\n\n    logInfo(...args: any[]) {\n        this.rawConsole.info.apply(console, args);\n        this.addLog(LogLevelConsole.Info, args);\n    }\n}\nexport const mainLogr = new Logger();\nexport const logDebug = mainLogr.logDebug.bind(mainLogr);\nexport const logWarn = mainLogr.logWarn.bind(mainLogr);\nexport const logError = mainLogr.logError.bind(mainLogr);\nexport const logInfo = mainLogr.logInfo.bind(mainLogr);\nexport const log = mainLogr.log.bind(mainLogr);\n","import { type ModalStore } from \"@skeletonlabs/skeleton\";\nimport { get } from \"svelte/store\";\n\nlet modalStore: ModalStore = null;\nexport const setModalStore = (store) => (modalStore = store);\n\nexport const openLogsTimelineModal = () => {\n    modalStore.trigger({\n        type: \"component\",\n        component: \"LogTimeline\",\n    });\n};\n\nexport const openControlTutModal = () => {\n    const topModal = Array.from(get(modalStore)).pop()\n    if (topModal && topModal.component === \"ControlSchemeTut\") {\n        closeModal();\n    } else {\n        modalStore.trigger({\n            type: \"component\",\n            component: \"ControlSchemeTut\"\n        });\n    }\n};\n\nexport const openFlyModesTutModal = () => {\n    const topModal = Array.from(get(modalStore)).pop()\n    if (topModal && topModal.component === \"FlyModesTut\") {\n        closeModal();\n    } else {\n        modalStore.trigger({\n            type: \"component\",\n            component: \"FlyModesTut\"\n        });\n    }\n};\n\n/** Close the topmost modal dialog */\nexport const closeModal = () => (modalStore.close());\n","<script lang=\"ts\">\n  import { RadioGroup, RadioItem } from \"@skeletonlabs/skeleton\";\n  import { onMount } from \"svelte\";\n\n  interface Option {\n    value: string | number;\n    label: string;\n    icon: any;\n    action?: () => void;\n  }\n\n  export let disabled = false;\n  export let autoReset: boolean = false;\n  export let value: string = \"\";\n  export let options: Option[] = [];\n  export let variant: string = \"\";\n  export let onChange: (value: string | number) => void = () => {};\n  let radioGroupElem = null;\n\n  const focusSelected = () => {\n    if (value && radioGroupElem && radioGroupElem.$$.root) {\n      const focusables = radioGroupElem.$$.root.querySelectorAll(`[tabindex]`);\n      for (const focusable of focusables) {\n        if (focusable.getAttribute(\"value\") === value) {\n          focusable.focus();\n          focusable.setAttribute(\"data-focusindex\", \"0\");\n        } else {\n          focusable.removeAttribute(\"data-focusindex\");\n        }\n      }\n    }\n  };\n\n  let optionsMap = new Map<string | number, { label: string; icon: any; action: () => void }>();\n  options.forEach(({ value, label, icon, action }) => {\n    optionsMap.set(value, { label, icon, action });\n  });\n\n  $: if (value) focusSelected();\n  onMount(() => {\n    focusSelected();\n  });\n</script>\n\n<!--<span class=\"hidden variant-glass-primary focus:variant-ghost-primary hover:variant-outline-primary bg-primary-800/70  variant-glass-error focus:variant-ghost-error hover:variant-outline-error bg-error-800/70 variant-glass-warning variant-glass-secondary variant-glass-surface focus:variant-ghost-warning hover:variant-outline-warning bg-warning-800/70 bg-secondary-800/70 hover:variant-outline-secondary focus:variant-ghost-secondary  bg-surface-800/70 hover:variant-outline-surface focus:variant-ghost-surface\"></span>-->\n\n<RadioGroup display=\"flex p-2 gap-2 max-w-full flex-wrap justify-center items-center variant-glass-error\" background={variant ? `` : null} border={variant ? `border-token border${variant}-400-500-token` : null} rounded={\"rounded-3xl \" + (variant ? \"!border\" + variant + \"-500 \" : \" \") + $$props.class} bind:this={radioGroupElem}>\n  {#each options as option}\n    <RadioItem\n      on:change={() => {\n        if (option.action) {\n          option.action();\n        }\n        onChange(option.value);\n        if (autoReset) value = \"\";\n      }}\n      title={option.label}\n      label={option.label}\n      regionLabel=\"flex-none\"\n      rounded={`rounded-2xl w-32 h-32  flex flex-col items-center justify-center btn select-none bg${variant}-800/70`}\n      hover={`hover:variant-outline${variant} `}\n      active={`variant-filled focus:brightness-125`}\n      bind:group={value}\n      name=\"justify\"\n      value={option.value}\n      {disabled}\n    >\n      <svelte:component this={option.icon} class=\"text-4xl pointer-events-none h-10 w-10 m-1\" tabindex=\"-1\" variation=\"round\" />\n      <b class=\"text-lg text-center whitespace-break-spaces pointer-events-none leading-8\">{option.label}</b>\n    </RadioItem>\n  {/each}\n</RadioGroup>\n"],"names":["array_like_or_iterator","block","lookup","old_blocks","dirty","get_key","dynamic","ctx","list","node","destroy","create_each_block","next","get_context","o","n","i","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","key","will_move","did_move","insert","new_block","old_block","new_key","old_key","levels","update","to_null_out","accounted_for","spread_props","type","initialValue","options","serializer","storageType","updateStorage","value","store","internal","set","json","handleStorage","event","subscribe","updater","get","setReducedMotion","mediaQueryList","target","div","anchor","cBase","display","$$props","flexDirection","gap","background","border","rounded","padding","active","hover","color","fill","regionLabel","labelledby","$$invalidate","classesBase","label_1","label_1_class_value","div1","div0","input","current","group","name","title","label","elemInput","onKeyDown","prunedRestProps","$$restProps","$$value","checked","classesActive","classesDisabled","classesWrapper","classsBase","asPromise","fn","params","offset","index","pending","resolve","reject","err","base64","exports","string","p","b64","s64","buffer","start","end","parts","chunk","j","t","b","invalidEncoding","c","EventEmitter","evt","listeners","args","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","e","utf8","len","c1","c2","pool","alloc","slice","size","SIZE","MAX","slab","LongBits","util","require$$0","zero","zeroHash","unsigned","charCodeAt","hash","mask","part0","part1","part2","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","obj","prop","Buffer","sizeOrArray","bits","merge","dst","src","ifNotSet","keys","str","newError","CustomError","message","properties","fieldNames","fieldMap","encoding","Writer","BufferWriter","writer","create","push","write_uint32","write_int32","write_sint32","write_uint64","write_sint64","write_bool","write_fixed32","write_fixed64","write_float","write_double","writeBytes_set","writeBytes_for","write_bytes","write_string","fork","reset","ldelim","head","tail","finish","BufferWriter_","write_bytes_buffer","write_string_buffer","Reader","BufferReader","reader","writeLength","create_typed_array","create_array","read_uint32_setup","read_int32","read_sint32","read_bool","read_fixed32","read_sfixed32","read_float","read_double","read_bytes","length","nativeBuffer","read_string","bytes","skip","wireType","BufferReader_","read_string_buffer","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","response","endedByRPC","rpc","protobuf","configure","$Reader","$protobuf","$Writer","$util","$root","rov_actions_proto","LogLevel","valuesById","values","Object","SensorMeasurmentTypes","DataTransportMethod","InternalWebpageEvent","VideoCodec","VideoStreamOptions","prototype","Height","Width","Fps","MaxBitrate","encode","hasOwnProperty","call","uint32","encodeDelimited","decode","undefined","tag","skipType","decodeDelimited","verify","isInteger","fromObject","object","toObject","defaults","toJSON","constructor","toJSONOptions","getTypeUrl","typeUrlPrefix","SetLivekitVideoOptionsAction","SimulcastLayers","Enabled","Codec","AllowBackupCodec","BaseStream","emptyArray","bool","int32","error","Array","isArray","Boolean","TypeError","arrays","enums","String","SetSimplePeerVideoOptionsAction","Bitrate","PingAction","Time","Long","fromBits","int64","low","high","fromValue","parseInt","toNumber","long","longs","toString","Number","PasswordAttemptAction","Password","isString","AuthTokenAttemptAction","Token","TakeControlAction","MoveAction","VelocityX","VelocityY","VelocityZ","AngularVelocityYaw","ButtonBitmask","float","isFinite","TakePhotoAction","StartVideoRecAction","StopVideoRecAction","ToggleLightsAction","ShutdownRovAction","RebootRovAction","EnableWifiAction","DisableWifiAction","RovStatusReportAction","RestartRovServicesAction","SendRovLogsAction","RefreshAllSensorsAction","MoveClawAction","Value","SimplePeerSignalAction","Message","DisarmAction","SetAutopilotModeAction","mode","SetLivestreamingEnabledAction","ActionBackendMetadata","FromUserId","InternalWebpageEvt","RovAction","BackendMetadata","ExchangeId","Ping","PasswordAttempt","AuthTokenAttempt","TakeControl","Move","TakePhoto","StartVideoRec","StopVideoRec","ToggleLights","ShutdownRov","RebootRov","EnableWifi","DisableWifi","RovStatusReport","RestartRovServices","SendRovLogs","RefreshAllSensors","MoveClaw","SimplePeerSignal","Disarm","SetAutopilotMode","SetLivekitVideoOptions","SetSimplePeerVideoOptions","SetLivestreamingEnabled","$oneOfFields","defineProperty","oneOfGetter","oneOfSetter","Body","oneofs","DoneResponse","ErrorResponse","PongResponse","Measurement","MeasurementType","SensorUpdatesResponse","MeasurementUpdates","PasswordRequiredResponse","RovId","PasswordAcceptedResponse","AuthToken","PasswordInvalidResponse","PilotChangedResponse","PilotIdentity","ClientConnectedResponse","ClientPeerId","ClientDisconnectedResponse","HeartbeatResponse","ContinuedOutputResponse","MavlinkResponse","newBuffer","SimplePeerSignalResponse","SystemMonitorResponse","Warnings","CpuTemp","CpuUsage","MemoryUsage","DiskUsage","LogMessageResponse","Level","LivekitVideoStatsResponse","RtcSenderStatsJson","SimplePeerVideoStatsResponse","ResponseBackendMetadata","TargetUserIds","TransportMethod","RovResponse","Done","Error","Pong","ContinuedOutput","SensorUpdates","PasswordRequired","PasswordAccepted","PasswordInvalid","PilotChanged","ClientConnected","ClientDisconnected","Heartbeat","Mavlink","SystemMonitor","LogMessage","LivekitVideoStats","SimplePeerVideoStats","VITEBUILD_EXTRANIOUS_PATH","LogLevelConsole","LogLevelConsole2","Info","Warning","Debug","LogOrigin","LogOrigin2","Logger","origin","logsStore","sendLogsCallback","rootURL","sendLogsAllowed","sendLogsInterval","rawConsole","defaultLogOrigin","svelteSubscribers","log","debug","warn","info","console","window","location","protocol","host","addEventListener","filename","lineno","colno","addLog","subscriber","sendLogs","sendQueuedLogs","logsToSendCopy","filter","sentToRemote","forEach","Promise","allSettled","map","mainLogr","logToJson","level","then","results","failedToSendLogs","result","status","logLevel","trace","kind","timestamp","Date","now","stack","split","s","replace","trim","splice","logAddLevelFlair","unshift","printLog","msg","join","groupCollapsed","_getLevelColor","_consoleLogAtLevel","groupEnd","consoleRecentLogs","clear","min","Math","max","printRecentLogs","element","innerHTML","header","body","logToText","document","createElement","appendChild","_makeJsonEncodable","thing","instanceOf","errMessage","cause","toISOString","Map","instanceof","Set","arr","from","item","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","JSON","stringify","arg","apply","Warn","_getLevelIcon","getLogs","logDebug","logWarn","logError","logInfo","bind","modalStore","setModalStore","openLogsTimelineModal","trigger","component","openControlTutModal","topModal","pop","closeModal","openFlyModesTutModal","close","t1_value","switch_value","t1","radioitem_changes","each_blocks","radiogroup_changes","disabled","autoReset","variant","onChange","radioGroupElem","focusSelected","focusables","focusable","optionsMap","icon","action","value$1","option"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}